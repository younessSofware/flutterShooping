From 9aec824e9b1bd5f9a03a6bec930c9ed348edf8c0 Mon Sep 17 00:00:00 2001
From: InspireUI <minh@inspireui.com>
Date: Wed, 9 Nov 2022 10:23:43 +0700
Subject: [PATCH] =?UTF-8?q?=F0=9F=9A=80=20Release=20v3.3.0?=
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

---
 android/app/build.gradle                      |   49 +-
 android/app/src/main/AndroidManifest.xml      |   42 +-
 android/app/src/main/res/values/strings.xml   |   12 -
 android/app/src/main/res/xml/backup_rules.xml |    4 +
 android/key.properties                        |    4 -
 assets/images/.gitkeep                        |    0
 assets/images/country/au.png                  |  Bin 0 -> 6785 bytes
 assets/images/country/az.jpg                  |  Bin 0 -> 5660 bytes
 configs/GoogleService-Info.plist              |   38 +
 .../assets/icons/payment/apple-pay-mark.svg   |   84 +
 .../assets/icons/payment/google-pay-mark.png  |  Bin 0 -> 34146 bytes
 configs/customized/assets/images/.gitkeep     |    0
 configs/customized/lib/config/states/.gitkeep |    0
 configs/env.properties                        |   24 +
 configs/google-services.json                  |  517 +++++
 {android/app => configs}/key.jks              |  Bin
 .../native_splash.yaml                        |    2 +-
 configs/readme.txt                            |   58 +
 ios/Config.xcconfig                           |    1 +
 ...lNotificationServiceExtension.entitlements |    2 +-
 ios/Runner.xcodeproj/project.pbxproj          |   21 +-
 .../xcshareddata/xcschemes/Runner.xcscheme    |   20 +-
 ios/Runner/AppDelegate.swift                  |    3 +-
 ios/Runner/Environment.swift                  |   23 +
 ios/Runner/Info.plist                         |   24 +-
 ios/Runner/Runner.entitlements                |   10 +-
 ios/Runner/RunnerProfile.entitlements         |    9 +-
 ios/pre-actions.sh                            |    6 +
 lib/app.dart                                  |   87 +-
 lib/app_init.dart                             |   23 +-
 lib/common/config.dart                        |    1 +
 lib/common/config/configurations.dart         |   47 +-
 lib/common/config/default_env.dart            |   14 +
 lib/common/config/general.dart                |   13 +
 lib/common/config/models/advanced_config.dart |   15 +-
 lib/common/config/models/category_config.dart |   29 +-
 .../config/models/general_setting_item.dart   |   28 +-
 .../in_app_update_for_android_config.dart     |   10 +
 lib/common/config/models/index.dart           |    2 +
 .../config/models/phone_number_config.dart    |  101 +
 .../config/models/product_detail_config.dart  |   38 +-
 lib/common/config/models/vendor_config.dart   |  115 ++
 lib/common/config/vendor.dart                 |    2 +-
 lib/common/constants.dart                     |    3 +
 lib/common/constants/events.dart              |    4 +
 lib/common/constants/general.dart             |    6 +-
 lib/common/constants/images.dart              |    2 +
 lib/common/constants/local_storage_key.dart   |   10 +
 lib/common/constants/route_list.dart          |    4 +
 lib/common/constants/vendors.dart             |    6 +-
 lib/common/events.dart                        |    5 +
 lib/common/tools.dart                         |    1 -
 lib/common/tools/adaptive_tools.dart          |   31 -
 lib/common/tools/image_resize.dart            |  169 ++
 lib/common/tools/image_tools.dart             |  191 +-
 lib/common/tools/navigate_tools.dart          |   41 +-
 lib/common/tools/price_tools.dart             |   13 +-
 lib/common/tools/tools.dart                   |   10 +-
 lib/config/states/.gitkeep                    |    0
 lib/config/states/state_gb.json               |  343 ++--
 lib/env.dart                                  |   57 +-
 lib/frameworks/frameworks.dart                |  199 +-
 .../shopify/config_example/config_ar.json     |  245 +++
 .../shopify/config_example/config_en.json     |   18 +-
 .../shopify/config_example/config_vi.json     |  223 ++
 lib/frameworks/shopify/index.dart             |  116 +-
 .../shopify/services/shopify_query.dart       |  250 +--
 .../shopify/services/shopify_service.dart     |  297 ++-
 .../shopify/shopify_variant_mixin.dart        |   10 +-
 lib/frameworks/wordpress/index.dart           |   29 +-
 .../screens/blog_search_screen.dart           |  182 +-
 .../screens/blog_wish_list_screen.dart        |   94 +-
 .../screens/home_blog_search_screen.dart      |   17 +-
 .../screens/post_management/post_view.dart    |    2 +-
 .../category_layout/cardlist/index.dart       |   55 +-
 .../widgets/category_layout/side_menu.dart    |  157 +-
 .../widgets/category_layout/sub.dart          |  157 +-
 .../widgets/comments/comments.dart            |    2 +-
 .../widgets/vertical/blog_select_card.dart    |    2 +-
 .../widgets/vertical/menu_layout.dart         |  196 +-
 .../widgets/vertical/pinterest_card.dart      |    2 +-
 .../widgets/vertical/pinterest_layout.dart    |   37 +-
 .../widgets/vertical/vertical.dart            |   23 +-
 .../widgets/vertical/vertical_layout.dart     |   62 +-
 .../vertical/vertical_simple_list.dart        |    2 +-
 .../wordpress/services/wordpress_mixin.dart   |    1 -
 .../wordpress/services/wordpress_service.dart |   18 +-
 lib/generated/intl/messages_all.dart          |    4 +
 lib/generated/intl/messages_ar.dart           |   51 +-
 lib/generated/intl/messages_az.dart           | 1298 ++++++++++++
 lib/generated/intl/messages_bn.dart           |   51 +-
 lib/generated/intl/messages_bs.dart           |   23 +-
 lib/generated/intl/messages_cs.dart           |   50 +-
 lib/generated/intl/messages_da.dart           |   52 +-
 lib/generated/intl/messages_de.dart           |   50 +-
 lib/generated/intl/messages_el.dart           |   50 +-
 lib/generated/intl/messages_en.dart           |   57 +-
 lib/generated/intl/messages_es.dart           |   52 +-
 lib/generated/intl/messages_fa.dart           |   49 +-
 lib/generated/intl/messages_fi.dart           |   50 +-
 lib/generated/intl/messages_fr.dart           |   47 +-
 lib/generated/intl/messages_he.dart           |   46 +-
 lib/generated/intl/messages_hi.dart           |   49 +-
 lib/generated/intl/messages_hu.dart           |   48 +-
 lib/generated/intl/messages_id.dart           |   50 +-
 lib/generated/intl/messages_it.dart           |   51 +-
 lib/generated/intl/messages_ja.dart           |   46 +-
 lib/generated/intl/messages_km.dart           |   52 +-
 lib/generated/intl/messages_kn.dart           |   20 +-
 lib/generated/intl/messages_ko.dart           |   46 +-
 lib/generated/intl/messages_ku.dart           |    8 +-
 lib/generated/intl/messages_lo.dart           |   48 +-
 lib/generated/intl/messages_mr.dart           |   20 +-
 lib/generated/intl/messages_ms.dart           |   50 +-
 lib/generated/intl/messages_my.dart           |   55 +-
 lib/generated/intl/messages_nl.dart           |   50 +-
 lib/generated/intl/messages_pl.dart           |   49 +-
 lib/generated/intl/messages_pt.dart           |   50 +-
 lib/generated/intl/messages_ro.dart           |   51 +-
 lib/generated/intl/messages_ru.dart           |   52 +-
 lib/generated/intl/messages_sk.dart           |   50 +-
 lib/generated/intl/messages_sq.dart           |   51 +-
 lib/generated/intl/messages_sr.dart           |   49 +-
 lib/generated/intl/messages_sv.dart           |   50 +-
 lib/generated/intl/messages_sw.dart           |   49 +-
 lib/generated/intl/messages_ta.dart           |   51 +-
 lib/generated/intl/messages_th.dart           |   50 +-
 lib/generated/intl/messages_ti.dart           |   17 +-
 lib/generated/intl/messages_tr.dart           |   89 +-
 lib/generated/intl/messages_uk.dart           |   49 +-
 lib/generated/intl/messages_ur.dart           |   49 +-
 lib/generated/intl/messages_uz.dart           |   52 +-
 lib/generated/intl/messages_vi.dart           |   50 +-
 lib/generated/intl/messages_zh.dart           |   37 +-
 lib/generated/intl/messages_zh_CN.dart        |   37 +-
 lib/generated/intl/messages_zh_TW.dart        |   37 +-
 lib/generated/l10n.dart                       |  265 ++-
 lib/l10n/intl_ar.arb                          |   40 +-
 lib/l10n/intl_az.arb                          |  842 ++++++++
 lib/l10n/intl_bn.arb                          |   40 +-
 lib/l10n/intl_bs.arb                          |   21 +-
 lib/l10n/intl_cs.arb                          |   42 +-
 lib/l10n/intl_da.arb                          |   40 +-
 lib/l10n/intl_de.arb                          |   40 +-
 lib/l10n/intl_el.arb                          |   40 +-
 lib/l10n/intl_en.arb                          |   42 +-
 lib/l10n/intl_es.arb                          |   40 +-
 lib/l10n/intl_fa.arb                          |   42 +-
 lib/l10n/intl_fi.arb                          |   42 +-
 lib/l10n/intl_fr.arb                          |   40 +-
 lib/l10n/intl_he.arb                          |   40 +-
 lib/l10n/intl_hi.arb                          |   40 +-
 lib/l10n/intl_hu.arb                          |   40 +-
 lib/l10n/intl_id.arb                          |   40 +-
 lib/l10n/intl_it.arb                          |   40 +-
 lib/l10n/intl_ja.arb                          |   40 +-
 lib/l10n/intl_km.arb                          |   42 +-
 lib/l10n/intl_kn.arb                          |   18 +-
 lib/l10n/intl_ko.arb                          |   40 +-
 lib/l10n/intl_ku.arb                          |    7 +-
 lib/l10n/intl_lo.arb                          |   40 +-
 lib/l10n/intl_mr.arb                          |   18 +-
 lib/l10n/intl_ms.arb                          |   40 +-
 lib/l10n/intl_my.arb                          |   40 +-
 lib/l10n/intl_nl.arb                          |   40 +-
 lib/l10n/intl_pl.arb                          |   40 +-
 lib/l10n/intl_pt.arb                          |   40 +-
 lib/l10n/intl_ro.arb                          |   40 +-
 lib/l10n/intl_ru.arb                          |   40 +-
 lib/l10n/intl_sk.arb                          |   42 +-
 lib/l10n/intl_sq.arb                          |   42 +-
 lib/l10n/intl_sr.arb                          |   40 +-
 lib/l10n/intl_sv.arb                          |   40 +-
 lib/l10n/intl_sw.arb                          |   42 +-
 lib/l10n/intl_ta.arb                          |   40 +-
 lib/l10n/intl_th.arb                          |   40 +-
 lib/l10n/intl_ti.arb                          |   17 +-
 lib/l10n/intl_tr.arb                          |   70 +-
 lib/l10n/intl_uk.arb                          |   40 +-
 lib/l10n/intl_ur.arb                          |   42 +-
 lib/l10n/intl_uz.arb                          |   42 +-
 lib/l10n/intl_vi.arb                          |   40 +-
 lib/l10n/intl_zh.arb                          |   40 +-
 lib/l10n/intl_zh_CN.arb                       |   42 +-
 lib/l10n/intl_zh_TW.arb                       |   42 +-
 lib/main.dart                                 |    5 +-
 lib/main_layout/layout_desktop.dart           |    3 +-
 lib/main_layout/layout_left_menu.dart         |   10 +-
 lib/menu/appbar.dart                          |  655 +++---
 lib/menu/maintab.dart                         |  129 +-
 lib/menu/side_menu.dart                       |    8 +-
 lib/menu/sidebar.dart                         |  167 +-
 lib/models/app_model.dart                     |   52 +-
 lib/models/audio/playlist_audio.dart          |    2 +-
 lib/models/blog_wish_list_model.dart          |    3 +-
 lib/models/brand_model.dart                   |    3 +-
 lib/models/cart/cart_model_bigcommerce.dart   |    2 +-
 lib/models/cart/cart_model_shopify.dart       |   10 +-
 lib/models/cart/cart_model_woo.dart           |    7 +-
 lib/models/cart/checkout_shopify.dart         |   11 +
 lib/models/cart/mixin/local_mixin.dart        |    2 +-
 lib/models/category/category_model.dart       |   12 +-
 lib/models/category/category_model_impl.dart  |   19 +-
 .../category/detail_category_model.dart       |    4 +-
 lib/models/category/list_category_model.dart  |    2 +-
 lib/models/category/main_category_model.dart  |    9 +-
 lib/models/entities/blog.dart                 |   43 +-
 lib/models/entities/category.dart             |    8 +-
 lib/models/entities/filter_sorty_by.dart      |   25 +-
 .../entities/firebase_error_exception.dart    |    5 +
 lib/models/entities/payment_method.dart       |    5 +-
 lib/models/entities/product.dart              |  265 +--
 lib/models/entities/product_attribute.dart    |    2 +-
 lib/models/entities/product_variation.dart    |    2 +-
 lib/models/entities/sale_stats.dart           |    2 +-
 lib/models/entities/shipping_method.dart      |    5 +-
 lib/models/entities/transaction.dart          |    2 +-
 lib/models/entities/user.dart                 |   22 +-
 lib/models/entities/vacation_settings.dart    |    5 +-
 lib/models/filter_attribute_model.dart        |    8 +-
 lib/models/order/order.dart                   |   46 +-
 lib/models/paging_data_provider.dart          |   21 +-
 lib/models/payment_method_model.dart          |    8 +-
 lib/models/product_model.dart                 |   20 +-
 lib/models/tag_model.dart                     |    7 +-
 lib/models/user_model.dart                    |   11 +-
 lib/models/vendor/store_model.dart            |   72 +-
 .../advertisement/google_advertisement.dart   |    2 +-
 .../digits_mobile_login/services/index.dart   |    2 +-
 .../views/digits_mobile_login_screen.dart     |    2 +-
 .../digits_mobile_login_sign_up_screen.dart   |    2 +-
 .../dynamic_layout/blog/blog_grid.dart        |   21 +-
 .../brand/brand_list_layout.dart              |   54 +-
 .../category/category_icon.dart               |    2 +-
 .../category/category_image.dart              |   54 +-
 .../category/category_image_item.dart         |   20 +-
 .../category/category_menu_with_products.dart |    2 +-
 .../category/category_text.dart               |    1 +
 .../dynamic_layout/config/app_config.dart     |  104 +-
 .../dynamic_layout/config/product_config.dart |    8 +
 .../config/tiktok_videos_config.dart          |   19 +
 .../dynamic_layout/geo_search/geo_search.dart |    2 +-
 lib/modules/dynamic_layout/helper/helper.dart |   49 +-
 lib/modules/dynamic_layout/logo/logo.dart     |  262 ++-
 .../product/future_builder.dart               |   29 +-
 .../dynamic_layout/product/product_empty.dart |  120 +-
 .../dynamic_layout/product/product_grid.dart  |   52 +-
 .../dynamic_layout/product/product_list.dart  |   12 +-
 .../product/product_list_default.dart         |   59 +-
 .../product/product_list_large_card.dart      |   19 +-
 .../product/product_list_simple.dart          |    6 +-
 .../product/product_list_tile.dart            |    6 +-
 .../slider_testimonial/index.dart             |   31 +-
 .../dynamic_layout/story/story_card.dart      |    8 +-
 .../tabbar/tab_indicator/dot_indicator.dart   |   13 +-
 .../tab_indicator/material_indicator.dart     |   20 +-
 .../tab_indicator/rectangular_indicator.dart  |   22 +-
 lib/modules/dynamic_layout/tabbar/tabbar.dart | 1829 +++++++++++++++++
 .../dynamic_layout/tabbar/tabbar_custom.dart  |   31 +-
 .../dynamic_layout/tiktok/tiktok_videos.dart  |   29 +-
 .../tiktok/widgets/story_item.dart            |    8 +-
 .../dynamic_layout/vertical/menu_layout.dart  |  264 ++-
 .../vertical/pinterest_card.dart              |    2 +-
 .../vertical/pinterest_layout.dart            |   82 +-
 .../vertical/product_select_card.dart         |    2 +-
 .../dynamic_layout/vertical/vertical.dart     |   26 +-
 .../vertical/vertical_layout.dart             |  140 +-
 .../vertical/vertical_layout_with_filter.dart |  216 +-
 .../firebase_notification_service.dart        |    2 +-
 lib/modules/firebase/firebase_service.dart    |   20 +-
 .../impl/dynamic_link_service_impl.dart       |    6 +-
 .../impl/firebase_remote_service_impl.dart    |    2 +-
 .../firebase/realtime_chat/messages.dart      |    8 +-
 lib/modules/instagram/instagram_service.dart  |    3 +-
 .../credit_card/credit_card_form.dart         |   75 +-
 .../credit_card/credit_card_payment.dart      |   20 +-
 .../native_payment/flutterwave/services.dart  |   12 -
 .../native_payment/paystack/services.dart     |    6 +-
 .../one_signal_notification_service.dart      |    2 +-
 .../product_reviews_index.dart                |    7 +-
 .../product_reviews/product_reviews_list.dart |    2 +-
 .../product_reviews_model.dart                |   52 +-
 .../re_order/widgets/re_order_item_list.dart  |  298 ++-
 lib/modules/sms_login/sms_login.dart          |   65 +-
 lib/modules/sms_login/sms_model.dart          |   24 +-
 .../sms_login/v2/sms_input_phone_v2.dart      |    5 +-
 lib/modules/sms_login/v2/sms_verify_v2.dart   |    2 +-
 .../tera_wallet/views/my_wallet_screen.dart   |    2 +-
 .../tera_wallet/views/partial_payment.dart    |    4 +-
 .../views/widgets/payment_method_item.dart    |    6 +-
 lib/modules/tiktok/constants/endpoint.dart    |    9 +-
 lib/modules/tiktok/models/extensions.dart     |   28 +-
 lib/modules/tiktok/models/index.dart          |    1 -
 lib/modules/tiktok/models/tiktok_video.dart   |   98 +-
 .../tiktok/models/tiktok_video_info.dart      |  190 +-
 .../tiktok/models/tiktok_video_meta.dart      |   24 -
 .../tiktok/services/tiktok_base_service.dart  |    3 +-
 .../tiktok/services/tiktok_service.dart       |   39 +-
 .../vendor_on_boarding/screen_index.dart      |   51 +-
 .../vendor_information_index.dart             |   52 +-
 lib/routes/aware.dart                         |   44 -
 lib/routes/route.dart                         |   51 +-
 lib/routes/route_observer.dart                |   36 -
 .../blog/views/blog_detail_screen.dart        |    2 +-
 lib/screens/blog/views/list_blog_screen.dart  |   41 +-
 .../blog/views/widgets/blog_list_item.dart    |    2 +-
 lib/screens/brand/brand_backdrop.dart         |   23 +-
 lib/screens/cart/cart_screen.dart             |   12 +-
 lib/screens/cart/my_cart_screen.dart          |  426 ++--
 .../cart/widgets/shopping_cart_sumary.dart    |  136 +-
 lib/screens/categories/categories_screen.dart |  247 +--
 .../categories/category_search_screen.dart    |   26 +-
 lib/screens/categories/layouts/card.dart      |  230 ++-
 lib/screens/categories/layouts/column.dart    |  144 +-
 lib/screens/categories/layouts/grid.dart      |  198 +-
 .../categories/layouts/multi_level.dart       |  144 ++
 lib/screens/categories/layouts/parallax.dart  |   61 +-
 lib/screens/categories/layouts/side_menu.dart |  200 +-
 .../layouts/side_menu_with_group.dart         |  194 +-
 .../layouts/side_menu_with_sub.dart           |  186 +-
 lib/screens/categories/layouts/sub.dart       |  160 +-
 .../categories/main_category_screen.dart      |  157 --
 .../widgets/category_column_item.dart         |   54 +-
 lib/screens/chat/bottom_sheet_smart_chat.dart |    7 +-
 lib/screens/chat/fab_circle_smart_chat.dart   |    3 +-
 lib/screens/checkout/review_screen.dart       |   15 +-
 .../checkout/widgets/payment_methods.dart     |   67 +-
 .../checkout/widgets/shipping_address.dart    |   57 +
 lib/screens/common/app_bar_mixin.dart         |  157 +-
 lib/screens/custom/static_site.dart           |    2 +-
 lib/screens/custom/webview_screen.dart        |    3 +-
 lib/screens/custom/welcome_screen.dart        |    5 +-
 lib/screens/detail/product_detail_screen.dart |   48 +-
 .../detail/themes/full_size_image_type.dart   |  231 +--
 .../detail/themes/half_size_image_type.dart   |  274 +--
 lib/screens/detail/themes/simple_type.dart    |  101 +-
 lib/screens/detail/widgets/image_feature.dart |    4 +-
 lib/screens/detail/widgets/image_galery.dart  |   46 +-
 .../detail/widgets/product_common_info.dart   |   45 +
 .../widgets/product_detail_categories.dart    |    1 -
 .../detail/widgets/product_gallery.dart       |    2 +-
 .../detail/widgets/product_image_list.dart    |  341 +++
 .../detail/widgets/product_image_slider.dart  |  311 +--
 .../widgets/product_image_thumbnail.dart      |    2 +-
 .../widgets/product_short_description.dart    |    2 +-
 lib/screens/detail/widgets/product_tag.dart   |    1 -
 lib/screens/detail/widgets/product_title.dart |    3 +-
 .../detail/widgets/related_product.dart       |   18 +-
 .../related_product_from_same_store.dart      |   20 +-
 lib/screens/detail/widgets/review.dart        |    2 +-
 .../detail/widgets/variant_image_feature.dart |    4 +-
 lib/screens/detail/widgets/video_feature.dart |   51 +-
 lib/screens/dynamic/dynamic_menu_widget.dart  |   43 +
 lib/screens/dynamic/dynamic_screen.dart       |    8 +-
 .../dynamic/dynamic_scrollable_screen.dart    |  211 ++
 .../dynamic/dynamic_tabmenu_screen.dart       |  142 ++
 lib/screens/home/change_language_mixin.dart   |    5 +-
 lib/screens/home/home_screen.dart             |    3 +-
 .../home/notification_request_screen.dart     |   11 +-
 lib/screens/home/onboard_screen.dart          |   76 +-
 lib/screens/home/privacy_term_screen.dart     |    9 +-
 lib/screens/login_sms/login_sms_screen.dart   |   52 +-
 lib/screens/login_sms/verify.dart             |   51 +-
 .../models/order_history_detail_model.dart    |    7 +
 .../views/list_order_history_screen.dart      |   64 +-
 .../views/order_history_detail_screen.dart    |   64 +-
 .../views/widgets/order_list_item.dart        |    6 +-
 .../views/widgets/product_order_item.dart     |   25 +-
 lib/screens/page_tab_screen.dart              |   53 +
 lib/screens/pages/static_page.dart            |   11 +-
 lib/screens/posts/post_screen.dart            |  169 +-
 .../filter_mixin/widget_extension.dart        |  116 +-
 lib/screens/products/products_backdrop.dart   |    5 +-
 lib/screens/products/products_flatview.dart   |  173 +-
 lib/screens/products/products_mixin.dart      |   28 +-
 lib/screens/products/products_screen.dart     |   16 +-
 lib/screens/products/products_searchview.dart |  114 +-
 .../products/widgets/category_menu.dart       |  137 +-
 lib/screens/search/widgets/search_box.dart    |    2 +-
 lib/screens/search/widgets/search_widget.dart |    6 +-
 lib/screens/settings/currencies_screen.dart   |    2 +-
 lib/screens/settings/language_screen.dart     |   66 +-
 lib/screens/settings/notification_screen.dart |   20 +-
 lib/screens/settings/settings_screen.dart     |   24 +-
 .../views/subcategories_screen.dart           |   67 +-
 lib/screens/users/registration_screen.dart    |    7 +-
 lib/screens/wishlist/empty_wishlist.dart      |    2 +-
 .../wishlist/product_wishlist_screen.dart     |  192 +-
 lib/services/base_firebase_services.dart      |   15 +-
 lib/services/base_services.dart               |   52 +-
 lib/services/http_cache_manager.dart          |  103 +
 lib/services/https.dart                       |   17 +-
 lib/services/location_service.dart            |    4 +-
 lib/services/paging/base_page_repository.dart |    2 +
 lib/services/paging/paging_repository.dart    |   17 +-
 lib/services/service_config.dart              |    9 +-
 lib/services/wallet/index.dart                |    2 +-
 lib/services/wordpress/blog_service.dart      |   12 +-
 lib/services/wordpress/blognews_api.dart      |   17 +-
 .../asymmetric/asymmetric_columns.dart        |    2 +-
 lib/widgets/asymmetric/asymmetric_view.dart   |   33 +-
 lib/widgets/backdrop/backdrop.dart            |  167 +-
 lib/widgets/backdrop/backdrop_menu.dart       |  113 +-
 .../backdrop/filters/category_item.dart       |   14 +-
 .../backdrop/filters/category_menu.dart       |   33 +-
 lib/widgets/blog/blog_card_view.dart          |    2 +-
 lib/widgets/blog/blog_grid_item.dart          |    2 +-
 lib/widgets/blog/blog_list_item.dart          |    2 +-
 lib/widgets/blog/blog_share_button.dart       |   27 +-
 .../blog/detailed_blog_fullsize_image.dart    |    2 +-
 .../blog/detailed_blog_half_image.dart        |    2 +-
 .../blog/detailed_blog_quarter_image.dart     |    2 +-
 lib/widgets/blog/detailed_blog_view.dart      |    3 +-
 lib/widgets/cardlist/index.dart               |   43 +-
 lib/widgets/cardlist/menu_card.dart           |    8 +-
 lib/widgets/common/common_safe_area.dart      |    1 +
 lib/widgets/common/flux_image.dart            |   31 +-
 lib/widgets/common/paging_list.dart           |  233 ++-
 lib/widgets/common/paging_mixin.dart          |  118 ++
 lib/widgets/common/rive_splashscreen.dart     |   10 +-
 lib/widgets/common/sliver_empty_data.dart     |   15 +
 lib/widgets/common/splash_screen.dart         |   25 +-
 lib/widgets/common/static_splashscreen.dart   |   20 +-
 lib/widgets/common/webview.dart               |  352 ++--
 .../general/general_button_widget.dart        |   55 +-
 lib/widgets/general/general_web_widget.dart   |  158 +-
 lib/widgets/home/appbar.dart                  |   96 +
 lib/widgets/home/index.dart                   |  169 +-
 lib/widgets/home/preview_reload.dart          |   12 +-
 lib/widgets/product/action_button_mixin.dart  |    4 +-
 lib/widgets/product/cart_item.dart            |    2 +-
 lib/widgets/product/dialog_add_to_cart.dart   |   19 +-
 lib/widgets/product/product_bottom_sheet.dart |  116 +-
 lib/widgets/product/product_card_view.dart    |   87 +-
 lib/widgets/product/product_glass_view.dart   |    2 +-
 lib/widgets/product/product_item_tile.dart    |    2 +-
 lib/widgets/product/product_list.dart         |  146 +-
 lib/widgets/product/product_simple_view.dart  |    2 +-
 lib/widgets/product/product_variant.dart      |   69 +-
 lib/widgets/product/widgets/heart_button.dart |    4 +-
 lib/widgets/product/widgets/image.dart        |    2 +-
 lib/widgets/product/widgets/on_sale.dart      |    3 +-
 lib/widgets/product/widgets/title.dart        |    3 +
 lib/widgets/vendor/store_item.dart            |  190 +-
 lib/widgets/web_layout/appbar_web.dart        |    5 +-
 lib/widgets/web_layout/footer_web.dart        |    2 +-
 macos/Flutter/GeneratedPluginRegistrant.swift |    4 +
 pubspec.yaml                                  |  140 +-
 .../flutter/generated_plugin_registrant.cc    |    3 +
 windows/flutter/generated_plugins.cmake       |    1 +
 450 files changed, 18607 insertions(+), 8416 deletions(-)
 create mode 100644 android/app/src/main/res/xml/backup_rules.xml
 delete mode 100644 android/key.properties
 create mode 100644 assets/images/.gitkeep
 create mode 100644 assets/images/country/au.png
 create mode 100644 assets/images/country/az.jpg
 create mode 100644 configs/GoogleService-Info.plist
 create mode 100755 configs/customized/assets/icons/payment/apple-pay-mark.svg
 create mode 100644 configs/customized/assets/icons/payment/google-pay-mark.png
 create mode 100644 configs/customized/assets/images/.gitkeep
 create mode 100644 configs/customized/lib/config/states/.gitkeep
 create mode 100644 configs/env.properties
 create mode 100644 configs/google-services.json
 rename {android/app => configs}/key.jks (100%)
 rename native_splash.yaml => configs/native_splash.yaml (58%)
 create mode 100644 configs/readme.txt
 create mode 100644 ios/Config.xcconfig
 create mode 100644 ios/Runner/Environment.swift
 create mode 100755 ios/pre-actions.sh
 create mode 100644 lib/common/config/models/phone_number_config.dart
 create mode 100644 lib/common/config/models/vendor_config.dart
 create mode 100644 lib/common/events.dart
 delete mode 100644 lib/common/tools/adaptive_tools.dart
 create mode 100644 lib/common/tools/image_resize.dart
 create mode 100644 lib/config/states/.gitkeep
 create mode 100644 lib/frameworks/shopify/config_example/config_ar.json
 create mode 100644 lib/frameworks/shopify/config_example/config_vi.json
 create mode 100644 lib/generated/intl/messages_az.dart
 create mode 100644 lib/l10n/intl_az.arb
 create mode 100644 lib/modules/dynamic_layout/tabbar/tabbar.dart
 delete mode 100644 lib/modules/tiktok/models/tiktok_video_meta.dart
 delete mode 100644 lib/routes/aware.dart
 delete mode 100644 lib/routes/route_observer.dart
 create mode 100644 lib/screens/categories/layouts/multi_level.dart
 delete mode 100644 lib/screens/categories/main_category_screen.dart
 create mode 100644 lib/screens/detail/widgets/product_common_info.dart
 create mode 100644 lib/screens/detail/widgets/product_image_list.dart
 create mode 100644 lib/screens/dynamic/dynamic_menu_widget.dart
 create mode 100644 lib/screens/dynamic/dynamic_scrollable_screen.dart
 create mode 100644 lib/screens/dynamic/dynamic_tabmenu_screen.dart
 create mode 100644 lib/screens/page_tab_screen.dart
 create mode 100644 lib/services/http_cache_manager.dart
 create mode 100644 lib/widgets/common/paging_mixin.dart
 create mode 100644 lib/widgets/common/sliver_empty_data.dart
 create mode 100644 lib/widgets/home/appbar.dart

diff --git a/android/app/build.gradle b/android/app/build.gradle
index 545945f..59f6e5e 100644
--- a/android/app/build.gradle
+++ b/android/app/build.gradle
@@ -34,10 +34,10 @@ if (flutterVersionName == null) {
 }
 
 
-def keystoreProperties = new Properties()
-def keystorePropertiesFile = rootProject.file('key.properties')
-if (keystorePropertiesFile.exists()) {
-    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
+def envProperties = new Properties()
+def envPropertiesFile = rootProject.file('../configs/env.properties')
+if (envPropertiesFile.exists()) {
+    envProperties.load(new FileInputStream(envPropertiesFile))
 }
 
 apply plugin: 'com.android.application'
@@ -69,23 +69,38 @@ android {
     }
     defaultConfig {
         // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
-        applicationId "com.inspireui.fluxstore"
+        applicationId envProperties['androidPackageName']
         minSdkVersion 21
-        targetSdkVersion flutter.targetSdkVersion
+//        targetSdkVersion flutter.targetSdkVersion
+        targetSdkVersion 33
 
         versionCode flutterVersionCode.toInteger()
         versionName flutterVersionName
         testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
         multiDexEnabled true
         resConfigs "en"
+
+        manifestPlaceholders += [
+            envatoPurchaseCode: envProperties['envatoPurchaseCode'],
+            appName: envProperties['appName'],
+            websiteUrl: envProperties['websiteUrl'],
+            websiteDomain: envProperties['websiteDomain'],
+            customScheme: envProperties['customScheme'],
+            googleApiKeyAndroid: envProperties['googleApiKeyAndroid'],
+            adMobAppIdAndroid: envProperties['adMobAppIdAndroid'],
+            facebookClientToken: envProperties['facebookClientToken'],
+            facebookLoginProtocolScheme: envProperties['facebookLoginProtocolScheme']
+        ]
+
+        resValue 'string', 'facebookAppId', envProperties['facebookAppId']
     }
 
     signingConfigs {
         release {
-            keyAlias keystoreProperties['keyAlias']
-            keyPassword keystoreProperties['keyPassword']
-            storeFile file(keystoreProperties['storeFile'])
-            storePassword keystoreProperties['storePassword']
+            keyAlias envProperties['keyAlias']
+            keyPassword envProperties['keyPassword']
+            storeFile rootProject.file('../configs/' + envProperties['storeFile'])
+            storePassword envProperties['storePassword']
         }
     }
 
@@ -120,3 +135,17 @@ dependencies {
 }
 googleServices { disableVersionCheck = true }
 
+task copyGoogleServices(type: Copy) {
+    from '../../configs'
+    include 'google-services.json'
+    into '.'
+}
+
+task copyConfigFiles(type: Copy) {
+    from '../../configs/customized/'
+    include '**'
+    into '../../'
+}
+
+preBuild.dependsOn(copyGoogleServices)
+preBuild.dependsOn(copyConfigFiles)
diff --git a/android/app/src/main/AndroidManifest.xml b/android/app/src/main/AndroidManifest.xml
index 7e8a847..c2c02ff 100644
--- a/android/app/src/main/AndroidManifest.xml
+++ b/android/app/src/main/AndroidManifest.xml
@@ -22,6 +22,8 @@
 
     <!-- Use for SmartChat feature -->
     <queries>
+        <provider android:authorities="com.facebook.katana.provider.PlatformProvider" />
+
         <intent>
             <action android:name="android.intent.action.VIEW" />
             <data android:scheme="https" />
@@ -67,8 +69,9 @@
     <application
         android:name="${applicationName}"
         android:icon="@mipmap/launcher_icon"
-        android:label="Fluxstore"
+        android:label="${appName}"
         android:requestLegacyExternalStorage="true"
+        android:fullBackupContent="@xml/backup_rules"
         android:usesCleartextTraffic="true">
 
 
@@ -100,7 +103,7 @@
 
             <meta-data
                 android:name="default-url"
-                android:value="https://inspireui.com" />
+                android:value="${websiteUrl}" />
 
             <intent-filter android:autoVerify="true">
                 <action android:name="android.intent.action.VIEW" />
@@ -109,7 +112,7 @@
                 <category android:name="android.intent.category.BROWSABLE" />
 
                 <data
-                    android:host="inspireui.com"
+                    android:host="${websiteDomain}"
                     android:scheme="https" />
                 <data android:scheme="http" />
             </intent-filter>
@@ -121,8 +124,8 @@
                 <category android:name="android.intent.category.BROWSABLE" />
 
                 <data
-                    android:host="inspireui.com"
-                    android:scheme="fluxstore" />
+                    android:host="${websiteDomain}"
+                    android:scheme="${customScheme}" />
             </intent-filter>
         </activity>
 
@@ -145,38 +148,23 @@
         <!-- Google map and Admod setup -->
         <meta-data
             android:name="com.google.android.geo.API_KEY"
-            android:value="@string/api_key" />
+            android:value="${googleApiKeyAndroid}" />
         <meta-data
             android:name="com.google.android.gms.ads.APPLICATION_ID"
-            android:value="@string/admob_api" />
+            android:value="${adMobAppIdAndroid}" />
 
         <!-- Facebook Login configuration -->
         <meta-data
             android:name="com.facebook.sdk.ApplicationId"
-            android:value="@string/facebook_app_id" />
+            android:value="@string/facebookAppId" />
 
         <meta-data
             android:name="com.facebook.sdk.ClientToken"
-            android:value="@string/facebook_client_token" />
-
-        <activity
-            android:name="com.facebook.FacebookActivity"
-            android:configChanges="keyboard|keyboardHidden|screenLayout|screenSize|orientation"
-            android:exported="true"
-            android:label="@string/app_name"
-        />
-        <activity
-            android:name="com.facebook.CustomTabActivity"
-            android:exported="true">
-            <intent-filter>
-                <action android:name="android.intent.action.VIEW" />
+            android:value="${facebookClientToken}" />
 
-                <category android:name="android.intent.category.DEFAULT" />
-                <category android:name="android.intent.category.BROWSABLE" />
-
-                <data android:scheme="@string/fb_login_protocol_scheme" />
-            </intent-filter>
-        </activity>
+        <meta-data
+                android:name="com.inspireui.ENVATO_PURCHASE_CODE"
+                android:value="${envatoPurchaseCode}" />
 
 <!--        Enable to support Audio Feature-->
 <!--        <service-->
diff --git a/android/app/src/main/res/values/strings.xml b/android/app/src/main/res/values/strings.xml
index 6b68813..1b1e7f2 100644
--- a/android/app/src/main/res/values/strings.xml
+++ b/android/app/src/main/res/values/strings.xml
@@ -1,15 +1,3 @@
 <resources>
-    <string name="app_name">FluxStore</string>
     <string name="default_notification_channel_id">default_notification_channel_id</string>
-
-    <!-- TODO 1.1 - Update Facebook Login Feature (optional) 🧩 -->
-    <string name="facebook_app_id">430258564493822</string>
-    <string name="facebook_client_token">9def0493cb40104fa311ee9e1086d264</string>
-    <string name="fb_login_protocol_scheme">fb430258564493822</string>
-
-    <!-- TODO 1.2 - Update Google Map Address (optional) 🧩 -->
-    <string name="api_key">AIzaSyDSNYVC-8DU9BTcyqkeN9c5pgVhwOBAvGg</string>
-
-    <!-- TODO 1.3 - Update Google AdsMod (optional) 🧩 -->
-    <string name="admob_api">ca-app-pub-7432665165146018~2664444130</string>
 </resources>
diff --git a/android/app/src/main/res/xml/backup_rules.xml b/android/app/src/main/res/xml/backup_rules.xml
new file mode 100644
index 0000000..7eb6e3e
--- /dev/null
+++ b/android/app/src/main/res/xml/backup_rules.xml
@@ -0,0 +1,4 @@
+<?xml version="1.0" encoding="utf-8"?>
+<full-backup-content>
+    <exclude domain="sharedpref" path="FlutterSecureStorage"/>
+</full-backup-content>
\ No newline at end of file
diff --git a/android/key.properties b/android/key.properties
deleted file mode 100644
index 3f65917..0000000
--- a/android/key.properties
+++ /dev/null
@@ -1,4 +0,0 @@
-storePassword=123456
-keyPassword=123456
-keyAlias=key
-storeFile=key.jks
\ No newline at end of file
diff --git a/assets/images/.gitkeep b/assets/images/.gitkeep
new file mode 100644
index 0000000..e69de29
diff --git a/assets/images/country/au.png b/assets/images/country/au.png
new file mode 100644
index 0000000000000000000000000000000000000000..2623d134da44af923c7570cb98bbaf17eb2d4ba4
GIT binary patch
literal 6785
zcmaKxcQjm2`2Vk7qC{^|qnD^b2up|>z4ur(YKUG|iy(*+M2&8hMG(DgMD#9tFG2LE
z%d+dcpMQSm{QmfU&z*bc%(*jn&OGzXJg<4*I9+X3QesA8002nU)s*!y`90<iC&b1)
zHCcG$Fd43sqLv~6)FnN*v&F-d+3eKxwE!T98&mH+03iRX{}%v!MF3#`H2}zD0s!6H
z+%~=Em>2k9O;u&gCoxw+C-gG_Fl4GLD;fqY9_9Hf7|hZ2dve=T650;vKWyIo+M@8o
ztb*y`OI&;2^2SIGY+C=S$QgYC(4-9i>_-}0y=mg2BEm>%08iPN9@~~P`46JMm|k72
zh%@;I>dr2tqoV_HjK~c>4n^ce@#oj4G9H$KpHZlBz{|bYJWnaUur|F7ET{^&XZxk5
zgL7kf^k?lMgV3pf%*mE$=w<Twn8o<l*0b{Av8G!2mGPdwzy*6jd{SVYvvdZZ*=dc!
z3!9fX?yz+;GdtpbP#M_cp2+>POVePPx$}vGslw{_hm)qTV5#}hu}5#L)R<I)7$c=(
zKHqhCN6@|7=ig}m$U()|<?2gJS$-?&6^k2i&_*G6Mh?cg<|{65pRF=|mF$eubu4+?
z)859aYr5ijo{L&o;{nw!`B(1sg;JouzTymCNNJWSemY%nMy-a*cmLsC{c&5_C7EY6
z<a=iArFgg`kZ>U(S>0&q1Tw-)a!-7Rom5A~8b2YI{_4t)&C?vux7KuDRZs1%EvQ@T
zP&O&kpQU0XTbcCimktA-y8?ZWJY$Yk*K}v*_3BbYN8r=xPL4hl#yorxU!9+Nw}ZZU
zLPbWIvvximw(I<2#jcAOxdvjQw?ySapHG<NL%_94W1X)(p;`O^f;?PGuR?UL{3ZtD
zN<RcB?Fp14Cw&;74j9M^YnPC|P0cqkl@=dmUO?#gvN{*kUA6XTdmiJqE@UCpm_!bX
zz3g|VOqy}5GIY9aMXTHL57{1V7OUabH%Dn7Yc)=|JG;wJXKhxliLZlgz0&QOGFw#`
znM5R~N!Hx&H+RU|@$4p@4U^(d!XDHG2TPUDtbtMsg5CLi#<xy|QRf$TjXb)MD;4N}
z=j5-PaAn-%LQG8AopE?8otetNd2c_5u%ip2ZVz(Fea8|Wm^L~`>LYOQ+xBDOHclX#
zq+1=tXU@MY#l?Kq2q{YOen|7&Di23<I1$%;Vu3E|d9qHxBfs8AQQ6L21|}D5Ab@5D
zW+PlrmcKn${~lf@=1Te09tZN1Fb<TQXW+e#u-Gj&XkC-wKCXdUVR`|zjCnVRn;3Ot
z0omfK(?{}?0o%0e=h418=IyZ^qedNnv49YH(2j@k`Ucau4J3TXK=878A^dl0oUG)?
z%v_<m15SJA=~m3}IDVTo3Munl$ivvCFc?Ia@C0YSi>KVCM)IE+^v}A<qJl}KO}zHP
z_t`0@(N}|QJe8@Iw3@ZI1&^hs>I;r(gpcW3(|<2}Z-Vvj_heU4!XbjF_p^pj{J{M`
zD<#)8FDZ<cjz+rje&)V5vE3e0AEmsvQ_}Jszw3~Zo3)wj!!h?6TCHw6VSRtyW>HnS
zo^8`nZGNS6Q_hvBcY0Kk#8C<PbkeJlKfb%BHu9+X?VA4+_@&`q5|iyT&Wx}#4tJ#F
zH_y-7kQXtMB9Pv>MTO?^2Soc{3y}H8s!wPOgK3@*x>xvV!_wMV;cvspXXSv`^WpNK
znug=LeL8oX1QsyPk#Bz1V@1TtrZb!XjC76z9UlFei#^VFpt(ByW;>ay_s)rgi}IhG
z8S1B`uBGvLH0eV_neP!$VJ;;3FZ_%#=EN7iDWoD20~|h{O=|CtPg`ndIvedwlcqyK
zQCCUAZq*~PxE<*?Y~6|bF3P@7!8!);0#bUN2g$SeeL`QR@X>cOr4QVI$xz6YM};rz
zy-{0Ow%LS%94Z;zR_j54j~r3rW=AqisFF<*03n{@#6Y-8@koF6`;#WP_i}Z{Ov&;)
z`Kf}){u=A&UQk4b{Gtm0SO?M^=yD1il0zO_T&o)HY8B%LZuF6)1k8^}^|Gtl)h>sO
z?VdYG@AgcvdHQ8F+Fp{BKt0BWDwb%T1j!R5J(gL}_X~P`@tqSri?IiqpxD6X!gTTh
z<;}25{|V3A){d622GES8wBRFhpuFadwBIp$zn6;CXJ#QcL-fIw<8InT$mN4Yg@W<t
zRzj`wKib2>_Dhg<lnsk}Uwzq%HbO|&PYaIW#Ej|540Huhr32@fBZ4ACbicqPjju6^
zP#JsGw>Pc&09M)<@mhG<c~J7-=B28Y(9;k2H#sw`!BVb$zp$#?!m@@J!_0G!ah64q
zi@FGKrl;r~l5a9H5PjD3>x5jQ`E76>^5v3(8P~x-GvmLkcV*fO3QTJSkoU$bHnCXC
zWBZW)@wt5aKT)e1Hlaah=|XC^O?Km_EqO8MjnnI)5_I{z!~zRNydpxpfLvl$<!j~{
zQ?~i)PIHGacG1@pun)t0A-6N5k@o(sRDDi^cS|(a&r>;t;=0h=*91((gq4&@X4Yn3
zF3Vaf%M_as{QNsvBPa0OA6ws81fb}P9)J5H4b|HchtT<l7fu?BvZZ>U{91`V<Y<?T
zEfHBFCh6UsTfTmF_x6Xr{Y`PebqJbu?(1F4u1lap-lh#5tpXcZRMehCbSAM26<Me_
zTV&uvKV4YXc0^m5W;DG+V=N+IRyvYh|FO-?0N<+Z)bO;JtsD}Idq$jf+v7>3(sWt-
zLe%D%3WAQ%_W>Wx*o1Ltn2j}VR~z<>eu%GgmeJy?Q9D;^6eA1qG9>{DGG@{)B>ayP
zYyp7k@dq(R$*bRO>nuA}F3mCg!xfBUP5NC51F=|uvztqk?}M=9>|plkz`f;3ZhaD>
z*MD&If{;w2(xXDd9onnG7qq~7%N|KqxtL>1p_ui9S89YeG6@%ZRg$WG%kEY^!*4vy
z_I=NMtr^l`l|FNk{Mbsi@qTn~8mei#Yz5|?VdeyWue;z;%orWsT~H-I(=$LY^_e0=
z9w;cQp-_>3NN5Pc#hxLLP`FfL(?$Kiq7RSh;z`7icMYjijhDU{=dsGlR<U5!GVz*m
zl+>PXbY$k$%+R3l3CHE<<qZDe(2eJ>zNny-+gpdu{4`%WlK{FXo43z@d8}sJ<?hhZ
z-zWspA!Q`u)o}#5$-})sB{7dXL_AJ&^?0d=W`jz8$vIHnShn6+_Nm^TRr{U3)yxzU
zJ`c!uiN1fY-)%=gZ%c6Xd9HK!)ch>o!n$)y>f?aihoV$3oLex7FBUQ0pDW{bN-jt$
zfqklm<)07NVGZ|m>H4OYc<5mgCs+5K#&gOq!^Npa?$x7*bf50|1SN0Gz8=oNM-ED0
zpJtvE$4Ot`l`$b)qdrMN9pe8ceU})>G5OqSLhPiP_NF<ekMY3nqLFFLvg(#E*TRr{
z^O!`m@VbUeW@N6&05hQX3|jV@US^|vpwBwT7JG1r_A=^A*h+}JLxL!v5U+jemHkFi
zIqdXMPZ=BiR=MbT3HhJ2Q4Qm^FYb~8UOc^TXzg%X3Q>a=d2wXtSoowt{*nTL4{za@
z4N(8g**z=U=!NBEB>pE1N$>~2a`FPlR@Qs4G`ZCB$32m|);BHN>1)+=8S>_uN+RqY
zJ2{)%2Rez_&CtR+gD;`mj^^+R*{hf}%COwo+{Qq!?`t^Gzv(66Bh}WOoy%@|Jqrin
z{W(t^CbnF=n#TeKf{*a=x_y^e^Ie!^3AJx9NH?U8%+m)I-FDo9qEDLciB~{WQ>ZU-
z1r#eux$Uz2l3LuYA2N+#?gTZV(WGpFIkMj)dNu5EH1s5zT3|biLX%VrNx#>iC7mX)
zXRObU8;(<O$G{5SH}StiyWOAdbv<UnECsY5)4-6T8=xMv>WE_(BTz&dApOeV?H;+<
zWL&)E$#?sr0k}4!doBYj8~2m_sTS4>$GMC~%c5h~W@d`44%Sg!p8Iv>)%9@0u)!dU
zJA?UM*mmSVu?utR=<?DVZbcfNnE<wHDUZ5XXi|%9Sz6xld#>4mjtR`(y+p1opiO*_
zh5CMMwFm>f$pJg27wHixGVKP-X!mRAbswpK%ls#{?}~<wPf_<bw^mcP!7081i!|~>
zK^BMKx%9Qs)_$n)zl%bnW;WFDOpGx<JFi*ncJz}N#NrZY?j+3G>hdHULc^zc$~QY6
zLB;>3l}s;xdB(M!?#p2TZ!6pIwcd-Gwv>eSuGnUm$(S`kBhpn6+M3+>ZkYnyUbl2;
zNO1W;k(INS?^(t;nx(=T+26>svYj;~aL~lu;&*+Kr{yZti@;G^d9t}5O`0<K69wo4
z_)^Phl<V52U^&+zwqfVB%yzSGRd8GV`^gb?ocY6y7;FZ6I`bSXpsSf-A;Xw9sb{R2
zKI3%X&e~RLF4oh{Wi?b#`|a?Jt`i0a@tW;B_!*yiCWZ9B)JF!#P0<<Dl2un|6Wv+<
zyKvAZ+B_Mz4qZOV69ePuU*fnwWlFjxnscKT42r>i-PQY#XR>QfCoqA<apEc6nP9`e
z&B;dh-slToXS*0CY=Cy01rMMHSGN0Cxo`BWxMpY_`|ZV-2(cP38G6(GiTPY<-e@0o
z!rB*@$~U$4x#N&G$E2{_zQAp!vNw@{F?(Of+V%)EDnwDpxg3j?#(a=`s$gPV^;Onx
zK9Nud0KN<l4+^u|7e%>+Wf_P~8`1&)Dw@19M{73g8SxCmUM?z<GVZyAAkQwLez1J1
zzvARTf$VB6tf=WA1hjeb?&O4c&AnDQ5w5y#_&^;#x@HjdT+h(EDIEUA8o4q>PLjz$
z@3-SYW#I-=Fyy+09e!hd$cv1>z^Ryo{5Nby{xt~Om9_C7n<N0BCu!5docWZIK=>%T
z-bcPr#`FTk$G!JCN9$DG+h>tVc4S}G9v(jYgNt7(U!#Q}Yub9k`p(x<LUFT*<LW5Q
zC3vl^6WYSMr1PO*PvXqj30WFdDQTd~e|?yn%8IbQTn^-uYyZpC*T|G7<ZOt2*1Bg7
ze%HqoXT$F4<0cS8k(ZqE)#}0sZaVDpu{}TZYTu3o-(Av_HNH2NfohBA6I-jWs_Uf1
zl+C%B4GeoT-AGbp#icDHw(R#?rC0d$uI&q1NzAqvGPSTYKH)IGlgXv@wRn%NrNP?f
z!`8}7h|@eE_qi(}x@N;o`{3t}?4Tzm<bF`m?yE{VyF^I~I?fakEfC3KDAybujeT`Q
zy`y|fEMPLWMfbA}iW}sz+slqd8+lax&QKHYy+Sab7M28U)s#ojDyH6IQAQj#=*uF?
z7AZgp+PCd<xu<0=3*_6y8Q%{GlD+fmKY{-v(j#YVJ*z}%W4#9V*%_&Ywhs?ho#gXR
z8qf82a=<rzC>Gf#*Mal&SCh#t0z7=xlIy&;)|G@zMZeV!js|m#3ugv^aFf<j3<=&R
z1kT<lx|{T&m~Bg-8@sj*j(eQXwSQ7Gz`N?u(>AbBXiF&#hl&B!DDRS$5#0y?{0q1n
z79ICvLGm;!NZL(A^eq-f48x#gwEjUFMy90?k}JJaq*q+aQzWIo@1d=1dn497^SbVI
zjmNAhrjuUJtJ*chZ_C_P@CQ`56?mMeTbq>zFeR&Rb5K&iduLp7poz*`Zk>rwN!x#d
zA#%YsdouP}QR%STJb3+y{GKj?iFs0j7+4=|uTL(P5?%>dG&p%<>owD7rKie4*&IA-
z-5J24JrWSE%ytXothO=?Lsotxeaqrt2x(@i!^+B~PwKz7G1S0>F%nW@r6^cWfrq8*
zLX!yX#v8}((gU3=BSA+aEA>F3hDtI#Hs-4QP}x$+ztTK6t!gWurK&lCW!cU%Pe6vp
z<Vi^_ci&3su2b)dG@9Lal|HSe&65`lDA$i`q@E*S-_Bu5DIJxJwoLRMvhZ{0^!&7?
zsbzEr^OQ{UmYC+>?^R@ZT{zoMz|#VUCjx?V#-^>rnyfF`^+M(_PNL@rQ_>s6^wV~0
zL+?xxfH`DodhV;FKwc+1=+0-gyZ@#xau0t|bltv3&8drUf8qMwhCR|XH5BR1n66;L
zg9Tt1?@FFx;Bg0f$jq!<GZgfnEBvFEJ*^us<_xZ3yKQCj(yl#2FzfxRbHR9E5A?+C
zJol)>tv++coL4MmvpwU`p<l)?1w-ssAU2CvBn&`!QfWSnxo0)390sd_Lxy^OsZqIf
zDy@yHYgA=!|IBUEFh$0~Juj^#G$4Aymk6-ikCpq#y@WhUPeL$GwZDEIKlFTW?MpWd
zY*tIGM0v!+*;$W>V=Lcm{7XG=dK3z}wRW+Z5WPY{IRv9r*l(np5?#;Z`4OnuB~)hs
z(>%hWBR?il0tF0)2BK0Laudjb0qN^WL!NOj86<!6clY77)4eBMy9uOEH<X=jo012E
zJ0JF9CG~uKg*P+l7bx!6LXkgyGPGTj$9VZ7E&CJas?Zbx(6W%zzMy0Dw}llug}{Y6
zawXD>>_LB{(5ybJg|+FS@@%(+OW_P5MgiG(`8C-?qOSZLU^}COeuw?s&;Iapv-0nI
zI;$%d)`VMjtI=4+Ak4N%D9j?jS8Mi{u|~R99)qSF!PXsU>A=%&zsD<dwIFSCA6>5!
z@)`0Jx?YE;s@gon9?!0WBiFr2${}hxeIdC-K*7F&oPH1Ujqsz(7eRQxc`{Xc%iIa?
z8ls1n&bNM6Y#{|!0p?FZ?A{7^NqJ&@oTA(3IpwsU@wq|6RB+yhm8{qiUjGrWFg^*s
zxo}By<=VS#i8uR?71`u;QJ><uO|@AFEhwfArfX}Jn8ZgWW*s@*UaHj^+^4n{>+z;l
zr!&y1+$XP=K}sqGtnws$L&D~hldVf2LNa(29t)2657j*N;MI+0OFp|CIVrr<BV)LF
zkjt%anG-)8s%W(y+8An1tR3u4^yS0}Fgg`f9UpkOixQ2IDN<XYMunC&@1M(cuGR56
zcwT!1r!?wJ^Ww%2;>d`7kTf)UtGWBB%Xdr`#Alyzv)-Px`t#}oVNt<B2pNIkrI|R@
zO)f?nIX>yfsCHsirUM!2O<UtE-jvIr=J02)9bYen^^=JEG>SLhdI(0B5Ci27PZKkl
zi=5+!*>zDx?3DlZ>d=uli22-%_a!E~HS%a#dDK+xllb>#H={f64GrgnbEFmn7t%Ix
zZVAzYEB8O+;?=*^u@4nOfFBn`W&UHH)HRaUhR8VW$3#iQt2D;+dv6G9?^@6QB{te+
zMs}!>>ha2(JkggRmNyptn|A6Ly5tT`HG1htZesG7I7cHC$EoZ5v@$zre(E6?{Uz~c
z^Zki-#@xk<zmezzpBDv4F5R^sUQ2%HoT!Z8q*b&Z8q3Wt_UxrR;mynRHggvYR)ikW
zF)=<n&rM=KF;HR~+P$S{I=nf+Y`1d|*V}GqGn)5N3YY#&4N%hFEw~KgS9u}6h@G5r
z++)_?UFN%F&)gB&LUln+B9CMKw!=g`!BU`M!9U%5+OfRUh&OXd9>x$BN&f3G$45bV
zCi_&6(vvTUB_)-Krr|%luP4{Hr>G|~zB0vSSz~>XPc!V{{=&{Ek*Yr~z-zn=nlP1p
z;;nR{PQIYQ3W%(M1N>gR#wY=Nnleh9FHCrD0_T6|)snDLoJPo>i+La|beIL_@&hQE
zdmI-ZmamN2xjHm~yG=_W4KMT_ZG6KDmCt|>KMOK2h#Dy{@L@2-&-*#SCN43M*9uS6
z8pTj%>4>?b5p%;wBYkTFy<SX|vo9j9iXf#~=DS=<P^NsqYpCyCYIwhOao4|h^K(g*
zUIL7>m_6;vvmA%p@k=SMBkfTjS1GKh23AC?VQGwEbMfil(kLgfGwSFU`Y*i)LqNft
zMUdxYuHx?hav6HC$*gK&H8J~Nuq>a{rkPm`!Gx|&xe_n102uyN&v$>_+IlXIecOFs
zI7Y!hho%PaXb{szshq_M)id1ef^_Bt^A2CjY8&Jow(KR;tFiLx;h&>J8T60efC&#$
zhgl?{4wvL9N$6FX(8xWEyG2sbVElDp7h~?-;(Uzl4n;+&3(*NCFEOj=$`AZ29Gp&o
zQTnd8r;k3NkrhpocKt86+c-+~;NQwH>V}Sm-@vMD<gLTeH3UEV=K~bGn5~Jkn|fg4
z00=K;_1Y9kRB7{sKCA+bk%!*RJ*ukmL<$_Y#;>tPRuvFcN@H}Fa>Fd~0c9R!Nw6xy
z50Md#nK_wzH<n797ZUjvKXN;f&PxV;18^4iWg0xCup7l<$}5jXt)vwXht-YW^c;nk
zUPHMIO6l8e)S;pGyYl|$*iVVEfPaN0i&JQ|$uF+7U+w>#V`YlgJsnlocUe6@B-d@M
z|M*Pj@ZC2t)>oYCT+mnBQG9k<-{^hz<FR{fEXp6D(kh9yb#m|l-db3LnXd%AT;EWQ
zQOU5^)5-}C5Rr`RvT^)FE3zxgsw!WlM<_$$5(EotC)`z2-W=zl%1jsBP$#6n@yUST
z`$#ZeVu1P6@7mgP4cSHar3lxJUDj|i?pU@wXjx4iCTStvyLl98Oe~FyEvHNvFA-AU
z>H2Ip<7l}sz9(Nd&TkHIgsob>x?qRGpDz{pW(Es-T-<fyu~q><-_WxOeX>i$WZ6Pn
zG_)(Z<LmqWty(m@m|Q#IkfHT&aupKbN8LLF4y4uE)Y9RI-gpRh<XKXhFjw@5Mw6(r
zrLW9!4`I@6mt)cLoF$}G^9t89+p|Q~e>JG-=;{-F$(MgIN!=w!7%gJEjdnZp{LPz<
z&>6JllaMSu>+&iJatv-?2s+UC4(gnnw=ByTQ(a)R5KN$YSPmh?{Vz!D$0!sa|F5Eb
z&plQzJ8B#{Q-Xu}Ys2O9($vS^*2h7{&f5W#0b(LzVnQO~LLyRzq9QU+pUH?w35bZu
mh=^3g#jXB-4ctBL-#7;T?+xasMZuT`fci^q<(e0-BmW0PcTm^>

literal 0
HcmV?d00001

diff --git a/assets/images/country/az.jpg b/assets/images/country/az.jpg
new file mode 100644
index 0000000000000000000000000000000000000000..1864152ae464a319a2e0faa38a4eab4a7d495afb
GIT binary patch
literal 5660
zcmbW42Ut_fwt#1+CxjA0uc0^Tz4zXmC@KOWLMQ=3$ATgUR74RGsUk(CC}05uK@sdA
zNU?yRC?cYWs34*OZ%5Bj?|J9m_rAL_nf=e2HJLSQ*8W(mK3aWFTxV}-x!KLb)yCe*
z8bA;LL^~%sBND*{Km;R}>0xU@S-0Mog6#zefCm_$4nP1kCd%2<#tXn=Z*575fsI)F
zOFlgS@Gk){sBGs(q5RVSzlcPQV#Wdhxxv<&L9`eu%xN%(C&Wgv^m8!t1ctE~fnqTe
zb`WL(76<>}HQ#N1uo;VkA{ari4a?`KpokzAUxRs1d>jpCq!Y~P@pM`O%tJ6shsQ<G
zVg3v=PXsL>1^^V1rH`diLts{enaK3=u!PwN030#+HxB%bV`+)7p8!}!MkO)n!6C5}
zd8z_MU0+|1Vn<5|r^Uu9y9H3g0+>M*%gBhR07eo3KhDfr1-MzUrNBYfQP<beQPxm_
z!~awM<K$1P{|v0V{bBLZ{rjCkd_BK(zt;ZJMV14gw*bc``<E`T0D$H{01z1YrIS7m
z0B0HiO?|(ehmVynA+fPh2CAwF2?;868dZfA(4X>u8vL~U_wd_(Dy;o}#*Sh|+Y%5L
z9!p^bl^Piy8ONl=L<LZ36y?7s@qfMWH@ANCV~q!G3yn!*z+0__vy9FNhOe6uM31FM
zGAMM$zq{f8a@lV_u<%D-!$7WF0X&;k09PLmK)&q(C^8#BZafChKtJ!z3BMMw-aH@i
zsULX{Gd%yj|CbJN5FR38=)n}0+S0>|LXBg_vlxCSSREP=04Lx9f<O#N0ePSdG=MHJ
z1ZKb*H~?4R1=a&UKm{Qn0x&@W*amiibdU+M!4XghN<k&426f;ZXa;TID!2i<!98#v
zJO<-n61)L(;1l=?K@b*Vhscm1Bo4_yN{|Mm2bn<DkQ3wqt%v-fV2A<5LEE6+P$rZE
z6+&fDHFOqgfv!Tgp?+u>dIn8HAD}M?B!Y<GL5Lz`5vmA1ggL?y;f2_Q2u4IBk`ZZ$
z1BiS?IpQ>;32_zCjku2(N4!BSAOVsM$%m9cDkJrfmPl8mFLDc#iQIwQhs;BkBkPc@
z$eYMP<T!E$xrD-?$S4X*8D)sFLwTd9sA$v<)P7VUstVPFx`rA=Jwwf*R?zHd5wsH8
z0Bw(6hYm(3pwrQL=#%J1^mX)o^d$Nd27}?l$YFFbc9`{;P|Q}$eoP6b9@By8$4p=r
zuvn}hRtam2b;Sl?W3lPj0_<t*73=_Z68jm)h7-qW;B0WdI0h~imxrstUB(UIrf^^J
zTzDD00p1lKgipdB#8={5@qPG7{8s{rAV)AJco9Mgy9oJ&I>L3rDB&X;8=EAXKASrm
zooy#uK3fCZEw*QDOGIv>BGHn#kr+ojKs-h4APy5hva_?xvYWB{vd6L?V6SHHVt>N^
znS;!s!eP%5#F4^L#L>htz%k2-=ak_z=k()D=FH<f&)LU0!-eOP<+9`o;M&1e#MQ#}
zkZXZNCaIHLNfD&|q#Dv~(kpH(w=B0ccMx|PcLjGB_XHV9mLgk{spQ?{O7eB`BoBs1
zj>n!SlqZwt3{Nl594|Mo7Vlc#MBXCacHVJ5B%dswJzqHALB4Z*5BR?Di}IWE)A;xD
z*YOYVFA4|?m<iAX_6gJr+!y#FND;Ia3==#g*ep0Egc4E|au-SvIwo{oXhxVv*ie`%
zyifR?@Q4UPL{Y>;WUEMpNRP;ZsF<j&Xq0GyXqV`W7@wG#Sg2U8*k!S4ak99HI9)tf
z{EGN%3NOW+5>CmdT%*iMh)CE;#7UG%^h$h{l#}$9OqHyc9FrnQ=}B#o%9ZMrnv)in
zc9z~IT`N5zgO|~h36VJ}b5mwfR!-JOHbb^q_LZD~oV{GKT&>)wJiEN9e6)PI{Ez}h
zK~Et}p+w=HB0^DHF+{OQu}=x1q@zSvDpBfRgI=S*hOwr6%|m6Pvbl1+a;@?+6+RUw
zl~k2xm04A3RbSOZsy9_v)U?&Y)hg8<t8=S6sHdv8s(;W>)Szk<X$)zyYuae0XkOHO
zucf3#(>kX0NSmzftev6VslBYDtHac()0x(l*7esd)_thQqvxi#U+<PaTHiuHMZZmd
z$w0>-*5I7MJ40o|FvA+dS4MJ1G^0wR31dm)0OK;_aTAJ(zsYfvaZ?G?0Ml~Q=Vnr7
zL1rh-rpy)0L(NZ{&swNiFfAG_7A*}dw_A2tA+2n!_F45>b6a~`7g|5Dk+cc6skNE2
z)wbPg+hK>cbF@2T_t0L{o@!rhKj)z9u-)OBBhk^*vC#3klcE#Tsnr?b?BIOZdDKP5
zh2hfd3S8}754(=J$+<<lU2?~`ySW#+zw}V|*yeH5lkB<Kv&Qq2mxb3sugBi<-f`ZY
zYdP0$TwA?%(Z|Xs$7g(<>bmXgy4MS>r?0>0i}hXWd(wAdgY||Z8zwhuZ%p6#V3XXY
z#7(#Tg#5z&+Bb7<4%mF&AMNksU*rERz%`&eU?I>xusCpzYDqmxeG_CBlp8cnGp6Ox
zrnVSw$=UKM*f{ub@N|f2NM6Vc-I88Ne;;ZWS{k|-<{EY?Y&F~`ygmXK;UCe$;AVs|
zu0@JPCPwy0DMh76jYk_qABmo0Ix<hjKrx$QF2?e}#Z*t6eB2*#&*Dwui{d{gtW7wd
zNJ?ZR_9Q7L?M<3Wwn;v*6}6SRwR4-qwq4tvZ8zUuwgcJ`xT7;gDkUvta;NRis$GO#
zVY}|8s-@<n&hPfw-I^wvwli(w58FR#(>c<a=?^muGfMZM_R#nA?$z8|uy<u&(7rpF
zYMFVN-}Y1Y-^o(X%FkLou;oDSL7jugvN73=><5QT4^`!ma*}f<4m%%i%BAG)%bh>6
z`N-`&t-R8sgrjjs$Mc=?FBV7_WEXrZ3@N-{WKmRKEK<C;c(Ej?WZ;<DvAR;x(#+B?
z$LYr(mD!dxmCKgrRbVROD_&Nvt-N_c??m-Up_7>>mrpTHjaPY8U8~luuC5WOIarIR
zjjNqLz47$DGgfCV)+yJO)$`S7Hh_k>hSz8P&ptTkc&_uj-ub!<G8c*)$&LG(pr)jz
zx#p1O@r&y(_P02+bha9{HeOP>bgE6Ft*D*1{orN7<+RJISCX$RbVPN`Tn)ZD(Yd+v
zao4)8p=<8fdapZPzjedrM%PXAn^$fb-)g&UaJ%J>-ks)do$jU{?ViTF+IJg!b$Xln
zbo(ye)4$i+Z`6Nzz;xj1pw-}wA^V~3`!4tUA9z1_^l;<D@kc?AUJZv2zaNPo`TBV0
zD0+0?7}r?d6Okw7PZgflkL!%LKeKw)^W5|K;|c1-n-?)JzD=gRWPh1AB|cUCO5;`A
zw9WLr*Bf3>zKMGCbte5S>22|>{OpByX776D*3C`6XTD$ku>Ygr$5ZoK^PLNB3r{{p
zeEPb$@3Y|NswKUpn_qmsOnpuGhW(bmtgzg=;<z%p8nL>%ItwJsgCYZIAjk}^1t28g
zLL!hDR$cIytUd;50P$0hFd<QJk3^wSEJ0(?-vxugVsTh329GBY@Oa|C3WP)=(I_+?
zgTb>C@C0^F4p=xjzZ?DeApRKr>$;z#)lNXd0ZR~sgh&8Ef{-L=^%@w0D;@+AE-(Ia
z7A|#=C@c<x#=|-U{I~zN83;ZY7KOv3x!`}G&?p=hApcqhPoXhb5*a0+Cc!Pm%g2x7
zqNrPF@>sc<<4JIxghXQTI0*g295zM)5;|uPbBLR)X<4Byq3(Xxg4wy7m!f7aso@cW
z4WM@M$l$mEgg{{7@F1{%E`%LdmoPuXJ%B`&^*^i7rnm=0@6u8`E2)7d^P0K6w_xt(
zSsejH_(TX265bfhm3$m{{qi_WoB7M>_?<AQo>{SJ84fc;XchQ!1LB@zanHm9Ywbjh
z4KQ<;PuzW!P+~LOw$OGD<8VaT*KAq1uWJc;eR{iSk!}CFPj7h*6Ol5`+4D~t*q)aJ
z94`KNKzXWr!#qIB2wV0n)v_u=D0$(}=LaWNiHSZR2|I;@5CD#VmE#(VYkzBv##$*O
zE^0Bw{!@Bad!u(3Phk1tQjZ_b74-Z~rGJAXCQa<A)G3FhrqUX%E@hn&#a9i^6{_AU
zMO}fU!3dptp$}t5D#!R;*-q_t5vJ?D)i~hC8vHTXIsGhlt~KeK?RQ6zEJx@kn(59b
zbaF>Le}6Q_`!4i<^=VE{uRR)?P8%sJh_BkRsYalrb;wfXKC!#eQsb>#&m}L-KL_vK
zW`YNARP-t-The^vuFdu1t|@wSb(OCR*<C8vUg|0|jZN8??m(I`3KjH{UbFE=&tYX<
z)vmT<^Y21^EDdv7N^WoLeNkuh&d)pXP6An?C57XitY^n1SQpIn(QHvF7(LQ6>+mw3
zmdSFA^<CQ?CzNGV;a)Wqstv=L((h-2SZ7Ln|J<lO*{@yI?`XZ_!xL`?7N(Qu|5O|_
zx%Bj??b5NEC%!&0RxM86tT%r-dV1UX^i8zH`8Jp)29|D~_;}E9O6+K_vFftVQ{98~
z3+zv$cug7;{KiZQXh|Hki|Xpm8pXGzuYW7eTD&{467HI<&#ZnJN>}#?JvCe(!#sk&
zzDV+Eh&xx2WGehREYqi5`+CXumLIyE=W5`FS)m5&6H9ei(W3Xue@*=`DABpTY<orJ
z;78-7*p!0Fv6nMrMd#xgcZV<OZed|u^p7k;U`)Y^(&)LtmaTcd398I)m&w`n^wIWi
zWy4(4*WDF2Q}^80_=m}(Ewoe2#WfdZXGZq}lJN>iTKt??KANwcRql0ob2fLKthNiV
zDk!zT)XRn9MB7mo1@|m|ljK~4IMoGaOif-e$ISOiT_Xz|JoJ9vMr-$^)yrUKKse=l
z*-FZrdReWsG&HbR@n^&EMf+@y>#S;?a+$OjO9e@|>P)@AwN)VhBOzI5D*R1KLcY0r
zlRih-stUatIpC+=-zd@+RuQV7_|RsE`MxfzYI0(euzUB7R-KBYS+W1yY{+!WknM8f
zy_p?#ZdgOL(Qb@cr_77BLW*auAMfY6n=%!nsV%tFp{Lb;m$AWFS=^r9PO#$&+i`D1
zGN82ZWy7Acbus7h?8<aO+Ka<%9eGcr31&N$7B2J&76fIBm<+~tjA=yek(89WdHz)f
zRn9X{ax|l8uDTxheL#Vf?p7r^&+PFX*&<5R4(P6Am0-dik~zMh&}aL4|7De!;}cvU
z%>LpXResZ1wXkhPl|9=R5%jj_1Corfu)WI$CNG<(+sQ&(P4<a5heh1J(Hh@0S`1e{
ze__bkRgm?7?+^lii?UnI`ir?sU;nFBpi~)iQbUuuZt&H{*GAHc(5B#tg?F-ytsjmp
zCbjfEq8RbJJa~LKEB0+fi{8V(qu=tS4P!>daNNCi$ko(_{_|(0_Q%Tx!T05+mGMID
zQ^rZ{^gHUOb=<Q8&g~Cl&!w&luMp~@2|N&%ztJ#k^V_7WL(;U&0<oo4j*yU1|0L<M
zfamh#l&Y<4^DFWb5i_cBA`$I>%vNMIH?$8$H+|x7-OC=`whGc7iodlLjttmZ^^Zme
zbe?oBx|?o@R91a-<?-h-#!~BY>b;uoHG|lIrpvXN#T5O0HG4$J*5$UGmEFZj&T|qj
z5+5BDubfVKx!*Wr6>Rcv6MN>nq3~m<r>@Iu#)f>4sH9f=z>tn{8HN3x@=3vaSN!D#
zopjUbjY6$qM~LQ|{QDcVd4{42yDJ;bb<!k*&{}c|-l(0Z0fh`b3(k!95u)2n{j5<U
z1{H>Pm2z>D8mF^WvT+4c1)4m=8HaYFWFgbw-nq`Pk8xiGnz8qb4;A%nwKuzfKEkEo
zo#5hbjc&kw>diT&pB#hIe?iJ@I3N{LgHg7IvucuHpgX@vD6yIK(EA`lbU##Ss?c#=
z%uV35r+SH=*NNx+_`?qb8X{IKwe}R&$X8@oQCg!gZq+2M;QaN)A2|Y&vZjZaZuytP
zpK9c9$s)z(j7X-wh?=g(sY;hw+0~Sl=2P6k-A~)z5fx2N_T|2Ot2FqTy7&BrGd<Bd
z@kd$?$o392s|~+Vd`^6#>6LjtF}3z&jl)TQbsnclJEA8~2VB*t3DDA4fxoBerX5d%
zT_7d7#0LiwdOh+%Fx0OI<g!tHYo5Kubr>hNBXY*pj8m=4&nxTi4ixANP_(0rmfexM
zBTE+8AuI4a{H;=qh;zva#@`)KSM?08D;=tT{5im7ZsBX6Zr5K4WpshrE9h!(lJZh#
a!>!>+DOy`r-iLp};`!41M|JF0hyMqQlO6&9

literal 0
HcmV?d00001

diff --git a/configs/GoogleService-Info.plist b/configs/GoogleService-Info.plist
new file mode 100644
index 0000000..fa3cd4b
--- /dev/null
+++ b/configs/GoogleService-Info.plist
@@ -0,0 +1,38 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
+<plist version="1.0">
+<dict>
+	<key>CLIENT_ID</key>
+	<string>412823237422-pf5dr3f75n6r201u24ocioin54u3cseq.apps.googleusercontent.com</string>
+	<key>REVERSED_CLIENT_ID</key>
+	<string>com.googleusercontent.apps.412823237422-pf5dr3f75n6r201u24ocioin54u3cseq</string>
+	<key>ANDROID_CLIENT_ID</key>
+	<string>412823237422-3d7l4tv9d524qds81062g6vfr588u9rg.apps.googleusercontent.com</string>
+	<key>API_KEY</key>
+	<string>AIzaSyA2BWeKRw-D7zHLnvVVoi6ahOqyucoa9s0</string>
+	<key>GCM_SENDER_ID</key>
+	<string>412823237422</string>
+	<key>PLIST_VERSION</key>
+	<string>1</string>
+	<key>BUNDLE_ID</key>
+	<string>com.inspireui.mstore.flutter</string>
+	<key>PROJECT_ID</key>
+	<string>fluxstore-inspireui</string>
+	<key>STORAGE_BUCKET</key>
+	<string>fluxstore-inspireui.appspot.com</string>
+	<key>IS_ADS_ENABLED</key>
+	<false></false>
+	<key>IS_ANALYTICS_ENABLED</key>
+	<false></false>
+	<key>IS_APPINVITE_ENABLED</key>
+	<true></true>
+	<key>IS_GCM_ENABLED</key>
+	<true></true>
+	<key>IS_SIGNIN_ENABLED</key>
+	<true></true>
+	<key>GOOGLE_APP_ID</key>
+	<string>1:412823237422:ios:8947f503f8cb2000fb40bf</string>
+	<key>DATABASE_URL</key>
+	<string>https://fluxstore-inspireui.firebaseio.com</string>
+</dict>
+</plist>
\ No newline at end of file
diff --git a/configs/customized/assets/icons/payment/apple-pay-mark.svg b/configs/customized/assets/icons/payment/apple-pay-mark.svg
new file mode 100755
index 0000000..0c6ecaf
--- /dev/null
+++ b/configs/customized/assets/icons/payment/apple-pay-mark.svg
@@ -0,0 +1,84 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- Generator: Adobe Illustrator 21.1.0, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
+<svg version="1.1" id="Artwork" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
+	 width="165.52107px" height="105.9651px" viewBox="0 0 165.52107 105.9651" enable-background="new 0 0 165.52107 105.9651"
+	 xml:space="preserve">
+<g>
+	<path id="XMLID_4_" d="M150.69807,0H14.82318c-0.5659,0-1.1328,0-1.69769,0.0033c-0.47751,0.0034-0.95391,0.0087-1.43031,0.0217
+		c-1.039,0.0281-2.0869,0.0894-3.1129,0.2738c-1.0424,0.1876-2.0124,0.4936-2.9587,0.9754
+		c-0.9303,0.4731-1.782,1.0919-2.52009,1.8303c-0.73841,0.7384-1.35721,1.5887-1.83021,2.52
+		c-0.4819,0.9463-0.7881,1.9166-0.9744,2.9598c-0.18539,1.0263-0.2471,2.074-0.2751,3.1119
+		c-0.0128,0.4764-0.01829,0.9528-0.0214,1.4291c-0.0033,0.5661-0.0022,1.1318-0.0022,1.6989V91.142
+		c0,0.5671-0.0011,1.13181,0.0022,1.69901c0.00311,0.4763,0.0086,0.9527,0.0214,1.4291
+		c0.028,1.03699,0.08971,2.08469,0.2751,3.11069c0.1863,1.0436,0.4925,2.0135,0.9744,2.9599
+		c0.473,0.9313,1.0918,1.7827,1.83021,2.52c0.73809,0.7396,1.58979,1.3583,2.52009,1.8302
+		c0.9463,0.4831,1.9163,0.7892,2.9587,0.9767c1.026,0.1832,2.0739,0.2456,3.1129,0.2737c0.4764,0.0108,0.9528,0.0172,1.43031,0.0194
+		c0.56489,0.0044,1.13179,0.0044,1.69769,0.0044h135.87489c0.5649,0,1.13181,0,1.69659-0.0044
+		c0.47641-0.0022,0.95282-0.0086,1.4314-0.0194c1.0368-0.0281,2.0845-0.0905,3.11301-0.2737
+		c1.041-0.1875,2.0112-0.4936,2.9576-0.9767c0.9313-0.4719,1.7805-1.0906,2.52011-1.8302c0.7372-0.7373,1.35599-1.5887,1.8302-2.52
+		c0.48299-0.9464,0.78889-1.9163,0.97429-2.9599c0.1855-1.026,0.2457-2.0737,0.2738-3.11069
+		c0.013-0.4764,0.01941-0.9528,0.02161-1.4291c0.00439-0.5672,0.00439-1.1319,0.00439-1.69901V14.8242
+		c0-0.5671,0-1.1328-0.00439-1.6989c-0.0022-0.4763-0.00861-0.9527-0.02161-1.4291c-0.02811-1.0379-0.0883-2.0856-0.2738-3.1119
+		c-0.18539-1.0432-0.4913-2.0135-0.97429-2.9598c-0.47421-0.9313-1.093-1.7816-1.8302-2.52
+		c-0.73961-0.7384-1.58881-1.3572-2.52011-1.8303c-0.9464-0.4818-1.9166-0.7878-2.9576-0.9754
+		c-1.0285-0.1844-2.0762-0.2457-3.11301-0.2738c-0.47858-0.013-0.95499-0.0183-1.4314-0.0217C151.82988,0,151.26297,0,150.69807,0
+		L150.69807,0z"/>
+	<path id="XMLID_3_" fill="#FFFFFF" d="M150.69807,3.532l1.67149,0.0032c0.4528,0.0032,0.90561,0.0081,1.36092,0.0205
+		c0.79201,0.0214,1.71849,0.0643,2.58209,0.2191c0.7507,0.1352,1.38029,0.3408,1.9845,0.6484
+		c0.5965,0.3031,1.14301,0.7003,1.62019,1.1768c0.479,0.4797,0.87671,1.0271,1.18381,1.6302
+		c0.30589,0.5995,0.51019,1.2261,0.64459,1.9823c0.1544,0.8542,0.1971,1.7832,0.21881,2.5801
+		c0.01219,0.4498,0.01819,0.8996,0.0204,1.3601c0.00429,0.5569,0.0042,1.1135,0.0042,1.6715V91.142
+		c0,0.558,0.00009,1.1136-0.0043,1.6824c-0.00211,0.4497-0.0081,0.8995-0.0204,1.3501c-0.02161,0.7957-0.0643,1.7242-0.2206,2.5885
+		c-0.13251,0.7458-0.3367,1.3725-0.64429,1.975c-0.30621,0.6016-0.70331,1.1484-1.18022,1.6251
+		c-0.47989,0.48-1.0246,0.876-1.62819,1.1819c-0.5997,0.3061-1.22821,0.51151-1.97151,0.6453
+		c-0.88109,0.157-1.84639,0.2002-2.57339,0.2199c-0.4574,0.0103-0.9126,0.01649-1.37889,0.0187
+		c-0.55571,0.0043-1.1134,0.0042-1.6692,0.0042H14.82318c-0.0074,0-0.0146,0-0.0221,0c-0.5494,0-1.0999,0-1.6593-0.0043
+		c-0.4561-0.00211-0.9112-0.0082-1.3512-0.0182c-0.7436-0.0201-1.7095-0.0632-2.5834-0.2193
+		c-0.74969-0.1348-1.3782-0.3402-1.9858-0.6503c-0.59789-0.3032-1.1422-0.6988-1.6223-1.1797
+		c-0.4764-0.4756-0.8723-1.0207-1.1784-1.6232c-0.3064-0.6019-0.5114-1.2305-0.64619-1.9852
+		c-0.15581-0.8626-0.19861-1.7874-0.22-2.5777c-0.01221-0.4525-0.01731-0.9049-0.02021-1.3547l-0.0022-1.3279l0.0001-0.3506V14.8242
+		l-0.0001-0.3506l0.0021-1.3251c0.003-0.4525,0.0081-0.9049,0.02031-1.357c0.02139-0.7911,0.06419-1.7163,0.22129-2.5861
+		c0.1336-0.7479,0.3385-1.3765,0.6465-1.9814c0.3037-0.5979,0.7003-1.1437,1.17921-1.6225
+		c0.477-0.4772,1.02309-0.8739,1.62479-1.1799c0.6011-0.3061,1.2308-0.5116,1.9805-0.6465c0.8638-0.1552,1.7909-0.198,2.5849-0.2195
+		c0.4526-0.0123,0.9052-0.0172,1.3544-0.0203l1.6771-0.0033H150.69807"/>
+	<g>
+		<g>
+			<path d="M45.1862,35.64053c1.41724-1.77266,2.37897-4.15282,2.12532-6.58506c-2.07464,0.10316-4.60634,1.36871-6.07207,3.14276
+				c-1.31607,1.5192-2.4809,3.99902-2.17723,6.3293C41.39111,38.72954,43.71785,37.36345,45.1862,35.64053"/>
+			<path d="M47.28506,38.98252c-3.38211-0.20146-6.25773,1.91951-7.87286,1.91951c-1.61602,0-4.08931-1.81799-6.76438-1.76899
+				c-3.48177,0.05114-6.71245,2.01976-8.4793,5.15079c-3.63411,6.2636-0.95904,15.55471,2.57494,20.65606
+				c1.71618,2.5238,3.78447,5.30269,6.50976,5.20287c2.57494-0.10104,3.58421-1.66732,6.71416-1.66732
+				c3.12765,0,4.03679,1.66732,6.76252,1.61681c2.82665-0.05054,4.59381-2.52506,6.30997-5.05132
+				c1.96878-2.877,2.77473-5.65498,2.82542-5.80748c-0.0507-0.05051-5.45058-2.12204-5.50065-8.33358
+				c-0.05098-5.20101,4.23951-7.6749,4.44144-7.82832C52.3832,39.4881,48.5975,39.08404,47.28506,38.98252"/>
+		</g>
+		<g>
+			<path d="M76.73385,31.94381c7.35096,0,12.4697,5.06708,12.4697,12.44437c0,7.40363-5.22407,12.49704-12.65403,12.49704h-8.13892
+				v12.94318h-5.88037v-37.8846H76.73385z M68.41059,51.9493h6.74732c5.11975,0,8.0336-2.75636,8.0336-7.53479
+				c0-4.77792-2.91385-7.50845-8.00727-7.50845h-6.77365V51.9493z"/>
+			<path d="M90.73997,61.97864c0-4.8311,3.70182-7.79761,10.26583-8.16526l7.56061-0.44614v-2.12639
+				c0-3.07185-2.07423-4.90959-5.53905-4.90959c-3.28251,0-5.33041,1.57492-5.82871,4.04313h-5.35574
+				c0.31499-4.98859,4.56777-8.66407,11.3941-8.66407c6.69466,0,10.97377,3.54432,10.97377,9.08388v19.03421h-5.43472v-4.54194
+				h-0.13065c-1.60125,3.07185-5.09341,5.01441-8.71623,5.01441C94.52078,70.30088,90.73997,66.94038,90.73997,61.97864z
+				 M108.56641,59.4846v-2.17905l-6.8,0.41981c-3.38683,0.23649-5.30306,1.73291-5.30306,4.09579
+				c0,2.41504,1.99523,3.99046,5.04075,3.99046C105.46823,65.81161,108.56641,63.08108,108.56641,59.4846z"/>
+			<path d="M119.34167,79.9889v-4.5946c0.4193,0.10483,1.36425,0.10483,1.83723,0.10483c2.6252,0,4.04313-1.10245,4.90908-3.9378
+				c0-0.05267,0.49931-1.68025,0.49931-1.70658l-9.97616-27.64562h6.14268l6.98432,22.47371h0.10432l6.98433-22.47371h5.9857
+				l-10.34483,29.06304c-2.36186,6.69517-5.0924,8.84789-10.81577,8.84789C121.17891,80.12006,119.76098,80.06739,119.34167,79.9889
+				z"/>
+		</g>
+	</g>
+</g>
+<g>
+</g>
+<g>
+</g>
+<g>
+</g>
+<g>
+</g>
+<g>
+</g>
+<g>
+</g>
+</svg>
diff --git a/configs/customized/assets/icons/payment/google-pay-mark.png b/configs/customized/assets/icons/payment/google-pay-mark.png
new file mode 100644
index 0000000000000000000000000000000000000000..77b6a6574c925d5cd2f408b78993452263e17a8a
GIT binary patch
literal 34146
zcmaI7byU^Cw>Nx10VPFB8brF0P5}XFr9(i3L&KrF6ai@@r9rykNVg!}-Q7q^_dCaX
zfA@L+c<$qJEs-^QfA{R!v-2}SZ<S=Q&`HoC5D1p+o7XB32=XBWf)x1(75t{FPOTCA
zL+mJ}<){iXada`XheE`SVIQGXvet&CP!*`5v722tR2TwzKx3|^<*22oAZP@$W-~;r
zVRN;%1=J9Tu$Zf@p^+ujk?JGV)Z9ko`9Xd2b1HLVk>{E`iX4izl29}AH}3XORd*#d
zBX>(90psUlqEy1Jf`EZF)X|X2)!NF&LC{s?`9Hpb;Ah0I*`HJWTjFRb^8CMq(o%d&
zB?+^KQt`5Juo`i2a8dCIuyOKobMtbrP;qf^aj<jnuyb;;a`Fmta0_zsQT_Ly=iqDh
z#wLO)uciO{Ti|~p&&?biZ3WrcU0ht)Twb!l>`mD@1q1}xIk?!lxLCmoRtGm5M?+Uu
z8wZ;IaCi-MFtRtdbu@?BP$4)PeuOzWiaZCB{?`_)ZU2X@jl+Md2`G%+)zFrmlZ^wh
zrT;8cRQ!K0wYL7B)eep-(ElUv|CO<Wnwu?@T?Og@bFw!A2WLWq_>`@nq&?Ko5oWIj
zgIWDYi*L<fjxYx^m@O3-CmR<PgQmHSG0eq*@gISrqM)pegQKC15mffI$aBDg&D`8r
zkc*3lmy1*2H3v5jHz%i*1iz#J_{$;1_gVnx{Uz^zXkWvOoUEZXj{l)G{y(%*|0^xR
z7OZW-mtRBe&7Gmf()KWGs(*VHH2>dak@#Qv{Wq=g|1OK<|4PdagkeXV?Emki|MM$g
zK8PRx$8N!Y{>Sp6Ho)BNfn87LOiM!`pT=chi>tZL?9QWks;Xb39n#C1*12F*prAt~
zKf%S%7D&;k;NoidXiPt9Y^fNKp)tXEzL*K{_+1f<Y^Y=WKJPs9<)Xv8yDRiJ9?Bz0
zYv*2KZb%vQeCKm7nv;`{$xx8KM@GgL?!?8#q2Ln{p~c1EPckquoiVa89zD6+eXpiw
z%zk5`sikGCs-<P7r=gL9e^>PMu3qj!WPN>;*%lQEvev6qJdv-)1h1-M`w53L;dz%<
zmX|Za%gfpD?~>_n&fhOjvM|f{s##hVzL1wM^k_|^VP#Qs$x%pt^6BNH9OO?Zq0(kk
zBq2XmR^lWsY?9K_C|}H3pl8hLW_H{4_YA;$ySgeESXtYHkRiT4<z;15nws${ru3V_
zGBSaf%WW-Ql{#LUHF|`i50fjZ;DSQlb6O2S5M<$3D1LPw`ri5xb8`*h0=2baFJHd2
z%*r*b$;!#miKR+^0P&^JLPuI`Ys;MK@8=n9Z(mRKYrIwW@Tkvpwy5`#C{u1DMt<n(
zE9PJHUR{ix-RCPEeXf_gySv}@d357GJ-zOZqhK-_1d?}?p7l1eI$krVx>^&Sl%!je
z>DOi_By<|bh(|xyGL7`mmBTH=&@$P<-a*C$3O!YnSB8<05^YAOre?GzAVDBTs~a0S
z8=HTU*7i4?yQin!;(;UqN2?ts%Y9%g&ngKDH8cs3ulcEq&K2LhF?)tbY8oN11A%-9
zo+9(`5nG%qP%qRck`Tc-F^r~bi1B^-;L#zKCHN*8k3eD&W4?LY%E}69=kMQnmEX}H
zKp-Y>^4~@_H~Tb|!YT_>DfW}d$jLOrDfu+~5R`AX<G!#Qe2a?{6`|%V-`f*%nGXpL
zwgrA4au--x$uo|gm!MH87aP65ZzG?hoX~({it=RX7nMZY#FUvmw`x?hs(y{vxy@=;
z)^!{|Gay@EU0u~vDKzOX)YnfH6A<JN2&Lq!dV(PPWNPNp*Vp4o!^vr`cG3TJrna`W
z#s<*vmseL$^5kjq703~!ow5zEVQ`G2K3U56k)g-><!svS=<(oU4e>h>%K8{&2xKco
zr+8w#RFiL}T4y}XpX0vv$;Ppr1_X&B6@MlcxMbDUr%!YI7i+YYFGNakAP`@<m8GS0
z%eT!7ii-v6@#xJ4bYI+92hgcn{LHrh#ty!qqw}^Gxsgs9tKh~+#svbo9of3DTTi9m
z<uj=lG>BRM{VirI4fc)cA5d&Z)OywV?OnBuw6s+1hfP(meDy6o2gl1Y=VC00ytJ3z
zb5q>OxWE$Z<R#+HgTun^cmIwTife^}sQRH{YGpFLBaHp}Qr*MlDyG}xAKx!!BN5xg
z#K$&L(n?=z2(~}J1pEA;vorCyuL$p1O;7*$>4TW8*S=^pRUgMK?tf=x9kA;)jWDx{
z%<pbg6{<1WJ3BwuBqFl6w||c2;lZnOwAmkSWo^|pF`+ScH?uIHbVGdR0)bG80hQx;
z_xEOwjHoa%Fr<HOl~``x4D#u;5ol!<5=!FYddbMloYd3P)3+~NTVET?i)8`N4UQP>
z1;&Q&$Bc$V5&C;1k|5=v{WnXU>$d%BtHkKdlajX#U88M&1!_ms%TjVTje)kufB(K<
zS5~&Sv!kPzk$H~^43R}QGo!DMMNUaJ1OF&ajxj$!=6lTRpdi_m14SpS?_ptBJeDMm
zl>yE7mZLcef}w>-NEF5vM<bD@G?_m(44Ul6l?!>o<WzT2^6Hu?$Mf`4Zf<Y#+?~V<
zG%88d2|m|n)AD{of%pb9Gcsm8r0(jZ|E=oi$kP71W2AA*EI2%fR+Si{$`p$~mSt!4
zVQ=Q3?>jG)+?^bJ<>RtTh(W#G@q`DT&4MG}M(3}by0OQYSu>T$dCq$}_zZJXTY{w4
zXb=boJ}=Xt^fpbVjVgZqe3NALbDH*ifsP{YMtAemKjW8<8_X{WGvaZVGM@Tfk6SJ~
z0NInn_NJz{-1Ml6`0@-Qb};zPn3Jx+0aIyOF)3YyB{@pglpD}|c{?b56s8CS(+(r$
zxp*W_fkg3SF0E^3CXs|UPr3i|=RCX2fR7)l;cy94;30>Z*w_gDZpJMqw^!DC9Yt<X
z2?z+NyB;75-!vb@v5>p0?^L36yhV>v^vK84O430^Q?)%d8GG|+FOG0(jQ|2s(3CZ2
z)Wd7Nxx^sa-n~3_WajE&Anb-ejZq}wb6<_!9&H^8d34y)ecl^)-fVYl^7Y9=Vb>+U
z_T!F;VjY#)iQ+u<Ucx+Ngp&zV|0UpXMwTM%6`+(Ra9xI<^ZqflXgSb|s(z}V8=5-~
z5(SglWzSH$?z?xS11Zf<7$yt2Qd23$vW;XcCac2uc>>1ufqs2`KJsi&t0m#lD-UO6
z%Ctwt+5aw>sCZ;Up`Giz_br+}yg4*g(l;;{pQNgTN081W^Dw9}gsfMqyoV!2$SG@p
zJPkLuJ6#SKT+67@sKwMtVw=o;dYepmFac~WAlA-iwr)IQ=kBhpGlDeflRjY8iRJ>8
zv)ECgu2Jsl>WUnH%gcN;Rp~&#vrvq|Ea^W0PHJhbqd%$QzJ*%Q_2TQUoO)edUEE`F
z@7UbHPHyTh%VFI|hlhMtcsUqE>;bRmn`n}PR*U2mI<fciT}mnN=ZX?8DoKE!*g{KU
z^SE1)nrSqpBo}dhUt~{1RB4G~mdIzxi;^Tx-QxE_YHP<gFK<>?IZa^pEpv42j?<rq
zD$Sye`MU7~E3ImP2?tBn(rHUZTZQF0MIEu7JYi>+8iQ7O@SjS{NfK`J8+n%@`A3H)
zfr|06O0wF{yB9%^6O)tWC}*lFE3^0Y>W7v-J@}pS7Q~`g6jMrN&DOI@*EkeEK7al!
zCq^NIhGrdjwx{9d=C0IULGsY`XZZ_bw}_B<w$gY>k#nFoZsQ@y&UB{GbpH4jh=`Dc
zp5DP+uWOv4jm4^WjtUCdlsJWyi$&%`dE2UV2a*R=ElEW~Wjq$kkE@TTf}&HHJ^ny7
zO1;*~GFIs1^PU6a`5>%CKw70e7ND5ae)TuDdt@X^u)@-#rmoqi83e|SOqVB1iajf|
zz0#?|UUV$HYy(yB@K3CAd*hixVI-WPH=bU@j6f1;r7nVsyGg|g)5SYEy%VOj;LlaX
zx?xG2UOT8K=*SJj7+AWiuICGl^PNh`R=vD-d6;L;&fI1nd`LJQA2Fl(D*>Hwa1s*}
zR~U{G&Qy7!t#7QW_i&c=lL-NN;3i=tjlgIM#Y?GLNNIU@yl=+xd5(@APsG~YD}{%j
z>~`UDyADD6U<fzyfTaO8U*$JpeGv=iiH*)ER4>#SYf?-qe-<X=%f|%bb<xMw)oMzC
zE1AKOkr6qJeMvMN{K8(a4_`OKaf_*slRfBv2?+_u@>gGa+!m;la)7w<@#GP5LlNs^
z?S-ScON?1&BS|`NV(vC$Zyo~g4!Mwtyf>eBFRyCID91|IdB{h};nlO2xrO!6RXg#1
z{PV#%r7(AKS=mtf=6FYkbP>bxZrAdZ>tjHA=kI@RFmW%}Y_lLCp~Si6g&`m{*=QLb
z>9XKyMB<K&q|X~yig_AbL*TXod<E(}l5D=(NIKH(b~`6~WMK$~Ah;%wR0a_dKX0x2
zxT?J=DV<`&^A8rpWS+S;DJ{<6<|<1oQ?+O^RlPmkI$9N@qn)qjTDz^XoDBep#TWZX
zK>yZen6tcs+gJcNl8*HAKOmKuEBCtQ)LIIL7?_Ku+^<IfTP3mXQcSQwc{s#8nyd0N
zM|=xVLL$FdKdN-y=BjfzPyMwYZGATeq^~?^Jf3)V0zq#0^#w%kW(x1s3hLZGet!O;
ztfN)45BJ_HW5ft*iYZYZ-70I-%Z_vmz3G_50IZ#A3Nafi5_cpd{nEIAqAl-}i=#bo
z+PtXSRQ{h)PyR3mxX{znJ0hsJq)apjbth%&oe!u}luRS9i!_QY3_H*E&=ium%*EUx
zNc!we`WJi2;GTHK#HYa`k2`XD8+a_~#!GdH=qUjU%oQD1ey_?8)bou*){)mgRSTU&
z>Rgh9EH?@%S9fVz9Pmi0q=`w1s;`HZX+$beFJ4<1Su3t~hGpZn1q9DN1@{Q@?CI=R
z``gkahTYCeH8r)Y^J`Tm{IP6@TrcmYrbd6vEGZnS7J00L{rHmiwXWNL3H)L_%yH+E
z7gA3J-8|fu*8r1O*>VbUKL(p`62FicM_yZ!jJ+r^kEZMAV5dN8YK<$_nm)M*Qtiw%
z`Z#vg#O@&^l*sADbh<sRntYB8M4&>m61|z&6Vhh;adYF@xM<+ybANNTH&c-&Xud+5
z?Dg=%Ub}&NZQ2VByQIIXYv`IRj<;AR$YEY&Zr*MM;gjN`R8@WtyK1<rEWX#%>vebh
zBk0~y!T85^19vH{XA*<RtIA`rY1-dC^%!boL^I)Ns%`>43|R{g>ww)^C-IY%9@HLL
zDSkN67ZFY4Ij(fELr|J6<fg&qe3q6tyx29Y$I_7+@AqfbD&+{05huvO#93~4a%7sO
z`n&i|;{uNE+)ShHq#|Vlp9lYdAo5LfncT~FF8j&C&Nr`_y$rst>XS(t8MsoAasiQj
zhd+|ODn`Hl<b4HgT=>)BVz#)iu;=SrmG{;Ua({kk<Fh_fX-UMUUr;i5eROh?j<e_!
zLBeP8H5#EYx=;N<_ZP>PF`z=2yf$AbGIxxY4kH24b8>F5b{fr9gYNH1!cSbj=g;R(
zZo0pjH1mXj6#h^Fco|4^RBSA3z{N|`!R=G;oyp>);X3tR!3}+rk)j7T!Rm##5oyA1
zw*&JYXIFJNRk))S-O*;h%cvP}5LccqL@`tQx>rz#fJFN0z5KJcKc#K1tE@?t5)V}{
zksA`Uo4B~QhK4h9S61<?PMj!<Sk@Y99rE6_p}J}SOYzmNvE6>^1+*6PEg`@9IuBv<
z@!{mN3aR{eT!3Dy>LWDd0UAzPO<J;5e(ALt$=GYm1Ga$ySGs@XvhvEg0uGzQm4~*C
z^MRnKlC3UDnN>{TK1!}lG5CpbC@-nuIA4F?qQBfaGK;F%7Koh@pQ}WeI|zh_e9w#;
zQPH{BbE)v!JaDhaap9|mr_R@(Ci6l^#2>oiVIS0=?=2RV&a1PsvThginW!A3iX0Z9
z0MaK`i?tz5m(HBA=%4f{r%H+&JskN8pTKyL^cR=)YFy3ka*wBW%!F0J;X>{<dd4kJ
z_R%O+oSmygB|Tx(zYk=5Wn6ujDv^=5LIy?YK$<HoiC9WO&A2Vv?`~RE6H-Va*`OWz
zJLyIv{R;cQdbT158bU<ffVic?pCTgoSPia3Dj(UD#Gh$T7$rnN#Z<-O=|qqR3;K7b
z>+fTl2#c`Eg}>^1xsfo&$_X<gxTk*BD9mOjV#!KrKA4cdwlcIVO`V_pZtp}A%^Kah
z({Lc>y5%TmQQ$8+11=k~V&dUbUXUk3APi`6DKpiU%-A#rb)Nnn*Ow?LJuxw3L<Syv
zmE=M$R?V=e%^`eB{8_`(rEfI2S5sNtt*xICcINJU5MW9LSol5!t_@dawYR6Irn;Zk
zV`nB`RZn%Ue0&Yr6O{DlnVsSD^}z9p98?t-7jGXci~flF^~<#bA-ApV-xK1*<7Htc
zCZ?4I=U4qCwd6vMd7Owc>7naofXnr$>45a&*RQs#^Hq&0<g6F=qC9y9ID_1P7!t0P
z&|PiPEaP^0IX7EkP;DdqM}zg&|4Eu9(`K)+h5`Dro*UwNT|GJ|>bQ<NAp9>SZ;3~D
zgl%2Jh@zsS@y@IKt+sl&p7#bnI^@E0+8pQxd7Ap>d`V!v5bLcC^)))`ARFRiBKdmE
zzH#iAN`3kb<)K~h=g1AAeb*<)VV&V=X6^NQlrWf1gBcPC<phIF{|Jl{LZIx*I5_*(
zKa0A!XpkE)JsWL@O|Nmt$U5rh3)BmSfJo2(o%=KX-+?TE^~Z+tzAiWovL~$$!V`kK
z**~%4IM-I+BzlX`S4(s`W(WM)!IMEQn%;00Ns{AB&KV}|UX3EFtLs#+&8e!|2KHxX
z`8dnuV0F5Ec2>^FiKdClh*#4!XDvuffj7=<ACtvnCth{q?7?-__;ZVJ*=~U@Rc0&o
z{suJv#OZ?c8e=ryeZFqhh@;kyGfsGlw7>zBx!n^RGR(<ok-7(mOKFuMI>A)zKCD(y
zXrtRl?I@_65evJyBN`bZ6pgGiHwn*Hs1}+JPa6E!F1xsYv)}As*cmCNYULPDk4y~&
z_I$@a`{TbjF#XeI@nNdG2Es!Au#4tio$jnmBX&%sTEfOQ#?A2cj8gbD6bhZ22@4N@
z?7BX#S$Tc7fB66@^=CFUbKSvABYj0p)|c5<-B>xPw1MkL9d1~FDdI-^_LU19o$gFz
z_ytBpY80-I(2+h14+;5m(n0!DX@916wS+SnE%UoX8{soD5pPe>EE1h85P&suM$c5)
z_?sfGrSCU0VlsuFi;3-(igBFU6Wno9#nPO}lyB<?#*=WXh25$yM?#FuK;G&~2$n;h
zCFmgWbkEEL4;a*R6)T3(b+(R-*l%q|(>F=_#&3;Y8r-?AMHr>HR!x^G!xA~InM%A7
zbTs2N?<9LB%(hHkKdk1(dy1!*tB^oqyVY{HxOOuI74bJYih|N0617CrB-YPKqe-RB
z0fiKRvZbr>>Mys&Y!1&PulAWSvD!d{Zk13un*s4o<^52`6llR{G|ZfwA7`)2H*e~H
zeuVfOlZ?1Hl48mc$$XPTpl*_==tBE^z2i}mu$?EIjPj?I%o2@_6vZa-!nCxa!QegF
zKci~-GBq<ZLX_s!=afkwC+^SUE>RMp9f#z7r-{)d=5goAs=ueLr8Q)FENYyVV;hUm
z-}h(04<_Dk3&Sfa)+TZyr5=1ysKZCPV`Kr@s@?rB$x+v;%d5hdd9th0HFbz%S5UjH
zb83IOEc`gZ5xqC((V_AaP}A)o5?c%mjN1Nw%AwK-+dm<Nh|;O$_v!w$UjPnyYq3b2
ztTr!{m;mXH6Ols8%r~ue6*fv^kqq@|8vGgul^^5-9jH1J5>a`UCn$PzSTdith#@mi
zI;?F`invv7?yN{q`kWwX>u4>>p@P*McucXu8~rJg6#F;4>QG{JrEFR#?viBN1V4qC
zlZB$WIb#}H_S>O3frF^}B+`<PfCln%b!C?&z?E>r?E`TvR6R}`cj?{{QCuJ@f`*wS
z4sS9Z*bKfVJ6P+RU@=yPq?jZer0c;_2=5DqDC6V|kO|qrSxe7!Dy_sb(>w?@S^uph
z<+OU_WVRR%R{rcUWKzsVy#VFYPIT_zm)O`?JM+Q*{@9H^??8NXloG9ff^>2%?^c_9
z%gsfLKhrXSPRByEeqtShJ1k_hx?<(#^aSHzU_hxx2ch#<Yg<dND4Xt6Yow#l;`Fow
zczPkthzie$Udef5d;w!H?8nkZzilicaI}bV+l)naH1Y=kVcOs<mKsQ++*V<KSF(Hm
z$jiyqRA^Q!QHA-~v6Ltw1aZwOXBTGQ$Nl}Fw~VD1u3*WFBq~4))dndQ5rwt3uI^~E
zi)l2<P9wrxT2>`WRb&sEuX(4Zrfkh4pxSZf{m)xUAL)_XB1%@EK|%B9m)Dmo1rNb;
zU-|-_Z1hGhFQ)1<tsLm|#M%Q-wXwb8#AGtI^WKdH9CG0&nluP0gkzCzuT+vWifby`
zxmbIv=*X9d*s<KsKn{iFR*|hy*baZiK#a(LAnQjHMG3|*)6Q(xIBV?=o^Hq>-K9Z|
zE9dLNQ9E<kPS)eK_3a?$Cy2E@?QQcZCbo%kZE)7!nt=C17G*+mvWj{nPS@cy5mms{
zGQ=NTt?vADCFt9uh4di24*<q?+7mqa5O&Y!b|P+9nDPFFMLU=|0|=JB_$=~GB7dCV
zxNuq=mOt=5OD-f)(9tlGmJSG((OvBb&0!K1tpUAXaBfdw?Cd0B;e+}T|5iRl@&?Tm
zs%1P`pxW`GcPY|g&jJdu5KC*Gaau8qqc5pGj)LmPd4-9#ECvV9yw%d`$}Z+x{2qjr
zgjnTE8Y@Suk-f|*lJswtV2e+)mD|0;Ci}y`W`zc63v*S?2+s<+kVo9ot3%<k-CnM;
zVblv!K3ITRrB3(W)a>l&TF|PU6T+~3^%a14WMpJ7s@ve~y)DwjOU=4)$GO<T$$~?(
z5LPx@JLitre;nPH*VbMHxKe1LnrKgLAvf4AVYpV{z5R)bMa&P;1dS<BP>r|T-PW+0
zt;hOf5iSvVS6@_q)&0gMJOlh_K}`)}3FK8;j2vxat9hVCoWC|5Zz9C!ROjM7#a@N=
zeDLQazP53M-9S)>i_D)?TFy#qBxoHVrFxBg4GoSGHcatCPUMAhl{`nR;Xt%1g0$6`
z;(|^&(Fa9Zj<2#f%X|z9_74J?|9Mf&p25j@R4kxV70S%R_YZ_ihh0cXN!{&E%-)M2
zSiEJ_Cp-T9T{e59lR<dWS`jwaa7q#3ER9JnVPjKLWB&?Pp`DPWC{Jx|(&48Y9^hD8
zo7FpLgz{cCDPBHnROF(QiGb019LF05m6Ah~QF+97q)AV&QtJ^lG8%#(r@>ziK0?<z
z-tI4rO)6*UeU+dot^fPa6n+EAzbxXk+2%&dLda?~NAZvMQy-K_2~8CRsLR1y^9tLL
zS{Z2huv**`8ECg`7Bka|w~ri=riz<;bWf>ZzUOWC4|m0*oB|a^*Br(nYVaLtIzGO5
zX<@!ZZUKR)SrVR)7Y;9T6tz27Yihz;WTd6~H-`r>2E!#>1JMnCHLP6`Fx9#z$USe(
zKUuI|7K<a^y}KvrXRmcyO-qZ~+wF$yKY$l8&+YI%@0AwMdOMrZ2EJh&4jtK)4$A^V
zDOV_z4Joy^Yzfg<p1iF)dNM1hfeyOHGZlBH@XE?|f(Q3OiY|;zwsFCOX}C7I`Mcgf
z?8s_V7$05*7>^gxYNJ#???ny!V*2ALImlP2BvDXMxUI&HV~U60cwTFc{G<tRNdRSm
zVSeXt=)*gGg}&$c%PDToYmdITxIX7~Y23OnTy~C;V@sjeGY`TQeZ(63#ee|jW~upY
zWZJ)I*5xTIPSH=+&@d<*gp0_>af;f~v4ZG>aIW6IR#?&-5xQ=gLuQTQv&AxVFbg%z
z$a3bm!j8yfX3F|u6qtY5Lc!GJI*~s55i^W6v~qtW+REdMCPeUb=n^P`tHlyORlSl}
zz{>1Y7EeF;+er8t?ggU5pB><Wnt5>8EC*Zs@mWtd|8Plvq`ZK`#8<tIajNQFLpe%W
z)onmz*pm$c3m!ILr@nHnfEUyxF2#RQj){xi{2{_!_n)QI+mDQl(t159tNxj(Na~I2
zgYr^SLt2VHT;*=#RL%aDYXHq73VnG#N7F|IhvG8*2f~p&dk?ZCEb=23&;^sV=$!8_
zc6`;`gbi8_#fOh-vSJ+&1B<Kx7n3F5yGI8m;jvCEQ|106o!FVX5ewq3_t&+!`W)z0
zR_Q04ZEuc`JU+@Q0InP?LY0ZASTRjP%)J9FlJe$~D!$DG!~)_wer0g@k8f=OO9dR0
zwmK>bmr0ZFt}y%<Oou(0<mFmq-FCZ2RF=Qp#&CMaTu|q7U$G4UFYb#}-Y>1~94luL
zP-5$A@D$#liHJA(IO&=Z`)fPFdYb*=8uBR3u*}e5Nk*4#i4l{m)ns9($jNuZlz|LJ
zD-JO~msCe`a+i}4dxrEDvDC}8b8+{M5Zqp(EBge2@l9xF&@-No&q`2Vw(V4H26$e7
z$fS+Dq5jJHS6xgfV2q|S@^f1rM6FM`xhQwkbTIL^(K`lwoLrs)e*^Npz3%Du1Yr^3
zuF+9H(5dWhn<r1fhL{9FC&92y)@E~%rLptFzqoo`npFKzR^$*g*MngXKY-?Jeyw~H
zE>S+RSW%zJ0uFPY?Y)h?>pH8Q0|Q6H_bIJ9&-H?7Vf{)S#ZQ%%?;7iz^6lDC!E}RD
zfS-R!0(1vD;mo~dxr1*=D{4JYEuQp_fx}}x*W4yRKg>5br`+7wkSn1Uv!8nV9>wI_
zTrY!9n@-O)quTo-ba%o2$96HNXPEH)u`n`|21c7FDCz8%mzOJOgwDFvpTJP@?d{cR
zo@9O1Sh*xxfkrWt(o@KHmN>&~RM)s{?HodHp~?oa!h#|C2ofaA(a}*_0_)QK17&vQ
z6c%rFjGV#~=NHh%dsG67DeDnZj&7zdnZ@i@ulhIY{ShoT1*>14b(OEuZ=IzGnOt8u
zwX)Lk#DYZoO_KMloasP{Q7=!|;$S=r3ybY1h_7t^%Bo~w#ErQ2^mNn=uDxwbHpXT%
z!@*#z2kswGqof5Pe0~KV=v;qsQOy}wSr{~o;k0Inm6lrae0FsLkSk|su&9lnIKR1K
zAOVElt8`wqOQa;+o-v0_<)24JUxI;Xi*XsIkmKR2?!CF-P)EaQodYCMPR=7da#D?N
zzI!I)(QWAZk-6||*_g|j7d^U-n3?;rMTbiiJ>R)VD1W4ntZi(Ju>bMNULI_Gwdma(
z1E&qwK!S8hMeNW2R$wORop8rG1YO~n$u?NUH}~}UdS~2_Wxs7kLGLeIbj`15mo@FU
z*8YBCq7LUWpioB9^=a?+l~aBHUIE184BWvm!UtX;PgO#PJmZOjYUjiTLoMUVPYIVC
z?Co=Ma<XMp`}kd#ASZSC!xrr$k<$)~&-HAu2Lk)H<m4Glk0!G&?Ne*q2wy=Bb-(>&
z<XNRt!p)rq7vd#FLfn6ILQGX<MY`&okn^33AtyDA&~q{@XyYl@I_!p+UUCEdd_Suw
zLAC4>Pp!^lc$oWiU6a9hor&p}nK0xTW1P8mRct{6@pb+KM9aVl%)L&tC_aGE#_%j%
z77K48S8iy=iu|S>SLo~R{y#CCw^CMFD6#j;2Dx~AEs4CV>UC+!p?Js;=^&XZC~*?h
zdLK#jC9{LGl2UjUoKr(XW2{)-^rRyH;V)()Mxzc_ruww6(S}yP7<v4;3=$a5s9!<r
z!MG$@#bJ4bHW?GbA;>bTBRlsv1!@&nS&Md2bMa*}TeKydd?vcFQN(@bAwI>lassR|
z^m1QXAwG@%%<yO(gP-{A_7^^O_uGD#8Y^XN$cHy9v+z)6bvO8#DheV|59hOyR*QH4
z(CBgciap8qbBgYp<8HF&eY!mE8dyn@&_+~#Tq+Du<esd5_OG}Kq_pFLwB#Lj)v#Fp
z?CWQ3F*SiUeM?JYH@^x6O?4DL%K!>q`^!HQZwFd0UkkD-1(XM#r*EvCOiQR}%`O@H
z78U6q(|8^4eT=Hxd<5~$C=2a{mt=*~8e3C4G<UPM(9_X{MP0SjIq$!g%YG_iwYDtc
zGX69fL_SF4EZm8dRqKRY0-O&DB2kT%>zbpfd5G8t?=l~ag}g}m{(N1!OPD~z{S{uT
zP^*xyxb=LKUmS~WI35y2`jgBAG$9EJ>qgR#&P<3(N@6y@QXrtDEHEggaG!WXuzM3`
zAMX>0_vsM(gY6$ao2T-M$dE4b-a3|JxnEp-y$ewfJnij!FjOetZYq%v7fKgwZHf12
zpP(o`Y!!NyZI~oNE^3cYj|?%6klFA`+_gS3xL-P(uMeXY`yM`+E)({)yRtXya`yp?
zmXs^n0|#4MDt6^Txq2Vo17UXd2=oy2{Pgt5;NW1U+hk9!d-=b|$JxG#Ja)imcs^)|
zbo0@t-_vc&?OssEJVeauFQB)jaVprYz*X-&oRE$nA+Bn(m`LV(qp9;b8f*e}qRE=n
z{UD{<*g=>$At5F*^3C~=%x%yhT<ISY%7x?L9(Wz%7VDRXj)92$6cR}r=caw8C@WiR
zODZdS&Z>=?CJO!A)OnjkuaqGxFQ3MC`pI#7>Kmx#+{eCd+1r0P6qUarc(Q<`WnLkT
zMLOi`?PWete=wADDyF*iH=Enyg2Ud<nRm+WH~ovD)`KRQK!~qZd0#KQRP8?YSK6~B
z&`+3^6Y+Jno=xWq3(}CErfimn9+mSGJvx9ysMB*q>ZkHbVIG$bd}j;iCvM$uyxy8R
z!UF@8NLGqzKGEfF;+t}$)V+sJ*8_Skj4lIJan^Hr)b1l+*Zf&?S1?R%p9A4ig8?!G
zi<0ZR_vI0q``z@rES3Bd@3bOOPj7EgB~eJ%)7~bQ2l95C`+Dc}dp%cE0*8rY{jc*e
z;&rO63?qpgmNG9+9`{_+_7ze5Z0(3sTM*5{w_z$}%5rq3^G|7f;#n+f2&K7c<k?0?
z{|%$7s1?ZS9ggIE>DQwYozKGgsVC~`?`BC?GzU`}VbdI?#8<#u=A4Tq%YfS3y}q>K
z#1Z}ah(1vi`cz36(uIwXhLYd0rq#L(a{$gy`jbJ^S6Nn(l<pL%!g`dX(d<Qqd45)c
z*knapoj<MinDwi;Q_?7C%9ZiE(oaujvd1l<A)dV}AM?0ZP-9;&WC1VLE=JSfS6e{v
z<W)v*{4jl5e=aDXclNw_!T3xP6^jaV3c+9@l05EH_QQ*2=+R%4i<%l&*>#%f7k3)1
zxi}oif~@AE_r4VZB+(vbARUKWOve??ib`tq>qfQ4!A{YSB*nvYR{C?!ebFcbMn?0t
z`W`ch+Qonjm{W_E@{3C(21uktQ_eH^$Dy;~Dekoq0Memz+ZF*Yn0Np=B#Qf_O=tpj
zW8RU~zWL^`q*<h+$3sUatukT=bxbBBANG@`x}QwTzxazX>h_9|(D+tC(?0c{ycTwo
zLbiD23$or7iUrE+EPDs~S<wgG+oP~9uTcv7@0ZxxW5WkZzaJe?)#D7x(e@`^GGS3n
z8NklVUG9-IY_RA_A;y8w5BbnBZ9>z88{qDhZ1(w!zbIoW^e%lkNyYtex-i|U9{mWj
z#Ku_69JLlUC8gvbMqfx+9E9H^Cqn1%_h9;rRH8(FGP3u)uscW9<?Ix{Rp>hk@72jw
zVd>j6eUa0VCeRFbYPR_ugbLA)O7#EFr*z!i4f4^*=NgFJmG-~ziS@@HztL2&8pDxX
zUzWlyZBn!mv!*@m8U~j3ZQV|1!tzbHgD7n^Pf}NoB|Doq#WHy)_3!564brhHC+5bA
zX46G)CKeXNSEiT0`BTPsQxbza_VmTLw=uMxB*Qanm%wWFH7#E$DU74ch3a~{H2ROS
zZkKb*+j9HRcb-dmJM!TN12mJ7mB!OGj9?SOyeS)g=Zo2(vY(qZS$_c<eP5z6A@DYM
zS><o5zcmVXr4UNc1{0v;RZ=<X0dvUcY=0DYrH+d2{Fr+8{BLwFC_p<b;l_o5p-+jT
zNN7TIKCS&#{Q7JoR%v~<|0&o(SYt{`O_@670TvoIMaN?xyJ4vd3!eNhE`i>Sdt#6h
zILN@qZ&kQ4&?QQ{-|vq|WxZ?-d#l!Tw+4R^N@g+;x2Kly*ZY~_sQG(M7}X!_6x@Yh
zS>q)HuLi~Vf<5Zv*$i@uimZ}900YlY_zty?>%V{5VhV-Irrw9oYpxfsT|t?I;fq`0
zv(8Jl_IgbkMawo8Q-Qd-IL%anlMB@T*#tlpMVy0TGU|nD%QJMkTTWNI+R5($LyClp
zchffpNTRGFjrlP`<rNiKsHcB2I@jb}GmSD2qzP=uQ@Y&ls@D#ClISSkTVLZ)$F~>0
zS>Fyj#HQ=+=?SI_r|fK;2YLAN8nW+hnL;1D96zFG;~xF6+|DjagLoVZ6W<_RJawwe
zqq~??+M$8)lT$bJQU`7^++lUq^`q+Wd;A^M{<Dxn?3_IL-0(S><<j@H!FU+pkhnN|
zJ5+?3lJ03*0s&NzPeeqL_B0x`OHG@2y%?J_u?_0bsz+Gtx@K09ZzR+u=+hWeq*Dnz
z)o6WFtQ?7`<D*Gl)zJ|KT3P~nB8ah!1+U5U`>w51O420&m<j~h)zzazxVq<+DU*CC
zU$9XnIk&`IXm_$Cv&Zg08q1T`>*rrwI0S&Zql=Ymuk7!deFr)NR6@e=^2p&pVcr%?
zd;1y9vs}y}yp%Zny1_0RTW-dp3b?4+X&&bqhml71!4D=3x$NPwYBUBMFut|`<6p}p
zm;HsdAQXg&hu!mK-qTQL=jQT7j?{n*1OP#P<Ql(8g8Mt7xOBsn2n8BkL)7;F&eaat
z^u30sU2q9vwqSC@daBoKKYo0w#Dws-9V|5R08==zRE~6acWcbf7&iHhUzYMDcXuKF
zesQ}*%2<pps%Qt=v-516MxUy_9B)_~V)BD=Q$#Xqf3Z^*1#zdpMMtYPP!J>9ur-Uy
zN^xqN0oEf(e=`*qmFtpw?=N6hBw_9!FsGg6pOhf$Wm9G<Mu;N(i6BNx=);F&FR~?m
z6*pE?I3}xsIGj(M0CkKTzb62CK6c-79QpiyZ>Dlc(jN2BPM-4GW#U)9@%@dp%1pf4
z%#k*axe_+4fqq{O9kStP{c?YOy}ejOF&vei0J28BL~CLkH>|C3ujvbVv40p&mymIn
zpfZ}zlxHgDm2db6)sMRj=UCx~gFF{UjPt@>b_2OtWo55Tk-k%>{>kA^Bujn^B%&a`
zJkY*1^d0Q(w`R$H2f9fGE31AKQN-2~-?ct%G&AhVb$gGI!);PN*7*G_qXKv5iDl{o
zUpIT(vdwe%-0_t!$i6J)p?z>TzR%zeq0cSd%a=a`Vx$YNufHLyQmsj8GJ#Ak_x>E6
zeA-#=MF^8yOmlC9qZCskMe6OE=3V(L1LQkpKFqA+1!(u|FN6>h%`P;jDReV-w|c+`
zp_be$)oA|yI0b&70U+WUR`C;$uTiCN+}PY)+(MT}Ku9QPoJCkfq)X<}Ln|3wA2EYn
zUu-G|7Mh<$WOmH(R_hy)LNUz4?QP<yo!PNGeey<{mopWO5|5Nw&Ih$oO``o|UaVW^
zi$n9T+#I0C3*&w=KcXRh@6FBgWkpM#F55}Hp8LV9SvoxaXL5TWrC#C#`yyX5%b^%n
z)sv~o>O`&e&*MopBQ>}vV?{yYJdgxKZEZQ<dk+nwe+5QJrP%%R?bZ6`G)i}A8zfOT
zBYz)_?Z4?`#=jOU)I3uT@QM7xSOpq*&_Xnje9_S{6gSF^O`yX;(Yae-T;{mniUJ0f
zTz!^}N-_W(uwuRV$#2ESh!k3BGmgL~$rtN9j4m!_W#jdgqvK)D1yJMiK2b2#RN-tP
zA|R?}`Nof~(kO`B&@keGYp&`dhcOeUqjDZXs~+pg#Q#>^ELwS~D(x>*enVk;1jN_g
z{(@DwI5bj6MMa|1f2hf0P+!pNEZJ&f+0@i@biwPooir&2l-eFUqxJMW80cJGT{i=Z
zE+LDehurBt1{P!KpQeTR5Cb&R!IaGzlfnIYh8nk*4Tow^^R*M8PI1%zi>dezJPi#E
zb@S2Gi!FFgLX-b`Tp|5X5v3h3O3MD`uPnNLtKnBcVm|(n1^G{ub+h;u734{KC%vs@
z$mZv%+{azI)dyMq&DPnWeG1xXM!ePD2X_xvitC!i!k+PdaX;T-j5``5qNIcYtPyh4
z=KIVHcCqW<!V7Iqg6P`i1#_b%sTX(5C+B0`Q!M3NM_oNWCTGzf2@(NPM0R$$T=`hN
zFdaFpDD~!i(#~3$_MvO}n6Z<2CKP*ApNQ=lt>7cb?_n3h9@lSm>X)M*jz{7j|FY=n
z+B93=;g}9Qzb7EalQdw{dP9>&sfa+efg;PjHf=*ONd?TD-_Hs=U4>5XR(WjfYL_gh
zY|mu>6i=l&bOn(0Th!gszB^6dQpRjf92^&T#cOid^oMcNkuzJEhM}(98O=eI;_Mpw
zZG%(bfblfLquU3NAEbOVHC3C-%Nf;1&=BiMfb$9nb5HfwuU`0YJbOw@OB+kbauqHe
zkwo>S-2r500H*WT%W`zv3?yqNM{`qEUPSkI&jg>b3&w^*p>YYcs27Pi4?Oj~o2o06
z@xKqU6yBtI#m$~1_~g2hPYXxCc5XX}YRw^|;X|jLR`w)Lc>uxDYw+~9^jIKsak{Oy
zoNU|9mQ^*A?FtU0rBIZzdQaAPbY_((bbtrYyc;vl5jJ|=?b8XCNme!@x-K7jrUDD2
zbCv9@e<Dz&vCs27RbCz&B<Nutk|>5}anVe*$m;*TJh-~UCr+mhB!YeGDO}3GYjo;l
z%PQCj89?$497x%$e^n~&<WsU&j$$MqUz%=S+CVn}<Ab8%P-bwlACZTdW`_BpVJ*2Q
z?@D$oXZn11G$_Miw89ov23U??7~u+U`ulvK&YU23FrAh)?^BI1(ETj@puzQspD6lv
ziveyCbCh;JVKes35fdVePmU)KaMzcp7bN4gl>}*#ucC7s6`G6g)syQCv8Oz}c}bd?
zcF}B*><?Rz=5nX*s+{V#n|v%QKl*NV_l`!VnlECr3vyBOyu6Q{Zil3O`^IR_Scit(
z;2C2Qt>iHA!6mnBD5?&|lJC)pn@@538AdP{%wjPqwFqgEtUuph6-rN6Q`yt0tf_EX
zUZG9oKZWj7a)h?yh~2$D=ueRMC)>FE$;fTRgrz*$+QztZMjkDEPOp@b6Emh(VvS8K
z9I3`c@JaZ;_6+UnQFqGT|FXHh9z^l2H}`yZ^tE8yBz2WVloEDk=9_J`o6_c=<osmh
z;GEYtH%F`XglejYwdx6{wRGieOhJ9decWGNJCVyL4d9Gfng(g@&;hZ7_9D!}bfaKb
z_7Uh{5R%vRl9Y^emWfH+w6?P*;_=5D(PzpJU2BJ+X{8m{8g60?Jm%WR_e4WXDJflb
zP+f$cE1-Xz_d~?}61l(4bwmI!8mAT0YoZX#defnpc-LbYMN|#9k80q<nW?^q==Pba
zY+ifYbDamjYIHxNLPJA)-)E10NXGTDcfV(4<zshml-`#}RQtz=n@p#7+E5aWjE<aJ
zKb^*j6v482njuaI)yLzaNp$gqYTja9xhpq~S+Dkj@vZcGP(O+!o(@<Y>EbcEMzsFi
z7HK}1wp7`4?<`rYEv<gW`!Jhky`x>q9ZDBB&nhPuOuJXnvY{>@K;6<y*J3%Kc_+^B
z2J^6h>C$+<vie=x;LUS#bEldTrXGoGDpD(4B%hzI-CX-LxmI7wWizD-?k>~3wb>_}
z17$*L2xJfXZ@)IB-fR1Bs#KegM}gLDJ3O|*YQ8EZ0E^;<n-Q77htcQGyEiG8Ngxua
zI{ApbZ{b>9+hP!n$g=v;0k4;O_pUt4op<1wSG=+-dnk>bU9eSnXTc|C?J*0(u}#O;
z0%W-X>CdHkblyx?8z`j7kDiqO^#Sn4l?ArKGQ)SjU{_Tb8H}KV<~ZQP?{bICs$UnX
zpY*Q$R#>acBpZ{6<tlEL6QJ9NvwJo3v{hFZsSYo?Rp(qzrMBN(ew-E%5y@;78-&-x
zYqDOC*lSt!GG{{4JoGd=GaU~?lsFyAx4+9{;=Fi4H*&+?JRv{Z=<ZlLG^khO7-X5w
z?UYnymHptUsPE~1yN~EuT=A^J%G_W5h8^8vl1htdWTIjP+5Q2RdR_3ENIo&tZ~G+|
z`r+j}xFChUhq7aELT}&bJDZH~U2A-PVv|sHN4L#JoD=v~BuZ>LU0Cm}L(#zXwZo?D
z6-g4BJO)O&w}=NBz$UD*G~^22T@nb@KRy_aNlKF6CQfj?zw@#iyWDT|h^-nrD})ig
z^Se52H)3Viz=eLeZ(50=)z_*_1~tFEi^I#AO_`4>Pg9z0zgZ^H1YmIn<xAzrSvZ?a
z&;Q8F>(ZB_!9F|NdOZEmm3W**V<vK>5>F6?fmcuFv~VTt_xtkp0N8+c#J-fwpX}RZ
zNwj#OyqK7np=6v*b)Eb!fG~LbXM#0f>evKdtKPXb_rA=51lKM^DOFTaCY%EAL3&0R
zj-dg|1?V83O8FzN4E^#mn-2(^6Xh>=t~!{KVsA8SNJ6mz4YWTi>K@eb>L<F49GLmj
z2~ZbaWElOa1X4m*J#CWYJN}13)D%>rlFScXX_dYZf6RWqnDR2dBye#E;J)w+VF&u_
zceS+Cy;x1SkpRPVdN3&?te+2En|i~0J@IKiM=|w9>Y}2qH{Rs4XDg&AygCgBE#f=V
zjk^8=lJQF9wI%)^Dz7`ky%!kxn3)(^*Yy>1!Nk|t(lUgIia0tk1^5bpJf2qD5Qm7_
zCrV^GT7_dHy(>Ts@$G*Hkgknq9Z8NyBTxXO24lb%f9!1*eoHSJ8LeVDQ%qHD|1@cm
zYc9DC(kBs;X1~tiwtAZ;ntV)QeQ_znsYd#7=XF=GI>AD|)7qio`v`x<jLX%F$C;j~
zWO(7a7Adzr4d>`yVxZC907-E5HJ#Rbbm%`Zg58QOLLG6TRQKb>G+9_{K5gB@*Nh}A
z#yoshuP?HLRDb{VbI0gNrQkMxd+8UPolWa?JnorzeOK>Z{G(%|>Ss%n%^nW7*(;x;
z!K;nEbt#7huRskp-RCx`S(7*$=H?aV$1sAcX+&=u;2YmZbZWVn%=fs-tYGiWev7E)
z`!x5Up<=fWT&AKTg%Ow8D&FsO)EMpN5&`Vd{mTqwNg2vZzeq)-m-<mj=kJy~)64+W
zrQJ7I*=pyFo6O>UiN_?{NpFPM*HJ9jLI5(8(ERfC7@kdLBvtO)z+}uA=6$E#xG-3U
z)vO{eF7EH`Joa@ND939Qj~vfZZIDO<FYTO9tt~LaF^e-2aX_X*<#LJK0d5+9)0t(X
zhld&7WRwIcA-w}QcWr(EGzg>M`=sH2n||&#)t|(ZZKEeBZ__#a>(heUF_zBXJqa7q
zg_DEXz&Lho1s+Sa(y_Y_i`)vS9H|>Vg37Ri(P<K_y&EqVfA1<V;hB>OuC}A-pWv&y
zh&xB?1kaZqhXNq6rxJX(goTMIiW?bb=v#`i%!u5OoHM9({pdb$k8gR9@6z+3t7^M*
zgs|fpLnF62QzOr{NI7>V^}@wM!YS$`ZxXl7YeVMv(F;4H_9fkSqqzz{s!bb}Kr0`<
zoq1+GJJJJP3<;4rH9VfMCMZb%p~hrB75NLOg%y>Rg@rqK6Z^W#;(WpD{VW-PJm|-S
zei_?kF?JzHlAtlK3~40aXz7(G50zfBF3c2L%1D*~(zJrth@uV}MQ95?UA9+CnGuX!
zJ+>HI1_`2-5<Fe^7#RBq*af9#X%@&E<Jd!)@K5e`tGB1W(HKvgj^EyzAN@dae|!Y`
zjE<K*<LI|m%}tH6#TpJmgc>XMi=QN=kAy!G_)YOWYpCHDa=6q$$CL!#XVG5g5s@%D
zchYCL@HAO)YX{CP5>9LkE<x;5?bY78+_-PwsBLf!5~ifZFD0lxW_%qdR#s5>QGfnp
z`)qGEYg~OGkW0hRU-8{AeO1QD4-|vo%uM+>R-b~%)3YR4SJS?8Wr4c+Q7Z~JIQf!a
z-==@U#CWhQRQA(;g08);-{GH}{<(1fy*|No1IlT!PB(Ua0wOuxl_Z$MFL?c0wOY)#
z7&JZYaI0`B!}U+tpL{;lm+Q<L6)l;k2)O7s{JO`;(~e&7yya<Y2w=n?%hgo2n9Skv
zV*heMujurhdpR3@{6}fb6N6$Vue)wx_w`fll@oe>t;aIFPG1#67)zHWQAcz7b!)sB
z8oV~K^)PUV_<ExXx4u8CbKeuJKAUn3{pE+cB-Q%$uxnsSuif}*L#W&-V|f|z9b+zJ
z)GU1kAi=kL2gRsKA83jgkxDh559prk@fidypZhrdnep!szE6Ia(%TV6GE&ivcPZNJ
zV7~>L@&s4fyyU^LqHEjL#edltYr~FL#!K`Bqd{9kpP>&xobwrC2OkON7Y$P$4))?@
zFJ*k5;tna@^eKqPicBR;!n-%xl5@A~!@&7dJDI1iSM<Rs6d=%4G8oyF?XPxg(eGIf
z!cwp)1$vwuUZhTKXj=8)D$@jDcVM6(3q#NdmH5#hRK$fDck7#JD&SpLtT#&$yzh%0
zyUJ7n!PxT}0k4x^*TzQH$$kV@!9zs}rRruqy{m7ufBtGB_)z)BjggVH*w#(nOUUu!
z>qQs}`|jNMW6a+nfcZ0ag?Et49_H55$Lnp<3)2<E8Y}OVv>Gq`4ZPlMJ1u1YJwIL-
zbh+0s&e9?&|KS?{YOc!2G@G@`J8DnpQYp=FF$eM3l!uu0NzAAtMa!l<hafgKcE#Zz
z_8z?f+@8R_u^#DFw-3-go5fn)<+Ov5d>Zf?(9Xk3_WWRUd(_m}sp(*@Q3ebvZ7m}d
znLPrIuaI8(qDlUYe8)p&jeGR~!t`aF$y6wFqEr)yUUIPD;^HlMeKt2^MDT&>hS0=N
z96Wbfxw@#bik|$av5-v@h)MB=DHffG3n7+&XzFjS0$CjUT2VXnrRMV52Ie>~*vY7B
zs4S>rK<<x6O255{hP_2!;<2>eH|?-Ofok94{1t%3A;6rjLJ)~Bvb1k$&D`AkWGU@6
zm&@I+h0NWr16#zVv}t~|MVBik#(7r1Wv};dU9H5#-k8vkkocUH=Hh6Zz98ap=)pd+
zT@&H1Ird31usv+pb(=Pso_8EG6fa`82*6!Ag~su_7+Z)seuzPq^2=~Fs~!&}yDW0f
z6tH#l_4lj4|K2MpXOXzZD~-8Y&)_h5;E`8TQ!_I7Qdg~a6u|Gv%?GrcH4D_3WRXPq
za7Jm3f2l}kYM=~n;aqHP$}3Fx$$X$aoG8)}zvU!IS1C_C6VA$!#W@78IL30+nQbCi
z!AnYjbXD8Agc7*hNYAZI=ob?HniF*tUkAZqdIl}Kva&LZRm0V$6O$mf?Ce{A`Bw1L
zFZXRuNcV#asH$d5_vNK`rv09=P4~{rG%oxoZGSiMQF$b^HVoHnn`mi$W;JR@&0Hgz
zG99yyKtkZZt8Zcmg{srtEd2NphL4Y*PQTV7Crxu$$7M$n)>=h(g+lR=_n~V#TC8*c
zCdnHk88Kz>B+A4M8}Xo2wI(~;^sO`iKD~R#xsGv=U4&1gyL&O2RIgJ^$fv9Fm=8?`
z?I>9QosXVg=I_ZN6%2L|DAXpmyt~%N8dH`covq|=u~3v>6A7|FGqz5r)eXhq(BOg?
ztY1?N=eKA$4wi$}Iy@HRa1?!o(Bv^hoc5Q?264%Ns$uHYx~i7@qx)R^)}O*>MUzm2
zSH6L08HzP5)+}}ueeRyWdV;Uc_GQ_H&x^F`XUNK^NGZJie(cX>ct|{HBqEmtK+5+-
zTyT<ot6_F#G~y?3RUhS5=79+~_07Z+F%}Wl${CP{6WBdE+_ftYOWE+L^qsY{o~}zl
zgjzoXG(<)(IMhAy=&)cOC-xa=ADV)4#mdS`Yj_`B%)`Nf6HTAuvA!%iGy4cZccyWi
zlEbGi5B@8Zu3v;O-i;nGj6^*<ka=)*N=syF8tq+Vb#mELY3X>h0<Cksg!6A|FRChN
z$Hsyx^T_#fXFTveg%#6gBoCJdM)+dF&6H+P8Qts5`6igE42MCuNzZVdRZ^qm2Wa5i
zh+nPeM|UqQlzHSFCO5T(Hv-Izt05<n%1=<dN%&T?#W+7<pkYkHEX9sd^qsUAz^#gh
zaJCp-g=!lv7kdHhN2Z6S1quFZIXnv1F?6J>R{xNXUI%!&N~%iX!p<2cnM<aFX+$s|
zugIN|avG=ov2P?}_vfhE_GH7*#TiTr4&PSq_q}_`H%+Fc{BRfpc;xcJ+UB(R>U3MN
zs;bKM8)p!NomJ@P?!ZRNraDMRWp;F4C&)nU7zF#JG@hjP?};~m7jTgQk-g)y#;v<k
zzV?vc@B)~cgdA5XYCAjgS}$JKYZ(a(&`O<kCPhWbA*RqUBp%C=p<fUDakS=*4XPXt
z(~(X_+5hBy8Ra9kGS#SpjJ>7Qs<Pg!c8&FVVseZ6=+LKWe?wbKS6AMG77e_F!*~Al
zSKvEbc*G=?D%+CYF*M;=!k5q8DkCd8I=aR-Ds1EGN&~O=wp?Hm<P7~LLgyzZm{;Is
z-c0!)7rXL&PVh*L&8zkUHLG4zl=LIRv*~YtQ+BohE_uG*i9lw+?Q4W`I(VZHM9F<h
zG4%KE))KXMh^9~lOh$BJ;s0ytD#N1ewkU`oDhNn}fG8m?A>BxKOCvQP-CY7AEiEbC
zA>AR}okMr`&~?vz&;7>_-Z^iavt#YG*LGoM!TRq5Sv=*J-j#UTL(y7@WbDXWU%Ajm
z_wfm6(Qy{^VJejyc1YV%rdGePotd4Dtct~*J~#-&dbwxrtt(E<ZpjW^ekk>!dHQqG
z-0MF~k4l!P|AJFPQc@Q&b+*wlN$AO4YSV3Jz(6A!s6R&LeEu(sYU>+gQI&dMM1cpE
zotuuHJTVPGD1CAFgv4;OG5K$ZvTK=Z34vvFpkcQ>yg-eQADn3PYs7Rr!m!)e-NT|!
z{wzm!r!8Ar8_HvQ8Z#5WKS$vSZH``o5vpl?$g?%%C6xX7-vJ(jLZ!wE#C7R9d_{a9
z#>5Od#`e4#$TTr|K_cD1xvZ%}Tm4SHD!=8wS!Ye;gOv3Ca5nsBZ%AFNM(4k$<HomW
zzOpj^ZHD!Sw#!SDKJnM^EsYl!r*@ge*2bQyuZR5iI#S^}Cj4KP?2`IUw{1a3^yUV8
z=2zx!({Gtup%)$xEIO7k-F)8eSO+bP5eqi=^UO~$x+quGC_IlxyFu%^e>6E#u~yA%
zj*r115nE%VT0VEH+xUH|bS=CtjJn1f>J5%Np&_mQe+LH2D{$x==!%Pq-er@@P>HP=
zi>%;i=U<jmA{W!<iCAw|z6%?QauOrMk}mfBD!Lfo{X^Gj>V;iJH!3ed1n89;t5nw&
zaf!!L^EJL2`3Jmc!xHJ_cqO^49B32r@YizpLxJJ95f#)Wye3Tm>11|5fRtUNlHrF;
zV|K*FveW7>Ccd6=nDgx~p6rzNq(=RbgG85R7@~csQ4lXPJ4HR7<O7VwuC+ii?+n*J
zUUHqCot%U$;~>y0N&0wSZP}n3Za=)}siLIRmd$X1j!2jNJSRZh#AH^7%XrlvHDB*N
zCH4E({(!MM+>jHLmZhZZA((-aIJffYQGigA^^s6F!N|D_L+=I;h5$!sv!5;K4Z{U3
zbBNT!IlvN{>bEq{LmNCcXct1lH@%X1x2ByB#x&@&pHtxhd-)%Fg&)`rqCg7SIN8o8
zWY>Qkr~?dt2_4y)M+(SJR%RL<WIF%kNwf(+G+Q0zK(V`!ORxy19C`Ns_^mgcdf@2r
z-qhOXp7{}Szgnx;7jxAl+7S_+AAW`hZA>kqhL8Uc<j*qMY+-4*lCg2Ji>oB2Q`_zj
z87mGHI?R>G&5%F+zFpYZr6L^RtvLDoQH!_?oy72MZibYxJ-uUL-U#_ya|`91Pv+iT
zK_8zK!3^O!c2y0i9rq0nZ%r*uk=)^xvI8pp?o*VEaoJxJ19$2s_*+Aq+}uW}Eh@F4
zXn40hA#GK3qkQ*Mdh#RC(FU%64h;h*`49JpzcbnLS0ql=8Z!N0+a?)tN^GaU1q~@1
z>nC6xsJuPufJarSKk8i0MOytet|2Lj)3R;$`kxj{(xr})rj%$vfJ)9}u&;9FsDg<J
zp0P0`dT1c{X($1I%qtt{N=%A$wP^waPHeC$9+w*o!z#l5O2J~@r~teT0oGeT1nXS2
zC48@Z#g&iozkiZOVrAQFy^BrEqt|0PAY;17i8%ZILH!a&w<cX>TzLoOPMrIO!YvW;
zN;`gd+ns@lQsZrlpG;Yb#FhtJgp@Sh7T5d6BPGz8)uE$cj{H<%kZ7{Ey~zXVO;L`k
zrW<!>SJ!CMZ-U_P@N__G8%yDFmaV=~2lVrNML!gSVn@;$12s}aFAlB7z8%feQ&<)R
zTGJjq@mUg}$R-!SFc+&W;d+@Vk9H|3k9Vj}e{iITe`-xBmpPhau>qy0!>Y?jdv&j(
z&>$Q_;Vep)9qH?tUm`6FizLN~#UzPQ^s!bzABPAwH{W~FWM>gL-B1_qEM(hL+Y(7+
z{y?V~-ZBvw&WZi21p?W}#}x{uh!UL^x!mF8%=g}RLZHq?HR)`DldA61Vt+}hQ|Bgo
z_fb`GU+Y)#8}k;7|Ipt?uf%t8u^J|EtHT2i`m5!~f&EHEhWOUP?{Y?aXxrV<*Pyy_
zL&3WJX0qmV1dE+}pRbnMqy^IKVe9%XG#fa5kcnbf^hQKq-m=y%F&Xr1-34y8tp#V(
z{;qSjv)K5~zdiQMn~&vy<_qtty*!`mLa$t(3z(>JW{M^>GRz!b)YYAbMr$g;dpL0Z
z{A%6!Vo_9VCb-1!5|#KNE;d`v{g$pGr1UL2J3DnYsfx#wg3un?R(Dh;1Sw)h%Y_e)
z>9(^ZJHkP*>pgtsb~E__vhBA+GkgEKDk#AYWOvLdV|v2db5fU)Y2Bh{@aq;(=*9nd
z-(eMNSNnr*La{hE==E995%P<GE8njdS{0`KrF*7#wPgma93~bHZZp4x=Ak^N-OPOh
zeFewEXWEU>LI{SPjZG`|<Y#!n2wp7E($YwYy=i+*LK2c1IZ2nyN3-BAX=S4P6+JP>
zOqxcM*edX1vQt5dX+W6F)&XXcZ^3SDFaskrAIL)@<n~&n5EWaP+VlJydDx5HHJ&&U
zJ0T=ypD>G)YHKJq{zGqS?3mmy%q>x@rP&kcr^HEXS&)1d-K(is_TImGZWUoZgBcUf
zW~@}f(!Wbz0V<qr)Tc@q7#NaT!<`-PTKmJs+>HXfs}*uHBJ7ez+wOkI(_?91C9Z1U
z+}+tZU{V_kTj|}42Ni|W)KZBp34xMPi%{vo?e&e)OdlrE{ar;ldJkMqU^jH9&6Y9O
zC$X!JD#$Zrq|}+o>cDcYOj#R8Tek>}rZiv#0M8*yP@kQs#8?eANCK!PLqNjAn$1=a
zK{6<4;B&bxZ?vI!_$P#}A~PuQRb^>y!D9G<X`2QV*Yjyg$G`9p%9vm2v6IYIFM+nq
zbsa9DB*^Hti|+vid93djr7-FlNATG{+NGk`;ql_QaeW^>W-ygLT<u>B;IaMTbgb7F
zXs5mZi!gj}lID=r8=V;Ym^w*@;)0JK@2*5-+z^qV#iw~q?Lw!dN~qkdud^@0WR{xV
zV0`n(kK^&~MSXObwN+LRK#I2&UBjAh>uGwINY392dBN&zs?4|KVAs@V9jCv#{ADk9
zX40D!FCc(h_-(0#q2|JCPP4hQXp2cZ4RpPE=yDXQW~wo0ElYlD`yv)suY9yrantUs
z@yz|UP>Bd&MIArn>;{fisd*P9p3s;|dU?7rar{1Y{Gnm0`bF)tb?Q~rsnm-RMO@fH
zszD!9)bz8h3j)t)3C*sg`~`oIVF%Fa^tz)KEt(J&*B+*ii_^=I?SXdYd&!tR{mQaG
zAUi!+Z(3v#Tnzxrz?kOYzjpu^mr}xzTYBl2c89Zzpj7YVwc64<qB%~N$PSbKia^Ny
zqHBX<^ckf2)2ysGEXWe-u&<WCAHJ91hPVCZSBh4oqFa8TZl;@K;_aeEQye(N$;odr
z`7QwbM)TLn(u(Y~+G_4Z<uT4OtrPF_S*z0=To5BQiz-}P?7>~l`zqKlw|b8Hd|VIb
zNh3XtXD;8xQAu3=SV$sdTPa^Fn`DXX`PTLvo%x9324+%8c0fajk+ZfJAU(jkV1&QO
z)C!Y0swK`dF%}_?31K($6bmiZ6Wzo1I9}7KO)4s|rP5*^=Yx`wjA`+m>0FMQVD7hi
zN~|pX+w_HxbgdC&9PER0{nBGb(7ZY4|A-c(_mW@LxAY!8MZU@=rkjcEypjH_Ho;Wm
zG!lWOHL4*`UMe9@X2qD%_WGJctF#Mz09ON^=+le4yvS8y1w(vn!+G<_nZs((P@@es
zSQ2}~>2MYF_+x8TRV~+hd)e3Jdm`w({2i$w2GO|JL)5*Kwk`$8Y6b4YTag!(`FBe$
zSKUuikOzA$<(4)$(v+fxO?Ou5%+1CRnzl=+n{6>Y@3gQwv&=S}6KH<ce*!0B+~e#{
zuPAiIK2z*>M_o{O5cBRD#2n)X+A99{M{~#&Xk1pZlX?+<YjFGY%Ef){`8Sj-6C)<3
zVQ(XtcNPZ+M~w|l7{tiLt|8BtDSOyn1$66fv$!Xw?Fa@27xtWTw$%Q8LjJ%!L+i`r
zgfm*#U|i1I9QR3e-6TTv%Uc19m6`i>qY}&VF#nl(W5e#nnoPsc79s+=05fCb&g^2)
z66L_UI%W9iwRb@>AD$H3_H?|voY}oZa^>)l^kD|!XnWa4dspbkQf*Lbl=1hP44b2x
z&f_8B#^f^07Fv(@H~Zdgw>9p;9RY=QpK6h-b&*}AWL5>b8{DUdsBEnO;okIhgrB8c
zr#<=hn%Ig))75zHuuWYAkVWbct<}GAF<N^Z+<rtoc5>R4RXSQmdD3X{sgyP4jb+$c
zVg1JRbco|>zk{*KlC=eNAf6}Kv|AMPdkb(-I_V+LN=eJFK}nOWb*Mj%Pz(+B+F9vR
zK;Hj2(HiL6{AW(8m;%{4YN%6{U2|=GYyBU=sRj_7<P$i_g<ZZz#r*#Ggh_9TmM(Eb
zzjpM^(I$_(S=VTUq;j%(wWpdwQKmBo&RDZ~b~*nLIRpLkXoz45+bmJZ!Q_fc_22R`
z<RtM35{?9~lEb5JOV%t<r@ZkT7Ra@a11*+Xjk~M+G7I$%UD4y9Lfu85^pfzt%Mgio
zZEKItj3eh~kHksaGuK_cOx8)8A``Z5cgAa?roYyB3q2oOUS~f~&`dlrOt;u-eC!-m
z6IvktdP3Wyj<t13As`?S&B^3`NtP8A^*VajJe87icBsgk%o4JsmX&jI%^o;73u##X
zzGIlcDZKh*O5FI&8`%X28%Qf1`Zp2i<LEZ4yucl_;2z2g=b~YX)#W}e;bdCW&Y8Hw
zQj{8Rd$FS%taj1Ool!+OyX=W-L=QO7=I*avb+x#}hEai*w9fULdeO7Z)lE%ac-gP+
z44?GDb#6#U8(Q`EZyFqf4KkzpLKSx-bp0O(Z*g{3;}qBJ9O?-B9a?qrD#M9?Fm!KF
z4E4}L_pZb5D5Rk#u^>5$H?ijEoo8kCPrH{JEj$dwo@5hmGLPO`gKSHCuA-`p`NqE7
z{8E=WEs>~tb`Ui@R%hk|Z+ihj3YUAhbdpYk0~L@i<7FOv8X<F+X8{P1NBY(+zMkAM
zt3cRln>itA(t=kbKh$~#rs+lz2IYwsE-B7zD}NWg8_mb;J@R)6G7>%@pFeVdzmg*H
zu*Cj%)LDye!0VZ-^4ux<d|jQZm?!^>kl^jWDs$QD7I%j|DLFYgZ78?vZp@b_Hn-tA
zS!-1;j@$aYG=o1UWCs4vl7#C+Z5(aUnN2RA9}}x6X$I>?mwmffgel#B6?5J1G^WIH
zGsH&6Z99CJ!OnW0qIij%v?OqTtet3oqt*9e!0VVG<x)X6_Bu=1xc8zq<p5+@Vy~Ac
zzm*(hLyQQ{ufGu1Ytjdr78Dg1n*pXbuxa+o(?$1^Mf~j|YhviKIp4AFIN-gFao_(>
zv1C;(REuR>)T8jIZ~0-yR?bm>C|IzwZeH2_2c&dIsW(4#XKtxTf&~VPE92AW`x?b7
z!o7tIFI!}{lppRrXe#PN>zeKJ1}@_0BObHE)qsgz1BcfG=?(~_W%A)$@E>-`YRNPY
z2fiYbP=a9J8Q%^qQChd1#jl8z*+z4H)%a~}KtuW;3wB{)o?_UKBX*EnCLwk#ir<3E
zFXlzIqCj|0kvr@nsMK^Kb=p)NhGpxoTT;o*KqAR0Js#mfp*GD$d-oveP+-wlcv{E#
zPM+l^hrCr;(lb#XMiT1Rki;{6F~gW*;jC`h-X}J63$xE8-p@l-S682nHG};>=Eoij
zJ??3X=wFYJu>u9%uTlY(kyRC2!ys=L<eNqy(i&#lTw56L7!QQtDGysRjjH3T2mRA!
zw1Ra146%8(pDblf`uKf_N{>N)AAhR@-^E*=JDXRy9d@Xe)w;|>@SMz=Ny)BJUqdvA
zbt`m_Pp)usY~J-x;(FU;HzAj{?)c~b;A&j<MpkO2ijVFK1_^hH-j_Y(m7s%9%4MbV
z<Qnt^(A_ny7597qz5X2sVM2>kp9my#qZ!8s2Y9GXT<oMzcc$|eR>Nem+;XH|?kZ6J
zCaOoa^ThUEC2p*aX=BakICFb@NYS}2;XO`Y#v^V#xhmoLsH%kbNalWtsIGedh;cW#
z*rQh6_u6I!kJ)|&4gcF&e}v839Agu+?AZ5%<pTjBJ(crX_U4JJJ$wkFDuN0Zy5$dB
zp3UcvB`h1M?sb=`(`P5O7!#}ZL)RWdzSDe{_KRd&D0@q~4>uECBrX1e_5?&kr`;nl
z7su&FmWMM{Np21pW54;o;5A7(aZEMx@_k6NB(AqR*95kpED|dKjp%2Hq8KNVJ)W9>
zLxVdZ<P`GicwlmJqaJg)VZu4{u97`odo}l;P}9!d?&y5U(NAUWzQU@)^8Thawv%(u
zwpZmW<yjZ69@eebL?5bC*Ub+kscytxSo;Zt%P|dRt+%Pvr+7z{Y*37yC(o&9yubf$
zQiT$cKXI+hGUOGFCRGpA8i^Bje>yKAvV}#|#AhKsfCjMDb~A?i`-z8{>Brj0YKu9>
ze%q~plnL_I%OiXlQ0cD4H1=oxn-Lqr8S-fCbX)kitZ!W-do?B+iGEgKjC!2-Z?G-M
z#NlU_##Zwr)Q~=pKEu!q(uu#;a3U)M8vGiWxe~a3WgeG*s($yLPlSAiI6D7$HK4Rs
zn{r8!sk9{R#R|Hdl_;Wd{8mtD(W$nZLQF}_--meXa7ViQMq9Q?f+fned3Aqpg#~R`
zkSAJiAC5gl@T}5oAvl~=fZQxe&$}UJ>NAt_o*5Rg7xZ)CR9BDFJW_)b91(W=ow}HI
zi^cs0uwj0Hr|=qH9mZc~V4$BSASCq6?isJx@^>a{gc5IhnEgOJWE!d3{|rs_kihHi
zcOGJus_2NPavR%5og`SG9v_g*QZBv|6{>gHRXmDwvB71-E*+t%;*pdz;0z}ckYn&}
zW{A+0OscVpKd(ItON@N~W0XTW?$Zpv!{Ll?VtvEPyBMsY<}DoUtC0S5JG{q!``gk7
zk<Tt)B6G#h-iWg6Dk*(e)%Y~faL|^YU5w8ytn4L0u$28eJ|Z7Vp_@Nf#yp;G<`+7$
zl2)dzo!mR9dQ)B}U<nllf+{M7h8x7z75pg-x5p2GzW2A0bqN}NmSo_u11p#y`l2pu
z)~W3pcXdd-_D*)e%CNUX9Vwj>-!K^&u8nIjdKNoSQqswHVZr$WJ1+|=q2hfXKJ{Xo
z<OC7~z2rbNE$45FRaQF=VZt8;MW4x40<x^Ev6<)CJMqdb2Cd!@0|Q|ubkd2pb54%7
z=|d^p2AD=-!TWowcQCYv2?T2hq(OU>gwyLZ%cvj2@7qkmm+_3WomFj{k>3RJvDI36
zMZGmDxmr|a{h9Ry3b!V|QJy7Q3)+0#`H=n^S6)4#MxVSmD9G|J(cYbV9R3?3R<9@U
zYL?%<o^T)rrH;;IsVfVuL#@&fm%`doS6fxjtojQ51qb0>KIE*U=OmDXB<VvX?JK6~
zB2z*V1t5DWAYfC_*T?vstzeK*IlrI2fLSIwtH~$F4d>+DVvnyArq>_Env%Z4#Y(I8
z2-whsSxicF=Ga<&QnHL<^iq02NOMkbpA;JG&$4KYu19)<RE?RHmE67GZN{1L4^}3K
z9<sNZsx3;XvkxS7FiB4xrZ1Pw8-O(_sLkW4*-*BPimq(_i_-sUIInNDQuu(aY%E=)
zJyb#--}41@Eo@p>@!M^Dsdn~s`(joxk5e#4ISsbD+VyH->CT`n_IB5x7QuW=`ffl9
z3dWnaa!ZJ=k?+p<r7s@l^ajI-c`OvJ^u4%(uqGAKQ}0cM3)M%l62-Qj$MO{Aytq9I
z5KtGmtRW`G93(N5iKDuDic%TU@`uTBXI?UY?gIl|rgc1HuKFXE+^rYCpnR%?x=CE_
zwvEo2yvZ=`+)~3M#5PvdrMhe@p7uC*8nB3ja{HNErGL5pp>%(=^r@-*s|{X7$w*dn
zsCdK&esaXjg7ifgvC!A%ysw2psb5HQmA2|s3jf>=EVVn&L(n;LOfG8AUqOTV`3nsA
z9o)oFfW#42Kq!G|2p&^9kXBSyoje<sVqjvzZ{cv8Bzi$|Pb-_q5*wa!h5WCHRK*d$
z*<FFd&SLB-2_tK=Bi9-2cUBGvkj{8~sLrzoXREVeoL_?baZc1))M>kCbZvcWFJyF5
z!Me&z=dPadD>b)B`vk#4rc!)@Q53G|jWNUH#iO_NFD%E4R*}NACZIkk1)Ak>r3DL~
z#7EE7xkp^BLWdSpQ`Zj;L;(_EWNi(gUK1lz{kL*;D}QxWv}F=BG=N^25Rh<npx!AN
zYvYbrN881d0KCu0&Y8<?Qi`F#tq0Yd$n*~+G~&sQxEn`v?}937+7MHLJg?R3<^d(6
zz$>eNSwYxD>ohikKjRy?n_kn}-$jL<{)klM_b$5KQZ}T5v1cu-eJOfgxs>#XPZj4T
zEh($K<5VYh8>Us$5zp;%wBXz`)g{J`n2H|<XMhxcsnRr?J3fV_0o}*7chQ7i(SsW5
zio%;-IXo|iV{(d%i|`W?6KUDPsF(!)FzPmkVoiO=6e!s+b?`Uoaw({sC4YKdnlD!a
z^G1@z5P5N6;bZkg<0CsuhCKhnPc+!Z?T=V|&fW3C-2HGKqhmo9c6K$*+e~5c<tNeP
zL$%;J|7mFT%<D<vExS^F5Lm*)z~QR}0%(T*Rjpqh6=Av!sAJ^3%XvWsvZePG6Ir7z
zj62MH=sQ(bpqYwkQ8#s!#FPuvKhvC-66pI4w@$+WtgkLLHw6eW9?DP0jI@WK@>-tf
za0};X`=B^V!gIZ677!nYeEtz?p7w>BG=$GAN7K)O)-hF96)(5r_(4h?bc#{GvMUWG
zr7SeGn#jW%{BxUdMdPm>_J&!8<|REkx@!;`+VPo+73Z8?m+His(E)JTQ)*LZ05-u%
z6l>3}1TM%oa_V)HPJ@!euzYV<Ef%*3($4PGNP{05=AzI=Mps0(m*;KI>X&PBDAVR(
zq-OvQ@Jqe;=VQ~;xnD&@Y=n9-AzGsSopxQDMGUS!5vUk+XP0NHwRjZM9mofxeN%zW
zM`y@Yf33oYM&1H{50kybFf%>l-$whz*NlBT3cJh)oHtF+<ToF;JXoSNZ*ISi1OWva
z9`z>Y(p12p2n&xTrzvNESPVg<p1Ex9?l%gLlE^fA21XrH8CF*P%uL`b-r<W!scrEY
z8bNrKQ(ajw{pN*(Mc@#^)mnUd3FF|M4R-(<X;#&W=OLux!(VfJw2PxB&}uBYE(zla
z)S~!z;>l)QbF{mztQYpkE-zn(n7Z>cd=qt!GGF=b#5~2CF{`tfvqRDqna-GFly|^H
z?=GOZ<V=38>7K@l@IcYgBH;KUjQA`^jRapl>DuEW7YB#nr_civ;N(VCj@PS7pPpQZ
z1@`^INr<cX1hL3QzWRCm7aI5A1;Jeyecv4(A}#B8LAWv+VQ@Q?YZAw}jrQp*_;Pva
zkH%kN2m)`XfUbM&=5PuFqg~d{mG7iAzGo26k@u>c(rcZ157DS<vGCS5S-TF6IM(6}
zPA&T`HBBD~$b!h|Zr0gL*_<V)Ld1F^YgAb^$?hn_PKkVm6p+-!;$V)KgfJ^X&Yd0o
z097BzXp`34&Z6+CZQKs6D;MQ~0^Hwc5BOP{LGkKNp5%GN+$ui+8-~_IQ`ENFYw^hS
z5P|HI*FKFkQ>lljvr~5opNcxD#Y`({>)L5HFjua2%J+^AAd-v;*0Y;Q6W@BuE~IdS
z*OeMw5sfX%q(d*4&&)QF998EL9fpssS!Tri$!wkg>6)69&rPP=n~O$Lt341MOWg(8
zbp@@#bIU4V?&RcRXv?A)hA`aN#LGcf-;SZAw7p7MG*EEB&2A-{bjyU7YrVa@ogt#q
zG2a?v;*=<{baC~2Uq%5JF|C>N_eo6Rd71eqgI8Sf;_Ec5(bRGyc^o7K)wca=1;xdx
zwIn6kWGtp{!Gm(P+r_D>c(OV+y^d{4S&*@}w-2!XW4%~S0`Wn!=@m|GF5`D0uPW~p
z;qRLo&wgo1TpJ^tc;5D{4&n7m!^z9d!5rfyFIgZBsMf-9U}A#9<%CxJ$o~V1T-oWv
zCkj+Vj3|q5FJEpxA=_3VjCu!_+mzAyb2M2x%pvL@xZ!cUGEkViw)zBT_5`T*D16f-
zs;jGCmHCC3N=!DsWzT)QjKk2->|5S{HbV1y^;uvpN~2^-Ql$`t4Z)d%qxU;W4f1Zj
z<=#}K#mTh8eU~h>-ZQZFCIiRWZZD*L?U<Y#*0&w`24$D{9R-hb7~68m;}i)GuCBut
zMtZv<w^BG~gWZqV<*i=Tp^5YBMYp9?t!6vb$3N_ridP`^oZl$ddCL_0N#3;mfUlC=
zmLpar{axfcB0|lP+PF+Jf5=BtC1i!N#ztOlhxI&yb?Z**y!}~5uUe<$)(4#Vnh4G?
zq*Pf^QRFa!ds<vPT$*{ct#A_4(Kcl8HZ*IuiJ=wNEo}#lH>Y`s*zdc^RLp!JSZmbl
zl#9)oBTuzbGixl@P{3@0e}v>BovPU|kv2JKGK@7=T|Gl26=~QW<BUWsvk@gKznPi)
zX__xC4vx}%o&9P`o&Q`-=QGM|1AYCsQ$$D5I&4RbT`IX9->n+UZbr>UhXe{s&#Gnn
z-FKnSdX8k>x9Ljh?r7v*k{#XsRvkTm)p8STG2cDsUW~b%OEZSz+!}Yl(^2RCRsavh
zgstp+50)s8YAMP6w)w>$oJ_;iwyxSp0%)BK^(7fX-ZQ#FF}A<n0w<kUjMfILmi5k$
z{Kh86il6{`1pu0#Qqt1-1@(!vbdQc}ZGw7#=;;}Hp?$$`_78eHI}_#?v^$Z%yL2k(
z%Hr;p=H&cfx16Pw)PhUv)hUZR6rfoyR*OW@d`V8nz4i+5BAS8DfVy;5N>p@Gp#l%k
zcg&vF^Ax4S8}xB|SY<88$@OhqG(bIQ^43N>&F>`K{_VYHvhum~rL_YJ`vG~}&QpZ*
zDGAiIH>a4e38eTikK_b!9y5glqchA`eKu*Z7F~`OE7Vt<{P(p72{j|xaSHbEu}Iah
zMydyeXt@1FcoF202@gK~sz%oqme#%cQk3^@%XI;z{$^sB;b(@s7u7}Y$B1Uow~lar
zyw)`sRoRYle}Qor@+y{ms32Jb7xc2QR=%_RaOavFow=sf)z#&9{SQ;rV!kmz42@Wr
zii(O;M3CNlW|CRZV?z~ZWSAy*JM9>xk9v6B!yD|kb<X(hJl@<uyz1O}WmOaezVwn>
ze$QSBszs9P+QwECWcUxzn?O44qn_prUTtg6&)UD3PFr<7E^WDC8G3ysjS)PyW2*V)
zKFUkCu&uEqJRB41`JpG@j{r(CxX(O;fbiP&cEQYHrw>=sOU?ShjE{@m?7LiS0=j@@
zMy&Z1?Yx}+G~;wjvVi=G+i(;w*7(4}eF`|rZ`3RC7!TXpm(0HH$Qa&<2bXpmb2)IY
zy-V@-2=nT%7s^)MAabO?pkkl+mrjZN@F0m4?+3)L%)s7%FX;l&MnqlF@ye>dEh#Ld
zGclpLkc>hg!{s{c$f8kJX40!G7}<S)*YN;kfo$<fQzfyLd0w3FGc|wP{q}+RkyK|;
z4oCOIf$pe8lL4pm?24~=zGoWh2c4-(LvR<cW48_!dWxV>PR3ywS5zFC-aeYn(lM(N
zT!jR!HcRPC(6D^Mdv<Y}$oTZ?502#)^@=bt5lihNU7s(nt>8t?$!opR>qd$PEszaU
zu2YULw5dqZxJmSin#JfwNs7u##Z;61s7F~h82wyCFs|ZqqRv#9vp(7*>+u!{gQ-yS
zz4wz#<)xI=((a2^UquEKNt$$YVh%}Ax`Z-Gn!gQ8IaYJ>5dNN$ap2$dKok~++O2^k
z^-tN7MXKUME^mY#-AkGpUOjDv;K!!Qg3!K#$8$j^N6Sw;kED%Z=V+anRwnvVct1>x
ztn|g=+SGXr&C5BeuyQ-}iO>*yZoX7rX+dceV;drJTI7*#kTaEyP0pc5+ks@b%>sjk
z)LTVCx>U1BR#A(uVQ1$F)K9OhaV#Nc)dy?_R|@52)m;flQLL;V$(iV!Pk<B}G)TQ`
z!F%}^h2_brrl;Ha=iELSE34GnnLHIjjXuxu*zz)(XljOwi&I*KN)krN>w64hn@u27
zB-muJKt33pU}4%LZKSX712)ysbSbrHe-`UdS90Veduzp1@tr_)Mv9L6g%a=#LvZ~_
z7e?(*Mq4F(QI*-HrSk1RexxZIZwg7#9xOKK6_=MOAvLNvuhda&oW>T~f_X0pt@g8*
zXNa`4jB#1Ti%o6@Ql)6cU+RK!7$SyZY%g_a5Ow>Ui6E;(0ANwK#e-kKnxCJa9;Q_-
zHMN+B)jpEXVh_3mf_a>Ei&@H~p76Geo35;-Fo|kO$B9dyzJe>ORW6OLQGcML)5<uW
zjPht~8qH^MN2+xYt)#HD#Z&8AaLz_{naXi2%vY+k=io|kI$8*1g-epA7L=68Y0Hbz
zz8BYDp{koLbH|`uYA99H_>zt2b=r~l<!d)<mZ`a;3_UI$-f9t0GxTY3cxbbZ3MlP*
z^$I4ez~N93x{i;dAhXY%-{y`2`5N}}cwl&%LrGozL>Bb4gpk8u*>dS!rE7?hB{~_q
zKMV!~PgMR*HnjG%plwC7r#aa-wysnP{n%QTprytz@WL6aINW@X^XK=^ikIN(2XWz5
z%ib4y1jK}jJ!!tcan;%G;T;IrC`46r-rAu|%^(bWG&YKX-e0=;SHtF7SCbs8?f+@y
zJ<9df9o^p|M+XETbE{Gn6c+CEi!S}tP+sBi7T(<0FWmQ3bMqk+U|;>FA3xNcZ5l#m
zx=?P(GXxjSy?P|&m&w(WyQkG~|Ib&;0aqY)c_{EJi(#lS+4B>BYemlC;d@I93yM0&
zAq;%pp@EKBxDw{O)LX{R1?8za!)N3*wdu;n@76}&2j72f0-s}QW1ukjUQH4nzV~A<
zMi#|p6a$3d2Bhqi4gZZ3um_`p#{ad8Q<!4_P{yxf{VqUHG5Z%ocB@7_Yw6TemrZ?Z
zvW<-$MG8@^7M(_lSwHxiX?4|>OOo=bypdT9pboG*pZ^{_vD3k<w0endG`M4sSgBSW
z(Y`!x<B5V^AR?|gI66?6S<eQ?0?5Lz0t|Q&%<1dz?+kFx0uTx3jzo;IU=!SL!oEpT
z1!6+xfd06s-PB|~kav_#{#z%#CC8C%T9{R-QX~bJYdo!VU-FXNbz%h}+%DNXehMv;
zw@eBcgA$#^H&h*+@s6Y5l)yoC!3+$v5dpXwg=?VQ#hq&zKbUid(DO3>A-bGp0Sr~>
z>F9V$LWeZxe3%20dg(Ddh~`jr0Y6IYvnyLHYbs}q-D<T0IP{(a3q?x~0~fQ{0Y(An
z&Wxi%+u0uZ`BemLuwPM$VxxuA5>uq`%QeZCH4L8xK4<V~JOlTfk@0=gquJ-1xw)+x
z*wZ}-^1d^F73%|%{4vGCWfRj3tKN8jW8FHtj#5ooq3=(qCJ)aRdcrGzYK=c~VT^=?
zBnfSBrAq}<39ukk;7p(;^LhIo3b?%0aDOiXg1T1*&3fWNHAfQQ=D!S;7kJoI{X^nS
zBH((kxwP`7&icl5aZ9#+6PCou1I~Npd;~DPQ*rUR&#EjJh*AnRT!wCc{K?|6h6l%%
zd26GVJwq0|hx{{xlU3Tm)!+7Zx5w+w^73j4AT(h0xL|pSH1la|31BWpu(nkg)D;vY
z>^GTySzsv)l_Y;9KK)I^)++8F7>n$*^QI&>ms-;O?&HgN<Tl!3@b;iP;?K950UJaS
zD1waUYlgCt2VTx=o8d`p4D`*$vKCo@k{$GTp#ix|a&oaWcX%YulE<bCyf@Q?%0P^r
zm}7TcS`iW5cloK^NavLgxnciVh^p>{*a~wIviK5i2dguaL6q8BPIaltMIfiX17Imm
zbNG|@fWIhiV|4WN{`^1(0MWNHuv<r<zrXZC*NXZQR7t{R8J>6mY(`OGy5y?|vt&95
z$V@!h15aPRu(^QWf-gMuwb}k@bZ~w+84XxCqh*@3)Ex2rNoRFep;;={SDb}*CZax%
z9Cx-IA$+==6sqpCTwDe}w?2X$kC15De?g+6s!FNho+*YVlKU;cVE0?%b*}{&#}Qv7
zJCwKk(NXN+39r4q?emjU*suMRK_JCxssW=-?gf_<6%`eQIvp(1X}A|_RZ#%B8i%5|
zo6R{&hqX8d<$SIrJ2BN<LzO}VGAz=IEMVKnL3|Yz8#zncXeeN_{c*?y{0MrL`w>6r
zAB!z&ihTdqCb}9PlONw`lwWX0+p%wi1|vM;fY|)c{#?WK3z|7?5VZ%(%XDY}b-}c+
zF5LbxlN&@loFgxV7Dmc6e@;KUx|z$4s-`g-i%piDJow@`X^W5}pLC;^`-<dH%IQR1
zbrcq10&hSYvVyN}x4zAMQpcW;28?r-rZ>t&ccys6PP@h*rK;l}^0dNuvUn_JG2Eo3
zCH1d9g8==lcsEs)r}jVjQt#sx8CoW$ZjD#qP7rI2*5#9`C8kpUU%?2UWZ`YvZQ5bY
z`}<d+oSn<>g@%fyK*6Zu7NSNyuN&+_r-4KAdcqY%Z<YFo7Gsl>orK_%q;;{7@@338
z?opb{qZ+Xp%qTb%;pG<>XXld*q%AS(Mit5G&YO3PkTVr3PZEZ`IJQ{)9w2b%aXdn-
zRNaez6w_<HQUn+EAJKo=to<2alW)zEkZv!v9s&OGm_F29d=cFmPR3Wx%H}XZ48#}N
zm8uec{gwb~u?B?TIDrd!mx^zF*{v5C&60SJJQw%n-3xBZ%sY6a0FIyo@N~K?3s$#t
zO^|VY82V3)8olDNRp{pMmW;wOx`GNKC(G#-hI)*(@|BD4`*-018QHxo3+IQn((Sg+
zkXpFkMPU0pUw38@WJ6=ywO-Vlpp1PZXt?{~V5#PE(LXP!%K319hekDc>lv9B*EyY|
z>2x^APHaWtSLQL7ob%sjCQumrV(XBQ5V6^`Qd`R>5){(hr)8QUUH0zR1p=rEi{3bC
z)5N6Gqu1cnbP-J*?jn4Mr0SDotef}(r26|PENkRTQv(H(&TR!`cVC7TW^Zrqa=%Tp
zOk$&%Tfa$H&hZq)7$3KF{BKdhA=9JA%jWf!6jn-zwCo-R@blpLst_%qmFByLj60~O
z!t&9J3Bj1~Q<Y`{{x31+<tOH$sAL*0t#_@3R2^GS9ruWg3=Ngv8#gqnoW)%7rxop6
zXfwcnA3c<HcAe%Zh)`B4nVd`dTc1dwCf4$-zpY{E)61QE6s8dRZ1D)PkfT#f_;d>d
zBKAhQ_tCaa>u9|iO3Jrl>e0`flvLKc5byoA&c@r7q=tJ0f5JC`>GJVVg3Q=5osrm3
zcry8?I&T=8rw;}hw~NKVOc_J;(ZX4D`2yfAaG&(k?BdPD(lapFQo@(WLl}15GGir-
zAeCHnvRUGvGielHP#V9L5Z6L+zv-?Rx_7&gf#lCs0hVBP2!3Qp1#8I%a2*0=pmXyX
z<9V|46kp!lHL^X#dGv?Z*kl~y<>@i1#S-JP@5I6Bb2hJ4qq2+tF8CmR+H{Na$u(H1
zjR*31C>T1Xu8F-|_f!F>FKb>`nMTq%&S_Ww#DBFs*#cicP_t$g+jMo^xubkh3A_9&
zDde*(J%0W<;=?7T-WZruf=4=-6f3d7&h+N^@OGT$aNbqh7=GdFI-8SsvR;>bwqIrQ
zZK-g|(=i~QEq7UUEP0-H5S{q?GU&iJw^c)Vd6bC<Z^#81=g<GdkOhST!{20ILOkeA
z=<{vy)@AbYs}}!=$rH=}XmWSLmrG@H^)^vc^FOwd8#62_EX*8-tafyJgIwlcEc`1d
zU<g>ve}=>KP|Y1kHJjOdZ2{PPI$aTAwZ&ncxtW91VzAv$Bp9UJcI?y~>NM6Wpk5&e
z^g04TxM+h53_Sub(yRR?MlB%_7br>HI#pMHy1zX?;Ql&4vs77y;aGW3p;2b%c!U%f
z@diXO%2IuYGwFPT*A93INeL^#a1mpd;L}sP8>1oKU><ilnuEESnF%!1!#O5eyLo2I
zLva$WWct2WCx=!gu*vV&>)SI=)q!tEX#LYO(3gS1pDgJd9jlzE#Rx<%`d0i`eAf{-
zd{xD6!KgqsleW(>3GgMZuup=5*qqw5`d%F&tz#}GgeS|98ZQM+0|eK3DfKhC-?J4d
zcw~wRSXaOC7;k<Q6coe|F5dQ1Huf{NK4Pt6kZ`$4Xkb*A|N4hy);Aa3D~JjM|Bqm&
zqO2^^pP@cFb-)u-jqasirMJXi{^F<{?Kre>{0*Pe>cHB743e>BW^9YV;I#$bpD(rF
z!9EsL1Fq6^3StlM<dd5F@rAbBdDsf7ZHa>T&{Cv{J$`Z38x0}jm*G&GVh8SXCpv*l
z>DC898}8oTz65jJUbnkDg`ZBzuZkwRoo|mi-p%|hwA(i%;rgRrIPJCN#m#tV0ygkw
zAM{5__^YrW)Laf-&j1H7<y94gg+6Mlos2aWb3#Da7mOVF5F&nNLfP21Tgz;n(^FMy
z{O5zA!Srkjk2g6pKeJ-Ky$-kYt^_MYh8lo4wQcYRD8#|V9|s}uC<r}1IP!QgXs&}2
zR4?^AUV8DN`!KDxN3@g8X{-5KTQGz$r*A&IxHybp6?Az7%E9+uu?+y_ZX6DIL4c^X
z>jbTN=`xZ72q3~POp)$?-nTx|b?i}5Qg=T;dc#9k)$Zu9eXg#T^Yif~cE22a-<f7W
zp_-aCE8@ZT56=pU3zc`P>z_ID9Br&%eel23gz-MPd;HC3{V?@jJR*Sh_Or#xnk=h8
zGI_}=+|Z{<j<K?s4sE^M-Yj;>whH`1xj&bCS*<}fND!p^h|lNn&zsx!Zf2_2TAtnQ
z_-(d()oZfWp5DRi`)9AB67mVJtB?O7mB4=p>tcUSo|XT>AGk-QU8m5nP*c!wa|Quc
z>2=e?pI=0eZDY7}dR!i`88_o%=*^Lf++FD9QYOgLwq3vvC`fDL*{!HAjm(~H#WpkO
z>U^q|KjNSg6}9?2{JvEnetXjV379$Oej_9moL^pJ{Oy|*c2`(>Iyuvd6+A-ELubV3
ztv~^zizF$tv!#}Fm7Ook)2wv-s6vU|k((kA^q90wPC-W%C`UHsMD^|>TF(7+UP}QQ
zd2oH^ku*|>$r!$#rz}WWvZ4;2bA4b)lTC86W5Nc#NwPnuWo4y#Z0<Uk{`Gm)#)9Et
zidO=QY4PF#8A>3|LCAZ<)KO_X=QJd!qNtG%J2+`CXmV?I0THny0_`B^qTVgEZccH%
z>KPpdzD;G!8s4pKrktxl=k4vl5C4JB9tIhl)Av?(<x<rUlW&^%^EJcNN3yQ&uiVHG
zb!pU!v==VdcgEd8&c~rP$^H!3pS5nWU!da$?m7`-GXDPkrPkdMtZK5W@^Q_l4n(ss
z)E6&;g5NkleeZ)%s=~|kuvvU%4+a#$6eigR2M1~1@q#|r=j42RDvxmEV0Qdn2I!w)
zx4YZgmi1N7<%<Na!y}51OC*T8*_#YsuG%9FyO;6`3Y2Eq`4TxYB^9wd#-ib?2iJn8
z4h9X<;_@Aqf!0<Z&}mookhyd8hy<2idK<?WLF#!5+aUvpzC~W&0gBU(jAG<ketrWn
z9DzVcl?LDigI--CDCMi}IDsNJ?+z9YEJ6~S+M?^j+g6S|RdWL(>cwVzu~_AAze`FO
z(Ou0j@0W<Je-#&_qri_rDlMq>H9vkuI)GNFCv#^?@fzm@L^#)+7`|s=evNwk&G27*
zNE`{56K_FAhH&=%Hwz0H5K-r<>yc6p{pSR(oGB?OD{arzppC%aaEWHm;n_*)EG;&v
z$^Bvf^y0lQLTOxFsrKYrO-TF&#e!_L%6T<cW6MKdKL`RbS(uss>4W>|(ROv^vRtZ5
z@`6?-1gl*6?2-ZgOfa{TDH#j1-JN78AWv$B1nEG2-yE-`>dB?<s_W<!pB`|OS7xb;
zMF{@_HsP16%~GxFO8|%Gd)zi+Zot!m_084SuR)Oh^!;~)QsyhfX`p;p;(qmUA&<QJ
zQT!Jf_c|pD2Wz_zxCPU?v2qq@ow>Xpvh(KZsy5+7l{o>aim1=@7v{1(`lE#w@8xM$
zTi-@{Tao2seu{NUA`<Ro3yb5wV6dxCb#H%vCIjH|mMpmEXH`}TUHDGt?<_KWEOD(c
zL3-EL9{iCO^_VE)sH;1Lhb$>EZc5)?6Ac|b-`hsd%~j<Cs7@FtfV*IO6Yn=)X-o`n
zTuS9Nt4*L4F8P45KgRXOc>!y=N)8}0<IiYlZoT-hr<G$v1nv_UQ+P(VN3d4ED{ymj
z!VeXjsE!VaPNRcH(Fgm(y8x60eBGFQ_nKC0*@cB?@O<&B1Lkto6accm1H7}I=H!B8
z@5dtk%J<9_5s^GS8$A}*Po2x)hw^Arm%Ofe6i-$rz>?_A0`NS04!P3P)nNUqoqz<)
z&HEXolbe(fi+jJf!)h2D9O6jq=3T2P3qHT;%r8vFYkx$r%M`GIlQjc+H4f`Dwq^A)
zA{CW?^A1QSEG^;5J3QVbAb;vIt3h&>BCa&HptCikXR4v4o{M)&(U_U@59t|P)Uxa&
z4)7XC%K`Bq3>JcO6F?@O*U7)LyM2r^p9DuAx<wlkLKTI5;+wMR)SB&fPB&uF%Md2?
zRswb19WXLL6qzs5;FMKZ7~%`Rt0>?BK#wR338%|%xd*p;Au_3Z>&Carw@wG|sDT0P
zkRWeuZ&@+>1cbBcR)<o^qT}OpbLDPLz-YN9_ht#tTi81RJv}rq@W$u!D)wtQxxit+
zg9(hVD^&ykWvGljlYOQMX!aju;)TFa&S$Pk;5}*uyj=oNh48_}aPMfOTl0*c+l7lS
zK=%|nfk|5CvcXN5bB@~X=v8)DjgO8w*^Y!BWR{gNKmT{{0*rH{u+4CL9=J1B%_^##
zgM%#4pQzKgK1f!W|NhxC_ua|NXO1uTr9j?_gKrByqR(ST2$yb)Z8R_v*=yADN@{A=
znupZ#@dq>M_atOYrK7+eYIpXKw~FvFgy^0tc?h@l0oZ{v|IF(YsZ?7}*QHwyK08z_
zE{*_rj9<lV8Sl8gS2*CvWzqByMovKmkR~#|y1o%>{`B=uH<a`VuY^(WDej8!Pra;H
z=WCA_9b=<dxzi52BSPBrU_f)6QCevPz{wGcRaJFlIjrV!@HOgfPBJ)UbL3=c2l&vZ
z?eW`gCwj3n4Vb}Dsx*ovdX1Z*bK)BQy670AY?@mOBcsoNvX-YaSG}r247Byi`oPBb
z$yudk1~GI;K68AjZgx`5YJPdSlHtYDTz_GjBi-Y0j!bGLL1qvF2I{GINW8Aq$^iq4
ztH4U99x)H6KEUV%EdeeT<jbe)ax&e);|wge)LJ;wKQID!f&$FToqqsymVa{55q{FD
zH>l~U>fg^#PjS3jUBK*Ag$?lSRDyDwY>a>NNIKI5={ZO5RAWv}7I&-xO~v!U6M%RJ
zE{7vveDlZmtB;PUT;8qPv)a|H+H|!gEX+BynkX_;1{yt?IkF2qowEVSDQ`L(uE6&@
z?{pp>XC)nNhXulxg=pdPtUyoqHbAEH4GFhymJ3)wkyP#+6cxfne`78Sg#i@0e(OFa
zrW1H<%VGurpNFlE$x(85cOLQ{o*?HPlKq2#mO16Mu2-unZ_EqDCh`>D1Ho?umM&HO
z)3cWy`Ai838Zjv;vKnn6M<o!{e<_be&oL6Fo-HAm1Dwo_)%nsn<6U=3>#Pp~29W_k
z_~!%2l=@4wo2CRnkncpPUrW^#i@EOl?Ny-bOMCmWi46fg6Qg%`HmuCd<er|Mz~ExH
z1U?c21M^2f>SJ6?oRXvCr`Y&-WmnOF<D=|V?=|(ZV<0SxlUom(>4U4LH@b$Vs<}Z9
z>jwxo)_^Er@?z-CQ<o71V3<Sg&rVI2n(ZN>R558_Px)-MXTSAqY?_9G3SKZOMxkH?
zm}HHo0WZH!Oa%VXYw~Kcl$3nlMFz}?NJ3K5G(hKW3X+og0|6RC_8I=)ad1x)pAyZw
zB{#M(>KqkSROR^UE%@zfcm@6P;&k4^8p6Q}Le*z{-w`laDh(zR@mW|{HWwRlmsC;D
zzc7MwjNl;Z*QWaHmL&~p>fDITt_Z#WQX!vbn4KLZ;|z?9slVb<Nge6<|EXWG4uS02
z2gTs)SH-QPt)yi*LF3Ba0pMc{ZeTF@irLpiwwAZvV$gQjG_W&CfQG-K4FUiK7G>pe
zZa9-hTPN8Y41G^!^1on#fyvz>o^6fUn47sKM!as<YQh=#q+TFB`SnU5bQf@qdV70q
zqcNfQ&(oVwo1TCH>Bhe~7-<=U2L=Y*?tzk2F&Up*=ms3LPL0kqjHVsl94zIq+W-4+
ztj&&6O5n*8-n;?0_W<Jg)Hx8Nr;D=95Ooa=Ag}{cB_=U3vGtu%-tO66nxUZ~r)xO>
zZj=t}74-02C<yw)z%cvgveND|+?14^m3SL8;NblLpmoo}Leqa_SihzPcIlV>pMDd8
z5$tIfYNhu>b+uU(ywn`d3SjDdf6N4%z3u}TdnGuxy|)+LkYpZIQE?{AqcwMrx4Bui
z*43C0o(g8okC=k(QRFWuP@k5j{|j>$NojoSjlKODY=jjA-ewk-mfz;Jb;zE7y$_C!
z#eH@$2s{z;HX#t|D6X*^)NC0WD_;@q>=df2t9ytbgRpxgCz$!feg(J7@I5O06<}M`
z7Dz^SC4g4^8hQqLxuk@I!=G<>s7RZ@eIvBM_mH}#8j-e=5;U_mE6dT#%d293o_BA5
z-=dvX<{x-jlpjZ?somXgsjI8mucxM_E*S;}OOuk4QrK8O@w~wzjq@XY^3=uW2HE|-
zk6NBvRYm0~`1Vz}x`WdFeTg`@xN|r-c)vF`Huem|!JwTx!qiMFLqi?Q$)19Vv9Wi<
z0~4^a{QMoh701b$8P1`ek>l@}6DQJ7F_#flEH@IX7zzr_c~f~^S9Mg+vowr1u)C>M
zRWI6>ifQTS1_Me>aB*Y1+L9156BCJaR*u}-TK1lM=O`7izeGrz@*mO3&CTtmBs2$6
zjJdzS^ox~-v6-1X;Vbw2<0Hzp=_evceirZFw~M2o{J0EgSsI<5mJSE62a69Cy88J1
aBf{IdzfRh8_SnG4AxMhKeJ&B!|NcKUOg29N

literal 0
HcmV?d00001

diff --git a/configs/customized/assets/images/.gitkeep b/configs/customized/assets/images/.gitkeep
new file mode 100644
index 0000000..e69de29
diff --git a/configs/customized/lib/config/states/.gitkeep b/configs/customized/lib/config/states/.gitkeep
new file mode 100644
index 0000000..e69de29
diff --git a/configs/env.properties b/configs/env.properties
new file mode 100644
index 0000000..08b62a1
--- /dev/null
+++ b/configs/env.properties
@@ -0,0 +1,24 @@
+envatoPurchaseCode=put-your-envato-purchase-code-here
+appName=FluxStore
+iosBundleId=com.inspireui.mstore.flutter
+iosBundleIdOneSignal=com.inspireui.mstore.flutter.onesignal
+iosAppGroups=group.com.inspireui.mstore.flutter.onesignal
+iosMerchantId=merchant.com.inspireui.mstore.flutter
+androidPackageName=com.inspireui.fluxstore
+websiteUrl=https://inspireui.com
+websiteDomain=inspireui.com
+customScheme=fluxstore
+iosApsEnvironment=development
+firebaseDynamicUrl=fluxstoreinspireui.page.link
+googleReversedClientId=com.googleusercontent.apps.412823237422-pf5dr3f75n6r201u24ocioin54u3cseq
+googleApiKeyAndroid=AIzaSyDSNYVC-8DU9BTcyqkeN9c5pgVhwOBAvGg
+googleApiKeyIos=AIzaSyDnBpxFOfeG6P06nK97hMg01kEgX48JhLE
+adMobAppIdAndroid=ca-app-pub-7432665165146018~2664444130
+adMobAppIdIos=ca-app-pub-7432665165146018~2664444130
+facebookAppId=430258564493822
+facebookClientToken=9def0493cb40104fa311ee9e1086d264
+facebookLoginProtocolScheme=fb430258564493822
+storePassword=123456
+keyPassword=123456
+keyAlias=key
+storeFile=key.jks
\ No newline at end of file
diff --git a/configs/google-services.json b/configs/google-services.json
new file mode 100644
index 0000000..7c12b21
--- /dev/null
+++ b/configs/google-services.json
@@ -0,0 +1,517 @@
+{
+  "project_info": {
+    "project_number": "412823237422",
+    "firebase_url": "https://fluxstore-inspireui.firebaseio.com",
+    "project_id": "fluxstore-inspireui",
+    "storage_bucket": "fluxstore-inspireui.appspot.com"
+  },
+  "client": [
+    {
+      "client_info": {
+        "mobilesdk_app_id": "1:412823237422:android:eece52696555a13bfb40bf",
+        "android_client_info": {
+          "package_name": "com.inspireui.delivery"
+        }
+      },
+      "oauth_client": [],
+      "api_key": [
+        {
+          "current_key": "AIzaSyDCli7bQK6iRR4rbIDPwhvP3C0us08z1zs"
+        },
+        {
+          "current_key": "AIzaSyDSNYVC-8DU9BTcyqkeN9c5pgVhwOBAvGg"
+        }
+      ],
+      "services": {
+        "appinvite_service": {
+          "other_platform_oauth_client": [
+            {
+              "client_id": "412823237422-22ugmnpl3hsvl9kpua35r3ralsp1eveo.apps.googleusercontent.com",
+              "client_type": 2,
+              "ios_info": {
+                "bundle_id": "com.inspireui.fluxshopify"
+              }
+            }
+          ]
+        }
+      }
+    },
+    {
+      "client_info": {
+        "mobilesdk_app_id": "1:412823237422:android:1a11fa0cfa4c2e0dfb40bf",
+        "android_client_info": {
+          "package_name": "com.inspireui.fluxbuilder"
+        }
+      },
+      "oauth_client": [
+        {
+          "client_id": "412823237422-pal4jr7gfa4b74mog6lo5pvsp188haui.apps.googleusercontent.com",
+          "client_type": 1,
+          "android_info": {
+            "package_name": "com.inspireui.fluxbuilder",
+            "certificate_hash": "ca379939aeb040b15009c95eaad8c7780b8f811a"
+          }
+        }
+      ],
+      "api_key": [
+        {
+          "current_key": "AIzaSyDCli7bQK6iRR4rbIDPwhvP3C0us08z1zs"
+        },
+        {
+          "current_key": "AIzaSyDSNYVC-8DU9BTcyqkeN9c5pgVhwOBAvGg"
+        }
+      ],
+      "services": {
+        "appinvite_service": {
+          "other_platform_oauth_client": [
+            {
+              "client_id": "412823237422-22ugmnpl3hsvl9kpua35r3ralsp1eveo.apps.googleusercontent.com",
+              "client_type": 2,
+              "ios_info": {
+                "bundle_id": "com.inspireui.fluxshopify"
+              }
+            }
+          ]
+        }
+      }
+    },
+    {
+      "client_info": {
+        "mobilesdk_app_id": "1:412823237422:android:b73da2c366973ebefb40bf",
+        "android_client_info": {
+          "package_name": "com.inspireui.fluxlisting"
+        }
+      },
+      "oauth_client": [
+        {
+          "client_id": "412823237422-69fu75bihipmdskpoqaajngp90ijmvi3.apps.googleusercontent.com",
+          "client_type": 1,
+          "android_info": {
+            "package_name": "com.inspireui.fluxlisting",
+            "certificate_hash": "ce9f62b601986ed06f365424ac1bef3f44fba851"
+          }
+        },
+        {
+          "client_id": "412823237422-t2f09kij9i1glui66ikqq5dsbt54rkin.apps.googleusercontent.com",
+          "client_type": 1,
+          "android_info": {
+            "package_name": "com.inspireui.fluxlisting",
+            "certificate_hash": "c9619b08a34885820512f1e906a442709eb7f6ef"
+          }
+        }
+      ],
+      "api_key": [
+        {
+          "current_key": "AIzaSyDCli7bQK6iRR4rbIDPwhvP3C0us08z1zs"
+        },
+        {
+          "current_key": "AIzaSyDSNYVC-8DU9BTcyqkeN9c5pgVhwOBAvGg"
+        }
+      ],
+      "services": {
+        "appinvite_service": {
+          "other_platform_oauth_client": [
+            {
+              "client_id": "412823237422-22ugmnpl3hsvl9kpua35r3ralsp1eveo.apps.googleusercontent.com",
+              "client_type": 2,
+              "ios_info": {
+                "bundle_id": "com.inspireui.fluxshopify"
+              }
+            }
+          ]
+        }
+      }
+    },
+    {
+      "client_info": {
+        "mobilesdk_app_id": "1:412823237422:android:369aab6eb2c38769fb40bf",
+        "android_client_info": {
+          "package_name": "com.inspireui.fluxlistingpro"
+        }
+      },
+      "oauth_client": [
+        {
+          "client_id": "412823237422-8vqe5qirtigblionq5mi66q4qu0r5cpf.apps.googleusercontent.com",
+          "client_type": 1,
+          "android_info": {
+            "package_name": "com.inspireui.fluxlistingpro",
+            "certificate_hash": "ce9f62b601986ed06f365424ac1bef3f44fba851"
+          }
+        },
+        {
+          "client_id": "412823237422-m0km5j0csos7u6dioum68086fp0afnik.apps.googleusercontent.com",
+          "client_type": 1,
+          "android_info": {
+            "package_name": "com.inspireui.fluxlistingpro",
+            "certificate_hash": "adad4df636c505d7ac25fbcd92a829f052f1ea6f"
+          }
+        }
+      ],
+      "api_key": [
+        {
+          "current_key": "AIzaSyDCli7bQK6iRR4rbIDPwhvP3C0us08z1zs"
+        },
+        {
+          "current_key": "AIzaSyDSNYVC-8DU9BTcyqkeN9c5pgVhwOBAvGg"
+        }
+      ],
+      "services": {
+        "appinvite_service": {
+          "other_platform_oauth_client": [
+            {
+              "client_id": "412823237422-22ugmnpl3hsvl9kpua35r3ralsp1eveo.apps.googleusercontent.com",
+              "client_type": 2,
+              "ios_info": {
+                "bundle_id": "com.inspireui.fluxshopify"
+              }
+            }
+          ]
+        }
+      }
+    },
+    {
+      "client_info": {
+        "mobilesdk_app_id": "1:412823237422:android:9875445cb961cf36fb40bf",
+        "android_client_info": {
+          "package_name": "com.inspireui.fluxnews"
+        }
+      },
+      "oauth_client": [],
+      "api_key": [
+        {
+          "current_key": "AIzaSyDCli7bQK6iRR4rbIDPwhvP3C0us08z1zs"
+        },
+        {
+          "current_key": "AIzaSyDSNYVC-8DU9BTcyqkeN9c5pgVhwOBAvGg"
+        }
+      ],
+      "services": {
+        "appinvite_service": {
+          "other_platform_oauth_client": [
+            {
+              "client_id": "412823237422-22ugmnpl3hsvl9kpua35r3ralsp1eveo.apps.googleusercontent.com",
+              "client_type": 2,
+              "ios_info": {
+                "bundle_id": "com.inspireui.fluxshopify"
+              }
+            }
+          ]
+        }
+      }
+    },
+    {
+      "client_info": {
+        "mobilesdk_app_id": "1:412823237422:android:bd4f8a7424b8ad07fb40bf",
+        "android_client_info": {
+          "package_name": "com.inspireui.fluxshopify"
+        }
+      },
+      "oauth_client": [
+        {
+          "client_id": "412823237422-5i5ifl64f3de0smi4j7e216vvbhui7ua.apps.googleusercontent.com",
+          "client_type": 1,
+          "android_info": {
+            "package_name": "com.inspireui.fluxshopify",
+            "certificate_hash": "347876c90f0afb3c95fcc9dd38cc7440eae5af5e"
+          }
+        },
+        {
+          "client_id": "412823237422-j1t32jmajnnme80ri4ft1aa7504aum5c.apps.googleusercontent.com",
+          "client_type": 1,
+          "android_info": {
+            "package_name": "com.inspireui.fluxshopify",
+            "certificate_hash": "0c3fbe486a4a601495a5883d20f785c8f457665c"
+          }
+        }
+      ],
+      "api_key": [
+        {
+          "current_key": "AIzaSyDCli7bQK6iRR4rbIDPwhvP3C0us08z1zs"
+        },
+        {
+          "current_key": "AIzaSyDSNYVC-8DU9BTcyqkeN9c5pgVhwOBAvGg"
+        }
+      ],
+      "services": {
+        "appinvite_service": {
+          "other_platform_oauth_client": [
+            {
+              "client_id": "412823237422-22ugmnpl3hsvl9kpua35r3ralsp1eveo.apps.googleusercontent.com",
+              "client_type": 2,
+              "ios_info": {
+                "bundle_id": "com.inspireui.fluxshopify"
+              }
+            }
+          ]
+        }
+      }
+    },
+    {
+      "client_info": {
+        "mobilesdk_app_id": "1:412823237422:android:ec0e0abee17e848c",
+        "android_client_info": {
+          "package_name": "com.inspireui.fluxstore"
+        }
+      },
+      "oauth_client": [
+        {
+          "client_id": "412823237422-3d7l4tv9d524qds81062g6vfr588u9rg.apps.googleusercontent.com",
+          "client_type": 1,
+          "android_info": {
+            "package_name": "com.inspireui.fluxstore",
+            "certificate_hash": "d087f0616fb1139bc19edc18f549f3dd3a1c1eb1"
+          }
+        },
+        {
+          "client_id": "412823237422-8kcs3419crafqv7hom6778d7er4gl5bq.apps.googleusercontent.com",
+          "client_type": 1,
+          "android_info": {
+            "package_name": "com.inspireui.fluxstore",
+            "certificate_hash": "14bc8e614a0aa4f0139f2a95c9a1370d26328717"
+          }
+        },
+        {
+          "client_id": "412823237422-ckkd86limn5dif15ntoe437v06aferp4.apps.googleusercontent.com",
+          "client_type": 1,
+          "android_info": {
+            "package_name": "com.inspireui.fluxstore",
+            "certificate_hash": "92d7b86acd1d22af6af36b95d59e7be2752e9b32"
+          }
+        },
+        {
+          "client_id": "412823237422-erqdtv200n5a91mdis5dks2vvq9mtjs3.apps.googleusercontent.com",
+          "client_type": 1,
+          "android_info": {
+            "package_name": "com.inspireui.fluxstore",
+            "certificate_hash": "06a027a3c459a8ed33ea7806b292bcdf9ae1dc83"
+          }
+        },
+        {
+          "client_id": "412823237422-o62l7pibd1shiu99ol2vhfe8aseu6vda.apps.googleusercontent.com",
+          "client_type": 1,
+          "android_info": {
+            "package_name": "com.inspireui.fluxstore",
+            "certificate_hash": "409469d217df83af14c982df1b90bf42038a11f6"
+          }
+        },
+        {
+          "client_id": "412823237422-pth1kfivtq6dcogptfqe7gon12ia0t2b.apps.googleusercontent.com",
+          "client_type": 1,
+          "android_info": {
+            "package_name": "com.inspireui.fluxstore",
+            "certificate_hash": "201122748626eefbf1c0c593cec0eedb2b25ffc6"
+          }
+        },
+        {
+          "client_id": "412823237422-viitd9st8mk6s2vekgbv9febms8qm5il.apps.googleusercontent.com",
+          "client_type": 1,
+          "android_info": {
+            "package_name": "com.inspireui.fluxstore",
+            "certificate_hash": "c9619b08a34885820512f1e906a442709eb7f6ef"
+          }
+        }
+      ],
+      "api_key": [
+        {
+          "current_key": "AIzaSyDCli7bQK6iRR4rbIDPwhvP3C0us08z1zs"
+        },
+        {
+          "current_key": "AIzaSyDSNYVC-8DU9BTcyqkeN9c5pgVhwOBAvGg"
+        }
+      ],
+      "services": {
+        "appinvite_service": {
+          "other_platform_oauth_client": [
+            {
+              "client_id": "412823237422-22ugmnpl3hsvl9kpua35r3ralsp1eveo.apps.googleusercontent.com",
+              "client_type": 2,
+              "ios_info": {
+                "bundle_id": "com.inspireui.fluxshopify"
+              }
+            }
+          ]
+        }
+      }
+    },
+    {
+      "client_info": {
+        "mobilesdk_app_id": "1:412823237422:android:d5d9a435d9409bf9fb40bf",
+        "android_client_info": {
+          "package_name": "com.inspireui.fluxstore.vendor"
+        }
+      },
+      "oauth_client": [
+        {
+          "client_id": "412823237422-gpsrtndfb229he8o68k3s9829vebppn8.apps.googleusercontent.com",
+          "client_type": 1,
+          "android_info": {
+            "package_name": "com.inspireui.fluxstore.vendor",
+            "certificate_hash": "c9619b08a34885820512f1e906a442709eb7f6ef"
+          }
+        },
+        {
+          "client_id": "412823237422-lta1qbeemcnjtksf9quuobnf6dhpk5h4.apps.googleusercontent.com",
+          "client_type": 1,
+          "android_info": {
+            "package_name": "com.inspireui.fluxstore.vendor",
+            "certificate_hash": "77fccf5d6ca774602e29aa57478f4ace6bce19be"
+          }
+        },
+        {
+          "client_id": "412823237422-o1tavh94bkss2pvr3cu2o2rrnub9utd2.apps.googleusercontent.com",
+          "client_type": 1,
+          "android_info": {
+            "package_name": "com.inspireui.fluxstore.vendor",
+            "certificate_hash": "bd242be731fc97353721c16966726ac5de0dca15"
+          }
+        },
+        {
+          "client_id": "412823237422-p5seqlndt7f01m0r9j3bmp6cgi4dtvfo.apps.googleusercontent.com",
+          "client_type": 1,
+          "android_info": {
+            "package_name": "com.inspireui.fluxstore.vendor",
+            "certificate_hash": "772f6c1bc38a2b07fd9befcd6c61416471f53b8b"
+          }
+        }
+      ],
+      "api_key": [
+        {
+          "current_key": "AIzaSyDCli7bQK6iRR4rbIDPwhvP3C0us08z1zs"
+        },
+        {
+          "current_key": "AIzaSyDSNYVC-8DU9BTcyqkeN9c5pgVhwOBAvGg"
+        }
+      ],
+      "services": {
+        "appinvite_service": {
+          "other_platform_oauth_client": [
+            {
+              "client_id": "412823237422-22ugmnpl3hsvl9kpua35r3ralsp1eveo.apps.googleusercontent.com",
+              "client_type": 2,
+              "ios_info": {
+                "bundle_id": "com.inspireui.fluxshopify"
+              }
+            }
+          ]
+        }
+      }
+    },
+    {
+      "client_info": {
+        "mobilesdk_app_id": "1:412823237422:android:d72c303e3a3edf0efb40bf",
+        "android_client_info": {
+          "package_name": "com.inspireui.fluxstorestrapi"
+        }
+      },
+      "oauth_client": [
+        {
+          "client_id": "412823237422-3hghnutsovp5np19tiqvbtk1ucjco9t6.apps.googleusercontent.com",
+          "client_type": 1,
+          "android_info": {
+            "package_name": "com.inspireui.fluxstorestrapi",
+            "certificate_hash": "ebb2e7100ad94fce7537621459685471a22dda38"
+          }
+        }
+      ],
+      "api_key": [
+        {
+          "current_key": "AIzaSyDCli7bQK6iRR4rbIDPwhvP3C0us08z1zs"
+        },
+        {
+          "current_key": "AIzaSyDSNYVC-8DU9BTcyqkeN9c5pgVhwOBAvGg"
+        }
+      ],
+      "services": {
+        "appinvite_service": {
+          "other_platform_oauth_client": [
+            {
+              "client_id": "412823237422-22ugmnpl3hsvl9kpua35r3ralsp1eveo.apps.googleusercontent.com",
+              "client_type": 2,
+              "ios_info": {
+                "bundle_id": "com.inspireui.fluxshopify"
+              }
+            }
+          ]
+        }
+      }
+    },
+    {
+      "client_info": {
+        "mobilesdk_app_id": "1:412823237422:android:60dddc0b36c0508afb40bf",
+        "android_client_info": {
+          "package_name": "com.inspireui.manager"
+        }
+      },
+      "oauth_client": [],
+      "api_key": [
+        {
+          "current_key": "AIzaSyDCli7bQK6iRR4rbIDPwhvP3C0us08z1zs"
+        },
+        {
+          "current_key": "AIzaSyDSNYVC-8DU9BTcyqkeN9c5pgVhwOBAvGg"
+        }
+      ],
+      "services": {
+        "appinvite_service": {
+          "other_platform_oauth_client": [
+            {
+              "client_id": "412823237422-22ugmnpl3hsvl9kpua35r3ralsp1eveo.apps.googleusercontent.com",
+              "client_type": 2,
+              "ios_info": {
+                "bundle_id": "com.inspireui.fluxshopify"
+              }
+            }
+          ]
+        }
+      }
+    },
+    {
+      "client_info": {
+        "mobilesdk_app_id": "1:412823237422:android:d1f7eecf1d03bb6ffb40bf",
+        "android_client_info": {
+          "package_name": "com.inspireui.prestashop"
+        }
+      },
+      "oauth_client": [
+        {
+          "client_id": "412823237422-963igb6ph72ifq5cg72jl64vdthtjs4i.apps.googleusercontent.com",
+          "client_type": 1,
+          "android_info": {
+            "package_name": "com.inspireui.prestashop",
+            "certificate_hash": "dba5c4edc9589972ea06efbd097e13f1866495e1"
+          }
+        },
+        {
+          "client_id": "412823237422-klki0pcmdnti5di9i8kll6lkkm9l366m.apps.googleusercontent.com",
+          "client_type": 1,
+          "android_info": {
+            "package_name": "com.inspireui.prestashop",
+            "certificate_hash": "e54d94c61ea6eb5ff1427fe77c2e9b732735d042"
+          }
+        }
+      ],
+      "api_key": [
+        {
+          "current_key": "AIzaSyDCli7bQK6iRR4rbIDPwhvP3C0us08z1zs"
+        },
+        {
+          "current_key": "AIzaSyDSNYVC-8DU9BTcyqkeN9c5pgVhwOBAvGg"
+        }
+      ],
+      "services": {
+        "appinvite_service": {
+          "other_platform_oauth_client": [
+            {
+              "client_id": "412823237422-22ugmnpl3hsvl9kpua35r3ralsp1eveo.apps.googleusercontent.com",
+              "client_type": 2,
+              "ios_info": {
+                "bundle_id": "com.inspireui.fluxshopify"
+              }
+            }
+          ]
+        }
+      }
+    }
+  ],
+  "configuration_version": "1"
+}
\ No newline at end of file
diff --git a/android/app/key.jks b/configs/key.jks
similarity index 100%
rename from android/app/key.jks
rename to configs/key.jks
diff --git a/native_splash.yaml b/configs/native_splash.yaml
similarity index 58%
rename from native_splash.yaml
rename to configs/native_splash.yaml
index 7024599..5ae7c37 100644
--- a/native_splash.yaml
+++ b/configs/native_splash.yaml
@@ -1,5 +1,5 @@
 # Configure this using FluxBuilder.
-# flutter pub run flutter_native_splash:create --path=native_splash.yaml
+# flutter pub run flutter_native_splash:create --path=configs/native_splash.yaml
 flutter_native_splash:
   web: false
   color: "#FFFFFF"
diff --git a/configs/readme.txt b/configs/readme.txt
new file mode 100644
index 0000000..d51f877
--- /dev/null
+++ b/configs/readme.txt
@@ -0,0 +1,58 @@
+- Steps to upgrade FluxStore:
+1. Download the latest version of FluxStore from CodeCanyon.
+2. Unzip the source code.
+3. Copy this configs folder to the unzipped folder.
+4. Do all your customization in this configs folder.
+- That's it.
+- No need to update android/ios folder.
+- Do not add empty lines or any special characters in the env.properties config file. Just edit the value after the equal sign (=).
+- Do not update project info (except Signing & Capabilities) in Xcode project.
+- To override with your customized code, copy the customized source code to the configs/customized folder.
+- If you have any issues, please create a ticket on our support center: https://support.inspireui.com
+
+========================================================================================================================
+
+# ENV.PROPERTIES CONFIG EXPLANATION BELOW.
+# (FOR REFERENCE ONLY. DO NOT COPY TO YOUR ENV.PROPERTIES)
+
+# The Envato purchase code (required). Invalid value can cause app crashing.
+# Ref: https://help.market.envato.com/hc/en-us/articles/202822600-Where-Is-My-Purchase-Code
+envatoPurchaseCode=put-your-envato-purchase-code-here
+
+# Your app information.
+appName=FluxStore
+iosBundleId=com.inspireui.mstore.flutter
+iosBundleIdOneSignal=com.inspireui.mstore.flutter.onesignal
+iosAppGroups=group.com.inspireui.mstore.flutter.onesignal
+iosMerchantId=merchant.com.inspireui.mstore.flutter
+androidPackageName=com.inspireui.fluxstore
+
+# For some native payments, push notification and Dynamic Links features (optional).
+websiteUrl=https://inspireui.com
+websiteDomain=inspireui.com
+customScheme=fluxstore
+iosApsEnvironment=development
+firebaseDynamicUrl=fluxstoreinspireui.page.link
+
+# Required for Firebase features. Invalid value can cause app crashing. Keep default value if not used.
+# Can be taken from REVERSED_CLIENT_ID in GoogleService-Info.plist.
+googleReversedClientId=com.googleusercontent.apps.412823237422-pf5dr3f75n6r201u24ocioin54u3cseq
+
+# Used for Google Maps features (optional).
+googleApiKeyAndroid=AIzaSyDSNYVC-8DU9BTcyqkeN9c5pgVhwOBAvGg
+googleApiKeyIos=AIzaSyDnBpxFOfeG6P06nK97hMg01kEgX48JhLE
+
+# Used for AdMob (optional). Invalid value can cause app crashing. Keep default value if not used.
+adMobAppIdAndroid=ca-app-pub-7432665165146018~2664444130
+adMobAppIdIos=ca-app-pub-7432665165146018~2664444130
+
+# Used for Facebook Login (optional).
+facebookAppId=430258564493822
+facebookClientToken=9def0493cb40104fa311ee9e1086d264
+facebookLoginProtocolScheme=fb430258564493822
+
+# Android keystore information (old location: android/key.properties).
+storePassword=123456
+keyPassword=123456
+keyAlias=key
+storeFile=key.jks
diff --git a/ios/Config.xcconfig b/ios/Config.xcconfig
new file mode 100644
index 0000000..ed884b4
--- /dev/null
+++ b/ios/Config.xcconfig
@@ -0,0 +1 @@
+#include? "/Users/minh/Data/gitlab/flutter-sharing/fluxstore-shopify/ios/../configs/env.properties"
diff --git a/ios/OneSignalNotificationServiceExtension/OneSignalNotificationServiceExtension.entitlements b/ios/OneSignalNotificationServiceExtension/OneSignalNotificationServiceExtension.entitlements
index 386c942..18fcfed 100644
--- a/ios/OneSignalNotificationServiceExtension/OneSignalNotificationServiceExtension.entitlements
+++ b/ios/OneSignalNotificationServiceExtension/OneSignalNotificationServiceExtension.entitlements
@@ -4,7 +4,7 @@
 <dict>
 	<key>com.apple.security.application-groups</key>
 	<array>
-		<string>group.com.inspireui.mstore.flutter.onesignal</string>
+		<string>${iosAppGroups}</string>
 	</array>
 </dict>
 </plist>
diff --git a/ios/Runner.xcodeproj/project.pbxproj b/ios/Runner.xcodeproj/project.pbxproj
index 1b63bfb..6cd644e 100644
--- a/ios/Runner.xcodeproj/project.pbxproj
+++ b/ios/Runner.xcodeproj/project.pbxproj
@@ -19,6 +19,7 @@
 		BA40CC572469577300F2555E /* NotificationService.swift in Sources */ = {isa = PBXBuildFile; fileRef = BA40CC562469577300F2555E /* NotificationService.swift */; };
 		BA40CC5B2469577300F2555E /* OneSignalNotificationServiceExtension.appex in Embed App Extensions */ = {isa = PBXBuildFile; fileRef = BA40CC542469577300F2555E /* OneSignalNotificationServiceExtension.appex */; settings = {ATTRIBUTES = (RemoveHeadersOnCopy, ); }; };
 		CEDE213AF0FBB8C6713C6405 /* Pods_Runner.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 64904BEE891175A17C28B6F9 /* Pods_Runner.framework */; };
+		F440C54928B7526F004A07C2 /* Environment.swift in Sources */ = {isa = PBXBuildFile; fileRef = F440C54828B7526F004A07C2 /* Environment.swift */; };
 /* End PBXBuildFile section */
 
 /* Begin PBXContainerItemProxy section */
@@ -82,6 +83,8 @@
 		BA40CC582469577300F2555E /* Info.plist */ = {isa = PBXFileReference; lastKnownFileType = text.plist.xml; path = Info.plist; sourceTree = "<group>"; };
 		BA40CC602469582100F2555E /* OneSignalNotificationServiceExtension.entitlements */ = {isa = PBXFileReference; lastKnownFileType = text.plist.entitlements; path = OneSignalNotificationServiceExtension.entitlements; sourceTree = "<group>"; };
 		CC8F225C38BE87DF35B41D61 /* Pods-OneSignalNotificationServiceExtension.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-OneSignalNotificationServiceExtension.debug.xcconfig"; path = "Target Support Files/Pods-OneSignalNotificationServiceExtension/Pods-OneSignalNotificationServiceExtension.debug.xcconfig"; sourceTree = "<group>"; };
+		F402DE4428B3712D0008A957 /* Config.xcconfig */ = {isa = PBXFileReference; lastKnownFileType = text.xcconfig; path = Config.xcconfig; sourceTree = "<group>"; };
+		F440C54828B7526F004A07C2 /* Environment.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Environment.swift; sourceTree = "<group>"; };
 		F497BC3128507F1B00BAAF72 /* hi */ = {isa = PBXFileReference; lastKnownFileType = text.plist.strings; name = hi; path = hi.lproj/Main.strings; sourceTree = "<group>"; };
 		F497BC3228507F1B00BAAF72 /* hi */ = {isa = PBXFileReference; lastKnownFileType = text.plist.strings; name = hi; path = hi.lproj/LaunchScreen.strings; sourceTree = "<group>"; };
 		F497BC3328507F6200BAAF72 /* es */ = {isa = PBXFileReference; lastKnownFileType = text.plist.strings; name = es; path = es.lproj/Main.strings; sourceTree = "<group>"; };
@@ -199,6 +202,7 @@
 		97C146E51CF9000F007C117D = {
 			isa = PBXGroup;
 			children = (
+				F402DE4428B3712D0008A957 /* Config.xcconfig */,
 				248A25BC22B8ACCF0008B966 /* GoogleService-Info.plist */,
 				9740EEB11CF90186004384FC /* Flutter */,
 				97C146F01CF9000F007C117D /* Runner */,
@@ -231,6 +235,7 @@
 				1498D2331E8E89220040F4C2 /* GeneratedPluginRegistrant.m */,
 				74858FAE1ED2DC5600515810 /* AppDelegate.swift */,
 				74858FAD1ED2DC5600515810 /* Runner-Bridging-Header.h */,
+				F440C54828B7526F004A07C2 /* Environment.swift */,
 			);
 			path = Runner;
 			sourceTree = "<group>";
@@ -542,6 +547,7 @@
 			buildActionMask = 2147483647;
 			files = (
 				74858FAF1ED2DC5600515810 /* AppDelegate.swift in Sources */,
+				F440C54928B7526F004A07C2 /* Environment.swift in Sources */,
 				1498D2341E8E89220040F4C2 /* GeneratedPluginRegistrant.m in Sources */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
@@ -666,6 +672,7 @@
 /* Begin XCBuildConfiguration section */
 		249021D3217E4FDB00AE95B9 /* Profile */ = {
 			isa = XCBuildConfiguration;
+			baseConfigurationReference = F402DE4428B3712D0008A957 /* Config.xcconfig */;
 			buildSettings = {
 				ALWAYS_SEARCH_USER_PATHS = NO;
 				CLANG_ANALYZER_LOCALIZABILITY_NONLOCALIZED = YES;
@@ -748,7 +755,7 @@
 					"-framework",
 					Flutter,
 				);
-				PRODUCT_BUNDLE_IDENTIFIER = com.inspireui.mstore.flutter;
+				PRODUCT_BUNDLE_IDENTIFIER = "${iosBundleId}";
 				PRODUCT_NAME = "$(TARGET_NAME)";
 				PROVISIONING_PROFILE_SPECIFIER = "";
 				SWIFT_OBJC_BRIDGING_HEADER = "Runner/Runner-Bridging-Header.h";
@@ -759,6 +766,7 @@
 		};
 		97C147031CF9000F007C117D /* Debug */ = {
 			isa = XCBuildConfiguration;
+			baseConfigurationReference = F402DE4428B3712D0008A957 /* Config.xcconfig */;
 			buildSettings = {
 				ALWAYS_SEARCH_USER_PATHS = NO;
 				CLANG_ANALYZER_LOCALIZABILITY_NONLOCALIZED = YES;
@@ -816,6 +824,7 @@
 		};
 		97C147041CF9000F007C117D /* Release */ = {
 			isa = XCBuildConfiguration;
+			baseConfigurationReference = F402DE4428B3712D0008A957 /* Config.xcconfig */;
 			buildSettings = {
 				ALWAYS_SEARCH_USER_PATHS = NO;
 				CLANG_ANALYZER_LOCALIZABILITY_NONLOCALIZED = YES;
@@ -900,7 +909,7 @@
 					"-framework",
 					Flutter,
 				);
-				PRODUCT_BUNDLE_IDENTIFIER = com.inspireui.mstore.flutter;
+				PRODUCT_BUNDLE_IDENTIFIER = "${iosBundleId}";
 				PRODUCT_NAME = "$(TARGET_NAME)";
 				PROVISIONING_PROFILE_SPECIFIER = "";
 				SWIFT_OBJC_BRIDGING_HEADER = "Runner/Runner-Bridging-Header.h";
@@ -942,7 +951,7 @@
 					"-framework",
 					Flutter,
 				);
-				PRODUCT_BUNDLE_IDENTIFIER = com.inspireui.mstore.flutter;
+				PRODUCT_BUNDLE_IDENTIFIER = "${iosBundleId}";
 				PRODUCT_NAME = "$(TARGET_NAME)";
 				PROVISIONING_PROFILE_SPECIFIER = "";
 				SWIFT_OBJC_BRIDGING_HEADER = "Runner/Runner-Bridging-Header.h";
@@ -976,7 +985,7 @@
 				);
 				MTL_ENABLE_DEBUG_INFO = INCLUDE_SOURCE;
 				MTL_FAST_MATH = YES;
-				PRODUCT_BUNDLE_IDENTIFIER = com.inspireui.mstore.flutter.onesignal;
+				PRODUCT_BUNDLE_IDENTIFIER = "${iosBundleIdOneSignal}";
 				PRODUCT_NAME = "$(TARGET_NAME)";
 				SKIP_INSTALL = YES;
 				SWIFT_ACTIVE_COMPILATION_CONDITIONS = DEBUG;
@@ -1010,7 +1019,7 @@
 					"@executable_path/../../Frameworks",
 				);
 				MTL_FAST_MATH = YES;
-				PRODUCT_BUNDLE_IDENTIFIER = com.inspireui.mstore.flutter.onesignal;
+				PRODUCT_BUNDLE_IDENTIFIER = "${iosBundleIdOneSignal}";
 				PRODUCT_NAME = "$(TARGET_NAME)";
 				SKIP_INSTALL = YES;
 				SWIFT_VERSION = 5.0;
@@ -1041,7 +1050,7 @@
 					"@executable_path/../../Frameworks",
 				);
 				MTL_FAST_MATH = YES;
-				PRODUCT_BUNDLE_IDENTIFIER = com.inspireui.mstore.flutter.onesignal;
+				PRODUCT_BUNDLE_IDENTIFIER = "${iosBundleIdOneSignal}";
 				PRODUCT_NAME = "$(TARGET_NAME)";
 				SKIP_INSTALL = YES;
 				SWIFT_VERSION = 5.0;
diff --git a/ios/Runner.xcodeproj/xcshareddata/xcschemes/Runner.xcscheme b/ios/Runner.xcodeproj/xcshareddata/xcschemes/Runner.xcscheme
index c87d15a..8545203 100644
--- a/ios/Runner.xcodeproj/xcshareddata/xcschemes/Runner.xcscheme
+++ b/ios/Runner.xcodeproj/xcshareddata/xcschemes/Runner.xcscheme
@@ -1,10 +1,28 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <Scheme
    LastUpgradeVersion = "1300"
-   version = "1.3">
+   version = "1.7">
    <BuildAction
       parallelizeBuildables = "YES"
       buildImplicitDependencies = "YES">
+      <PreActions>
+         <ExecutionAction
+            ActionType = "Xcode.IDEStandardExecutionActionsCore.ExecutionActionType.ShellScriptAction">
+            <ActionContent
+               title = "Run Script"
+               scriptText = "/bin/cp -Rf ${PROJECT_DIR}/../configs/GoogleService-Info.plist ${PROJECT_DIR}/GoogleService-Info.plist&#10;/bin/cp -Rf ${PROJECT_DIR}/../configs/customized/ ${PROJECT_DIR}/../&#10;echo &quot;#include? \&quot;${PROJECT_DIR}/../configs/env.properties\&quot;&quot; &gt; ${PROJECT_DIR}/Config.xcconfig&#10;">
+               <EnvironmentBuildable>
+                  <BuildableReference
+                     BuildableIdentifier = "primary"
+                     BlueprintIdentifier = "97C146ED1CF9000F007C117D"
+                     BuildableName = "Runner.app"
+                     BlueprintName = "Runner"
+                     ReferencedContainer = "container:Runner.xcodeproj">
+                  </BuildableReference>
+               </EnvironmentBuildable>
+            </ActionContent>
+         </ExecutionAction>
+      </PreActions>
       <BuildActionEntries>
          <BuildActionEntry
             buildForTesting = "YES"
diff --git a/ios/Runner/AppDelegate.swift b/ios/Runner/AppDelegate.swift
index c892c07..6f62cd9 100644
--- a/ios/Runner/AppDelegate.swift
+++ b/ios/Runner/AppDelegate.swift
@@ -12,8 +12,7 @@ import AppTrackingTransparency
         _ application: UIApplication,
         didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey: Any]?
     ) -> Bool {
-        // TODO 1.4 - Shipping Address - Google API Key 🚢 
-        GMSServices.provideAPIKey("AIzaSyDnBpxFOfeG6P06nK97hMg01kEgX48JhLE")
+        GMSServices.provideAPIKey(Environment.googleApiKeyIos)
         GeneratedPluginRegistrant.register(with: self)
         if #available(iOS 10.0, *) {
             application.applicationIconBadgeNumber = 0 // Clear Badge Counts
diff --git a/ios/Runner/Environment.swift b/ios/Runner/Environment.swift
new file mode 100644
index 0000000..0e9a0e0
--- /dev/null
+++ b/ios/Runner/Environment.swift
@@ -0,0 +1,23 @@
+import Foundation
+
+public enum Environment {
+    enum Keys {
+        enum Plist {
+            static let googleApiKeyIos = "GOOGLE_API_KEY"
+        }
+    }
+    
+    private static let infoDictionary: [String: Any] = {
+        guard let dict = Bundle.main.infoDictionary else {
+            fatalError("Plist file not found")
+        }
+        return dict
+    }()
+    
+    static let googleApiKeyIos: String = {
+        guard let apiKey = Environment.infoDictionary[Keys.Plist.googleApiKeyIos] as? String else {
+            return "AIzaSyDnBpxFOfeG6P06nK97hMg01kEgX48JhLE"
+        }
+        return apiKey
+    }()
+}
diff --git a/ios/Runner/Info.plist b/ios/Runner/Info.plist
index 9c15f16..8b948e6 100644
--- a/ios/Runner/Info.plist
+++ b/ios/Runner/Info.plist
@@ -2,10 +2,14 @@
 <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
 <plist version="1.0">
 <dict>
+	<key>ENVATO_PURCHASE_CODE</key>
+	<string>${envatoPurchaseCode}</string>
+	<key>GOOGLE_API_KEY</key>
+	<string>${googleApiKeyIos}</string>
 	<key>CFBundleDevelopmentRegion</key>
 	<string>en</string>
 	<key>CFBundleDisplayName</key>
-	<string>FluxStore</string>
+	<string>${appName}</string>
 	<key>CFBundleExecutable</key>
 	<string>$(EXECUTABLE_NAME)</string>
 	<key>CFBundleIdentifier</key>
@@ -26,11 +30,11 @@
 			<key>CFBundleTypeRole</key>
 			<string>Editor</string>
 			<key>CFBundleURLName</key>
-			<string>inspireui.com</string>
+			<string>${websiteDomain}</string>
 			<key>CFBundleURLSchemes</key>
 			<array>
-				<string>fluxstore</string>
-				<string>fb430258564493822</string>
+				<string>${customScheme}</string>
+				<string>${facebookLoginProtocolScheme}</string>
 			</array>
 		</dict>
 		<dict>
@@ -38,7 +42,7 @@
 			<string>Editor</string>
 			<key>CFBundleURLSchemes</key>
 			<array>
-				<string>com.googleusercontent.apps.412823237422-pf5dr3f75n6r201u24ocioin54u3cseq</string>
+				<string>${googleReversedClientId}</string>
 			</array>
 		</dict>
 		<dict>
@@ -48,7 +52,7 @@
 			<string>firebaseDynamicLink</string>
 			<key>CFBundleURLSchemes</key>
 			<array>
-				<string>com.inspireui.mstore.flutter</string>
+				<string>${iosBundleId}</string>
 			</array>
 		</dict>
 		<dict>
@@ -63,11 +67,11 @@
 	<key>CFBundleVersion</key>
 	<string>$(FLUTTER_BUILD_NUMBER)</string>
 	<key>FacebookAppID</key>
-	<string>430258564493822</string>
+	<string>${facebookAppId}</string>
 	<key>FacebookClientToken</key>
-	<string>9def0493cb40104fa311ee9e1086d264</string>
+	<string>${facebookClientToken}</string>
 	<key>FacebookDisplayName</key>
-	<string>FluxStore</string>
+	<string>${appName}</string>
 	<key>FirebaseAppDelegateProxyEnabled</key>
 	<true/>
 	<key>FirebaseScreenReportingEnabled</key>
@@ -75,7 +79,7 @@
 	<key>FirebaseDeepLinkPasteboardRetrievalEnabled</key>
 	<false/>
 	<key>GADApplicationIdentifier</key>
-	<string>ca-app-pub-7432665165146018~2664444130</string>
+	<string>${adMobAppIdIos}</string>
 	<key>LSApplicationQueriesSchemes</key>
 	<array>
 		<string>paytm</string>
diff --git a/ios/Runner/Runner.entitlements b/ios/Runner/Runner.entitlements
index 2a3666a..51e1851 100644
--- a/ios/Runner/Runner.entitlements
+++ b/ios/Runner/Runner.entitlements
@@ -3,23 +3,23 @@
 <plist version="1.0">
 <dict>
 	<key>aps-environment</key>
-	<string>development</string>
+	<string>${iosApsEnvironment}</string>
 	<key>com.apple.developer.applesignin</key>
 	<array>
 		<string>Default</string>
 	</array>
 	<key>com.apple.developer.associated-domains</key>
 	<array>
-		<string>applinks:inspireui.com</string>
-		<string>applinks:fluxstoreinspireui.page.link</string>
+		<string>applinks:${websiteDomain}</string>
+		<string>applinks:${firebaseDynamicUrl}</string>
 	</array>
 	<key>com.apple.developer.in-app-payments</key>
 	<array>
-		<string>merchant.com.inspireui.mstore.flutter</string>
+		<string>${iosMerchantId}</string>
 	</array>
 	<key>com.apple.security.application-groups</key>
 	<array>
-		<string>group.com.inspireui.mstore.flutter.onesignal</string>
+		<string>${iosAppGroups}</string>
 	</array>
 </dict>
 </plist>
diff --git a/ios/Runner/RunnerProfile.entitlements b/ios/Runner/RunnerProfile.entitlements
index bd626ff..3f40ff7 100644
--- a/ios/Runner/RunnerProfile.entitlements
+++ b/ios/Runner/RunnerProfile.entitlements
@@ -3,20 +3,19 @@
 <plist version="1.0">
 <dict>
 	<key>aps-environment</key>
-	<string>development</string>
+	<string>${iosApsEnvironment}</string>
 	<key>com.apple.developer.applesignin</key>
 	<array>
 		<string>Default</string>
 	</array>
 	<key>com.apple.developer.associated-domains</key>
 	<array>
-		<string>applinks:fluxstoreinspireui.page.link</string>
-		<string>applinks:inspireui.com</string>
-		<string>applinks:firestoreinspireui.page.link</string>
+		<string>applinks:${websiteDomain}</string>
+		<string>applinks:${firebaseDynamicUrl}</string>
 	</array>
 	<key>com.apple.security.application-groups</key>
 	<array>
-		<string>group.com.inspireui.mstore.flutter.onesignal</string>
+		<string>${iosAppGroups}</string>
 	</array>
 </dict>
 </plist>
diff --git a/ios/pre-actions.sh b/ios/pre-actions.sh
new file mode 100755
index 0000000..c791e66
--- /dev/null
+++ b/ios/pre-actions.sh
@@ -0,0 +1,6 @@
+# This file is for easier editing.
+# All updates to this file should be update to
+# the script in Runner.xcworkspace > Edit Runner scheme > Build > Pre-actions.
+/bin/cp -Rf ${PROJECT_DIR}/../configs/GoogleService-Info.plist ${PROJECT_DIR}/GoogleService-Info.plist
+/bin/cp -Rf ${PROJECT_DIR}/../configs/customized/ ${PROJECT_DIR}/../
+echo "#include? \"${PROJECT_DIR}/../configs/env.properties\"" > ${PROJECT_DIR}/Config.xcconfig
diff --git a/lib/app.dart b/lib/app.dart
index 9499738..57a0668 100644
--- a/lib/app.dart
+++ b/lib/app.dart
@@ -1,14 +1,17 @@
 import 'dart:async';
+import 'dart:ui';
 
 import 'package:flutter/cupertino.dart';
 import 'package:flutter/material.dart';
 import 'package:flutter_localizations/flutter_localizations.dart';
+import 'package:inspireui/inspireui.dart';
 import 'package:provider/provider.dart';
 import 'package:tuple/tuple.dart';
 
 import 'app_init.dart';
 import 'common/config.dart';
 import 'common/constants.dart';
+import 'common/events.dart';
 import 'common/theme/index.dart';
 import 'common/tools.dart';
 import 'generated/l10n.dart';
@@ -21,12 +24,40 @@ import 'models/index.dart';
 import 'models/tera_wallet/wallet_model.dart';
 import 'modules/dynamic_layout/config/app_config.dart';
 import 'modules/firebase/firebase_service.dart';
+import 'routes/flux_navigate.dart';
 import 'routes/route.dart';
 import 'screens/blog/models/list_blog_model.dart';
+import 'screens/categories/layouts/multi_level.dart';
 import 'screens/index.dart' show ListBlogModel;
 import 'services/index.dart';
 import 'widgets/overlay/custom_overlay_state.dart';
 
+class MyCustomScrollBehavior extends MaterialScrollBehavior {
+  @override
+  Set<PointerDeviceKind> get dragDevices => {
+        PointerDeviceKind.touch,
+        PointerDeviceKind.mouse,
+        PointerDeviceKind.trackpad,
+      };
+
+  @override
+  Widget buildOverscrollIndicator(
+    BuildContext context,
+    Widget child,
+    ScrollableDetails details,
+  ) {
+    return StretchingOverscrollIndicator(
+      axisDirection: details.direction,
+      child: child,
+    );
+  }
+
+  @override
+  ScrollPhysics getScrollPhysics(BuildContext context) {
+    return const ClampingScrollPhysics();
+  }
+}
+
 class App extends StatefulWidget {
   final String languageCode;
 
@@ -45,6 +76,7 @@ class App extends StatefulWidget {
 class AppState extends State<App>
     with WidgetsBindingObserver
     implements NotificationDelegate, UserModelDelegate {
+  final _messangerKey = GlobalKey<ScaffoldMessengerState>();
   AppModel? _app;
   final _product = ProductModel();
   final _wishlist = ProductWishListModel();
@@ -70,6 +102,8 @@ class AppState extends State<App>
   bool isFirstSeen = false;
   bool isLoggedIn = false;
 
+  StreamSubscription? _subAppCookieExpiry;
+
   // late var firebaseAnalyticsAbs;
 
   void appInitialModules() {
@@ -159,8 +193,8 @@ class AppState extends State<App>
           try {
             printLog('[🔽 updateDeviceToken] user cookie ${user.cookie}');
             Services().api.updateUserInfo({'deviceToken': token}, user.cookie);
-          } catch (e) {
-            printLog(e);
+          } catch (err, trace) {
+            printError(err, trace);
           }
         });
       }
@@ -177,15 +211,42 @@ class AppState extends State<App>
 
     appInitialModules();
 
+    _subAppCookieExpiry = eventBus.on<EventExpiredCookie>().listen((event) {
+      _onLogout(isRequiredLogin: event.isRequiredLogin, errMsg: event.errMsg);
+    });
     super.initState();
   }
 
   @override
   void dispose() {
+    _subAppCookieExpiry?.cancel();
     WidgetsBinding.instance.removeObserver(this);
     super.dispose();
   }
 
+  void _onLogout({bool isRequiredLogin = false, String? errMsg}) {
+    // Fix duplicate logout event
+    if (!_user.loggedIn) {
+      return;
+    }
+    cartModel.model.clearAddress();
+    _user.logout();
+    if (isRequiredLogin || Services().widget.isRequiredLogin) {
+      FluxNavigate.pushReplacementNamed(
+        RouteList.login,
+        forceRootNavigator: true,
+      );
+      NavigateTools.navigateToLogin(
+        context,
+        replacement: true,
+      );
+    }
+    if (errMsg?.isNotEmpty ?? false) {
+      _messangerKey.currentState
+          ?.showSnackBar(SnackBar(content: Text(errMsg!)));
+    }
+  }
+
   @override
   Future<void> onLoaded(User? user) async {
     if (!ServerConfig().isShopify) {
@@ -229,9 +290,13 @@ class AppState extends State<App>
     await _wishlist.clearWishList();
     if (Services().firebase.isEnabled) {
       try {
-        await Services().api.updateUserInfo({'deviceToken': ''}, user!.cookie);
-      } catch (e) {
-        printLog(e);
+        if (user?.cookie?.isNotEmpty ?? false) {
+          await Services()
+              .api
+              .updateUserInfo({'deviceToken': ''}, user!.cookie);
+        }
+      } catch (err, trace) {
+        printError(err, trace);
       }
     }
     final notificationService = injector<NotificationService>();
@@ -261,6 +326,7 @@ class AppState extends State<App>
               ? kAdvanceConfig.defaultLanguage
               : langCode.toString();
           var countryCode = '';
+          var isMultiLevel = _app?.categoryLayout == MultiLevelCategories.type;
 
           if (languageCode.contains('_')) {
             countryCode = languageCode.substring(languageCode.indexOf('_') + 1);
@@ -280,7 +346,7 @@ class AppState extends State<App>
                 Provider<RecentModel>.value(value: _recent),
                 ChangeNotifierProvider<UserModel>.value(value: _user),
                 ChangeNotifierProvider<CategoryModel>(create: (_) {
-                  if (kAdvanceConfig.categoryConfig.enableLargeCategories) {
+                  if (kEnableLargeCategories || isMultiLevel) {
                     return MainCategoryModel();
                   }
                   return CategoryModelImpl();
@@ -330,6 +396,10 @@ class AppState extends State<App>
                 ),
               ],
               child: MaterialApp(
+                scaffoldMessengerKey: _messangerKey,
+                scrollBehavior: MyCustomScrollBehavior().copyWith(
+                  scrollbars: false,
+                ),
                 debugShowCheckedModeBanner: false,
                 locale: Locale(languageCode, countryCode),
                 navigatorKey: App.fluxStoreNavigatorKey,
@@ -373,8 +443,9 @@ class AppState extends State<App>
   void onMessageOpenedApp(FStoreNotificationItem notification) async {
     final url = notification.dynamicLink;
     if (url != null) {
-      await FirebaseServices().dynamicLinks?.handleDynamicLink(
-          url, App.fluxStoreNavigatorKey.currentContext!);
+      await FirebaseServices()
+          .dynamicLinks
+          ?.handleDynamicLink(url, App.fluxStoreNavigatorKey.currentContext!);
     }
     _notificationModel.saveMessage(notification);
   }
diff --git a/lib/app_init.dart b/lib/app_init.dart
index 9f1f8b6..13ff676 100644
--- a/lib/app_init.dart
+++ b/lib/app_init.dart
@@ -49,6 +49,8 @@ class _AppInitState extends BaseScreen<AppInit> {
   void setStorageKey(String key) =>
       injector<SharedPreferences>().setBool(key, true);
 
+  AppModel get appModel => Provider.of<AppModel>(context, listen: false);
+
   Future<void> loadInitData() async {
     try {
       printLog('[AppState] Init Data 💫');
@@ -59,15 +61,15 @@ class _AppInitState extends BaseScreen<AppInit> {
       if (ServerConfig().isBuilder) {
         Services().setAppConfig(serverConfig);
       }
-      appConfig = await Provider.of<AppModel>(context, listen: false)
-          .loadAppConfig(config: Configurations.layoutDesign);
+
+      /// Load layout config
+      appConfig = await appModel.loadAppConfig(config: kLayoutConfig);
 
       Future.delayed(Duration.zero, () {
         /// Load more Category/Blog/Attribute Model beforehand
-        final lang = Provider.of<AppModel>(context, listen: false).langCode;
+        final lang = appModel.langCode;
 
         /// Request Categories
-        final appModel = Provider.of<AppModel>(context, listen: false);
         Provider.of<CategoryModel>(context, listen: false).getCategories(
           lang: lang,
           sortingList: appModel.categories,
@@ -112,9 +114,8 @@ class _AppInitState extends BaseScreen<AppInit> {
       );
 
       printLog('[AppState] InitData Finish');
-    } catch (e, trace) {
-      printLog(e.toString());
-      printLog(trace.toString());
+    } catch (err, trace) {
+      printError(err, trace);
     }
   }
 
@@ -129,15 +130,11 @@ class _AppInitState extends BaseScreen<AppInit> {
       if (!seen) {
         if (kAdvanceConfig.showRequestNotification) {
           Navigator.of(context)
-              .pushReplacementNamed(RouteList.notificationRequest)
-              .then((_) {
-            setStorageKey(LocalStorageKey.seen);
-          });
+              .pushReplacementNamed(RouteList.notificationRequest);
           return;
         }
-
+        injector<NotificationService>().requestPermission();
         setStorageKey(LocalStorageKey.seen);
-        return;
       }
     }
 
diff --git a/lib/common/config.dart b/lib/common/config.dart
index 240b69b..49af88b 100644
--- a/lib/common/config.dart
+++ b/lib/common/config.dart
@@ -9,6 +9,7 @@ import 'config/configuration_utils.dart';
 import 'config/loading/index.dart';
 import 'config/models/address_field_config.dart';
 import 'config/models/index.dart';
+import 'config/models/vendor_config.dart';
 
 part 'config/advertise.dart';
 part 'config/blogs.dart';
diff --git a/lib/common/config/configurations.dart b/lib/common/config/configurations.dart
index ddf1a2d..84651c0 100644
--- a/lib/common/config/configurations.dart
+++ b/lib/common/config/configurations.dart
@@ -51,12 +51,15 @@ class Configurations {
   static List<Map> _smartChat = DefaultConfig.smartChat;
   static String _adminEmail = DefaultConfig.adminEmail;
   static String _adminName = DefaultConfig.adminName;
-  static Map _vendorConfig = DefaultConfig.vendorConfig;
+  static VendorConfig _vendorConfig =
+      VendorConfig.fromJson(DefaultConfig.vendorConfig);
   static List<AddressFieldConfig> _addressFields = DefaultConfig.addressFields;
   static List _defaultCountryShipping = DefaultConfig.defaultCountryShipping;
   static Map? _loadingIcon = DefaultConfig.loadingIcon;
   static Map _productCard = DefaultConfig.productCard;
   static Map _loginSMSConstants = DefaultConfig.loginSMSConstants;
+  static PhoneNumberConfig _phoneNumberConfig =
+      PhoneNumberConfig.fromJson(DefaultConfig.phoneNumberConfig);
   static Map _darkConfig = DefaultConfig.darkConfig;
   static Map _lightConfig = DefaultConfig.lightConfig;
   static String _version = DefaultConfig.version;
@@ -169,7 +172,7 @@ class Configurations {
 
   static String get adminName => _adminName;
 
-  static Map get vendorConfig => _vendorConfig;
+  static VendorConfig get vendorConfig => _vendorConfig;
 
   static List<AddressFieldConfig> get addressFields => _addressFields;
 
@@ -181,6 +184,8 @@ class Configurations {
 
   static Map get loginSMSConstants => _loginSMSConstants;
 
+  static PhoneNumberConfig get phoneNumberConfig => _phoneNumberConfig;
+
   static Map get darkConfig => _darkConfig;
 
   static Map get lightConfig => _lightConfig;
@@ -269,7 +274,8 @@ class Configurations {
         List<Map>.from(value['smartChat'] ?? DefaultConfig.smartChat));
     _adminEmail = value['adminEmail'] ?? DefaultConfig.adminEmail;
     _adminName = value['adminName'] ?? DefaultConfig.adminName;
-    _vendorConfig = value['vendorConfig'] ?? DefaultConfig.vendorConfig;
+    _vendorConfig = VendorConfig.fromJson(
+        value['vendorConfig'] ?? DefaultConfig.vendorConfig);
     final addressFieldsData = value['addressFields'];
     if (addressFieldsData is List && addressFieldsData.isNotEmpty) {
       _addressFields = [];
@@ -293,6 +299,8 @@ class Configurations {
     _productCard = value['productCard'] ?? DefaultConfig.productCard;
     _loginSMSConstants =
         value['loginSMSConstants'] ?? DefaultConfig.loginSMSConstants;
+    _phoneNumberConfig = PhoneNumberConfig.fromJson(
+        value['phoneNumberConfig'] ?? DefaultConfig.phoneNumberConfig);
     _darkConfig = value['darkConfig'] ?? DefaultConfig.darkConfig;
     _lightConfig = value['lightConfig'] ?? DefaultConfig.lightConfig;
     _version = value['version'] ?? DefaultConfig.version;
@@ -389,6 +397,39 @@ class Configurations {
           _layoutDesign = Map<String, dynamic>.from(jsonDecode(data));
         }
         break;
+      case 'vendorConfig':
+        try {
+          final data =
+              Services().firebase.getRemoteConfigString('vendorConfig');
+          if (data.isNotEmpty) {
+            _vendorConfig = VendorConfig.fromJson(jsonDecode(data));
+          }
+        } catch (_) {}
+        break;
+      case 'loginSetting':
+        final data = Services().firebase.getRemoteConfigString('loginSetting');
+        if (data.isNotEmpty) {
+          _loginSetting = Map<String, dynamic>.from(jsonDecode(data));
+        }
+        break;
+      case 'paymentConfig':
+        final data = Services().firebase.getRemoteConfigString('paymentConfig');
+        if (data.isNotEmpty) {
+          _paymentConfig = Map<String, dynamic>.from(jsonDecode(data));
+        }
+        break;
+      case 'adminEmail':
+        final data = Services().firebase.getRemoteConfigString('adminEmail');
+        if (data.isNotEmpty) {
+          _adminEmail = data;
+        }
+        break;
+      case 'adminName':
+        final data = Services().firebase.getRemoteConfigString('adminName');
+        if (data.isNotEmpty) {
+          _adminName = data;
+        }
+        break;
       default:
     }
   }
diff --git a/lib/common/config/default_env.dart b/lib/common/config/default_env.dart
index 0bc0b93..5dfe857 100644
--- a/lib/common/config/default_env.dart
+++ b/lib/common/config/default_env.dart
@@ -13,6 +13,16 @@ class DefaultConfig {
   static String countryCodeDefault = 'VN';
   static String dialCodeDefault = '+84';
   static String nameDefault = 'Vietnam';
+  static Map<String, dynamic> phoneNumberConfig = {
+    'enablePhoneNumberValidation': false,
+    'countryCodeDefault': 'VN',
+    'dialCodeDefault': '+84',
+    'useInternationalFormat': true,
+    'selectorFlagAsPrefixIcon': true,
+    'showCountryFlag': true,
+    'customCountryList': [], // List alpha_2_code. E.g: ["VN", "AU"]
+    'selectorType': 'BOTTOM_SHEET', // [DROPDOWN, BOTTOM_SHEET, DIALOG]
+  };
   static Map advanceConfig = {
     'DefaultLanguage': 'en',
     'DetailedBlogLayout': 'halfSizeImageType',
@@ -202,6 +212,8 @@ class DefaultConfig {
     'AlwaysClearWebViewCache': false,
     'WebViewScript': '',
 
+    'AlwaysRefreshBlog': false,
+
     ///support multi currency via WOOCS – Currency Switcher for WooCommerce plugin (https://wordpress.org/plugins/woocommerce-currency-switcher/)
     'EnableWOOCSCurrencySwitcher': false,
 
@@ -219,6 +231,8 @@ class DefaultConfig {
     /// show order notes in order detail with private notes
     'OrderNotesWithPrivateNote': true,
 
+    'OrderNotesLinkSupport': false,
+
     // Enable the request Notify permission from onboarding
     'showRequestNotification': true,
   };
diff --git a/lib/common/config/general.dart b/lib/common/config/general.dart
index 393135e..ecdcd56 100644
--- a/lib/common/config/general.dart
+++ b/lib/common/config/general.dart
@@ -3,6 +3,12 @@ part of '../config.dart';
 /// Default app config, it's possible to set as URL
 String get kAppConfig => Configurations.appConfig;
 
+/// use Firebase Remote Config when appConfig is not URL
+Map<String, dynamic>? get kLayoutConfig =>
+    !(Uri.tryParse(kAppConfig)?.hasAbsolutePath ?? false)
+        ? Configurations.layoutDesign
+        : null;
+
 /// Ref: https://support.inspireui.com/help-center/articles/3/25/16/google-map-address
 /// The Google API Key to support Pick up the Address automatically
 /// We recommend to generate both ios and android to restrict by bundle app id
@@ -42,6 +48,8 @@ class LoginSMSConstants {
       Configurations.nameDefault;
 }
 
+PhoneNumberConfig get kPhoneNumberConfig => Configurations.phoneNumberConfig;
+
 bool get kDefaultDarkTheme => Configurations.defaultDarkTheme;
 
 ThemeConfig get kDarkConfig => ThemeConfig.fromJson(Configurations.darkConfig);
@@ -61,3 +69,8 @@ ProductFilterColor? get productFilterColor =>
     colorOverrideConfig.productFilterColor;
 
 StockColor get kStockColor => colorOverrideConfig.stockColor;
+
+bool get kEnableLargeCategories =>
+    kAdvanceConfig.categoryConfig.enableLargeCategories &&
+    ['woo', 'dokan', 'wcfm', 'bigCommerce', 'shopify', 'presta']
+        .contains(serverConfig['type']);
diff --git a/lib/common/config/models/advanced_config.dart b/lib/common/config/models/advanced_config.dart
index 873a60a..3092a9a 100644
--- a/lib/common/config/models/advanced_config.dart
+++ b/lib/common/config/models/advanced_config.dart
@@ -65,11 +65,13 @@ class AdvancedConfig {
   final bool enableVersionCheck;
   final String ajaxSearchURL;
   final bool alwaysClearWebViewCache;
+  final bool alwaysRefreshBlog;
   final GdprConfig gdprConfig;
   final bool orderNotesWithPrivateNote;
+  final bool orderNotesLinkSupport;
   final bool showRequestNotification;
   final InAppUpdateForAndroidConfig inAppUpdateForAndroid;
-  final CategoryConfig categoryConfig;
+  final CategoryAdvanceConfig categoryConfig;
   final List<String> pinnedProductTags;
 
   AdvancedConfig({
@@ -129,8 +131,10 @@ class AdvancedConfig {
     required this.enableVersionCheck,
     required this.ajaxSearchURL,
     required this.alwaysClearWebViewCache,
+    required this.alwaysRefreshBlog,
     required this.gdprConfig,
     required this.orderNotesWithPrivateNote,
+    required this.orderNotesLinkSupport,
     required this.showRequestNotification,
     required this.inAppUpdateForAndroid,
     required this.categoryConfig,
@@ -274,14 +278,19 @@ class AdvancedConfig {
           json['AjaxSearchURL'] ?? DefaultConfig.advanceConfig['AjaxSearchURL'],
       alwaysClearWebViewCache: json['AlwaysClearWebViewCache'] ??
           DefaultConfig.advanceConfig['AlwaysClearWebViewCache'],
+      alwaysRefreshBlog: json['AlwaysRefreshBlog'] ??
+          DefaultConfig.advanceConfig['AlwaysRefreshBlog'],
       gdprConfig: GdprConfig.fromMap(json['gdpr'] ?? {}),
       orderNotesWithPrivateNote: json['OrderNotesWithPrivateNote'] ??
           DefaultConfig.advanceConfig['OrderNotesWithPrivateNote'],
+      orderNotesLinkSupport: json['OrderNotesLinkSupport'] ??
+          DefaultConfig.advanceConfig['OrderNotesLinkSupport'],
       showRequestNotification: json['showRequestNotification'] ??
           DefaultConfig.advanceConfig['showRequestNotification'],
       inAppUpdateForAndroid: InAppUpdateForAndroidConfig.fromJson(
           json['inAppUpdateForAndroid'] ?? {}),
-      categoryConfig: CategoryConfig.fromJson(json['categoryConfig'] ?? {}),
+      categoryConfig:
+          CategoryAdvanceConfig.fromJson(json['categoryConfig'] ?? {}),
       pinnedProductTags: <String>[
         ...(json['pinnedProductTags'] is List
             ? json['pinnedProductTags']
@@ -353,7 +362,9 @@ class AdvancedConfig {
     data['EnableVersionCheck'] = enableVersionCheck;
     data['AjaxSearchURL'] = ajaxSearchURL;
     data['AlwaysClearWebViewCache'] = alwaysClearWebViewCache;
+    data['AlwaysRefreshBlog'] = alwaysRefreshBlog;
     data['OrderNotesWithPrivateNote'] = orderNotesWithPrivateNote;
+    data['OrderNotesLinkSupport'] = orderNotesLinkSupport;
     data['inAppUpdateForAndroid'] = inAppUpdateForAndroid.toJson();
     data['categoryConfig'] = categoryConfig.toJson();
     data['pinnedProductTags'] = List<String>.from(pinnedProductTags);
diff --git a/lib/common/config/models/category_config.dart b/lib/common/config/models/category_config.dart
index 42482e6..3223d34 100644
--- a/lib/common/config/models/category_config.dart
+++ b/lib/common/config/models/category_config.dart
@@ -1,43 +1,50 @@
-class CategoryConfig {
+class CategoryAdvanceConfig {
   final bool enableLargeCategories;
+  final int deepLevel;
 
-  const CategoryConfig({
+  const CategoryAdvanceConfig({
     required this.enableLargeCategories,
+    this.deepLevel = 2,
   });
 
   @override
   bool operator ==(Object other) =>
       identical(this, other) ||
-      (other is CategoryConfig &&
+      (other is CategoryAdvanceConfig &&
           runtimeType == other.runtimeType &&
-          enableLargeCategories == other.enableLargeCategories);
+          enableLargeCategories == other.enableLargeCategories &&
+          deepLevel == other.deepLevel);
 
   @override
-  int get hashCode => enableLargeCategories.hashCode;
+  int get hashCode => enableLargeCategories.hashCode ^ deepLevel.hashCode;
 
   @override
   String toString() {
-    return 'CategoryConfig{ enableLargeCategories: $enableLargeCategories,}';
+    return 'CategoryConfig{ enableLargeCategories: $enableLargeCategories, deepLevel: $deepLevel,}';
   }
 
-  CategoryConfig copyWith({
+  CategoryAdvanceConfig copyWith({
     bool? enableLargeCategories,
+    int? deepLevel,
   }) {
-    return CategoryConfig(
+    return CategoryAdvanceConfig(
       enableLargeCategories:
           enableLargeCategories ?? this.enableLargeCategories,
+      deepLevel: deepLevel ?? this.deepLevel,
     );
   }
 
   Map<String, dynamic> toJson() {
     return {
       'enableLargeCategories': enableLargeCategories,
+      'deepLevel': deepLevel,
     };
   }
 
-  factory CategoryConfig.fromJson(Map<String, dynamic> map) {
-    return CategoryConfig(
-      enableLargeCategories: map['enableLargeCategories'] ?? false,
+  factory CategoryAdvanceConfig.fromJson(Map<String, dynamic> map) {
+    return CategoryAdvanceConfig(
+      enableLargeCategories: (map['enableLargeCategories'] as bool?) ?? false,
+      deepLevel: (map['deepLevel'] as int?) ?? 2,
     );
   }
 }
diff --git a/lib/common/config/models/general_setting_item.dart b/lib/common/config/models/general_setting_item.dart
index f5a809e..54147c8 100644
--- a/lib/common/config/models/general_setting_item.dart
+++ b/lib/common/config/models/general_setting_item.dart
@@ -135,43 +135,69 @@ class GeneralSettingItem {
 }
 
 class GeneralButton {
+  String? text;
   String? image;
+  String? textColor;
+  num textFontSize = 14.0;
   num width = 40;
   num height = 40;
   num radius = 0;
   num marginLeft = 5.0;
   num marginRight = 5.0;
-  String? webUrl;
+  String? webUrl; // No longer in use
+  Map<String, dynamic> navigator = {};
 
   GeneralButton({
+    this.text,
     this.image,
+    this.textColor,
+    this.textFontSize = 14.0,
     this.width = 40,
     this.height = 40,
     this.radius = 0,
     this.marginLeft = 5.0,
     this.marginRight = 5.0,
     this.webUrl,
+    this.navigator = const {},
   });
 
   GeneralButton.fromJson(dynamic json) {
+    text = json['text'];
     image = json['image'];
+    textColor = json['textColor'];
+    textFontSize = json['textFontSize'] ?? 14.0;
     width = json['width'] ?? 40.0;
     height = json['height'] ?? 40.0;
     radius = json['radius'] ?? 0.0;
     marginLeft = json['marginLeft'] ?? 5.0;
     marginRight = json['marginRight'] ?? 5.0;
     webUrl = json['webUrl'];
+
+    // To adapt to old config, include only webUrl
+    navigator = Map.from(
+        json['navigator'] ?? <String, dynamic>{'url_launch': json['webUrl']});
   }
 
   Map<String, dynamic> toJson() {
     var map = <String, dynamic>{};
+    map['text'] = text;
     map['image'] = image;
+    map['textColor'] = textColor;
+    map['textFontSize'] = textFontSize;
     map['width'] = width;
     map['radius'] = radius;
     map['marginLeft'] = marginLeft;
     map['marginRight'] = marginRight;
     map['height'] = height;
     map['webUrl'] = webUrl;
+
+    var navigatorMap = <String, dynamic>{};
+    for (var key in navigator.keys) {
+      if (navigator[key] != null) {
+        navigatorMap[key] = navigator[key];
+      }
+    }
+    map['navigator'] = Map.from(navigatorMap);
     map.removeWhere((key, value) => value == null);
     return map;
   }
diff --git a/lib/common/config/models/in_app_update_for_android_config.dart b/lib/common/config/models/in_app_update_for_android_config.dart
index 7cb7992..0f549c9 100644
--- a/lib/common/config/models/in_app_update_for_android_config.dart
+++ b/lib/common/config/models/in_app_update_for_android_config.dart
@@ -20,6 +20,16 @@ class InAppUpdateForAndroidConfig {
       typeUpdate: '${json['typeUpdate']}'.toTypeUpdate(),
     );
   }
+
+  InAppUpdateForAndroidConfig copyWith({
+    bool? enable,
+    TypeUpdate? typeUpdate,
+  }) {
+    return InAppUpdateForAndroidConfig(
+      enable: enable ?? this.enable,
+      typeUpdate: typeUpdate ?? this.typeUpdate,
+    );
+  }
 }
 
 enum TypeUpdate {
diff --git a/lib/common/config/models/index.dart b/lib/common/config/models/index.dart
index d75aa25..04dca2c 100644
--- a/lib/common/config/models/index.dart
+++ b/lib/common/config/models/index.dart
@@ -3,9 +3,11 @@ export 'age_restriction_config.dart';
 export 'color_override_config.dart';
 export 'general_setting_item.dart';
 export 'google_api_key_config.dart';
+export 'in_app_update_for_android_config.dart';
 export 'loading_config.dart';
 export 'login_config.dart';
 export 'payment_config.dart';
+export 'phone_number_config.dart';
 export 'product_card_config.dart';
 export 'product_detail_config.dart';
 export 'theme_config.dart';
diff --git a/lib/common/config/models/phone_number_config.dart b/lib/common/config/models/phone_number_config.dart
new file mode 100644
index 0000000..65db0f0
--- /dev/null
+++ b/lib/common/config/models/phone_number_config.dart
@@ -0,0 +1,101 @@
+import 'package:intl_phone_number_input/intl_phone_number_input.dart'
+    show PhoneInputSelectorType;
+export 'package:intl_phone_number_input/intl_phone_number_input.dart'
+    show PhoneInputSelectorType;
+
+class PhoneNumberConfig {
+  final bool enablePhoneNumberValidation;
+  final String countryCodeDefault;
+  final String dialCodeDefault;
+  final bool useInternationalFormat;
+  final bool showCountryFlag;
+  final List<String> customCountryList;
+  final bool formatInput;
+  final PhoneInputSelectorType selectorType;
+  final bool selectorFlagAsPrefixIcon;
+
+  PhoneNumberConfig({
+    this.enablePhoneNumberValidation = false,
+    this.countryCodeDefault = 'VN',
+    this.dialCodeDefault = '+84',
+    this.useInternationalFormat = true,
+    this.showCountryFlag = true,
+    this.customCountryList = const [],
+    this.formatInput = false,
+    this.selectorType = PhoneInputSelectorType.BOTTOM_SHEET,
+    this.selectorFlagAsPrefixIcon = true,
+  });
+
+  factory PhoneNumberConfig.fromJson(Map json) {
+    return PhoneNumberConfig(
+      enablePhoneNumberValidation: json['enable'] ?? false,
+      countryCodeDefault: json['countryCodeDefault'] ?? 'VN',
+      dialCodeDefault: json['dialCodeDefault'] ?? '+84',
+      useInternationalFormat: json['useInternationalFormat'] ?? true,
+      showCountryFlag: json['showCountryFlag'] ?? true,
+      customCountryList: json['customCountryList'] is List
+          ? <String>[...json['customCountryList']]
+          : [],
+      formatInput: json['formatInput'] ?? false,
+      selectorType: '${json['selectorType']}'.toPhoneInputSelectorType(),
+      selectorFlagAsPrefixIcon: json['selectorFlagAsPrefixIcon'] ?? true,
+    );
+  }
+
+  Map<String, dynamic> toJson() {
+    var data = <String, dynamic>{};
+    data['enable'] = enablePhoneNumberValidation;
+    data['countryCodeDefault'] = countryCodeDefault;
+    data['dialCodeDefault'] = dialCodeDefault;
+    data['useInternationalFormat'] = useInternationalFormat;
+    data['showCountryFlag'] = showCountryFlag;
+    data['customCountryList'] = customCountryList;
+    data['formatInput'] = formatInput;
+    data['selectorType'] = selectorType.name;
+    data['selectorFlagAsPrefixIcon'] = selectorFlagAsPrefixIcon;
+    return data;
+  }
+
+  PhoneNumberConfig copyWith({
+    bool? enablePhoneNumberValidation,
+    String? countryCodeDefault,
+    String? dialCodeDefault,
+    bool? useInternationalFormat,
+    bool? showCountryFlag,
+    List<String>? customCountryList,
+    bool? formatInput,
+    PhoneInputSelectorType? selectorType,
+    bool? selectorFlagAsPrefixIcon,
+  }) {
+    return PhoneNumberConfig(
+      enablePhoneNumberValidation:
+          enablePhoneNumberValidation ?? this.enablePhoneNumberValidation,
+      countryCodeDefault: countryCodeDefault ?? this.countryCodeDefault,
+      dialCodeDefault: dialCodeDefault ?? this.dialCodeDefault,
+      useInternationalFormat:
+          useInternationalFormat ?? this.useInternationalFormat,
+      showCountryFlag: showCountryFlag ?? this.showCountryFlag,
+      customCountryList: List<String>.from(
+        customCountryList ?? this.customCountryList,
+      ),
+      formatInput: formatInput ?? this.formatInput,
+      selectorType: selectorType ?? this.selectorType,
+      selectorFlagAsPrefixIcon:
+          selectorFlagAsPrefixIcon ?? this.selectorFlagAsPrefixIcon,
+    );
+  }
+}
+
+extension on String {
+  PhoneInputSelectorType toPhoneInputSelectorType() {
+    switch (this) {
+      case 'DIALOG':
+        return PhoneInputSelectorType.DIALOG;
+      case 'DROPDOWN':
+        return PhoneInputSelectorType.DROPDOWN;
+      case 'BOTTOM_SHEET':
+      default:
+        return PhoneInputSelectorType.BOTTOM_SHEET;
+    }
+  }
+}
diff --git a/lib/common/config/models/product_detail_config.dart b/lib/common/config/models/product_detail_config.dart
index 7926d54..a02a4ac 100644
--- a/lib/common/config/models/product_detail_config.dart
+++ b/lib/common/config/models/product_detail_config.dart
@@ -1,3 +1,4 @@
+import '../../../modules/dynamic_layout/helper/helper.dart';
 import '../../tools.dart';
 
 class ProductDetailConfig {
@@ -24,7 +25,7 @@ class ProductDetailConfig {
   late final bool showBrand;
   late final bool showQuantityInList;
   late final bool showAddToCartInSearchResult;
-  late final num productListItemHeight;
+  late final double productListItemHeight;
   late final String boxFit;
   late final bool sliderShowGoBackButton;
   late final SliderIndicatorType sliderIndicatorType;
@@ -33,6 +34,9 @@ class ProductDetailConfig {
   late final bool showRelatedProductFromSameStore;
   late final bool showRelatedProduct;
 
+  /// list, page
+  late final ProductImageType productImageLayout;
+
   ProductDetailConfig({
     required this.height,
     required this.marginTop,
@@ -65,6 +69,7 @@ class ProductDetailConfig {
     required this.showRelatedProductFromSameStore,
     required this.showRelatedProduct,
     this.limitDayBooking,
+    required this.productImageLayout,
   });
 
   ProductDetailConfig.fromJson(Map config) {
@@ -93,7 +98,8 @@ class ProductDetailConfig {
     showQuantityInList = config['showQuantityInList'] ?? false;
     showAddToCartInSearchResult =
         config['showAddToCartInSearchResult'] ?? false;
-    productListItemHeight = config['productListItemHeight'] ?? 125;
+    productListItemHeight =
+        Helper.formatDouble(config['productListItemHeight']) ?? 125.0;
     limitDayBooking = config['limitDayBooking'];
     boxFit = config['boxFit'] ?? 'cover';
     sliderShowGoBackButton = config['SliderShowGoBackButton'] ?? true;
@@ -103,6 +109,8 @@ class ProductDetailConfig {
     showRelatedProductFromSameStore =
         config['showRelatedProductFromSameStore'] ?? true;
     showRelatedProduct = config['showRelatedProduct'] ?? true;
+    productImageLayout =
+        ProductImageType.fromString(config['productImageLayout']);
   }
 
   ProductDetailConfig copyWith({
@@ -129,7 +137,7 @@ class ProductDetailConfig {
     bool? showBrand,
     bool? showQuantityInList,
     bool? showAddToCartInSearchResult,
-    num? productListItemHeight,
+    double? productListItemHeight,
     int? limitDayBooking,
     String? boxFit,
     bool? sliderShowGoBackButton,
@@ -137,6 +145,7 @@ class ProductDetailConfig {
     String? productMetaDataKey,
     bool? showRelatedProductFromSameStore,
     bool? showRelatedProduct,
+    String? productImageLayout,
   }) {
     return ProductDetailConfig(
       height: height ?? this.height,
@@ -178,6 +187,8 @@ class ProductDetailConfig {
       showRelatedProductFromSameStore: showRelatedProductFromSameStore ??
           this.showRelatedProductFromSameStore,
       showRelatedProduct: showRelatedProduct ?? this.showRelatedProduct,
+      productImageLayout: ProductImageType.fromString(
+          productImageLayout ?? this.productImageLayout.name),
     );
   }
 
@@ -214,6 +225,7 @@ class ProductDetailConfig {
       'productMetaDataKey': productMetaDataKey,
       'showRelatedProductFromSameStore': showRelatedProductFromSameStore,
       'showRelatedProduct': showRelatedProduct,
+      'productImageLayout': productImageLayout.name,
     };
   }
 }
@@ -224,6 +236,26 @@ enum SliderIndicatorType {
   dotAlt,
 }
 
+enum ProductImageType {
+  list,
+  page;
+
+  bool get isList => this == ProductImageType.list;
+
+  bool get isPage => this == ProductImageType.page;
+
+  factory ProductImageType.fromString(String? type) {
+    switch (type) {
+      case 'list':
+        return ProductImageType.list;
+      case 'page':
+        return ProductImageType.page;
+      default:
+        return ProductImageType.page;
+    }
+  }
+}
+
 extension SliderIndicatorTypeExt on SliderIndicatorType? {
   String toShortString() {
     switch (this) {
diff --git a/lib/common/config/models/vendor_config.dart b/lib/common/config/models/vendor_config.dart
new file mode 100644
index 0000000..e67f4ee
--- /dev/null
+++ b/lib/common/config/models/vendor_config.dart
@@ -0,0 +1,115 @@
+class VendorConfig {
+  final bool vendorRegister;
+  final bool disableVendorShipping;
+  final bool showAllVendorMarkers;
+  final bool disableNativeStoreManagement;
+  final String dokan;
+  final String wcfm;
+  final bool disableMultiVendorCheckout;
+  final bool disablePendingProduct;
+  final String newProductStatus;
+  final String? defaultStoreImage;
+  final bool enableAutoApplicationApproval;
+  final String? bannerFit;
+  final bool expandStoreLocationByDefault;
+  final bool disableDeliveryManagement;
+
+  VendorConfig({
+    this.vendorRegister = false,
+    this.disableVendorShipping = true,
+    this.showAllVendorMarkers = true,
+    this.disableNativeStoreManagement = true,
+    this.dokan = '',
+    this.wcfm = '',
+    this.disableMultiVendorCheckout = false,
+    this.disablePendingProduct = false,
+    this.newProductStatus = 'draft',
+    this.defaultStoreImage,
+    this.enableAutoApplicationApproval = false,
+    this.bannerFit,
+    this.expandStoreLocationByDefault = true,
+    this.disableDeliveryManagement = true,
+  });
+
+  factory VendorConfig.fromJson(Map json) {
+    return VendorConfig(
+      vendorRegister: json['VendorRegister'] == true,
+      disableVendorShipping: json['DisableVendorShipping'] != false,
+      showAllVendorMarkers: json['ShowAllVendorMarkers'] != false,
+      disableNativeStoreManagement:
+          json['DisableNativeStoreManagement'] != false,
+      dokan: '${json['dokan']}',
+      wcfm: '${json['wcfm']}',
+      disableMultiVendorCheckout: json['DisableMultiVendorCheckout'] == true,
+      disablePendingProduct: json['DisablePendingProduct'] == true,
+      newProductStatus: '${json['NewProductStatus'] ?? 'draft'}',
+      defaultStoreImage: json['DefaultStoreImage'],
+      enableAutoApplicationApproval:
+          json['EnableAutoApplicationApproval'] == true,
+      bannerFit: json['BannerFit'],
+      expandStoreLocationByDefault:
+          json['ExpandStoreLocationByDefault'] != false,
+      disableDeliveryManagement: json['DisableDeliveryManagement'] != false,
+    );
+  }
+
+  Map<String, dynamic> toJson() {
+    final data = <String, dynamic>{};
+    data['VendorRegister'] = vendorRegister;
+    data['DisableVendorShipping'] = disableVendorShipping;
+    data['ShowAllVendorMarkers'] = showAllVendorMarkers;
+    data['DisableNativeStoreManagement'] = disableNativeStoreManagement;
+    data['dokan'] = dokan;
+    data['wcfm'] = wcfm;
+    data['DisableMultiVendorCheckout'] = disableMultiVendorCheckout;
+    data['DisablePendingProduct'] = disablePendingProduct;
+    data['NewProductStatus'] = newProductStatus;
+    data['DefaultStoreImage'] = defaultStoreImage;
+    data['EnableAutoApplicationApproval'] = enableAutoApplicationApproval;
+    data['BannerFit'] = bannerFit;
+    data['ExpandStoreLocationByDefault'] = expandStoreLocationByDefault;
+    data['DisableDeliveryManagement'] = disableDeliveryManagement;
+    return data;
+  }
+
+  VendorConfig copyWith({
+    bool? vendorRegister,
+    bool? disableVendorShipping,
+    bool? showAllVendorMarkers,
+    bool? disableNativeStoreManagement,
+    String? dokan,
+    String? wcfm,
+    bool? disableMultiVendorCheckout,
+    bool? disablePendingProduct,
+    String? newProductStatus,
+    String? defaultStoreImage,
+    bool? enableAutoApplicationApproval,
+    String? bannerFit,
+    bool? expandStoreLocationByDefault,
+    bool? disableDeliveryManagement,
+  }) {
+    return VendorConfig(
+      vendorRegister: vendorRegister ?? this.vendorRegister,
+      disableVendorShipping:
+          disableVendorShipping ?? this.disableVendorShipping,
+      showAllVendorMarkers: showAllVendorMarkers ?? this.showAllVendorMarkers,
+      disableNativeStoreManagement:
+          disableNativeStoreManagement ?? this.disableNativeStoreManagement,
+      dokan: dokan ?? this.dokan,
+      wcfm: wcfm ?? this.wcfm,
+      disableMultiVendorCheckout:
+          disableMultiVendorCheckout ?? this.disableMultiVendorCheckout,
+      disablePendingProduct:
+          disablePendingProduct ?? this.disablePendingProduct,
+      newProductStatus: newProductStatus ?? this.newProductStatus,
+      defaultStoreImage: defaultStoreImage ?? this.defaultStoreImage,
+      enableAutoApplicationApproval:
+          enableAutoApplicationApproval ?? this.enableAutoApplicationApproval,
+      bannerFit: bannerFit ?? this.bannerFit,
+      expandStoreLocationByDefault:
+          expandStoreLocationByDefault ?? this.expandStoreLocationByDefault,
+      disableDeliveryManagement:
+          disableDeliveryManagement ?? this.disableDeliveryManagement,
+    );
+  }
+}
diff --git a/lib/common/config/vendor.dart b/lib/common/config/vendor.dart
index c6f928f..0326dae 100644
--- a/lib/common/config/vendor.dart
+++ b/lib/common/config/vendor.dart
@@ -3,4 +3,4 @@ part of '../config.dart';
 /// Everything Config about the Vendor Setting
 
 /// Setting for Vendor Feature
-Map get kVendorConfig => Configurations.vendorConfig;
+VendorConfig get kVendorConfig => Configurations.vendorConfig;
diff --git a/lib/common/constants.dart b/lib/common/constants.dart
index 6e77cb7..016debd 100644
--- a/lib/common/constants.dart
+++ b/lib/common/constants.dart
@@ -3,10 +3,13 @@ import 'dart:io';
 import 'package:flutter/material.dart';
 import 'package:path_provider/path_provider.dart';
 import 'package:pull_to_refresh/pull_to_refresh.dart';
+import 'package:shared_preferences/shared_preferences.dart';
 import 'package:universal_platform/universal_platform.dart';
 
 import '../generated/l10n.dart';
 import '../models/index.dart' show ProductVariation;
+import '../services/dependency_injection.dart';
+import '../services/service_config.dart';
 import 'config.dart';
 
 export 'package:inspireui/extensions.dart';
diff --git a/lib/common/constants/events.dart b/lib/common/constants/events.dart
index c3269ca..5da4fba 100644
--- a/lib/common/constants/events.dart
+++ b/lib/common/constants/events.dart
@@ -29,3 +29,7 @@ class EventChangeSelectedVariation {
 
   const EventChangeSelectedVariation(this.productVariation);
 }
+
+class EventLoadedAppConfig {
+  const EventLoadedAppConfig();
+}
diff --git a/lib/common/constants/general.dart b/lib/common/constants/general.dart
index 205ff4e..2fca675 100644
--- a/lib/common/constants/general.dart
+++ b/lib/common/constants/general.dart
@@ -36,7 +36,8 @@ const kMagentoPayments = [
   'HyperPay_SadadPayware'
 ];
 
-const apiPageSize = 20;
+/// The result is limited to 10 items (https://tppr.me/QYsm9) if `options` or `modifiers` is used in `include` field. Refer to this link https://developer.bigcommerce.com/api-reference/4101d472a814d-get-all-products. So we need to override apiPageSize to 10 instead
+final apiPageSize = ServerConfig().isBigCommerce ? 10 : 20;
 
 ///-----FLUXSTORE LISTING-----///
 enum BookStatus { booked, unavailable, waiting, confirmed, cancelled, error }
@@ -62,6 +63,9 @@ class SplashScreenTypeConstants {
 //Legit roles to access post management at Setting screens.
 const addPostAccessibleRoles = ['author', 'administrator'];
 
+const kEmptyCategoryID = '-1';
+const kRootCategoryID = '0';
+
 const isrgRootX1 = '''-----BEGIN CERTIFICATE-----
 MIIFazCCA1OgAwIBAgIRAIIQz7DSQONZRGPgu2OCiwAwDQYJKoZIhvcNAQELBQAw
 TzELMAkGA1UEBhMCVVMxKTAnBgNVBAoTIEludGVybmV0IFNlY3VyaXR5IFJlc2Vh
diff --git a/lib/common/constants/images.dart b/lib/common/constants/images.dart
index 081d29f..c24eef6 100644
--- a/lib/common/constants/images.dart
+++ b/lib/common/constants/images.dart
@@ -59,3 +59,5 @@ const Map kCategoryStaticImages = {
 
 /// This image proxy is use to optimize the image loading the or resolve the CORS
 const kImageProxy = '';
+
+const kCacheImageWidth = 700;
diff --git a/lib/common/constants/local_storage_key.dart b/lib/common/constants/local_storage_key.dart
index 02d539c..474185d 100644
--- a/lib/common/constants/local_storage_key.dart
+++ b/lib/common/constants/local_storage_key.dart
@@ -21,6 +21,16 @@ class LocalStorageKey {
   static const String posAddress = 'posAddress';
   static const String askedAgeRestriction = 'askedAgeRestriction';
   static const String popupBannerLastUpdatedTime = 'popupBannerLastUpdatedTime';
+  static const String currencyCode = 'currencyCode';
+  static const String currency = 'currency';
+  static const String languageCode = 'language';
+  static const String countryCode = 'countryCode';
+}
+
+extension LocalStorageKeyExtension on String {
+  String? get fromLocalStorage {
+    return injector<SharedPreferences>().getString(this);
+  }
 }
 
 class FileHelper {
diff --git a/lib/common/constants/route_list.dart b/lib/common/constants/route_list.dart
index ef88d9b..3706406 100644
--- a/lib/common/constants/route_list.dart
+++ b/lib/common/constants/route_list.dart
@@ -130,4 +130,8 @@ class RouteList {
   static const String digitsMobileLogin = 'digitsMobileLogin';
 
   static const String webview = 'webview';
+
+  static const String tabMenu = 'tabMenu';
+  static const String scrollable = 'scrollable';
+  static const String pageTab = 'pageTab';
 }
diff --git a/lib/common/constants/vendors.dart b/lib/common/constants/vendors.dart
index 73d5fa7..b4735a7 100644
--- a/lib/common/constants/vendors.dart
+++ b/lib/common/constants/vendors.dart
@@ -1,8 +1,8 @@
 part of '../constants.dart';
 
 /// Default Vendor image
-final kDefaultStoreImage = kVendorConfig['DefaultStoreImage'] ??
-    'assets/images/default-store-banner.png';
+final kDefaultStoreImage =
+    kVendorConfig.defaultStoreImage ?? 'assets/images/default-store-banner.png';
 
 /// Default status when Add New Product from app
-final kNewProductStatus = kVendorConfig['NewProductStatus'] ?? 'draft';
+final kNewProductStatus = kVendorConfig.newProductStatus;
diff --git a/lib/common/events.dart b/lib/common/events.dart
new file mode 100644
index 0000000..8b52853
--- /dev/null
+++ b/lib/common/events.dart
@@ -0,0 +1,5 @@
+class EventExpiredCookie {
+  const EventExpiredCookie({this.isRequiredLogin = false, this.errMsg});
+  final bool isRequiredLogin;
+  final String? errMsg;
+}
diff --git a/lib/common/tools.dart b/lib/common/tools.dart
index 943e3d3..941a82b 100644
--- a/lib/common/tools.dart
+++ b/lib/common/tools.dart
@@ -3,7 +3,6 @@ export 'package:inspireui/utils.dart' show HexColor, Videos, EncodeUtils;
 
 export 'extensions/extensions.dart';
 
-export 'tools/adaptive_tools.dart';
 export 'tools/image_tools.dart';
 export 'tools/navigate_tools.dart';
 export 'tools/notion_data_tools.dart';
diff --git a/lib/common/tools/adaptive_tools.dart b/lib/common/tools/adaptive_tools.dart
deleted file mode 100644
index 10c9eb5..0000000
--- a/lib/common/tools/adaptive_tools.dart
+++ /dev/null
@@ -1,31 +0,0 @@
-import 'package:flutter/material.dart';
-
-import '../extensions/extensions.dart';
-
-enum DisplayType {
-  desktop,
-  tablet,
-  mobile,
-}
-
-const kLimitWidthScreen = 1400.0;
-const _desktopBreakpointWstH = 1024.0; // Width is smaller than Height
-const _desktopBreakpointWgtH = 700.0; // Width is greater than Height
-
-extension BuildContextExt2 on BuildContext {
-  bool get isRtl => Directionality.of(this) == TextDirection.rtl;
-
-  bool get isBigScreen {
-    return query.size.width >= 768;
-  }
-
-  DisplayType get displayType {
-    final size = query.size;
-    if ((size.width < size.height && size.width <= _desktopBreakpointWstH) ||
-        (size.width > size.height && size.width <= _desktopBreakpointWgtH)) {
-      return DisplayType.mobile;
-    } else {
-      return DisplayType.desktop;
-    }
-  }
-}
diff --git a/lib/common/tools/image_resize.dart b/lib/common/tools/image_resize.dart
new file mode 100644
index 0000000..cfd97f1
--- /dev/null
+++ b/lib/common/tools/image_resize.dart
@@ -0,0 +1,169 @@
+import 'dart:async';
+
+import 'package:extended_image/extended_image.dart';
+import 'package:flutter/material.dart';
+// import 'package:image_fade/image_fade.dart';
+import 'package:inspireui/inspireui.dart' show Skeleton;
+import 'package:transparent_image/transparent_image.dart';
+
+import '../config.dart' show kAdvanceConfig;
+import '../constants.dart' show kCacheImageWidth, kEmptyColor, kIsWeb;
+import '../tools.dart';
+
+// ignore: camel_case_types
+enum kSize { small, medium, large }
+
+class ImageResize extends StatelessWidget {
+  final String? url;
+  final kSize? size;
+  final double? width;
+  final double? height;
+  final BoxFit? fit;
+  final String? tag;
+  final double offset;
+  final bool isResize;
+  final bool hidePlaceHolder;
+  final bool forceWhiteBackground;
+  final String kImageProxy;
+
+  const ImageResize({
+    Key? key,
+    this.url,
+    this.size,
+    this.width,
+    this.height,
+    this.fit,
+    this.tag,
+    this.isResize = false,
+    this.hidePlaceHolder = false,
+    this.offset = 0.0,
+    this.forceWhiteBackground = false,
+    this.kImageProxy = '',
+  }) : super(key: key);
+
+  @override
+  Widget build(BuildContext context) {
+    var width = this.width;
+    if (height == null && width == null) {
+      width = 200;
+    }
+    var ratioImage = kAdvanceConfig.ratioProductImage;
+
+    if (url?.isEmpty ?? true) {
+      return FutureBuilder<bool>(
+        future: Future.delayed(const Duration(seconds: 10), () => false),
+        initialData: true,
+        builder: (context, snapshot) {
+          final showSkeleton = snapshot.data!;
+          return AnimatedSwitcher(
+            duration: const Duration(milliseconds: 500),
+            child: showSkeleton
+                ? Skeleton(
+                    width: width!,
+                    height: height ?? width * ratioImage,
+                  )
+                : SizedBox(
+                    width: width,
+                    height: height ?? width! * ratioImage,
+                    child: const Icon(Icons.error_outline),
+                  ),
+          );
+        },
+      );
+    }
+
+    if (kIsWeb) {
+      /// temporary fix on CavansKit https://github.com/flutter/flutter/issues/49725
+      var imageURL = isResize ? ImageTools.formatImage(url, size) : url;
+
+      var imageProxy = '$kImageProxy${width}x,q50/';
+      if (kImageProxy.isEmpty) {
+        /// this image proxy is use for demo purpose, please make your own one
+        imageProxy = 'https://cors.mstore.io/';
+      }
+
+      return ConstrainedBox(
+        constraints: BoxConstraints(maxHeight: width! * ratioImage),
+        child: FadeInImage.memoryNetwork(
+          image: '$imageProxy$imageURL',
+          fit: fit,
+          width: width,
+          height: height,
+          placeholder: kTransparentImage,
+        ),
+      );
+    }
+
+    final cacheWidth =
+        (width != null && width > 0) ? (width * 2.5).toInt() : kCacheImageWidth;
+
+    final image = ExtendedImage.network(
+      isResize ? ImageTools.formatImage(url, size)! : url!,
+      width: width,
+      height: height,
+      fit: fit,
+      cache: true,
+      timeRetry: const Duration(milliseconds: 500),
+      clearMemoryCacheWhenDispose: true,
+      cacheWidth: cacheWidth,
+      enableLoadState: false,
+      alignment: Alignment(
+        (offset >= -1 && offset <= 1)
+            ? offset
+            : (offset > 0)
+                ? 1.0
+                : -1.0,
+        0.0,
+      ),
+      loadStateChanged: (ExtendedImageState state) {
+        Widget? widget;
+        switch (state.extendedImageLoadState) {
+          case LoadState.loading:
+            widget = hidePlaceHolder
+                ? const SizedBox()
+                : Skeleton(
+                    width: width ?? 100,
+                    height: width != null
+                        ? width * (ratioImage * 1.0)
+                        : 100.0 * ratioImage,
+                  );
+            break;
+          case LoadState.completed:
+            return state.completedWidget;
+          // return ImageFade(
+          //   image: state.imageProvider,
+          //   width: width,
+          //   height: height,
+          //   fit: fit ?? BoxFit.scaleDown,
+          //   alignment: Alignment(
+          //     (offset >= -1 && offset <= 1)
+          //         ? offset
+          //         : (offset > 0)
+          //             ? 1.0
+          //             : -1.0,
+          //     0.0,
+          //   ),
+          //   duration: const Duration(milliseconds: 250),
+          // );
+          case LoadState.failed:
+            widget = Container(
+              width: width,
+              height: height ?? width! * ratioImage,
+              color: const Color(kEmptyColor),
+            );
+            break;
+        }
+        return widget;
+      },
+    );
+
+    if (forceWhiteBackground && url!.toLowerCase().endsWith('.png')) {
+      return Container(
+        color: Colors.white,
+        child: image,
+      );
+    }
+
+    return image;
+  }
+}
diff --git a/lib/common/tools/image_tools.dart b/lib/common/tools/image_tools.dart
index a283f08..f75264b 100644
--- a/lib/common/tools/image_tools.dart
+++ b/lib/common/tools/image_tools.dart
@@ -4,24 +4,21 @@ import 'dart:io' as file;
 import 'dart:typed_data';
 
 import 'package:cached_network_image/cached_network_image.dart';
-import 'package:extended_image/extended_image.dart';
 import 'package:flutter/cupertino.dart';
 import 'package:flutter/material.dart';
 import 'package:flutter_native_image/flutter_native_image.dart';
 import 'package:image_picker/image_picker.dart';
-import 'package:inspireui/inspireui.dart' show Skeleton;
 import 'package:path/path.dart' as p;
 import 'package:path_provider/path_provider.dart';
-import 'package:transparent_image/transparent_image.dart';
 import 'package:wechat_assets_picker/wechat_assets_picker.dart';
 
 import '../../generated/l10n.dart';
 import '../../services/index.dart' show ServerConfig, ConfigType;
 import '../config.dart' show kAdvanceConfig;
-import '../constants.dart' show isAndroid, kDefaultImage, kEmptyColor, kIsWeb;
+import '../constants.dart' show isAndroid, kDefaultImage;
+import 'image_resize.dart' show kSize;
 
-// ignore: camel_case_types
-enum kSize { small, medium, large }
+export './image_resize.dart';
 
 class ImageTools {
   static String prestashopImage(String url, [kSize? size = kSize.medium]) {
@@ -45,11 +42,32 @@ class ImageTools {
     }
   }
 
+  static final _regexImageShopify = RegExp('(?:[-_]?[0-9]+x[0-9]+)+');
+
+  static String shopifyImage(String url, [kSize? size = kSize.medium]) {
+    var lastIndex = url.lastIndexOf('_');
+    lastIndex = lastIndex == -1 ? 0 : lastIndex;
+    return url.replaceFirstMapped(_regexImageShopify, (match) {
+      switch (size) {
+        case kSize.large:
+          return '_3500x3500';
+        case kSize.small:
+          return '_1000x1000';
+        default: // kSize.medium
+          return '_2000x2000';
+      }
+    }, lastIndex);
+  }
+
   static String? formatImage(String? url, [kSize? size = kSize.medium]) {
     if (ServerConfig().type == ConfigType.presta) {
       return prestashopImage(url!, size);
     }
 
+    if (ServerConfig().isShopify) {
+      return shopifyImage(url!, size);
+    }
+
     if (ServerConfig().isCacheImage ?? kAdvanceConfig.kIsResizeImage) {
       var pathWithoutExt = p.withoutExtension(url!);
       var ext = p.extension(url);
@@ -82,166 +100,6 @@ class ImageTools {
     return NetworkImage(formatImage(url, size) ?? kDefaultImage);
   }
 
-  /// Smart image function to load image cache and check empty URL to return empty box
-  /// Only apply for the product image resize with (small, medium, large)
-  static Widget image({
-    String? url,
-    kSize? size,
-    double? width,
-    double? height,
-    BoxFit? fit,
-    String? tag,
-    double offset = 0.0,
-    bool isResize = false,
-    bool? isVideo = false,
-    bool hidePlaceHolder = false,
-    bool forceWhiteBackground = false,
-    String kImageProxy = '',
-  }) {
-    if (height == null && width == null) {
-      width = 200;
-    }
-    var ratioImage = kAdvanceConfig.ratioProductImage;
-
-    if (url?.isEmpty ?? true) {
-      return FutureBuilder<bool>(
-        future: Future.delayed(const Duration(seconds: 10), () => false),
-        initialData: true,
-        builder: (context, snapshot) {
-          final showSkeleton = snapshot.data!;
-          return AnimatedSwitcher(
-            duration: const Duration(milliseconds: 500),
-            child: showSkeleton
-                ? Skeleton(
-                    width: width!,
-                    height: height ?? width * ratioImage,
-                  )
-                : SizedBox(
-                    width: width,
-                    height: height ?? width! * ratioImage,
-                    child: const Icon(Icons.error_outline),
-                  ),
-          );
-        },
-      );
-    }
-
-    if (isVideo!) {
-      return SizedBox(
-        width: width,
-        height: height,
-        child: Stack(
-          children: <Widget>[
-            Container(
-              decoration: BoxDecoration(color: Colors.black12.withOpacity(1)),
-              child: ExtendedImage.network(
-                isResize ? formatImage(url, size)! : url!,
-                width: width,
-                height: height ?? width! * ratioImage,
-                fit: fit ?? BoxFit.cover,
-                cache: true,
-                enableLoadState: false,
-                alignment: Alignment(
-                    (offset >= -1 && offset <= 1)
-                        ? offset
-                        : (offset > 0)
-                            ? 1.0
-                            : -1.0,
-                    0.0),
-              ),
-            ),
-            Center(
-              child: Icon(
-                Icons.play_circle_outline,
-                color: Colors.white70.withOpacity(0.5),
-                size: width == null ? 30 : width / 4,
-              ),
-            ),
-          ],
-        ),
-      );
-    }
-
-    if (kIsWeb) {
-      /// temporary fix on CavansKit https://github.com/flutter/flutter/issues/49725
-      var imageURL = isResize ? formatImage(url, size) : url;
-
-      var imageProxy = '$kImageProxy${width}x,q50/';
-      if (kImageProxy.isEmpty) {
-        /// this image proxy is use for demo purpose, please make your own one
-        imageProxy = 'https://cors.mstore.io/';
-      }
-
-      return ConstrainedBox(
-        constraints: BoxConstraints(maxHeight: width! * ratioImage),
-        child: FadeInImage.memoryNetwork(
-          image: '$imageProxy$imageURL',
-          fit: fit,
-          width: width,
-          height: height,
-          placeholder: kTransparentImage,
-        ),
-      );
-    }
-
-    final image = ExtendedImage.network(
-      isResize ? formatImage(url, size)! : url!,
-      width: width,
-      height: height,
-      fit: fit,
-      cache: true,
-      enableLoadState: false,
-      alignment: Alignment(
-        (offset >= -1 && offset <= 1)
-            ? offset
-            : (offset > 0)
-                ? 1.0
-                : -1.0,
-        0.0,
-      ),
-      loadStateChanged: (ExtendedImageState state) {
-        Widget? widget;
-        switch (state.extendedImageLoadState) {
-          case LoadState.loading:
-            widget = hidePlaceHolder
-                ? const SizedBox()
-                : Skeleton(
-                    width: width ?? 100,
-                    height: width != null
-                        ? width * (ratioImage * 1.0)
-                        : 100.0 * ratioImage,
-                  );
-            break;
-          case LoadState.completed:
-            widget = ExtendedRawImage(
-              image: state.extendedImageInfo?.image,
-              width: width,
-              height: height,
-              fit: fit,
-            );
-            break;
-          case LoadState.failed:
-            widget = Container(
-              width: width,
-              height: height ?? width! * ratioImage,
-              color: const Color(kEmptyColor),
-            );
-            break;
-        }
-        return widget;
-      },
-    );
-
-    if (forceWhiteBackground && url!.toLowerCase().endsWith('.png')) {
-      return Container(
-        color: Colors.white,
-        child: image,
-      );
-    }
-
-    return image;
-  }
-
   /// cache avatar for the chat
   static CachedNetworkImage getCachedAvatar(String avatarUrl) {
     return CachedNetworkImage(
@@ -350,6 +208,7 @@ class ImageTools {
 
 class CustomAssetPickerTextDelegate extends AssetPickerTextDelegate {
   CustomAssetPickerTextDelegate({required this.context});
+
   final BuildContext context;
 
   @override
diff --git a/lib/common/tools/navigate_tools.dart b/lib/common/tools/navigate_tools.dart
index ca94737..2371c13 100644
--- a/lib/common/tools/navigate_tools.dart
+++ b/lib/common/tools/navigate_tools.dart
@@ -3,15 +3,17 @@ import 'dart:async';
 import 'package:flutter/material.dart';
 import 'package:provider/provider.dart';
 import 'package:shared_preferences/shared_preferences.dart';
+import 'package:url_launcher/url_launcher.dart';
 
 import '../../generated/l10n.dart';
 import '../../menu/maintab_delegate.dart';
-import '../../models/index.dart' show BackDropArguments, CartModel, Product;
+import '../../models/app_model.dart';
+import '../../models/index.dart'
+    show BackDropArguments, CartModel, Product, UserModel;
 import '../../modules/dynamic_layout/helper/helper.dart';
 import '../../routes/flux_navigate.dart';
 import '../../screens/index.dart';
 import '../../services/index.dart';
-import '../../services/services.dart';
 import '../../widgets/blog/banner/blog_list_view.dart';
 import '../../widgets/common/webview.dart';
 import '../config.dart';
@@ -39,17 +41,17 @@ class NavigateTools {
       }
 
       /// Prevent users from tapping multiple times.
-      if (_pendingAction[config['product']] == true) {
+      if (_pendingAction[config['product'].toString()] == true) {
         return;
       }
 
-      _pendingAction[config['product']] = true;
+      _pendingAction[config['product'].toString()] = true;
 
       /// for pre-load the product detail
       final service = Services();
-      var product = await service.api.getProduct(config['product']);
+      var product = await service.api.getProduct(config['product'].toString());
 
-      _pendingAction.remove(config['product']);
+      _pendingAction.remove(config['product'].toString());
 
       if (product == null || product.isEmptyProduct()) {
         return;
@@ -65,6 +67,16 @@ class NavigateTools {
     }
     if (config['tab_number'] != null) {
       final index = (Helper.formatInt(config['tab_number'], 1) ?? 1) - 1;
+      if (context != null) {
+        var appModel = Provider.of<AppModel>(context, listen: false);
+        var tabData = appModel.appConfig?.tabBar[index];
+        if (tabData != null && !tabData.visible) {
+          return FluxNavigate.pushNamed(
+            RouteList.pageTab,
+            arguments: tabData,
+          );
+        }
+      }
       return MainTabControlDelegate.getInstance().tabAnimateTo(
         index,
       );
@@ -75,7 +87,10 @@ class NavigateTools {
 
     /// Launch the URL from external
     if (config['url_launch'] != null) {
-      await Tools.launchURL(config['url_launch']);
+      await Tools.launchURL(
+        config['url_launch'],
+        mode: LaunchMode.externalApplication,
+      );
     }
 
     /// support to show blog detail
@@ -132,10 +147,20 @@ class NavigateTools {
 
     /// support to show the post detail
     if (config['url'] != null) {
+      String url = config['url'];
+      if (context != null &&
+          (ServerConfig().isWooType || ServerConfig().isWordPress)) {
+        final userModel = Provider.of<UserModel>(context, listen: false);
+        if (userModel.user?.cookie?.isNotEmpty ?? false) {
+          var base64Str = EncodeUtils.encodeCookie(userModel.user!.cookie!);
+          url += '?cookie=$base64Str';
+        }
+      }
+
       return FluxNavigate.push(
         MaterialPageRoute(
           builder: (context) => WebView(
-            url: config['url'],
+            url: url,
             enableBackward: config['enableBackward'] ?? false,
             enableForward: config['enableForward'] ?? false,
             enableClose: (config['enableClose'] ?? true),
diff --git a/lib/common/tools/price_tools.dart b/lib/common/tools/price_tools.dart
index 8e61294..a9711f2 100644
--- a/lib/common/tools/price_tools.dart
+++ b/lib/common/tools/price_tools.dart
@@ -4,7 +4,7 @@ import 'package:quiver/strings.dart';
 import '../../models/entities/currency.dart';
 import '../../models/index.dart' show AddonsOption, Product;
 import '../config.dart' show kAdvanceConfig;
-import '../constants.dart' show printLog;
+import '../constants.dart' show printError;
 
 class PriceTools {
   static String? getAddsOnPriceProductValue(
@@ -56,9 +56,8 @@ class PriceTools {
               ? product.regularPrice ?? '0'
               : product.price);
       return price;
-    } catch (e, trace) {
-      printLog(e.toString());
-      printLog(trace.toString());
+    } catch (err, trace) {
+      printError(err, trace);
       return '';
     }
   }
@@ -129,8 +128,7 @@ class PriceTools {
           ? defaultCurrency.symbol + number
           : number + defaultCurrency.symbol;
     } catch (err, trace) {
-      printLog(trace);
-      printLog('getCurrencyFormatted $err');
+      printError(err, trace);
       return defaultCurrency.symbolBeforeTheNumber
           ? defaultCurrency.symbol + formatCurrency.format(0)
           : formatCurrency.format(0) + defaultCurrency.symbol;
@@ -173,8 +171,7 @@ class PriceTools {
         return price;
       }
     } catch (err, trace) {
-      printLog(trace);
-      printLog('getCurrencyFormatted $err');
+      printError(err, trace);
       return price;
     }
   }
diff --git a/lib/common/tools/tools.dart b/lib/common/tools/tools.dart
index bb60200..c1ce19f 100644
--- a/lib/common/tools/tools.dart
+++ b/lib/common/tools/tools.dart
@@ -12,7 +12,7 @@ import 'package:url_launcher/url_launcher.dart';
 import '../../generated/languages/local_widgets_localizations.dart';
 import '../../services/index.dart' show ServerConfig;
 import '../config.dart' show kAdvanceConfig;
-import '../constants.dart' show RegexUtils, isMobile, kIsWeb, printLog;
+import '../constants.dart' show RegexUtils, isMobile, kIsWeb, printError;
 
 class Tools {
   static double? formatDouble(num? value) => value == null ? null : value * 1.0;
@@ -84,8 +84,8 @@ class Tools {
       }
       if (data![keys[keys.length - 1]].toString().isEmpty) return null;
       return data[keys[keys.length - 1]];
-    } catch (e) {
-      printLog(e.toString());
+    } catch (err, trace) {
+      printError(err, trace);
       return 'Error when mapping $key';
     }
   }
@@ -153,8 +153,8 @@ class Tools {
       }
       final parsedString = parse(document.body!.text).documentElement!.text;
       return parsedString;
-    } catch (e) {
-      printLog(e);
+    } catch (err, trace) {
+      printError(err, trace);
     }
     return value;
   }
diff --git a/lib/config/states/.gitkeep b/lib/config/states/.gitkeep
new file mode 100644
index 0000000..e69de29
diff --git a/lib/config/states/state_gb.json b/lib/config/states/state_gb.json
index 161a85c..7fb80ac 100644
--- a/lib/config/states/state_gb.json
+++ b/lib/config/states/state_gb.json
@@ -1,154 +1,162 @@
 [
   {
-    "code": "BDF",
+    "code": "AV",
+    "name": "Avon"
+  },
+  {
+    "code": "BE",
     "name": "Bedfordshire"
   },
   {
-    "code": "BKM",
-    "name": "Buckinghamshire"
+    "code": "BK",
+    "name": "Berkshire"
   },
   {
-    "code": "BST",
-    "name": "Bristol"
+    "code": "BU",
+    "name": "Buckinghamshire"
   },
   {
-    "code": "CAM",
+    "code": "CA",
     "name": "Cambridgeshire"
   },
   {
-    "code": "CHS",
+    "code": "CH",
     "name": "Cheshire"
   },
   {
-    "code": "CON",
+    "code": "CL",
+    "name": "Cleveland"
+  },
+  {
+    "code": "CO",
     "name": "Cornwall"
   },
   {
-    "code": "CMA",
+    "code": "CD",
+    "name": "County Durham"
+  },
+  {
+    "code": "CU",
     "name": "Cumbria"
   },
   {
-    "code": "DBY",
+    "code": "DE",
     "name": "Derbyshire"
   },
   {
-    "code": "DEV",
+    "code": "DV",
     "name": "Devon"
   },
   {
-    "code": "DOR",
+    "code": "DO",
     "name": "Dorset"
   },
   {
-    "code": "DUR",
-    "name": "Durham"
-  },
-  {
-    "code": "ERY",
-    "name": "East Riding of Yorkshire"
-  },
-  {
-    "code": "ESX",
+    "code": "ES",
     "name": "East Sussex"
   },
   {
-    "code": "ESS",
+    "code": "EX",
     "name": "Essex"
   },
   {
-    "code": "GLS",
+    "code": "GL",
     "name": "Gloucestershire"
   },
   {
-    "code": "LND",
-    "name": "Greater London"
-  },
-  {
-    "code": "GTM",
-    "name": "Greater Manchester"
-  },
-  {
-    "code": "HAM",
+    "code": "HA",
     "name": "Hampshire"
   },
   {
-    "code": "HEF",
+    "code": "HE",
     "name": "Herefordshire"
   },
   {
-    "code": "HRT",
+    "code": "HT",
     "name": "Hertfordshire"
   },
   {
-    "code": "KEN",
-    "name": "Kent"
+    "code": "IW",
+    "name": "Isle of Wight"
   },
   {
-    "code": "IOW",
-    "name": "Isle of Wight"
+    "code": "KE",
+    "name": "Kent"
   },
   {
-    "code": "LAN",
+    "code": "LA",
     "name": "Lancashire"
   },
   {
-    "code": "LEC",
+    "code": "LE",
     "name": "Leicestershire"
   },
   {
-    "code": "LIN",
+    "code": "LI",
     "name": "Lincolnshire"
   },
   {
-    "code": "MSY",
+    "code": "LO",
+    "name": "London"
+  },
+  {
+    "code": "ME",
     "name": "Merseyside"
   },
   {
-    "code": "NFK",
+    "code": "MI",
+    "name": "Middlesex"
+  },
+  {
+    "code": "NO",
     "name": "Norfolk"
   },
   {
-    "code": "NYK",
+    "code": "NH",
+    "name": "North Humberside"
+  },
+  {
+    "code": "NY",
     "name": "North Yorkshire"
   },
   {
-    "code": "NTH",
+    "code": "NS",
     "name": "Northamptonshire"
   },
   {
-    "code": "NBL",
+    "code": "NL",
     "name": "Northumberland"
   },
   {
-    "code": "NTT",
+    "code": "NT",
     "name": "Nottinghamshire"
   },
   {
-    "code": "OXF",
+    "code": "OX",
     "name": "Oxfordshire"
   },
   {
-    "code": "RUT",
-    "name": "Rutland"
-  },
-  {
-    "code": "SHR",
+    "code": "SH",
     "name": "Shropshire"
   },
   {
-    "code": "SOM",
+    "code": "SO",
     "name": "Somerset"
   },
   {
-    "code": "STS",
+    "code": "SM",
+    "name": "South Humberside"
+  },
+  {
+    "code": "SY",
     "name": "South Yorkshire"
   },
   {
-    "code": "STS",
+    "code": "SF",
     "name": "Staffordshire"
   },
   {
-    "code": "SFK",
+    "code": "SU",
     "name": "Suffolk"
   },
   {
@@ -156,247 +164,236 @@
     "name": "Surrey"
   },
   {
-    "code": "TWR",
+    "code": "TW",
     "name": "Tyne and Wear"
   },
   {
-    "code": "WAR",
+    "code": "WA",
     "name": "Warwickshire"
   },
   {
-    "code": "WMD",
+    "code": "WM",
     "name": "West Midlands"
   },
   {
-    "code": "WSX",
+    "code": "WS",
     "name": "West Sussex"
   },
   {
-    "code": "WYK",
+    "code": "WY",
     "name": "West Yorkshire"
   },
   {
-    "code": "WIL",
+    "code": "WI",
     "name": "Wiltshire"
   },
   {
-    "code": "WOR",
+    "code": "WO",
     "name": "Worcestershire"
   },
   {
     "code": "ABD",
-    "name": "Aberdeenshire"
+    "name": "Scotland / Aberdeenshire"
   },
   {
     "code": "ANS",
-    "name": "Angus"
+    "name": "Scotland / Angus"
   },
   {
-    "code": "AGB",
-    "name": "Argyll and Bute"
+    "code": "ARL",
+    "name": "Scotland / Argyll and Bute"
+  },
+  {
+    "code": "AYR",
+    "name": "Scotland / Ayrshire"
   },
   {
     "code": "CLK",
-    "name": "Clackmannanshire"
+    "name": "Scotland / Clackmannanshire"
   },
   {
     "code": "DGY",
-    "name": "Dumfries and Galloway"
+    "name": "Scotland / Dumfries and Galloway"
   },
   {
-    "code": "EAY",
-    "name": "East Ayrshire"
+    "code": "DNB",
+    "name": "Scotland / Dunbartonshire"
   },
   {
-    "code": "EDU",
-    "name": "East Dunbartonshire"
+    "code": "DDE",
+    "name": "Scotland / Dundee"
   },
   {
     "code": "ELN",
-    "name": "East Lothian"
+    "name": "Scotland / East Lothian"
   },
   {
-    "code": "ERW",
-    "name": "East Renfrewshire"
+    "code": "EDB",
+    "name": "Scotland / Edinburgh"
   },
   {
     "code": "FIF",
-    "name": "Fife"
-  },
-  {
-    "code": "MLN",
-    "name": "Midlothian"
+    "name": "Scotland / Fife"
   },
   {
-    "code": "MRY",
-    "name": "Moray"
+    "code": "GGW",
+    "name": "Scotland / Glasgow"
   },
   {
-    "code": "NAY",
-    "name": "North Ayrshire"
+    "code": "HLD",
+    "name": "Scotland / Highland"
   },
   {
-    "code": "NLK",
-    "name": "North Lanarkshire"
+    "code": "LKS",
+    "name": "Scotland / Lanarkshire"
   },
   {
-    "code": "ORK",
-    "name": "Orkney"
+    "code": "MLN",
+    "name": "Scotland / Midlothian"
   },
   {
-    "code": "PKN",
-    "name": "Perth and Kinross"
+    "code": "MOR",
+    "name": "Scotland / Moray"
   },
   {
-    "code": "RFW",
-    "name": "Renfrewshire"
+    "code": "ORI",
+    "name": "Scotland / Orkney"
   },
   {
-    "code": "ZET",
-    "name": "Shetland"
+    "code": "PER",
+    "name": "Scotland / Perth and Kinross"
   },
   {
-    "code": "SAY",
-    "name": "South Ayrshire"
+    "code": "RFW",
+    "name": "Scotland / Renfrewshire"
   },
   {
-    "code": "SLK",
-    "name": "South Lanarkshire"
+    "code": "SB",
+    "name": "Scotland / Scottish Borders"
   },
   {
-    "code": "STG",
-    "name": "Stirling"
+    "code": "SHI",
+    "name": "Scotland / Shetland Isles"
   },
   {
-    "code": "WDU",
-    "name": "West Dunbartonshire"
+    "code": "STI",
+    "name": "Scotland / Stirling"
   },
   {
     "code": "WLN",
-    "name": "West Lothian"
+    "name": "Scotland / West Lothian"
   },
   {
-    "code": "ANN",
-    "name": "Antrim and Newtownabbey"
+    "code": "WIS",
+    "name": "Scotland / Western Isles"
   },
   {
-    "code": "AND",
-    "name": "Ards and North Down"
-  },
-  {
-    "code": "ABC",
-    "name": "Armagh, Banbridge and Craigavon"
-  },
-  {
-    "code": "CCG",
-    "name": "Causeway Coast and Glens"
-  },
-  {
-    "code": "DRS",
-    "name": "Derry and Strabane"
+    "code": "AGY",
+    "name": "Wales / Anglesey"
   },
   {
-    "code": "FMO",
-    "name": "Fermanagh and Omagh"
+    "code": "GNT",
+    "name": "Wales / Blaenau Gwent"
   },
   {
-    "code": "LBC",
-    "name": "Lisburn and Castlereagh"
+    "code": "CP",
+    "name": "Wales / Caerphilly (Caerffili)"
   },
   {
-    "code": "MEA",
-    "name": "Mid and East Antrim"
+    "code": "CF",
+    "name": "Wales / Cardiff (Caerdydd)"
   },
   {
-    "code": "NMD",
-    "name": "Newry, Mourne and Down"
+    "code": "CAE",
+    "name": "Wales / Carmarthenshire (Sir Gaerfyrddin)"
   },
   {
-    "code": "BGW",
-    "name": "Blaenau Gwent"
+    "code": "CR",
+    "name": "Wales / Ceredigion"
   },
   {
-    "code": "BGE",
-    "name": "Bridgend (Pen-y-bont ar Ogwr)"
+    "code": "CW",
+    "name": "Wales / Conwy"
   },
   {
-    "code": "CAY",
-    "name": "Caerphilly (Caerffili)"
+    "code": "DEN",
+    "name": "Wales / Denbighshire"
   },
   {
-    "code": "CRF",
-    "name": "Cardiff (Caerdydd)"
+    "code": "FLN",
+    "name": "Wales / Flintshire"
   },
   {
-    "code": "CMN",
-    "name": "Carmarthenshire (Sir Gaerfyrddin)"
+    "code": "GLA",
+    "name": "Wales / Glamorgan"
   },
   {
-    "code": "CGN",
-    "name": "Ceredigion (Sir Ceredigion)"
+    "code": "GWN",
+    "name": "Wales / Gwynedd"
   },
   {
-    "code": "CWY",
-    "name": "Ceredigion (Conwy)"
+    "code": "MT",
+    "name": "Wales / Merthyr Tydfil"
   },
   {
-    "code": "DEN",
-    "name": "Denbighshire (Sir Ddinbych)"
+    "code": "MON",
+    "name": "Wales / Monmouthshire"
   },
   {
-    "code": "FLN",
-    "name": "Flintshire (Sir y Fflint)"
+    "code": "PT",
+    "name": "Wales / Neath Port Talbot"
   },
   {
-    "code": "GWN",
-    "name": "Gwynedd"
+    "code": "NWP",
+    "name": "Wales / Newport"
   },
   {
-    "code": "AGY",
-    "name": "Isle of Anglesey (Sir Ynys Môn)"
+    "code": "PEM",
+    "name": "Wales / Pembrokeshire"
   },
   {
-    "code": "MTY",
-    "name": "Merthyr Tydfil (Merthyr Tudful)"
+    "code": "POW",
+    "name": "Wales / Powys"
   },
   {
-    "code": "MON",
-    "name": "Monmouthshire (Sir Fynwy)"
+    "code": "RT",
+    "name": "Wales / Rhondda, Cynon Taff"
   },
   {
-    "code": "NTL",
-    "name": "Neath Port Talbot (Castell-nedd Port Talbot)"
+    "code": "SS",
+    "name": "Wales / Swansea"
   },
   {
-    "code": "NWP",
-    "name": "Newport (Casnewydd)"
+    "code": "TF",
+    "name": "Wales / Torfean"
   },
   {
-    "code": "PEM",
-    "name": "Pembrokeshire (Sir Benfro)"
+    "code": "WX",
+    "name": "Wales / Wrexham"
   },
   {
-    "code": "POW",
-    "name": "Powys"
+    "code": "ANT",
+    "name": "Northern Ireland / County Antrim"
   },
   {
-    "code": "RCT",
-    "name": "Rhondda, Cynon, Taff (Rhondda, Cynon, Taf)"
+    "code": "ARM",
+    "name": "Northern Ireland / County Armagh"
   },
   {
-    "code": "SWA",
-    "name": "Swansea (Abertawe)"
+    "code": "DOW",
+    "name": "Northern Ireland / County Down"
   },
   {
-    "code": "TOF",
-    "name": "TOF (Tor-faen)"
+    "code": "FER",
+    "name": "Northern Ireland / County Fermanagh"
   },
   {
-    "code": "VGL",
-    "name": "Vale of Glamorgan, The (Bro Morgannwg)"
+    "code": "LDY",
+    "name": "Northern Ireland / County Londonderry"
   },
   {
-    "code": "WRX",
-    "name": "Wrexham (Wrecsam)"
+    "code": "TYR",
+    "name": "Northern Ireland / County Tyrone"
   }
+
 ]
\ No newline at end of file
diff --git a/lib/env.dart b/lib/env.dart
index e6705d5..9fd5e4e 100644
--- a/lib/env.dart
+++ b/lib/env.dart
@@ -2,20 +2,38 @@
 Map<String, dynamic> environment = {
   "appConfig": "lib/config/config_en.json",
 
-  /// ➡️ lib/common/config.dart
   "serverConfig": {
     'type': 'shopify',
+
+    /// 🌍 The register URL domain that matches with Envato Purchase Code
+    /// 🔑 Also, make sure to update the envatoPurchaseCode from configs/env.properties
     'url': 'https://flutter-mstore.myshopify.com',
     'accessToken': '442d582061cc4e16eba32139c2120800',
+
+    /// Wordpress blog, it could be removed if using the same above url
+    'blog': 'https://mstore.io',
+
+    /// remove to use as native screen
+    'forgetPassword': 'https://mstore.io/wp-login.php?action=lostpassword'
   },
 
   /// ➡️ lib/common/config/general.dart
   "defaultDarkTheme": false,
   "enableRemoteConfigFirebase": false,
   "loginSMSConstants": {
-    "countryCodeDefault": "VN",
-    "dialCodeDefault": "+84",
-    "nameDefault": "Vietnam",
+    "countryCodeDefault": "US",
+    "dialCodeDefault": "+1",
+    "nameDefault": "United States",
+  },
+  "phoneNumberConfig": {
+    "enablePhoneNumberValidation": false,
+    "countryCodeDefault": "US",
+    "dialCodeDefault": "+1",
+    "useInternationalFormat": true,
+    "selectorFlagAsPrefixIcon": true,
+    "showCountryFlag": true,
+    "customCountryList": [], // List alpha_2_code. E.g: ["VN", "AU"]
+    "selectorType": "BOTTOM_SHEET", // [DROPDOWN, BOTTOM_SHEET, DIALOG]
   },
   "storeIdentifier": {
     "disable": true,
@@ -211,6 +229,8 @@ Map<String, dynamic> environment = {
     'AlwaysClearWebViewCache': false,
     "WebViewScript": "",
 
+    'AlwaysRefreshBlog': false,
+
     ///support multi currency via WOOCS – Currency Switcher for WooCommerce plugin (https://wordpress.org/plugins/woocommerce-currency-switcher/)
     "EnableWOOCSCurrencySwitcher": true,
 
@@ -236,6 +256,8 @@ Map<String, dynamic> environment = {
     /// show order notes in order detail with private notes
     "OrderNotesWithPrivateNote": true,
 
+    "OrderNotesLinkSupport": false,
+
     /// Just accept select the country on this list
     /// example: {"vn", "ae"}
     "supportCountriesShipping": null,
@@ -252,6 +274,7 @@ Map<String, dynamic> environment = {
     "categoryConfig": {
       // Enable this option when the store has more than 100 category items
       "enableLargeCategories": false,
+      "deepLevel": 3,
     },
 
     /// Example: "pinnedProductTags": ["feature", "new"],
@@ -789,7 +812,7 @@ Map<String, dynamic> environment = {
       "text": "ትግርኛ",
       "storeViewCode": "ti"
     },
-    //46 Urdu intl_ur.arb
+    // 46 Urdu intl_ur.arb
     {
       "name": "Urdu",
       "icon": "assets/images/country/pk.png",
@@ -797,13 +820,21 @@ Map<String, dynamic> environment = {
       "text": "اُردُو",
       "storeViewCode": ""
     },
+    // 47 Azerbaijani intl_az.arb
+    {
+      "name": "Azerbaijani",
+      "icon": "assets/images/country/az.jpg",
+      "code": "az",
+      "text": "Azərbaycan dili",
+      "storeViewCode": ""
+    },
   ],
 
   /// ➡️  lib/common/config/payments.dart
   "paymentConfig": {
-    "DefaultCountryISOCode": "VN",
+    "DefaultCountryISOCode": "US",
 
-    "DefaultStateISOCode": "SG",
+    "DefaultStateISOCode": "LA",
 
     /// Enable the Shipping option from Checkout, support for the Digital Download
     "EnableShipping": true,
@@ -1169,7 +1200,10 @@ Map<String, dynamic> environment = {
     /// When it is set to false, these are the cases:
     /// - For WCFM - It will set the registered role to subscribe with the meta "wcfm_membership_application_status": "pending".
     /// - For Dokan - It still keeps the registered role as "seller" but the selling capability will be set to false. The meta for it is "dokan_enable_selling" : false
-    "EnableAutoApplicationApproval": false
+    "EnableAutoApplicationApproval": false,
+
+    "BannerFit": "cover",
+    "ExpandStoreLocationByDefault": true,
   },
 
   /// Enable Delivery Boy Management in FluxStore Manager(WCFM)
@@ -1177,6 +1211,13 @@ Map<String, dynamic> environment = {
     "DisableDeliveryManagement": false,
   },
 
+  /// Enable Vendor Admin in FluxStore manager
+  "managerConfig": {
+    'appLogo': 'assets/images/app_icon_transparent.png',
+    'appName': 'FluxStore Admin',
+    'enableDeliveryFeature': false,
+  },
+
   /// ➡️ lib/common/loading.dart
   "loadingIcon": {"size": 30.0, "type": "fadingCube"},
   "splashScreen": {
diff --git a/lib/frameworks/frameworks.dart b/lib/frameworks/frameworks.dart
index 5a72ddc..e887b5f 100644
--- a/lib/frameworks/frameworks.dart
+++ b/lib/frameworks/frameworks.dart
@@ -12,6 +12,7 @@ import '../models/entities/filter_sorty_by.dart';
 import '../models/index.dart';
 import '../modules/dynamic_layout/index.dart';
 import '../modules/dynamic_layout/product/product_list.dart';
+import '../screens/categories/layouts/multi_level.dart';
 import '../screens/categories/layouts/parallax.dart';
 import '../screens/categories/layouts/side_menu_with_group.dart';
 import '../screens/checkout/widgets/payment_method_item.dart';
@@ -30,9 +31,13 @@ import 'wordpress/presentation/widgets/index.dart'
 
 abstract class BaseFrameworks {
   bool get enableProductReview => false;
+
   bool get isEnabledProductBottomSheet => kAdvanceConfig.enableCart;
+
   bool get isRequiredLogin => kLoginSetting.isRequiredLogin;
+
   bool get enableMembershipUltimate => false;
+
   bool enableShoppingCart(Product? product) => kAdvanceConfig.enableCart;
 
   Future<void> doCheckout(
@@ -234,8 +239,10 @@ abstract class BaseFrameworks {
   Widget renderShippingPaymentTitle(BuildContext context, String title) {
     return Text(
       title,
-      style: TextStyle(
-          fontSize: 16, color: Theme.of(context).colorScheme.secondary),
+      style: Theme.of(context)
+          .textTheme
+          .bodyText1!
+          .copyWith(color: Theme.of(context).colorScheme.secondary),
     );
   }
 
@@ -356,36 +363,50 @@ abstract class BaseFrameworks {
   Widget renderVendorCategoriesScreen(data) => const SizedBox();
 
   Widget renderCategoryLayout({
-    List<Category>? categories,
     required String layout,
     bool enableParallax = false,
     double? parallaxImageRatio,
+    ScrollController? scrollController,
   }) {
     switch (layout) {
       case CardCategories.type:
         return CardCategories(
-          categories: categories,
           enableParallax: enableParallax,
           parallaxImageRatio: parallaxImageRatio,
+          scrollController: scrollController,
         );
       case ColumnCategories.type:
-        return ColumnCategories(categories);
+        return ColumnCategories(
+          scrollController: scrollController,
+        );
       case SubCategories.type:
-        return SubCategories(categories);
+        return SubCategories(
+          scrollController: scrollController,
+        );
       case SideMenuCategories.type:
-        return SideMenuCategories(categories);
+        return const SideMenuCategories();
       case SideMenuSubCategories.type:
-        return SideMenuSubCategories(categories);
+        return const SideMenuSubCategories();
       case SideMenuGroupCategories.type:
-        return SideMenuGroupCategories(categories);
-      case HorizonMenu.type:
-        return HorizonMenu(categories);
+        return const SideMenuGroupCategories();
       case GridCategory.type:
-        return GridCategory(categories);
+        return GridCategory(
+          scrollController: scrollController,
+        );
       case ParallaxCategories.type:
-        return ParallaxCategories(categories);
+        //   return const ParallaxCategories();
+        return CardCategories(
+          enableParallax: true,
+          parallaxImageRatio: parallaxImageRatio,
+          scrollController: scrollController,
+        );
+      case MultiLevelCategories.type:
+        return const MultiLevelCategories();
+      case HorizonMenu.type:
       default:
-        return HorizonMenu(categories);
+        return HorizonMenu(
+          scrollController: scrollController,
+        );
     }
   }
 
@@ -485,8 +506,7 @@ abstract class BaseFrameworks {
   /// get admin vendor url
   Widget getAdminVendorScreen(context, dynamic user) {
     /// Force user to try out the new native store management.
-    if (kVendorConfig['DisableNativeStoreManagement'] == null ||
-        !kVendorConfig['DisableNativeStoreManagement']) {
+    if (!kVendorConfig.disableNativeStoreManagement) {
       return Services().getVendorAdminApp(
         user: user,
         isFromMV: true,
@@ -538,15 +558,24 @@ abstract class BaseFrameworks {
   Widget renderNewListing(context) => const SizedBox();
 
   /// render the Product or Listing Detail screen
-  Widget renderDetailScreen(BuildContext context, Product product,
-      String layoutType, bool isLoading) {
+  Widget renderDetailScreen(
+    BuildContext context,
+    Product product,
+    String layoutType,
+    bool isLoading, {
+    ScrollController? scrollController,
+  }) {
     switch (layoutType) {
       case 'halfSizeImageType':
         return HalfSizeLayout(product: product, isLoading: isLoading);
       case 'fullSizeImageType':
         return FullSizeLayout(product: product, isLoading: isLoading);
       default:
-        return SimpleLayout(product: product, isLoading: isLoading);
+        return SimpleLayout(
+          product: product,
+          isLoading: isLoading,
+          scrollController: scrollController,
+        );
     }
   }
 
@@ -802,14 +831,19 @@ abstract class BaseFrameworks {
     return const SizedBox();
   }
 
-  Widget productReviewWidget(
-    String productId,
-  ) {
+  Widget productReviewWidget(Product product) {
     return const SizedBox();
   }
 
   List<SingleChildWidget> getExtraProvidersConfig() => [];
 
+  List<OrderByType> get supportedSortByOptions => [
+        OrderByType.onSale,
+        OrderByType.featured,
+        OrderByType.date,
+        OrderByType.price
+      ];
+
   Widget renderFilterSortBy(
     BuildContext context, {
     FilterSortBy? filterSortBy,
@@ -874,36 +908,41 @@ abstract class BaseFrameworks {
             ),
       ),
       children: [
-        GroupCheckBoxWidget<String>(
-          numberOfRow: 2,
-          childAspectRatio: 16 / 4,
-          defaultValue: filterSortBy?.groupSpecial,
-          onChanged: (selectedItem) {
-            final value = selectedItem?.value;
-            if (value == null) {
-              filterSortBy =
-                  filterSortBy?.applyOnSale(null).applyFeatured(null);
-            } else if (value == 'onSale') {
-              filterSortBy =
-                  filterSortBy?.applyOnSale(true).applyFeatured(null);
-            } else if (value == 'featured') {
-              filterSortBy =
-                  filterSortBy?.applyFeatured(true).applyOnSale(null);
-            }
-            onFilterChanged(filterSortBy);
-          },
-          values: <GroupCheckBoxItem<String>>{
-            GroupCheckBoxItem(
-              title: S.of(context).onSale,
-              value: 'onSale',
-            ),
-            GroupCheckBoxItem(
-              title: S.of(context).featured,
-              value: 'featured',
-            ),
-          },
-        ),
-        const Divider(),
+        if ([OrderByType.onSale, OrderByType.featured]
+            .any((element) => supportedSortByOptions.contains(element))) ...[
+          GroupCheckBoxWidget<String>(
+            numberOfRow: 2,
+            childAspectRatio: 16 / 4,
+            defaultValue: filterSortBy?.groupSpecial,
+            onChanged: (selectedItem) {
+              final value = selectedItem?.value;
+              if (value == null) {
+                filterSortBy =
+                    filterSortBy?.applyOnSale(null).applyFeatured(null);
+              } else if (value == 'onSale') {
+                filterSortBy =
+                    filterSortBy?.applyOnSale(true).applyFeatured(null);
+              } else if (value == 'featured') {
+                filterSortBy =
+                    filterSortBy?.applyFeatured(true).applyOnSale(null);
+              }
+              onFilterChanged(filterSortBy);
+            },
+            values: <GroupCheckBoxItem<String>>{
+              if (supportedSortByOptions.contains(OrderByType.onSale))
+                GroupCheckBoxItem(
+                  title: S.of(context).onSale,
+                  value: 'onSale',
+                ),
+              if (supportedSortByOptions.contains(OrderByType.featured))
+                GroupCheckBoxItem(
+                  title: S.of(context).featured,
+                  value: 'featured',
+                ),
+            },
+          ),
+          const Divider(),
+        ],
         GroupCheckBoxWidget<String>(
           numberOfRow: 2,
           childAspectRatio: 16 / 4,
@@ -917,22 +956,46 @@ abstract class BaseFrameworks {
             onFilterChanged(filterSortBy);
           },
           values: <GroupCheckBoxItem<String>>{
-            GroupCheckBoxItem(
-              title: S.of(context).dateLatest,
-              value: 'date-desc',
-            ),
-            GroupCheckBoxItem(
-              title: S.of(context).dateOldest,
-              value: 'date-asc',
-            ),
-            GroupCheckBoxItem(
-              title: S.of(context).priceLowToHigh,
-              value: 'price-asc',
-            ),
-            GroupCheckBoxItem(
-              title: S.of(context).priceHighToLow,
-              value: 'price-desc',
-            ),
+            if (supportedSortByOptions.contains(OrderByType.date)) ...[
+              GroupCheckBoxItem(
+                title: S.of(context).dateLatest,
+                value: 'date-desc',
+              ),
+              GroupCheckBoxItem(
+                title: S.of(context).dateOldest,
+                value: 'date-asc',
+              ),
+            ],
+            if (supportedSortByOptions.contains(OrderByType.price)) ...[
+              GroupCheckBoxItem(
+                title: S.of(context).priceLowToHigh,
+                value: 'price-asc',
+              ),
+              GroupCheckBoxItem(
+                title: S.of(context).priceHighToLow,
+                value: 'price-desc',
+              ),
+            ],
+            if (supportedSortByOptions.contains(OrderByType.title)) ...[
+              GroupCheckBoxItem(
+                title: S.of(context).titleAToZ,
+                value: 'title-asc',
+              ),
+              GroupCheckBoxItem(
+                title: S.of(context).titleZToA,
+                value: 'title-desc',
+              ),
+            ],
+            if (supportedSortByOptions.contains(OrderByType.popularity))
+              GroupCheckBoxItem(
+                title: S.of(context).popularity,
+                value: 'popularity-null',
+              ),
+            if (supportedSortByOptions.contains(OrderByType.rating))
+              GroupCheckBoxItem(
+                title: S.of(context).averageRating,
+                value: 'rating-null',
+              ),
           },
         ),
       ],
diff --git a/lib/frameworks/shopify/config_example/config_ar.json b/lib/frameworks/shopify/config_example/config_ar.json
new file mode 100644
index 0000000..cae89d7
--- /dev/null
+++ b/lib/frameworks/shopify/config_example/config_ar.json
@@ -0,0 +1,245 @@
+{
+  "HorizonLayout": [
+    {
+      "layout": "logo",
+      "showMenu": true,
+      "showSearch": true,
+      "showLogo": true
+    },
+    {
+      "layout": "category",
+      "type": "icon",
+      "wrap": false,
+      "size": 1.0,
+      "radius": 50.0,
+      "items": [
+        {
+          "category": "gid://shopify/Collection/170409623687",
+          "image": "https://user-images.githubusercontent.com/1459805/62820029-2e679f00-bb88-11e9-80de-fdf115cfd942.png",
+          "colors": [
+            "#3CC2BF",
+            "#3CC2BF"
+          ],
+          "originalColor": false
+        },
+        {
+          "category": "gid://shopify/Collection/170409427079",
+          "image": "https://trello-attachments.s3.amazonaws.com/60a62a9bca5053572a669dee/48x58/a68d188ae063a20eac903fe2ca00ece5/ic_dress.png",
+          "colors": [
+            "#3E6AB5",
+            "#3E6AB5"
+          ]
+        },
+        {
+          "category": "gid://shopify/Collection/170409263239",
+          "image": "https://trello-attachments.s3.amazonaws.com/60a62a9bca5053572a669dee/68x54/93b296bf55ec19d22778158bf06d2dbc/ic_shorts.png",
+          "colors": [
+            "#53A2CC",
+            "#53A2CC"
+          ]
+        },
+        {
+          "category": "gid://shopify/Collection/170408968327",
+          "image": "https://trello-attachments.s3.amazonaws.com/60a62a9bca5053572a669dee/68x50/bf817e570f9d704dc88dad8bb29386d1/ic_shoes.png",
+          "colors": [
+            "#53688A",
+            "#53688A"
+          ]
+        },
+        {
+          "category": "gid://shopify/Collection/170409164935",
+          "image": "https://trello-attachments.s3.amazonaws.com/60a62a9bca5053572a669dee/72x38/8c778c1b92f5ca02e00c4a34b562c601/ic_tie.png",
+          "colors": [
+            "#43506A",
+            "#43506A"
+          ]
+        },
+        {
+          "category": "gid://shopify/Collection/170409427079",
+          "image": "https://trello-attachments.s3.amazonaws.com/60a62a9bca5053572a669dee/68x34/e20dbfd9e05fb3fbb8991d5d2213a9b0/ic_panties.png",
+          "colors": [
+            "#12B58C",
+            "#12B58C"
+          ]
+        }
+      ]
+    },
+    {
+      "layout": "bannerImage",
+      "isSlider": true,
+      "autoPlay": false,
+      "showNumber": false,
+      "design": "default",
+      "showBackGround": true,
+      "radius": 2.0,
+      "items": [
+        {
+          "category": "Z2lkOi8vc2hvcGlmeS9Db2xsZWN0aW9uLzE3MDQwOTI2MzIzOQ==",
+          "image": "https://user-images.githubusercontent.com/1459805/59846818-12672e80-938b-11e9-8184-5f7bfe66f1a2.png",
+          "padding": 15.0
+        },
+        {
+          "category": "Z2lkOi8vc2hvcGlmeS9Db2xsZWN0aW9uLzE3MDQwOTQyNzA3OQ==",
+          "image": "https://user-images.githubusercontent.com/1459805/60091575-1f12ca80-976f-11e9-962c-bdccff60d143.png",
+          "padding": 15.0
+        },
+        {
+          "product": "4620601819271",
+          "image": "https://user-images.githubusercontent.com/1459805/60091808-a19b8a00-976f-11e9-9cc7-576ca05c2442.png",
+          "padding": 15.0
+        }
+      ]
+    },
+    {
+      "layout": "bannerImage",
+      "items": [
+        {
+          "category": "Z2lkOi8vc2hvcGlmeS9Db2xsZWN0aW9uLzE3MDQwOTI2MzIzOQ==",
+          "image": "https://user-images.githubusercontent.com/1459805/59846823-12ffc500-938b-11e9-8d93-65ead3d6b1dd.png",
+          "padding": 5.0
+        },
+        {
+          "category": "Z2lkOi8vc2hvcGlmeS9Db2xsZWN0aW9uLzE3MDQwOTI2MzIzOQ==",
+          "image": "https://user-images.githubusercontent.com/1459805/59846824-12ffc500-938b-11e9-8d5a-fc42cb1b7658.png",
+          "padding": 5.0,
+          "featured": true
+        }
+      ]
+    },
+    {
+      "name": "وجهة نظر حديثة",
+      "layout": "recentView"
+    },
+    {
+      "name": "مجموعات المرأة",
+      "image": "",
+      "layout": "threeColumn",
+      "category": "gid://shopify/Collection/170409525383",
+      "isSnapping": true
+    },
+    {
+      "name": "مجموعات الرجل",
+      "image": "",
+      "layout": "twoColumn",
+      "category": "gid://shopify/Collection/170409623687",
+      "isSnapping": true
+    },
+    {
+      "name": "وجهة نظر حديثة",
+      "layout": "recentView"
+    },
+    {
+      "name": "منشورات المدونة لدينا",
+      "layout": "blog"
+    },
+    {
+      "name": "مجموعات جديدة",
+      "layout": "staggered",
+      "limit": 20,
+      "category": "gid://shopify/Collection/170409263239"
+    }
+  ],
+  "Setting": {
+    "MainColor": "#3FC1BE",
+    "ProductListLayout": "list",
+    "StickyHeader": false
+  },
+  "TabBar": [
+    {
+      "layout": "home",
+      "icon": "home",
+      "pos": 100,
+      "fontFamily": "CupertinoIcons",
+      "key": "p1q235ba14"
+    },
+    {
+      "pos": 200,
+      "layout": "category",
+      "icon": "rectangle_grid_1x2",
+      "fontFamily": "CupertinoIcons",
+      "categoryLayout": "card",
+      "key": "hwu0rkrizt",
+      "remapCategories": [
+        {
+          "category": "Z2lkOi8vc2hvcGlmeS9Db2xsZWN0aW9uLzE3MDQwOTI2MzIzOQ==",
+          "name": "سمات",
+          "image": "https://cdn.shopify.com/s/files/1/0331/5230/3239/collections/fashion-PN7FSF5_350x500.jpg?v=1581920391"
+        },
+        {
+          "parent": "Z2lkOi8vc2hvcGlmeS9Db2xsZWN0aW9uLzE3MDQwOTI2MzIzOQ==",
+          "category": "Z2lkOi8vc2hvcGlmeS9Db2xsZWN0aW9uLzE3MDQwOTE2NDkzNQ==",
+          "name": "أكياس"
+        },
+        {
+          "parent": "Z2lkOi8vc2hvcGlmeS9Db2xsZWN0aW9uLzE3MDQwOTI2MzIzOQ==",
+          "category": "Z2lkOi8vc2hvcGlmeS9Db2xsZWN0aW9uLzE3MDQwOTQyNzA3OQ==",
+          "name": "ملابس"
+        },
+        {
+          "parent": "Z2lkOi8vc2hvcGlmeS9Db2xsZWN0aW9uLzE3MDQwOTI2MzIzOQ==",
+          "category": "Z2lkOi8vc2hvcGlmeS9Db2xsZWN0aW9uLzE3MDQwODk2ODMyNw==",
+          "name": "أحذية"
+        },
+        {
+          "category": "Z2lkOi8vc2hvcGlmeS9Db2xsZWN0aW9uLzE3MDQwOTUyNTM4Mw==",
+          "name": "النساء"
+        },
+        {
+          "category": "Z2lkOi8vc2hvcGlmeS9Db2xsZWN0aW9uLzE3MDQwOTYyMzY4Nw==",
+          "name": "رجل"
+        }
+      ]
+    },
+    {
+      "key": "2reihs4qzc",
+      "icon": "search",
+      "layout": "search",
+      "fontFamily": "CupertinoIcons",
+      "pos": 300,
+      "size": 24
+    },
+    {
+      "pos": 400,
+      "icon": "bag",
+      "layout": "cart",
+      "categoryLayout": "cart",
+      "key": "a2xts0oou6",
+      "fontFamily": "CupertinoIcons"
+    },
+    {
+      "layout": "profile",
+      "fontFamily": "CupertinoIcons",
+      "pos": 500,
+      "key": "69jw5yx12d",
+      "icon": "person"
+    }
+  ],
+  "searchSuggestion": [
+    "man",
+    "dress",
+    "Stitch",
+    "ma"
+  ],
+  "OnBoarding": {
+    "data": [
+      {
+        "title": "مرحبًا بك في FluxStore",
+        "image": "assets/images/fogg-delivery-1.png",
+        "desc": "Fluxstore is on the way to serve you. ",
+        "background": "#FFF3F2"
+      },
+      {
+        "title": "ربط العالم المحيط",
+        "image": "assets/images/fogg-uploading-1.png",
+        "desc": "See all things happening around you just by a click in your phone. Fast, convenient and clean.",
+        "background": "#F2FFFC"
+      },
+      {
+        "title": "هيا بنا نبدأ",
+        "image": "fogg-order-completed.png",
+        "desc": "Waiting no more, let's see what we get!",
+        "background": "#F9F2FF"
+      }
+    ]
+  }
+}
\ No newline at end of file
diff --git a/lib/frameworks/shopify/config_example/config_en.json b/lib/frameworks/shopify/config_example/config_en.json
index cbb5fee..aed5b55 100644
--- a/lib/frameworks/shopify/config_example/config_en.json
+++ b/lib/frameworks/shopify/config_example/config_en.json
@@ -14,7 +14,7 @@
       "radius": 50.0,
       "items": [
         {
-          "category": "Z2lkOi8vc2hvcGlmeS9Db2xsZWN0aW9uLzE3MDQwOTYyMzY4Nw==",
+          "category": "gid://shopify/Collection/170409623687",
           "image": "https://user-images.githubusercontent.com/1459805/62820029-2e679f00-bb88-11e9-80de-fdf115cfd942.png",
           "colors": [
             "#3CC2BF",
@@ -23,7 +23,7 @@
           "originalColor": false
         },
         {
-          "category": "Z2lkOi8vc2hvcGlmeS9Db2xsZWN0aW9uLzE3MDQwOTQyNzA3OQ==",
+          "category": "gid://shopify/Collection/170409427079",
           "image": "https://trello-attachments.s3.amazonaws.com/60a62a9bca5053572a669dee/48x58/a68d188ae063a20eac903fe2ca00ece5/ic_dress.png",
           "colors": [
             "#3E6AB5",
@@ -31,7 +31,7 @@
           ]
         },
         {
-          "category": "Z2lkOi8vc2hvcGlmeS9Db2xsZWN0aW9uLzE3MDQwOTI2MzIzOQ==",
+          "category": "gid://shopify/Collection/170409263239",
           "image": "https://trello-attachments.s3.amazonaws.com/60a62a9bca5053572a669dee/68x54/93b296bf55ec19d22778158bf06d2dbc/ic_shorts.png",
           "colors": [
             "#53A2CC",
@@ -39,7 +39,7 @@
           ]
         },
         {
-          "category": "Z2lkOi8vc2hvcGlmeS9Db2xsZWN0aW9uLzE3MDQwODk2ODMyNw==",
+          "category": "gid://shopify/Collection/170408968327",
           "image": "https://trello-attachments.s3.amazonaws.com/60a62a9bca5053572a669dee/68x50/bf817e570f9d704dc88dad8bb29386d1/ic_shoes.png",
           "colors": [
             "#53688A",
@@ -47,7 +47,7 @@
           ]
         },
         {
-          "category": "Z2lkOi8vc2hvcGlmeS9Db2xsZWN0aW9uLzE3MDQwOTE2NDkzNQ==",
+          "category": "gid://shopify/Collection/170409164935",
           "image": "https://trello-attachments.s3.amazonaws.com/60a62a9bca5053572a669dee/72x38/8c778c1b92f5ca02e00c4a34b562c601/ic_tie.png",
           "colors": [
             "#43506A",
@@ -55,7 +55,7 @@
           ]
         },
         {
-          "category": "Z2lkOi8vc2hvcGlmeS9Db2xsZWN0aW9uLzE3MDQwOTQyNzA3OQ==",
+          "category": "gid://shopify/Collection/170409427079",
           "image": "https://trello-attachments.s3.amazonaws.com/60a62a9bca5053572a669dee/68x34/e20dbfd9e05fb3fbb8991d5d2213a9b0/ic_panties.png",
           "colors": [
             "#12B58C",
@@ -114,14 +114,14 @@
       "name": "Woman Collections",
       "image": "",
       "layout": "threeColumn",
-      "category": "Z2lkOi8vc2hvcGlmeS9Db2xsZWN0aW9uLzE3MDQwOTUyNTM4Mw==",
+      "category": "gid://shopify/Collection/170409525383",
       "isSnapping": true
     },
     {
       "name": "Man Collections",
       "image": "",
       "layout": "twoColumn",
-      "category": "Z2lkOi8vc2hvcGlmeS9Db2xsZWN0aW9uLzE3MDQwOTYyMzY4Nw==",
+      "category": "gid://shopify/Collection/170409623687",
       "isSnapping": true
     },
     {
@@ -136,7 +136,7 @@
       "name": "New Collections",
       "layout": "staggered",
       "limit": 20,
-      "category": "Z2lkOi8vc2hvcGlmeS9Db2xsZWN0aW9uLzE3MDQwOTI2MzIzOQ=="
+      "category": "gid://shopify/Collection/170409263239"
     }
   ],
   "Setting": {
diff --git a/lib/frameworks/shopify/config_example/config_vi.json b/lib/frameworks/shopify/config_example/config_vi.json
new file mode 100644
index 0000000..7555c51
--- /dev/null
+++ b/lib/frameworks/shopify/config_example/config_vi.json
@@ -0,0 +1,223 @@
+{
+  "HorizonLayout": [
+    {
+      "layout": "logo",
+      "showMenu": true,
+      "showSearch": true,
+      "showLogo": true
+    },
+    {
+      "layout": "category",
+      "type": "icon",
+      "wrap": false,
+      "size": 1.0,
+      "radius": 50.0,
+      "items": [
+        {
+          "category": "gid://shopify/Collection/170409623687",
+          "image": "https://user-images.githubusercontent.com/1459805/62820029-2e679f00-bb88-11e9-80de-fdf115cfd942.png",
+          "colors": [
+            "#3CC2BF",
+            "#3CC2BF"
+          ],
+          "originalColor": false
+        },
+        {
+          "category": "gid://shopify/Collection/170409427079",
+          "image": "https://trello-attachments.s3.amazonaws.com/60a62a9bca5053572a669dee/48x58/a68d188ae063a20eac903fe2ca00ece5/ic_dress.png",
+          "colors": [
+            "#3E6AB5",
+            "#3E6AB5"
+          ]
+        },
+        {
+          "category": "gid://shopify/Collection/170409263239",
+          "image": "https://trello-attachments.s3.amazonaws.com/60a62a9bca5053572a669dee/68x54/93b296bf55ec19d22778158bf06d2dbc/ic_shorts.png",
+          "colors": [
+            "#53A2CC",
+            "#53A2CC"
+          ]
+        },
+        {
+          "category": "gid://shopify/Collection/170408968327",
+          "image": "https://trello-attachments.s3.amazonaws.com/60a62a9bca5053572a669dee/68x50/bf817e570f9d704dc88dad8bb29386d1/ic_shoes.png",
+          "colors": [
+            "#53688A",
+            "#53688A"
+          ]
+        },
+        {
+          "category": "gid://shopify/Collection/170409164935",
+          "image": "https://trello-attachments.s3.amazonaws.com/60a62a9bca5053572a669dee/72x38/8c778c1b92f5ca02e00c4a34b562c601/ic_tie.png",
+          "colors": [
+            "#43506A",
+            "#43506A"
+          ]
+        },
+        {
+          "category": "gid://shopify/Collection/170409427079",
+          "image": "https://trello-attachments.s3.amazonaws.com/60a62a9bca5053572a669dee/68x34/e20dbfd9e05fb3fbb8991d5d2213a9b0/ic_panties.png",
+          "colors": [
+            "#12B58C",
+            "#12B58C"
+          ]
+        }
+      ]
+    },
+    {
+      "layout": "bannerImage",
+      "isSlider": true,
+      "autoPlay": false,
+      "showNumber": false,
+      "design": "default",
+      "showBackGround": true,
+      "radius": 2.0,
+      "items": [
+        {
+          "category": "Z2lkOi8vc2hvcGlmeS9Db2xsZWN0aW9uLzE3MDQwOTI2MzIzOQ==",
+          "image": "https://user-images.githubusercontent.com/1459805/59846818-12672e80-938b-11e9-8184-5f7bfe66f1a2.png",
+          "padding": 15.0
+        },
+        {
+          "category": "Z2lkOi8vc2hvcGlmeS9Db2xsZWN0aW9uLzE3MDQwOTQyNzA3OQ==",
+          "image": "https://user-images.githubusercontent.com/1459805/60091575-1f12ca80-976f-11e9-962c-bdccff60d143.png",
+          "padding": 15.0
+        },
+        {
+          "product": "4620601819271",
+          "image": "https://user-images.githubusercontent.com/1459805/60091808-a19b8a00-976f-11e9-9cc7-576ca05c2442.png",
+          "padding": 15.0
+        }
+      ]
+    },
+    {
+      "layout": "bannerImage",
+      "items": [
+        {
+          "category": "Z2lkOi8vc2hvcGlmeS9Db2xsZWN0aW9uLzE3MDQwOTI2MzIzOQ==",
+          "image": "https://user-images.githubusercontent.com/1459805/59846823-12ffc500-938b-11e9-8d93-65ead3d6b1dd.png",
+          "padding": 5.0
+        },
+        {
+          "category": "Z2lkOi8vc2hvcGlmeS9Db2xsZWN0aW9uLzE3MDQwOTI2MzIzOQ==",
+          "image": "https://user-images.githubusercontent.com/1459805/59846824-12ffc500-938b-11e9-8d5a-fc42cb1b7658.png",
+          "padding": 5.0,
+          "featured": true
+        }
+      ]
+    },
+    {
+      "name": "Quan điểm gần đây",
+      "layout": "recentView"
+    },
+    {
+      "name": "Bộ sưu tập phụ nữ",
+      "image": "",
+      "layout": "threeColumn",
+      "category": "gid://shopify/Collection/170409525383",
+      "isSnapping": true
+    },
+    {
+      "name": "Bộ sưu tập người đàn ông",
+      "image": "",
+      "layout": "twoColumn",
+      "category": "gid://shopify/Collection/170409623687",
+      "isSnapping": true
+    },
+    {
+      "name": "Quan điểm gần đây",
+      "layout": "recentView"
+    },
+    {
+      "name": "Bài viết trên blog của chúng tôi",
+      "layout": "blog"
+    },
+    {
+      "name": "Bộ sưu tập mới",
+      "layout": "staggered",
+      "limit": 20,
+      "category": "gid://shopify/Collection/170409263239"
+    }
+  ],
+  "Setting": {
+    "MainColor": "#3FC1BE",
+    "ProductListLayout": "list",
+    "StickyHeader": false
+  },
+  "TabBar": [
+    {
+      "layout": "home",
+      "icon": "home",
+      "pos": 100,
+      "fontFamily": "CupertinoIcons",
+      "key": "p1q235ba14"
+    },
+    {
+      "pos": 200,
+      "layout": "category",
+      "icon": "rectangle_grid_1x2",
+      "fontFamily": "CupertinoIcons",
+      "categoryLayout": "card",
+      "key": "hwu0rkrizt",
+      "remapCategories": [
+        {
+          "category": "Z2lkOi8vc2hvcGlmeS9Db2xsZWN0aW9uLzE3MDQwOTI2MzIzOQ==",
+          "name": "Đặc trưng",
+          "image": "https://cdn.shopify.com/s/files/1/0331/5230/3239/collections/fashion-PN7FSF5_350x500.jpg?v=1581920391"
+        },
+        {
+          "parent": "Z2lkOi8vc2hvcGlmeS9Db2xsZWN0aW9uLzE3MDQwOTI2MzIzOQ==",
+          "category": "Z2lkOi8vc2hvcGlmeS9Db2xsZWN0aW9uLzE3MDQwOTE2NDkzNQ==",
+          "name": "Túi"
+        },
+        {
+          "parent": "Z2lkOi8vc2hvcGlmeS9Db2xsZWN0aW9uLzE3MDQwOTI2MzIzOQ==",
+          "category": "Z2lkOi8vc2hvcGlmeS9Db2xsZWN0aW9uLzE3MDQwOTQyNzA3OQ==",
+          "name": "Quần áo"
+        },
+        {
+          "parent": "Z2lkOi8vc2hvcGlmeS9Db2xsZWN0aW9uLzE3MDQwOTI2MzIzOQ==",
+          "category": "Z2lkOi8vc2hvcGlmeS9Db2xsZWN0aW9uLzE3MDQwODk2ODMyNw==",
+          "name": "Đôi giày"
+        },
+        {
+          "category": "Z2lkOi8vc2hvcGlmeS9Db2xsZWN0aW9uLzE3MDQwOTUyNTM4Mw==",
+          "name": "Đàn bà"
+        },
+        {
+          "category": "Z2lkOi8vc2hvcGlmeS9Db2xsZWN0aW9uLzE3MDQwOTYyMzY4Nw==",
+          "name": "Người đàn ông"
+        }
+      ]
+    },
+    {
+      "key": "2reihs4qzc",
+      "icon": "search",
+      "layout": "search",
+      "fontFamily": "CupertinoIcons",
+      "pos": 300,
+      "size": 24
+    },
+    {
+      "pos": 400,
+      "icon": "bag",
+      "layout": "cart",
+      "categoryLayout": "cart",
+      "key": "a2xts0oou6",
+      "fontFamily": "CupertinoIcons"
+    },
+    {
+      "layout": "profile",
+      "fontFamily": "CupertinoIcons",
+      "pos": 500,
+      "key": "69jw5yx12d",
+      "icon": "person"
+    }
+  ],
+  "searchSuggestion": [
+    "man",
+    "dress",
+    "Stitch",
+    "ma"
+  ]
+}
\ No newline at end of file
diff --git a/lib/frameworks/shopify/index.dart b/lib/frameworks/shopify/index.dart
index 6108955..3349231 100644
--- a/lib/frameworks/shopify/index.dart
+++ b/lib/frameworks/shopify/index.dart
@@ -1,13 +1,13 @@
 import 'dart:async';
 
 import 'package:flutter/material.dart';
-import 'package:inspireui/widgets/expandable/expansion_widget.dart';
 import 'package:provider/provider.dart';
 
 import '../../common/config.dart';
 import '../../common/constants.dart';
 import '../../common/tools.dart';
 import '../../generated/l10n.dart';
+import '../../models/cart/cart_model_shopify.dart';
 import '../../models/entities/coupon.dart';
 import '../../models/entities/filter_sorty_by.dart';
 import '../../models/index.dart'
@@ -29,12 +29,14 @@ import '../../routes/flux_navigate.dart';
 import '../../screens/index.dart'
     show PaymentWebview, WebviewCheckoutSuccessScreen;
 import '../../services/index.dart';
-import '../../widgets/common/group_check_box_widget.dart';
 import '../frameworks.dart';
 import '../product_variant_mixin.dart';
 import 'services/shopify_service.dart';
 import 'shopify_variant_mixin.dart';
 
+const _defaultTitle = 'Title';
+const _defaultOptionTitle = 'Default Title';
+
 class ShopifyWidget extends BaseFrameworks
     with ProductVariantMixin, ShopifyVariantMixin {
   final ShopifyService shopifyService;
@@ -52,7 +54,8 @@ class ShopifyWidget extends BaseFrameworks
     Function? success,
     Function? error,
   }) async {
-    final cartModel = Provider.of<CartModel>(context, listen: false);
+    final cartModel =
+        Provider.of<CartModel>(context, listen: false) as CartModelShopify;
     try {
       /// check exist checkoutId
       var isExisted = false;
@@ -109,7 +112,8 @@ class ShopifyWidget extends BaseFrameworks
   @override
   Future<void> doCheckout(context,
       {Function? success, Function? loading, Function? error}) async {
-    final cartModel = Provider.of<CartModel>(context, listen: false);
+    final cartModel =
+        Provider.of<CartModel>(context, listen: false) as CartModelShopify;
 
     try {
       // check exist checkoutId
@@ -263,6 +267,10 @@ class ShopifyWidget extends BaseFrameworks
       BuildContext context, variation, Map<String, dynamic>? options) {
     var list = <Widget>[];
     for (var att in variation.attributes) {
+      if (att.name == _defaultTitle && att.option == _defaultOptionTitle) {
+        continue;
+      }
+
       list.add(Row(
         children: <Widget>[
           ConstrainedBox(
@@ -403,102 +411,6 @@ class ShopifyWidget extends BaseFrameworks
   }
 
   @override
-  Widget renderFilterSortBy(
-    BuildContext context, {
-    FilterSortBy? filterSortBy,
-    required Function(FilterSortBy? filterSortBy) onFilterChanged,
-    bool showDivider = true,
-    bool isBlog = false,
-  }) {
-    if (isBlog) {
-      return ExpansionWidget(
-        showDivider: showDivider,
-        padding: const EdgeInsets.only(
-          left: 15,
-          right: 15,
-          top: 15,
-          bottom: 10,
-        ),
-        title: Text(
-          S.of(context).sortBy,
-          style: Theme.of(context).textTheme.titleLarge!.copyWith(
-                fontWeight: FontWeight.w700,
-              ),
-        ),
-        children: [
-          GroupCheckBoxWidget<String>(
-            numberOfRow: 2,
-            childAspectRatio: 16 / 4,
-            defaultValue: filterSortBy?.groupOrderBy,
-            onChanged: (selectedItem) {
-              final filterData = selectedItem?.value.split('-');
-              final orderBy = filterData?[0];
-              final order = filterData?[1];
-              filterSortBy =
-                  filterSortBy?.applyOrderBy(orderBy).applyOrder(order);
-              onFilterChanged(filterSortBy);
-            },
-            values: <GroupCheckBoxItem<String>>{
-              GroupCheckBoxItem(
-                title: S.of(context).dateLatest,
-                value: 'date-desc',
-              ),
-              GroupCheckBoxItem(
-                title: S.of(context).dateOldest,
-                value: 'date-asc',
-              ),
-            },
-          ),
-        ],
-      );
-    }
-    return ExpansionWidget(
-      showDivider: showDivider,
-      padding: const EdgeInsets.only(
-        left: 15,
-        right: 15,
-        top: 15,
-        bottom: 10,
-      ),
-      title: Text(
-        S.of(context).sortBy,
-        style: Theme.of(context).textTheme.titleLarge!.copyWith(
-              fontWeight: FontWeight.w700,
-            ),
-      ),
-      children: [
-        GroupCheckBoxWidget<String>(
-          numberOfRow: 2,
-          childAspectRatio: 16 / 4,
-          defaultValue: filterSortBy?.groupOrderBy,
-          onChanged: (selectedItem) {
-            final filterData = selectedItem?.value.split('-');
-            final orderBy = filterData?[0];
-            final order = filterData?[1];
-            filterSortBy =
-                filterSortBy?.applyOrderBy(orderBy).applyOrder(order);
-            onFilterChanged(filterSortBy);
-          },
-          values: <GroupCheckBoxItem<String>>{
-            GroupCheckBoxItem(
-              title: S.of(context).dateLatest,
-              value: 'date-desc',
-            ),
-            GroupCheckBoxItem(
-              title: S.of(context).dateOldest,
-              value: 'date-asc',
-            ),
-            GroupCheckBoxItem(
-              title: S.of(context).priceLowToHigh,
-              value: 'price-asc',
-            ),
-            GroupCheckBoxItem(
-              title: S.of(context).priceHighToLow,
-              value: 'price-desc',
-            ),
-          },
-        ),
-      ],
-    );
-  }
+  List<OrderByType> get supportedSortByOptions =>
+      [OrderByType.date, OrderByType.price, OrderByType.title];
 }
diff --git a/lib/frameworks/shopify/services/shopify_query.dart b/lib/frameworks/shopify/services/shopify_query.dart
index 225d841..dbd7446 100644
--- a/lib/frameworks/shopify/services/shopify_query.dart
+++ b/lib/frameworks/shopify/services/shopify_query.dart
@@ -8,7 +8,7 @@ const _scale = 1;
 
 class ShopifyQuery {
   static String readCollections = '''
-    query(\$cursor: String) {
+    query(\$cursor: String, \$langCode: LanguageCode) @inContext(language: \$langCode) {
         collections(first: 250, after: \$cursor) {
           pageInfo {
             hasNextPage
@@ -30,6 +30,29 @@ class ShopifyQuery {
     $fragmentImage
     ''';
 
+  static String getCollections = '''
+    query(\$cursor: String) {
+        collections(first: 20, after: \$cursor) {
+          pageInfo {
+            hasNextPage
+            hasPreviousPage
+          }
+          edges {
+            cursor
+            node {
+              id
+              title
+              description
+              image {
+                ...imageInformation
+              }
+            }
+          }
+        }
+    }
+    $fragmentImage
+    ''';
+
   static String getShop = '''
     query {
     shop {
@@ -40,20 +63,16 @@ class ShopifyQuery {
   ''';
 
   static String getProducts = '''
-    query(\$cursor: String, \$pageSize: Int) {
-      shop {
-        name
-        description
-        products(first: \$pageSize, after: \$cursor) {
-          pageInfo {
-            hasNextPage
-            hasPreviousPage
-          }
-          edges {
-            cursor
-            node {
-              ...productInformation
-            }
+    query(\$cursor: String, \$pageSize: Int, \$langCode: LanguageCode) @inContext(language: \$langCode) {
+      products(first: \$pageSize, after: \$cursor) {
+        pageInfo {
+          hasNextPage
+          hasPreviousPage
+        }
+        edges {
+          cursor
+          node {
+            ...productInformation
           }
         }
       }
@@ -62,7 +81,7 @@ class ShopifyQuery {
   ''';
 
   static String getProductByName = '''
-    query(\$cursor: String, \$pageSize: Int, \$query: String\$reverse: Boolean, \$sortKey: ProductSortKeys) {
+    query(\$cursor: String, \$pageSize: Int, \$query: String\$reverse: Boolean, \$sortKey: ProductSortKeys, \$langCode: LanguageCode) @inContext(language: \$langCode) {
         products(first: \$pageSize, after: \$cursor, query: \$query, sortKey: \$sortKey, reverse: \$reverse) {
           pageInfo {
             hasNextPage
@@ -79,7 +98,7 @@ class ShopifyQuery {
     $fragmentProduct
   ''';
   static String getProductById = '''
-   query (\$id: String) {
+   query (\$id: String, \$langCode: LanguageCode) @inContext(language: \$langCode) {
     products(first: 1, query: \$id) {
       edges {
         node {
@@ -92,7 +111,7 @@ class ShopifyQuery {
 ''';
 
   static String getProductByPrivateId = '''
-   query(\$id: ID!) {
+   query(\$id: ID!, \$langCode: LanguageCode) @inContext(language: \$langCode) {
       node(id: \$id) {
       ...on Product {
         ...productInformation
@@ -123,7 +142,7 @@ class ShopifyQuery {
   // ''';
 
   static String getProductByCollection = '''
-    query(\$categoryId: ID!, \$pageSize: Int, \$cursor: String, \$reverse: Boolean, \$sortKey: ProductCollectionSortKeys) {
+    query(\$categoryId: ID!, \$pageSize: Int, \$cursor: String, \$reverse: Boolean, \$sortKey: ProductCollectionSortKeys, \$langCode: LanguageCode) @inContext(language: \$langCode) {
       node(id: \$categoryId) {
         id
         ... on Collection {
@@ -146,25 +165,25 @@ class ShopifyQuery {
     $fragmentProduct
   ''';
 
-  static String getRelatedByCollection = '''
-    query(\$query: String, \$pageSize: Int) {
-      shop {
-        products(first: \$pageSize, query: \$query, sortKey: PRODUCT_TYPE) {
-          pageInfo {
-            hasNextPage
-            hasPreviousPage
-          }
-          edges {
-            cursor
-            node {
-              ...productInformation
-            }
-          }
-        }
-      }
-    }
-    $fragmentProduct
-  ''';
+  // static String getRelatedByCollection = '''
+  //   query(\$query: String, \$pageSize: Int) {
+  //     shop {
+  //       products(first: \$pageSize, query: \$query, sortKey: PRODUCT_TYPE) {
+  //         pageInfo {
+  //           hasNextPage
+  //           hasPreviousPage
+  //         }
+  //         edges {
+  //           cursor
+  //           node {
+  //             ...productInformation
+  //           }
+  //         }
+  //       }
+  //     }
+  //   }
+  //   $fragmentProduct
+  // ''';
 
   // static String getCheckout = '''
   //   query(\$checkoutId: ID!) {
@@ -178,26 +197,29 @@ class ShopifyQuery {
   // ''';
 
   static String createCheckout = '''
-  mutation checkoutCreate(\$input: CheckoutCreateInput!) {
-    checkoutCreate(input: \$input) {
-      checkout {
-        id
-        customAttributes {
-            key
-            value
+  mutation checkoutCreate(
+    \$input: CheckoutCreateInput! 
+    \$langCode: LanguageCode
+  ) @inContext(language: \$langCode) {
+      checkoutCreate(input: \$input) {
+        checkout {
+          id
+          customAttributes {
+              key
+              value
+          }
+          webUrl
+          subtotalPrice
+          totalTax
+          totalPrice
+          paymentDue
+        }
+        checkoutUserErrors {
+          code
+          field
+          message
         }
-        webUrl
-        subtotalPrice
-        totalTax
-        totalPrice
-        paymentDue
-      }
-      checkoutUserErrors {
-        code
-        field
-        message
       }
-    }
   }
   ''';
 
@@ -205,7 +227,8 @@ class ShopifyQuery {
     mutation checkoutLineItemsReplace(
       \$lineItems: [CheckoutLineItemInput!]!
       \$checkoutId: ID!
-    ) {
+      \$langCode: LanguageCode
+    ) @inContext(language: \$langCode) {
       checkoutLineItemsReplace(lineItems: \$lineItems, checkoutId: \$checkoutId) {
         userErrors {
           field
@@ -227,7 +250,11 @@ class ShopifyQuery {
   ''';
 
   static String updateCheckoutAttribute = '''
-  mutation checkoutAttributesUpdateV2(\$checkoutId: ID!, \$input: CheckoutAttributesUpdateV2Input!) {
+  mutation checkoutAttributesUpdateV2(
+  \$checkoutId: ID! 
+  \$input: CheckoutAttributesUpdateV2Input!
+  \$langCode: LanguageCode
+  ) @inContext(language: \$langCode) {
   checkoutAttributesUpdateV2(checkoutId: \$checkoutId, input: \$input) {
     checkout {
       id
@@ -242,7 +269,9 @@ class ShopifyQuery {
   ''';
 
   static String updateShippingAddress = '''
-    mutation checkoutShippingAddressUpdateV2(\$shippingAddress: MailingAddressInput!, \$checkoutId: ID!) {
+    mutation checkoutShippingAddressUpdateV2(
+    \$shippingAddress: MailingAddressInput!
+    \$checkoutId: ID!) {
       checkoutShippingAddressUpdateV2(shippingAddress: \$shippingAddress, checkoutId: \$checkoutId) {
         userErrors {
           field
@@ -326,7 +355,9 @@ class ShopifyQuery {
   ''';
 
   static String updateShippingLine = '''
-    mutation checkoutShippingLineUpdate(\$shippingRateHandle: String!, \$checkoutId: ID!) {
+    mutation checkoutShippingLineUpdate(
+    \$shippingRateHandle: String!
+    \$checkoutId: ID!) {
       checkoutShippingLineUpdate(shippingRateHandle: \$shippingRateHandle, checkoutId: \$checkoutId) {
         userErrors {
           field
@@ -430,8 +461,6 @@ class ShopifyQuery {
           checkout {
             id
             webUrl
-            totalPrice
-            subtotalPrice
             discountApplications(first: 10) {
               edges {
                 node {
@@ -455,77 +484,17 @@ class ShopifyQuery {
                 }
               }
             }
-            paymentDue
-            lineItems(first: 250) {
-              pageInfo {
-                hasNextPage
-                hasPreviousPage
-              }
-              edges {
-                node {
-                  id
-                  title
-                  quantity
-                  variant {
-                    title
-                    image(maxHeight: $_imageHeight, maxWidth: $_imageWidth) {
-                      src
-                    }
-                    price
-                    selectedOptions {
-                      name
-                      value
-                    }
-                    product {
-                      id
-                      title
-                      description
-                      descriptionHtml
-                      availableForSale
-                      productType
-                      onlineStoreUrl
-                      options {
-                        id
-                        name
-                        values
-                      }
-                      variants(first: 250) {
-                        pageInfo {
-                          hasNextPage
-                          hasPreviousPage
-                        }
-                        edges {
-                          node {
-                            id
-                            title
-                            availableForSale
-                            selectedOptions {
-                              name
-                              value
-                            }
-                            image(maxHeight: $_imageHeight, maxWidth: $_imageWidth) {
-                              src
-                            }
-                            price
-                            compareAtPrice
-                          }
-                        }
-                      }
-                      images(first: 250, maxHeight: $_imageHeight, maxWidth: $_imageWidth) {
-                        pageInfo {
-                          hasNextPage
-                          hasPreviousPage
-                        }
-                        edges {
-                          node {
-                            src
-                          }
-                        }
-                      }
-                    }
-                  }
-                }
-              }
+            totalTaxV2 {
+              amount
+            }
+            totalPriceV2 {
+              amount
+            }
+            subtotalPriceV2 {
+              amount
+            }
+            paymentDueV2 {
+              amount
             }
           }
       }
@@ -939,8 +908,17 @@ class ShopifyQuery {
   ''';
 
   static String getArticle = '''
-    query(\$cursor: String, \$pageSize: Int) {
-        articles(first: \$pageSize, after: \$cursor, sortKey: PUBLISHED_AT, reverse: true) {
+    query(
+    \$cursor: String
+    \$pageSize: Int
+    \$langCode: LanguageCode
+    ) @inContext(language: \$langCode) {
+        articles(
+          first: \$pageSize 
+          after: \$cursor
+          sortKey: PUBLISHED_AT 
+          reverse: true
+          ) {
             pageInfo {
               hasNextPage
               hasPreviousPage
@@ -1131,7 +1109,7 @@ class ShopifyQuery {
                   value
                 }
                 image {
-                  url
+                  ...imageInformation
                 }
                 priceV2 {
                   amount
diff --git a/lib/frameworks/shopify/services/shopify_service.dart b/lib/frameworks/shopify/services/shopify_service.dart
index 98ca40b..e50e8c9 100644
--- a/lib/frameworks/shopify/services/shopify_service.dart
+++ b/lib/frameworks/shopify/services/shopify_service.dart
@@ -1,12 +1,15 @@
 import 'dart:async';
 import 'dart:convert' as convert;
 
+import 'package:collection/collection.dart';
 import 'package:graphql/client.dart';
 import 'package:intl/intl.dart';
 import 'package:uuid/uuid.dart';
 
 import '../../../common/config.dart' show kAdvanceConfig;
 import '../../../common/constants.dart';
+import '../../../generated/l10n.dart';
+import '../../../models/cart/cart_model_shopify.dart';
 import '../../../models/entities/index.dart';
 import '../../../models/index.dart'
     show
@@ -30,7 +33,7 @@ import '../../../services/base_services.dart';
 import 'shopify_query.dart';
 import 'shopify_storage.dart';
 
-const _apiVersion = '2022-10';
+const _apiVersion = '2022-07';
 
 class ShopifyService extends BaseServices {
   ShopifyService({
@@ -48,6 +51,9 @@ class ShopifyService extends BaseServices {
 
   ShopifyStorage shopifyStorage = ShopifyStorage();
 
+  @override
+  String get languageCode => super.languageCode.toUpperCase();
+
   final _cacheCursorWithCategories = <String, String?>{};
   final _cacheCursorWithSearch = <String, String?>{};
 
@@ -91,15 +97,20 @@ class ShopifyService extends BaseServices {
   //   }
   // }
 
-  Future<List<Category>> getCategoriesByCursor(
-      {List<Category>? categories, String? cursor}) async {
+  Future<List<Category>> getCategoriesByCursor({
+    List<Category>? categories,
+    String? cursor,
+    langCode,
+  }) async {
     try {
       const nRepositories = 50;
       var variables = <String, dynamic>{'nRepositories': nRepositories};
       if (cursor != null) {
         variables['cursor'] = cursor;
       }
+      variables['langCode'] = langCode?.toString().toUpperCase();
       final options = QueryOptions(
+        fetchPolicy: FetchPolicy.networkOnly,
         document: gql(ShopifyQuery.readCollections),
         variables: variables,
       );
@@ -122,7 +133,11 @@ class ShopifyService extends BaseServices {
         String? cursor = lastCategory['cursor'];
         if (cursor != null) {
           printLog('::::getCategories shopify by cursor $cursor');
-          return await getCategoriesByCursor(categories: list, cursor: cursor);
+          return await getCategoriesByCursor(
+            categories: list,
+            cursor: cursor,
+            langCode: langCode,
+          );
         }
       }
       return list;
@@ -135,7 +150,7 @@ class ShopifyService extends BaseServices {
   Future<List<Category>> getCategories({lang}) async {
     try {
       printLog('::::request category');
-      var categories = await getCategoriesByCursor();
+      var categories = await getCategoriesByCursor(langCode: lang);
       return categories;
     } catch (e) {
       printLog('::::getCategories shopify error');
@@ -145,17 +160,22 @@ class ShopifyService extends BaseServices {
   }
 
   @override
-  Future<List<Product>> getProducts({cursor, userId}) async {
+  Future<PagingResponse<Category>> getSubCategories({
+    String? langCode,
+    dynamic page,
+    int limit = 25,
+    required String? parentId,
+  }) async {
+    final cursor = page;
     try {
-      printLog('::::request products');
-
       const nRepositories = 50;
+      var variables = <String, dynamic>{'nRepositories': nRepositories};
+      if (cursor != null) {
+        variables['cursor'] = cursor;
+      }
       final options = QueryOptions(
-        document: gql(ShopifyQuery.getProducts),
-        variables: <String, dynamic>{
-          'nRepositories': nRepositories,
-          'cursor': cursor
-        },
+        document: gql(ShopifyQuery.getCollections),
+        variables: variables,
       );
       final result = await client.query(options);
 
@@ -163,22 +183,123 @@ class ShopifyService extends BaseServices {
         printLog(result.exception.toString());
       }
 
+      var list = <Category>[];
+
+      String? lastCursor;
+      for (var item in result.data!['collections']['edges']) {
+        var category = item['node'];
+        lastCursor = item['cursor'];
+        list.add(Category.fromJsonShopify(category));
+      }
+
+      return PagingResponse(data: list, cursor: lastCursor);
+    } catch (e) {
+      return const PagingResponse(data: <Category>[]);
+    }
+  }
+
+  @override
+  Future<PagingResponse<Product>> getProductsByCategoryId(
+    String categoryId, {
+    String? langCode,
+    dynamic page,
+    int limit = 25,
+  }) async {
+    try {
+      final currentCursor = page;
+      printLog(
+          '::::request fetchProductsByCategory with cursor $currentCursor');
+      const nRepositories = 50;
+      var variables = <String, dynamic>{
+        'nRepositories': nRepositories,
+        'categoryId': categoryId,
+        'pageSize': limit,
+        'query': '',
+        'sortKey': 'RELEVANCE',
+        'reverse': false,
+        'cursor': currentCursor != '' ? currentCursor : null,
+      };
+      final options = QueryOptions(
+        document: gql(ShopifyQuery.getProductByCollection),
+        fetchPolicy: FetchPolicy.networkOnly,
+        variables: variables,
+      );
+      final result = await client.query(options);
       var list = <Product>[];
+      var lastCursor = '';
 
-      for (var item in result.data!['shop']['products']['edges']) {
-        list.add(item['node']);
+      if (result.hasException) {
+        printLog(result.exception.toString());
       }
 
-      printLog(list);
+      var node = result.data?['node'];
 
-      return list;
+      if (node != null) {
+        var productResp = node['products'];
+        var edges = productResp['edges'];
+
+        printLog(
+            'fetchProductsByCategory with products length ${edges.length}');
+
+        if (edges.length != 0) {
+          var lastItem = edges.last;
+          lastCursor = lastItem['cursor'];
+        }
+
+        for (var item in result.data!['node']['products']['edges']) {
+          var product = item['node'];
+          product['categoryId'] = categoryId;
+
+          /// Hide out of stock.
+          if ((kAdvanceConfig.hideOutOfStock) &&
+              product['availableForSale'] == false) {
+            continue;
+          }
+          list.add(Product.fromShopify(product));
+        }
+      }
+
+      return PagingResponse(data: list, cursor: lastCursor);
     } catch (e) {
-      printLog('::::getProducts shopify error');
-      printLog(e.toString());
-      rethrow;
+      return const PagingResponse(data: []);
     }
   }
 
+  // @override
+  // Future<List<Product>> getProducts({cursor, userId}) async {
+  //   try {
+  //     printLog('::::request products');
+  //
+  //     const nRepositories = 50;
+  //     final options = QueryOptions(
+  //       document: gql(ShopifyQuery.getProducts),
+  //       variables: <String, dynamic>{
+  //         'nRepositories': nRepositories,
+  //         'cursor': cursor
+  //       },
+  //     );
+  //     final result = await client.query(options);
+  //
+  //     if (result.hasException) {
+  //       printLog(result.exception.toString());
+  //     }
+  //
+  //     var list = <Product>[];
+  //
+  //     for (var item in result.data!['shop']['products']['edges']) {
+  //       list.add(item['node']);
+  //     }
+  //
+  //     printLog(list);
+  //
+  //     return list;
+  //   } catch (e) {
+  //     printLog('::::getProducts shopify error');
+  //     printLog(e.toString());
+  //     rethrow;
+  //   }
+  // }
+
   @override
   Future<List<Product>?> fetchProductsLayout(
       {required config,
@@ -195,7 +316,9 @@ class ShopifyService extends BaseServices {
 
       return await fetchProductsByCategory(
           categoryId: config['category'].toString(),
+          orderBy: config['orderby'].toString(),
           productModel: productModel,
+          lang: lang,
           page: config.containsKey('page') ? config['page'] : 1,
           limit: config['limit']);
     } catch (e) {
@@ -205,14 +328,17 @@ class ShopifyService extends BaseServices {
     }
   }
 
+  @override
   // get sort key to filter product
-  String getProductCollectionSortKey(orderBy) {
+  String getOrderByKey(orderBy) {
     // if (onSale == true) return 'BEST_SELLING';
 
     if (orderBy == 'price') return 'PRICE';
 
     if (orderBy == 'date') return 'CREATED';
 
+    if (orderBy == 'title') return 'TITLE';
+
     return 'COLLECTION_DEFAULT';
   }
 
@@ -223,10 +349,13 @@ class ShopifyService extends BaseServices {
 
     if (orderBy == 'date') return 'UPDATED_AT';
 
+    if (orderBy == 'title') return 'TITLE';
+
     return 'RELEVANCE';
   }
 
-  bool getReverse(String? order) {
+  @override
+  bool getOrderDirection(order) {
     if (order == 'desc') return true;
     return false;
   }
@@ -255,54 +384,56 @@ class ShopifyService extends BaseServices {
   }) async {
     String? currentCursor;
 
-    /// change category id
-    if (page == 1) {
-      _cacheCursorWithCategories['$categoryId'] = null;
-      _cacheCursorWithSearch['$search'] = null;
+    if (tagId != null) {
+      search = (search?.isNotEmpty ?? false)
+          ? '$search AND tag:$tagId'
+          : 'tag:$tagId';
     }
 
-    final sortKey = getProductCollectionSortKey(orderBy);
-    final reverse = getReverse(order);
+    if (search == null && categoryId == null) {
+      return <Product>[];
+    }
+
+    final sortKey = getOrderByKey(orderBy);
+    final reverse = getOrderDirection(order);
 
     try {
       var list = <Product>[];
 
-      if (!shopifyStorage.hasNextPage!) {
-        return list;
+      /// change category id
+      if (page == 1) {
+        _cacheCursorWithCategories['$categoryId'] = null;
+        _cacheCursorWithSearch['$search'] = null;
       }
 
-      if (tagId != null) {
-        search = (search?.isNotEmpty ?? false)
-            ? '$search AND tag:$tagId'
-            : 'tag:$tagId';
-      }
       currentCursor = _cacheCursorWithCategories['$categoryId'];
       const nRepositories = 50;
       var variables = <String, dynamic>{
         'nRepositories': nRepositories,
         'categoryId': categoryId,
-        'pageSize': limit ?? 20,
+        'pageSize': limit ?? apiPageSize,
         'query': search ?? '',
         'sortKey': sortKey,
         'reverse': reverse,
+        'langCode': lang?.toString().toUpperCase(),
         'cursor': currentCursor != '' ? currentCursor : null,
       };
       printLog(
-          '::::request fetchProductsByCategory with category id $categoryId search:$search');
+          '::::request fetchProductsByCategory with category id $categoryId --- search $search');
 
-      /// If category id is null or == -1 mean search product
-      if (categoryId == null || categoryId.toString() == '-1') {
-        currentCursor = _cacheCursorWithSearch['$search'];
+      if (search != null && search.isNotEmpty) {
+        currentCursor = _cacheCursorWithSearch[search];
         printLog(
-            '::::request fetchProductsByCategory with cursor $currentCursor}');
+            '::::request fetchProductsByCategory with cursor $currentCursor');
 
         final result = await searchProducts(
           name: search,
+          lang: lang,
           page: currentCursor,
           sortKey: orderBy,
           reverse: reverse,
         );
-        _cacheCursorWithSearch['$search'] = result.cursor;
+        _cacheCursorWithSearch[search] = result.cursor;
         return result.data;
       }
 
@@ -316,7 +447,7 @@ class ShopifyService extends BaseServices {
       final result = await client.query(options);
 
       if (result.hasException) {
-        printLog(result.exception.toString());
+        throw (result.exception.toString());
       }
 
       var node = result.data?['node'];
@@ -349,8 +480,8 @@ class ShopifyService extends BaseServices {
 
       return list;
     } catch (e) {
-      printLog('::::fetchProductsByCategory shopify error $e');
-      printLog(e.toString());
+      printError('::::fetchProductsByCategory shopify error $e');
+      printError(e.toString());
       rethrow;
     }
   }
@@ -363,30 +494,30 @@ class ShopifyService extends BaseServices {
     return list;
   }
 
-  Future<Address?> updateShippingAddress(
-      {Address? address, String? checkoutId}) async {
-    try {
-      final options = MutationOptions(
-        document: gql(ShopifyQuery.updateShippingAddress),
-        variables: {'shippingAddress': address, 'checkoutId': checkoutId},
-      );
-
-      final result = await client.mutate(options);
-
-      if (result.hasException) {
-        printLog(result.exception.toString());
-        throw Exception(result.exception.toString());
-      }
-
-      printLog('updateShippingAddress $result');
-
-      return null;
-    } catch (e) {
-      printLog('::::updateShippingAddress shopify error');
-      printLog(e.toString());
-      rethrow;
-    }
-  }
+  // Future<Address?> updateShippingAddress(
+  //     {Address? address, String? checkoutId}) async {
+  //   try {
+  //     final options = MutationOptions(
+  //       document: gql(ShopifyQuery.updateShippingAddress),
+  //       variables: {'shippingAddress': address, 'checkoutId': checkoutId},
+  //     );
+  //
+  //     final result = await client.mutate(options);
+  //
+  //     if (result.hasException) {
+  //       printLog(result.exception.toString());
+  //       throw Exception(result.exception.toString());
+  //     }
+  //
+  //     printLog('updateShippingAddress $result');
+  //
+  //     return null;
+  //   } catch (e) {
+  //     printLog('::::updateShippingAddress shopify error');
+  //     printLog(e.toString());
+  //     rethrow;
+  //   }
+  // }
 
   @override
   Future<List<ShippingMethod>> getShippingMethods(
@@ -522,12 +653,13 @@ class ShopifyService extends BaseServices {
           'pageSize': pageSize,
           'sortKey': getProductSortKey(sortKey),
           'reverse': reverse,
+          'langCode': lang?.toString().toUpperCase(),
         },
       );
       final result = await client.query(options);
 
       if (result.hasException) {
-        printLog(result.exception.toString());
+        throw (result.exception.toString());
       }
 
       var list = <Product>[];
@@ -648,8 +780,9 @@ class ShopifyService extends BaseServices {
 
       const nRepositories = 50;
       json.removeWhere((key, value) => key == 'deviceToken');
-      final options = QueryOptions(document: gql(ShopifyQuery.customerUpdate),
-          // fetchPolicy: FetchPolicy.networkOnly,
+      final options = QueryOptions(
+          document: gql(ShopifyQuery.customerUpdate),
+          fetchPolicy: FetchPolicy.networkOnly,
           variables: <String, dynamic>{
             'nRepositories': nRepositories,
             'customerAccessToken': token,
@@ -683,6 +816,7 @@ class ShopifyService extends BaseServices {
       const nRepositories = 50;
       final options = QueryOptions(
           document: gql(ShopifyQuery.createCustomerToken),
+          fetchPolicy: FetchPolicy.networkOnly,
           variables: <String, dynamic>{
             'nRepositories': nRepositories,
             'input': {'email': username, 'password': password}
@@ -794,7 +928,7 @@ class ShopifyService extends BaseServices {
     return checkout;
   }
 
-  Future addItemsToCart(CartModel cartModel) async {
+  Future addItemsToCart(CartModelShopify cartModel) async {
     final cookie = cartModel.user?.cookie;
     try {
       if (cookie != null) {
@@ -823,6 +957,7 @@ class ShopifyService extends BaseServices {
                 'email': cartModel.address!.email,
               }
             },
+            'langCode': cartModel.langCode?.toUpperCase()
           },
         );
 
@@ -855,7 +990,7 @@ class ShopifyService extends BaseServices {
     }
   }
 
-  Future updateItemsToCart(CartModel cartModel, String? cookie) async {
+  Future updateItemsToCart(CartModelShopify cartModel, String? cookie) async {
     try {
       if (cookie != null) {
         var lineItems = [];
@@ -894,9 +1029,14 @@ class ShopifyService extends BaseServices {
 
         var checkout = result.data!['checkoutLineItemsReplace']['checkout'];
 
+        /// That case happen when user close and open app again
+        if (checkout == null) {
+          return await addItemsToCart(cartModel);
+        }
+
         return CheckoutCart.fromJsonShopify(checkout);
       } else {
-        throw Exception('You need to login to checkout');
+        throw S.current.youNeedToLoginCheckout;
       }
     } catch (err) {
       printLog('::::updateItemsToCart shopify error');
@@ -933,7 +1073,7 @@ class ShopifyService extends BaseServices {
 
       var checkout = result.data!['checkoutDiscountCodeApplyV2']['checkout'];
 
-      return CheckoutCart.fromJsonShopify(checkout);
+      return CheckoutCart.fromJsonShopifyV2(checkout);
     } catch (e) {
       printLog('::::applyCoupon shopify error');
       printLog(e.toString());
@@ -1169,9 +1309,11 @@ class ShopifyService extends BaseServices {
       const nRepositories = 50;
       final options = QueryOptions(
         document: gql(ShopifyQuery.getArticle),
+        fetchPolicy: FetchPolicy.networkOnly,
         variables: {
           'nRepositories': nRepositories,
           'pageSize': 12,
+          'langCode': languageCode,
           if (cursor != null && cursor is! num) 'cursor': cursor,
         },
       );
@@ -1260,7 +1402,8 @@ class ShopifyService extends BaseServices {
 
     if (result.hasException) {
       printLog(result.exception.toString());
-      throw Exception(result.exception.toString());
+      throw (result.exception?.graphqlErrors.firstOrNull?.message ??
+          S.current.somethingWrong);
     }
 
     final List? errors = result.data!['customerRecover']['customerUserErrors'];
diff --git a/lib/frameworks/shopify/shopify_variant_mixin.dart b/lib/frameworks/shopify/shopify_variant_mixin.dart
index 03e7ade..9fa4797 100644
--- a/lib/frameworks/shopify/shopify_variant_mixin.dart
+++ b/lib/frameworks/shopify/shopify_variant_mixin.dart
@@ -11,6 +11,8 @@ import '../../services/index.dart';
 import '../../widgets/product/product_variant.dart';
 import '../product_variant_mixin.dart';
 
+const _defaultTitle = 'Title';
+
 mixin ShopifyVariantMixin on ProductVariantMixin {
   Future<void> getProductVariations({
     BuildContext? context,
@@ -118,7 +120,9 @@ mixin ShopifyVariantMixin on ProductVariantMixin {
           product.attributes != null && product.attributes!.isNotEmpty;
       if (checkProductAttribute) {
         for (var attr in product.attributes!) {
-          if (attr.name != null && attr.name!.isNotEmpty) {
+          if (attr.name != null &&
+              attr.name!.isNotEmpty &&
+              attr.name != _defaultTitle) {
             var options = List<String>.from(attr.options!);
 
             var selectedValue = mapAttribute![attr.name!] ?? '';
@@ -150,7 +154,7 @@ mixin ShopifyVariantMixin on ProductVariantMixin {
       }
       return listWidget;
     } catch (e, trace) {
-      printLog(trace);
+      printError(e, trace);
       return [];
     }
   }
@@ -185,7 +189,7 @@ mixin ShopifyVariantMixin on ProductVariantMixin {
 
       onFinish(mapAttribute, productVariation);
     } catch (e, trace) {
-      printLog(trace);
+      printError(e, trace);
     }
   }
 
diff --git a/lib/frameworks/wordpress/index.dart b/lib/frameworks/wordpress/index.dart
index cd15cc4..bdf2ce8 100644
--- a/lib/frameworks/wordpress/index.dart
+++ b/lib/frameworks/wordpress/index.dart
@@ -260,34 +260,41 @@ class WordPressWidget extends BaseFrameworks {
   /// render category layout
   @override
   Widget renderCategoryLayout({
-    List<Category>? categories,
     required String layout,
     bool enableParallax = false,
     double? parallaxImageRatio,
+    ScrollController? scrollController,
   }) {
     switch (layout) {
       case CardCategories.type:
         return CardCategories(
-          categories: categories,
           enableParallax: enableParallax,
           parallaxImageRatio: parallaxImageRatio,
+          scrollController: scrollController,
         );
       case ColumnCategories.type:
-        return ColumnCategories(categories);
+        return ColumnCategories(
+          scrollController: scrollController,
+        );
       case SubCategories.type:
-        return SubCategories(categories);
+        return SubCategories(
+          scrollController: scrollController,
+        );
       case SideMenuCategories.type:
-        return SideMenuCategories(categories);
+        return const SideMenuCategories();
       case SideMenuSubCategories.type:
-        return SideMenuSubCategories(categories);
-      case HorizonMenu.type:
-        return HorizonMenu(categories);
+        return const SideMenuSubCategories();
       case GridCategory.type:
-        return GridCategory(categories);
+        return GridCategory(
+          scrollController: scrollController,
+        );
       case SideMenuGroupCategories.type:
-        return SideMenuGroupCategories(categories);
+        return const SideMenuGroupCategories();
+      case HorizonMenu.type:
       default:
-        return HorizonMenu(categories);
+        return HorizonMenu(
+          scrollController: scrollController,
+        );
     }
   }
 
diff --git a/lib/frameworks/wordpress/presentation/screens/blog_search_screen.dart b/lib/frameworks/wordpress/presentation/screens/blog_search_screen.dart
index c8885a0..84f7620 100644
--- a/lib/frameworks/wordpress/presentation/screens/blog_search_screen.dart
+++ b/lib/frameworks/wordpress/presentation/screens/blog_search_screen.dart
@@ -103,7 +103,7 @@ class _StateSearchScreen extends State<BlogSearchScreen> with AppBarMixin {
     );
   }
 
-  PreferredSizeWidget? renderAppBar() {
+  AppBar? renderAppBar() {
     if (Navigator.canPop(context)) {
       return AppBar(
         elevation: 0.1,
@@ -134,105 +134,103 @@ class _StateSearchScreen extends State<BlogSearchScreen> with AppBarMixin {
   Widget build(BuildContext context) {
     return renderScaffold(
       routeName: RouteList.search,
-      body: Scaffold(
-        appBar: renderAppBar(),
-        backgroundColor: Theme.of(context).backgroundColor,
-        resizeToAvoidBottomInset: false,
-        body: SafeArea(
-          bottom: false,
-          child: Column(
-            children: <Widget>[
-              if (!Navigator.canPop(context)) ...[
-                AnimatedContainer(
-                  height: isVisibleSearch ? 0 : 40,
-                  padding: const EdgeInsets.only(left: 15, top: 10),
-                  duration: const Duration(milliseconds: 250),
+      secondAppBar: renderAppBar(),
+      backgroundColor: Theme.of(context).backgroundColor,
+      resizeToAvoidBottomInset: false,
+      child: SafeArea(
+        bottom: false,
+        child: Column(
+          children: <Widget>[
+            if (!Navigator.canPop(context)) ...[
+              AnimatedContainer(
+                height: isVisibleSearch ? 0 : 40,
+                padding: const EdgeInsets.only(left: 15, top: 10),
+                duration: const Duration(milliseconds: 250),
+                child: Row(
+                  mainAxisSize: MainAxisSize.max,
+                  children: <Widget>[
+                    Text(S.of(context).search,
+                        style: const TextStyle(
+                            fontSize: 28, fontWeight: FontWeight.bold)),
+                  ],
+                ),
+              ),
+              const SizedBox(
+                height: 10.0,
+              ),
+            ],
+            Row(children: [
+              Expanded(
+                child: Container(
+                  height: 40,
+                  decoration: BoxDecoration(
+                    color: Theme.of(context).primaryColorLight,
+                    borderRadius: BorderRadius.circular(20),
+                  ),
+                  padding: const EdgeInsets.symmetric(horizontal: 10),
+                  margin:
+                      const EdgeInsets.only(left: 10, right: 10, bottom: 15),
                   child: Row(
-                    mainAxisSize: MainAxisSize.max,
+                    crossAxisAlignment: CrossAxisAlignment.center,
                     children: <Widget>[
-                      Text(S.of(context).search,
-                          style: const TextStyle(
-                              fontSize: 28, fontWeight: FontWeight.bold)),
-                    ],
-                  ),
-                ),
-                const SizedBox(
-                  height: 10.0,
-                ),
-              ],
-              Row(children: [
-                Expanded(
-                  child: Container(
-                    height: 40,
-                    decoration: BoxDecoration(
-                      color: Theme.of(context).primaryColorLight,
-                      borderRadius: BorderRadius.circular(20),
-                    ),
-                    padding: const EdgeInsets.symmetric(horizontal: 10),
-                    margin:
-                        const EdgeInsets.only(left: 10, right: 10, bottom: 15),
-                    child: Row(
-                      crossAxisAlignment: CrossAxisAlignment.center,
-                      children: <Widget>[
-                        const Icon(
-                          Icons.search,
-                          color: Colors.black45,
-                        ),
-                        const SizedBox(width: 10),
-                        Expanded(
-                          child: TextField(
-                            controller: textController,
-                            focusNode: _focus,
-                            onChanged: (text) {
-                              if (_timer != null) {
-                                _timer?.cancel();
+                      const Icon(
+                        Icons.search,
+                        color: Colors.black45,
+                      ),
+                      const SizedBox(width: 10),
+                      Expanded(
+                        child: TextField(
+                          controller: textController,
+                          focusNode: _focus,
+                          onChanged: (text) {
+                            if (_timer != null) {
+                              _timer?.cancel();
+                            }
+                            _timer =
+                                Timer(const Duration(milliseconds: 500), () {
+                              if (mounted) {
+                                setState(() {
+                                  searchText = text;
+                                });
                               }
-                              _timer =
-                                  Timer(const Duration(milliseconds: 500), () {
-                                if (mounted) {
-                                  setState(() {
-                                    searchText = text;
-                                  });
-                                }
-                                Provider.of<BlogSearchModel>(context,
-                                        listen: false)
-                                    .searchBlogs(name: text);
-                              });
-                            },
-                            decoration: InputDecoration(
-                              fillColor:
-                                  Theme.of(context).colorScheme.secondary,
-                              border: InputBorder.none,
-                              hintText: S.of(context).searchForItems,
-                            ),
+                              Provider.of<BlogSearchModel>(context,
+                                      listen: false)
+                                  .searchBlogs(name: text);
+                            });
+                          },
+                          decoration: InputDecoration(
+                            fillColor:
+                                Theme.of(context).colorScheme.secondary,
+                            border: InputBorder.none,
+                            hintText: S.of(context).searchForItems,
                           ),
                         ),
-                        AnimatedContainer(
-                          width: (searchText.isEmpty) ? 0 : 50,
-                          duration: const Duration(milliseconds: 200),
-                          child: GestureDetector(
-                            onTap: () {
-                              setState(() {
-                                searchText = '';
-                                isVisibleSearch = false;
-                              });
-                              textController.text = '';
-                              FocusScope.of(context).requestFocus(FocusNode());
-                            },
-                            child: Center(
-                              child: Text(S.of(context).cancel,
-                                  overflow: TextOverflow.ellipsis),
-                            ),
+                      ),
+                      AnimatedContainer(
+                        width: (searchText.isEmpty) ? 0 : 50,
+                        duration: const Duration(milliseconds: 200),
+                        child: GestureDetector(
+                          onTap: () {
+                            setState(() {
+                              searchText = '';
+                              isVisibleSearch = false;
+                            });
+                            textController.text = '';
+                            FocusScope.of(context).requestFocus(FocusNode());
+                          },
+                          child: Center(
+                            child: Text(S.of(context).cancel,
+                                overflow: TextOverflow.ellipsis),
                           ),
-                        )
-                      ],
-                    ),
+                        ),
+                      )
+                    ],
                   ),
                 ),
-              ]),
-              Expanded(child: _renderSearchLayout()),
-            ],
-          ),
+              ),
+            ]),
+            Expanded(child: _renderSearchLayout()),
+          ],
         ),
       ),
     );
diff --git a/lib/frameworks/wordpress/presentation/screens/blog_wish_list_screen.dart b/lib/frameworks/wordpress/presentation/screens/blog_wish_list_screen.dart
index 247f742..5333bd0 100644
--- a/lib/frameworks/wordpress/presentation/screens/blog_wish_list_screen.dart
+++ b/lib/frameworks/wordpress/presentation/screens/blog_wish_list_screen.dart
@@ -19,59 +19,63 @@ class BlogWishListScreen extends StatefulWidget {
 
 class _BlogWishListScreenState extends State<BlogWishListScreen>
     with SingleTickerProviderStateMixin, AppBarMixin {
+
+  final ScrollController _scrollController = ScrollController();
+
+  @override
+  void initState() {
+    super.initState();
+    screenScrollController = _scrollController;
+  }
+
   @override
   Widget build(BuildContext context) {
     return renderScaffold(
       backgroundColor: Theme.of(context).backgroundColor,
       routeName: RouteList.wishlist,
-      body: Column(
-        children: [
-          AppBar(
-            systemOverlayStyle: SystemUiOverlayStyle.light,
-            elevation: 0.5,
-            backgroundColor: Theme.of(context).backgroundColor,
-            title: Text(
-              S.of(context).myWishList,
-              style: Theme.of(context)
-                  .textTheme
-                  .headline5
-                  ?.copyWith(fontWeight: FontWeight.w700),
-            ),
-          ),
-          Expanded(
-            child: Consumer<BlogWishListModel>(
-              builder: (context, model, child) {
-                if (model.blogs.isEmpty) {
-                  return _EmptyWishlist();
-                }
-                return ListView.builder(
-                  itemCount: model.blogs.length,
-                  itemBuilder: (context, index) {
-                    final blog = model.blogs[index];
-                    return Padding(
-                      padding: const EdgeInsets.only(bottom: 12.0),
-                      child: _BlogWishListItem(
+      secondAppBar: AppBar(
+        systemOverlayStyle: SystemUiOverlayStyle.light,
+        elevation: 0.5,
+        backgroundColor: Theme.of(context).backgroundColor,
+        title: Text(
+          S.of(context).myWishList,
+          style: Theme.of(context)
+              .textTheme
+              .headline5
+              ?.copyWith(fontWeight: FontWeight.w700),
+        ),
+      ),
+      child: Consumer<BlogWishListModel>(
+        builder: (context, model, child) {
+          if (model.blogs.isEmpty) {
+            return _EmptyWishlist();
+          }
+          return ListView.builder(
+            controller: _scrollController,
+            itemCount: model.blogs.length,
+            itemBuilder: (context, index) {
+              final blog = model.blogs[index];
+              return Padding(
+                padding: const EdgeInsets.only(bottom: 12.0),
+                child: _BlogWishListItem(
+                  blog: blog,
+                  onTap: () {
+                    Navigator.of(context).pushNamed(
+                      RouteList.detailBlog,
+                      arguments: BlogDetailArguments(
                         blog: blog,
-                        onTap: () {
-                          Navigator.of(context).pushNamed(
-                            RouteList.detailBlog,
-                            arguments: BlogDetailArguments(
-                              blog: blog,
-                              listBlog: model.blogs,
-                            ),
-                          );
-                        },
-                        onRemove: () {
-                          model.removeToWishlist(blog);
-                        },
+                        listBlog: model.blogs,
                       ),
                     );
                   },
-                );
-              },
-            ),
-          ),
-        ],
+                  onRemove: () {
+                    model.removeToWishlist(blog);
+                  },
+                ),
+              );
+            },
+          );
+        },
       ),
     );
   }
@@ -193,7 +197,7 @@ class _BlogWishListItem extends StatelessWidget {
                           SizedBox(
                             width: screenSize.width * 0.25,
                             height: screenSize.width * 0.15,
-                            child: ImageTools.image(
+                            child: ImageResize(
                               fit: BoxFit.fitWidth,
                               url: blog.imageFeature,
                               size: kSize.medium,
diff --git a/lib/frameworks/wordpress/presentation/screens/home_blog_search_screen.dart b/lib/frameworks/wordpress/presentation/screens/home_blog_search_screen.dart
index 9b2b54a..779f66d 100644
--- a/lib/frameworks/wordpress/presentation/screens/home_blog_search_screen.dart
+++ b/lib/frameworks/wordpress/presentation/screens/home_blog_search_screen.dart
@@ -44,17 +44,20 @@ class _HomeBlogSearchScreenState<T> extends State<HomeBlogSearchScreen> {
   @override
   void initState() {
     super.initState();
-    _searchFieldNode.addListener(() {
-      if (_searchKeyword.isEmpty && !_searchFieldNode.hasFocus) {
-        _showResult = false;
-      } else {
-        _showResult = !_searchFieldNode.hasFocus;
-      }
-    });
+    _searchFieldNode.addListener(_onSearchFieldFocusChanged);
+  }
+
+  void _onSearchFieldFocusChanged() {
+    if (_searchKeyword.isEmpty && !_searchFieldNode.hasFocus) {
+      _showResult = false;
+    } else {
+      _showResult = !_searchFieldNode.hasFocus;
+    }
   }
 
   @override
   void dispose() {
+    _searchFieldNode.removeListener(_onSearchFieldFocusChanged);
     _searchFieldNode.dispose();
     _searchFieldController.dispose();
 //    _searchModel.dispose();
diff --git a/lib/frameworks/wordpress/presentation/screens/post_management/post_view.dart b/lib/frameworks/wordpress/presentation/screens/post_management/post_view.dart
index 8bac692..0dde205 100644
--- a/lib/frameworks/wordpress/presentation/screens/post_management/post_view.dart
+++ b/lib/frameworks/wordpress/presentation/screens/post_management/post_view.dart
@@ -48,7 +48,7 @@ class PostView extends StatelessWidget {
                 borderRadius: BorderRadius.all(
                   Radius.circular(imageBorder!),
                 ),
-                child: ImageTools.image(
+                child: ImageResize(
                   url: blogs![index!].imageFeature,
                   width: imageWidth,
                   height: imageWidth,
diff --git a/lib/frameworks/wordpress/presentation/widgets/category_layout/cardlist/index.dart b/lib/frameworks/wordpress/presentation/widgets/category_layout/cardlist/index.dart
index f7f73ec..5d4b76c 100644
--- a/lib/frameworks/wordpress/presentation/widgets/category_layout/cardlist/index.dart
+++ b/lib/frameworks/wordpress/presentation/widgets/category_layout/cardlist/index.dart
@@ -1,4 +1,7 @@
 import 'package:flutter/material.dart';
+import 'package:provider/provider.dart';
+import '../../../../../../common/config.dart';
+import '../../../../../../generated/l10n.dart';
 import '../../../../../../models/index.dart';
 
 import 'menu_card.dart';
@@ -6,9 +9,11 @@ import 'menu_card.dart';
 class HorizonMenu extends StatefulWidget {
   static const String type = 'animation';
 
-  final List<Category>? categories;
+  final ScrollController? scrollController;
 
-  const HorizonMenu(this.categories);
+  const HorizonMenu({
+    this.scrollController,
+  });
 
   @override
   State<HorizonMenu> createState() => _StateHorizonMenu();
@@ -20,33 +25,43 @@ class _StateHorizonMenu extends State<HorizonMenu> {
     super.initState();
   }
 
-  List<Category>? getCategory() {
-    final categories = widget.categories;
-    return categories?.where((item) => item.parent.toString() == '0').toList();
+  List<Category> getCategory(List<Category> categories) {
+    return categories.where((item) => item.parent.toString() == '0').toList();
   }
 
-  List<Category>? getChildrenOfCategory(Category category) {
-    final categories = widget.categories;
+  List<Category>? getChildrenOfCategory(
+      List<Category> categories, Category category) {
     var children = categories
-        ?.where((o) => o.parent.toString() == category.id.toString())
+        .where((o) => o.parent.toString() == category.id.toString())
         .toList();
     return children;
   }
 
   @override
   Widget build(BuildContext context) {
-    if (widget.categories == null || widget.categories!.isEmpty) {
-      return const SizedBox();
-    }
-    final categories = getCategory()!;
-    return Column(
-      children: List.generate(
-        categories.length,
-        (index) {
-          return MenuCard(
-              getChildrenOfCategory(categories[index])!, categories[index]);
-        },
-      ),
+    return Consumer<CategoryModel>(
+      builder: (context, value, child) {
+        if (value.isFirstLoad) {
+          return kLoadingWidget(context);
+        }
+        var categories = value.categories;
+        if (categories?.isEmpty ?? true) {
+          return Center(
+            child: Text(S.of(context).noData),
+          );
+        }
+        var parentCategories = getCategory(categories ?? []);
+
+        return ListView.builder(
+          controller: widget.scrollController,
+          itemCount: parentCategories.length,
+          itemBuilder: (context, index) => MenuCard(
+            getChildrenOfCategory(categories ?? [], parentCategories[index]) ??
+                [],
+            parentCategories[index],
+          ),
+        );
+      },
     );
   }
 }
diff --git a/lib/frameworks/wordpress/presentation/widgets/category_layout/side_menu.dart b/lib/frameworks/wordpress/presentation/widgets/category_layout/side_menu.dart
index c2405ef..bf7c6b2 100644
--- a/lib/frameworks/wordpress/presentation/widgets/category_layout/side_menu.dart
+++ b/lib/frameworks/wordpress/presentation/widgets/category_layout/side_menu.dart
@@ -3,6 +3,7 @@ import 'package:provider/provider.dart';
 
 import '../../../../../common/config.dart';
 import '../../../../../common/constants.dart';
+import '../../../../../generated/l10n.dart';
 import '../../../../../models/index.dart';
 import '../../../../../routes/flux_navigate.dart';
 import '../../../../../screens/index.dart';
@@ -11,9 +12,8 @@ import '../../../../../widgets/blog/blog_card_view.dart';
 
 class SideMenuCategories extends StatefulWidget {
   static const String type = 'sideMenu';
-  final List<Category>? categories;
 
-  const SideMenuCategories(this.categories);
+  const SideMenuCategories();
 
   @override
   State<StatefulWidget> createState() {
@@ -28,88 +28,91 @@ class SideMenuCategoriesState extends State<SideMenuCategories> {
   @override
   Widget build(BuildContext context) {
     final theme = Theme.of(context);
-    var categories = widget.categories
-        ?.where((item) => item.parent.toString() == '0')
-        .toList();
-    if (categories == null || categories.isEmpty) {
-      return const SizedBox();
-    }
+    return Consumer<CategoryModel>(
+      builder: (context, value, child) {
+        if (value.isFirstLoad) {
+          return kLoadingWidget(context);
+        }
+        var categories = value.categories
+                ?.where((item) => item.parent.toString() == '0')
+                .toList() ??
+            [];
+        if (categories.isEmpty) {
+          return Center(
+            child: Text(S.of(context).noData),
+          );
+        }
 
-    return Row(
-      children: <Widget>[
-        Container(
-          width: 100,
-          color: Theme.of(context).primaryColorLight,
-          child: ListView.builder(
-            itemCount: categories.length,
-            itemBuilder: (context, index) {
-              return GestureDetector(
-                onTap: () {
-                  setState(() {
-                    selectedIndex = index;
-                  });
-                },
-                child: Padding(
-                  padding: const EdgeInsets.only(
-                      top: 15, bottom: 15, left: 4, right: 4),
-                  child: Center(
-                    child: Text(
-                      categories[index].name != null
-                          ? categories[index].name!.toUpperCase()
-                          : '',
-                      style: TextStyle(
-                        fontSize: 10,
-                        color: selectedIndex == index
-                            ? theme.primaryColor
-                            : theme.colorScheme.secondary,
+        return Row(
+          children: <Widget>[
+            Container(
+              width: 100,
+              color: Theme.of(context).primaryColorLight,
+              child: ListView.builder(
+                itemCount: categories.length,
+                itemBuilder: (context, index) {
+                  return GestureDetector(
+                    onTap: () {
+                      setState(() {
+                        selectedIndex = index;
+                      });
+                    },
+                    child: Padding(
+                      padding: const EdgeInsets.only(
+                          top: 15, bottom: 15, left: 4, right: 4),
+                      child: Center(
+                        child: Text(
+                          categories[index].displayName,
+                          style: TextStyle(
+                            fontSize: 10,
+                            color: selectedIndex == index
+                                ? theme.primaryColor
+                                : theme.colorScheme.secondary,
+                          ),
+                          textAlign: TextAlign.center,
+                        ),
                       ),
-                      textAlign: TextAlign.center,
                     ),
-                  ),
-                ),
-              );
-            },
-          ),
-        ),
-        Expanded(child: LayoutBuilder(
-          builder: (context, constraints) {
-            return FutureBuilder<List<Blog>>(
-              future: _service.api.fetchBlogsByCategory(
-                lang: Provider.of<AppModel>(context, listen: false).langCode,
-                categoryId: categories[selectedIndex].id,
-                page: 1,
+                  );
+                },
               ),
-              builder:
-                  (BuildContext context, AsyncSnapshot<List<Blog>> snapshot) {
-                if (!snapshot.hasData) {
-                  return kLoadingWidget(context);
-                }
-                return SingleChildScrollView(
-                  padding: const EdgeInsets.all(10),
-                  child: Column(
-                    children: List.generate(
-                      snapshot.data!.length,
-                      (index) {
-                        return BlogCard(
-                          item: snapshot.data![index],
-                          width: constraints.maxWidth,
-                          onTap: () => FluxNavigate.pushNamed(
-                            RouteList.detailBlog,
-                            arguments: BlogDetailArguments(
-                              blog: snapshot.data![index],
-                              listBlog: snapshot.data,
-                            ),
-                          ),
-                        );
-                      },
-                    ),
+            ),
+            Expanded(child: LayoutBuilder(
+              builder: (context, constraints) {
+                return FutureBuilder<List<Blog>>(
+                  future: _service.api.fetchBlogsByCategory(
+                    lang:
+                        Provider.of<AppModel>(context, listen: false).langCode,
+                    categoryId: categories[selectedIndex].id,
+                    page: 1,
                   ),
+                  builder: (BuildContext context,
+                      AsyncSnapshot<List<Blog>> snapshot) {
+                    if (!snapshot.hasData) {
+                      return kLoadingWidget(context);
+                    }
+                    return ListView.builder(
+                      padding: const EdgeInsets.all(10),
+                      itemCount: snapshot.data?.length,
+                      itemBuilder: (context, index) => BlogCard(
+                        item: snapshot.data![index],
+                        width: constraints.maxWidth,
+                        onTap: () => FluxNavigate.pushNamed(
+                          RouteList.detailBlog,
+                          arguments: BlogDetailArguments(
+                            blog: snapshot.data![index],
+                            listBlog: snapshot.data,
+                          ),
+                        ),
+                      ),
+                    );
+                  },
                 );
               },
-            );
-          },
-        ))
-      ],
+            ))
+          ],
+        );
+      },
     );
   }
 }
diff --git a/lib/frameworks/wordpress/presentation/widgets/category_layout/sub.dart b/lib/frameworks/wordpress/presentation/widgets/category_layout/sub.dart
index 55165e0..34007e3 100644
--- a/lib/frameworks/wordpress/presentation/widgets/category_layout/sub.dart
+++ b/lib/frameworks/wordpress/presentation/widgets/category_layout/sub.dart
@@ -1,8 +1,8 @@
 import 'package:flutter/material.dart';
 import 'package:provider/provider.dart';
-
 import '../../../../../common/config.dart';
 import '../../../../../common/constants.dart';
+import '../../../../../generated/l10n.dart';
 import '../../../../../models/index.dart';
 import '../../../../../routes/flux_navigate.dart';
 import '../../../../../screens/index.dart';
@@ -12,8 +12,11 @@ import '../../../../../widgets/blog/blog_card_view.dart';
 class SubCategories extends StatefulWidget {
   static const String type = 'subCategories';
 
-  final List<Category>? categories;
-  const SubCategories(this.categories);
+  final ScrollController? scrollController;
+
+  const SubCategories({
+    this.scrollController,
+  });
 
   @override
   State<StatefulWidget> createState() {
@@ -28,80 +31,88 @@ class SubCategoriesState extends State<SubCategories> {
   @override
   Widget build(BuildContext context) {
     final theme = Theme.of(context);
-    if (widget.categories == null || widget.categories!.isEmpty) {
-      return const SizedBox();
-    }
-
-    return Column(
-      children: <Widget>[
-        SizedBox(
-          height: 60,
-          child: ListView.builder(
-            scrollDirection: Axis.horizontal,
-            itemCount: widget.categories!.length,
-            itemBuilder: (context, index) {
-              return GestureDetector(
-                onTap: () {
-                  setState(() {
-                    selectedIndex = index;
-                  });
-                },
-                child: Padding(
-                  padding: const EdgeInsets.only(left: 10, right: 10),
-                  child: Center(
-                    child: Text(widget.categories![index].name!,
-                        style: TextStyle(
-                            fontSize: 18,
-                            color: selectedIndex == index
-                                ? theme.primaryColor
-                                : theme.hintColor)),
-                  ),
-                ),
-              );
-            },
-          ),
-        ),
-        Expanded(
-          child: LayoutBuilder(
-            builder: (context, constraints) {
-              return FutureBuilder<List<Blog>>(
-                future: _service.api.fetchBlogsByCategory(
-                  lang: Provider.of<AppModel>(context, listen: false).langCode,
-                  categoryId: widget.categories![selectedIndex].id,
-                  page: 1,
-                ),
-                builder:
-                    (BuildContext context, AsyncSnapshot<List<Blog>> snapshot) {
-                  if (!snapshot.hasData) {
-                    return kLoadingWidget(context);
-                  }
-                  return SingleChildScrollView(
-                    padding: const EdgeInsets.all(10),
-                    child: Column(
-                      children: List.generate(
-                        snapshot.data!.length,
-                        (index) {
-                          return BlogCard(
-                            item: snapshot.data![index],
-                            width: constraints.maxWidth,
-                            onTap: () => FluxNavigate.pushNamed(
-                              RouteList.detailBlog,
-                              arguments: BlogDetailArguments(
-                                blog: snapshot.data![index],
-                                listBlog: snapshot.data,
-                              ),
-                            ),
-                          );
-                        },
+    return Consumer<CategoryModel>(
+      builder: (context, value, child) {
+        if (value.isFirstLoad) {
+          return kLoadingWidget(context);
+        }
+        var categories = value.categories
+                ?.where((item) => item.parent.toString() == '0')
+                .toList() ??
+            [];
+        if (categories.isEmpty) {
+          return Center(
+            child: Text(S.of(context).noData),
+          );
+        }
+        return Column(
+          children: <Widget>[
+            SizedBox(
+              height: 60,
+              child: ListView.builder(
+                scrollDirection: Axis.horizontal,
+                itemCount: categories.length,
+                itemBuilder: (context, index) {
+                  return GestureDetector(
+                    onTap: () {
+                      setState(() {
+                        selectedIndex = index;
+                      });
+                    },
+                    child: Padding(
+                      padding: const EdgeInsets.only(left: 10, right: 10),
+                      child: Center(
+                        child: Text(categories[index].displayName,
+                            style: TextStyle(
+                                fontSize: 18,
+                                color: selectedIndex == index
+                                    ? theme.primaryColor
+                                    : theme.hintColor)),
                       ),
                     ),
                   );
                 },
-              );
-            },
-          ),
-        )
-      ],
+              ),
+            ),
+            Expanded(
+              child: LayoutBuilder(
+                builder: (context, constraints) {
+                  return FutureBuilder<List<Blog>>(
+                    future: _service.api.fetchBlogsByCategory(
+                      lang: Provider.of<AppModel>(context, listen: false)
+                          .langCode,
+                      categoryId: categories[selectedIndex].id,
+                      page: 1,
+                    ),
+                    builder: (BuildContext context,
+                        AsyncSnapshot<List<Blog>> snapshot) {
+                      if (!snapshot.hasData) {
+                        return kLoadingWidget(context);
+                      }
+                      return ListView.builder(
+                        controller: widget.scrollController,
+                        padding: const EdgeInsets.all(10),
+                        itemCount: snapshot.data?.length,
+                        itemBuilder: (context, index) => BlogCard(
+                          item: snapshot.data![index],
+                          width: constraints.maxWidth,
+                          onTap: () => FluxNavigate.pushNamed(
+                            RouteList.detailBlog,
+                            arguments: BlogDetailArguments(
+                              blog: snapshot.data![index],
+                              listBlog: snapshot.data,
+                            ),
+                          ),
+                        ),
+                      );
+                    },
+                  );
+                },
+              ),
+            )
+          ],
+        );
+      },
     );
   }
 }
diff --git a/lib/frameworks/wordpress/presentation/widgets/comments/comments.dart b/lib/frameworks/wordpress/presentation/widgets/comments/comments.dart
index 90c45c2..0239bde 100644
--- a/lib/frameworks/wordpress/presentation/widgets/comments/comments.dart
+++ b/lib/frameworks/wordpress/presentation/widgets/comments/comments.dart
@@ -131,7 +131,7 @@ class _CommentBox extends StatelessWidget {
                     crossAxisAlignment: CrossAxisAlignment.start,
                     children: <Widget>[
                       CircleAvatar(
-                        child: ImageTools.image(url: comment.authorAvatarUrl),
+                        child: ImageResize(url: comment.authorAvatarUrl),
                       ),
                       const SizedBox(
                         height: 05,
diff --git a/lib/frameworks/wordpress/presentation/widgets/vertical/blog_select_card.dart b/lib/frameworks/wordpress/presentation/widgets/vertical/blog_select_card.dart
index 2f2e6d0..4d25389 100644
--- a/lib/frameworks/wordpress/presentation/widgets/vertical/blog_select_card.dart
+++ b/lib/frameworks/wordpress/presentation/widgets/vertical/blog_select_card.dart
@@ -47,7 +47,7 @@ class BlogSelectCard extends StatelessWidget {
           children: <Widget>[
             ClipRRect(
               borderRadius: BorderRadius.circular(10),
-              child: ImageTools.image(
+              child: ImageResize(
                 url: item.imageFeature,
                 width: width,
                 size: kSize.medium,
diff --git a/lib/frameworks/wordpress/presentation/widgets/vertical/menu_layout.dart b/lib/frameworks/wordpress/presentation/widgets/vertical/menu_layout.dart
index c86040a..88370cc 100644
--- a/lib/frameworks/wordpress/presentation/widgets/vertical/menu_layout.dart
+++ b/lib/frameworks/wordpress/presentation/widgets/vertical/menu_layout.dart
@@ -61,110 +61,106 @@ class _StateSelectLayout extends State<MenuLayout> {
   @override
   Widget build(BuildContext context) {
     var categories = getAllCategory();
-    if (categories.isEmpty) return const SizedBox();
-
-    return Column(
-      children: <Widget>[
-        Container(
-          height: 70,
-          padding: const EdgeInsets.only(top: 15),
-          child: ListView(
-            scrollDirection: Axis.horizontal,
-            children: List.generate(categories.length, (index) {
-              var check = (blogs.length > index)
-                  ? (blogs[index].isEmpty ? false : true)
-                  : true;
-              return GestureDetector(
-                onTap: () {
-                  setState(() {
-                    position = index;
-                  });
-                },
-                child: !check
-                    ? const SizedBox()
-                    : Padding(
-                        padding: const EdgeInsets.symmetric(horizontal: 20),
-                        child: Column(
-                          children: <Widget>[
-                            Padding(
-                              padding: const EdgeInsets.only(bottom: 8),
-                              child: Text(
-                                categories[index].name!.toUpperCase(),
-                                style: TextStyle(
-                                    color: index == position
-                                        ? Theme.of(context).primaryColor
-                                        : Theme.of(context)
-                                            .colorScheme
-                                            .secondary,
-                                    fontWeight: FontWeight.w600),
-                              ),
+    if (categories.isEmpty) return const SliverToBoxAdapter(child: SizedBox());
+    return SliverList(
+        delegate: SliverChildListDelegate([
+      Container(
+        height: 70,
+        padding: const EdgeInsets.only(top: 15),
+        child: ListView(
+          scrollDirection: Axis.horizontal,
+          children: List.generate(categories.length, (index) {
+            var check = (blogs.length > index)
+                ? (blogs[index].isEmpty ? false : true)
+                : true;
+            return GestureDetector(
+              onTap: () {
+                setState(() {
+                  position = index;
+                });
+              },
+              child: !check
+                  ? const SizedBox()
+                  : Padding(
+                      padding: const EdgeInsets.symmetric(horizontal: 20),
+                      child: Column(
+                        children: <Widget>[
+                          Padding(
+                            padding: const EdgeInsets.only(bottom: 8),
+                            child: Text(
+                              categories[index].name!.toUpperCase(),
+                              style: TextStyle(
+                                  color: index == position
+                                      ? Theme.of(context).primaryColor
+                                      : Theme.of(context).colorScheme.secondary,
+                                  fontWeight: FontWeight.w600),
                             ),
-                            index == position
-                                ? Container(
-                                    height: 4,
-                                    decoration: BoxDecoration(
-                                        borderRadius: BorderRadius.circular(10),
-                                        color: Theme.of(context).primaryColor),
-                                    width: 20,
-                                  )
-                                : const SizedBox()
-                          ],
-                        ),
+                          ),
+                          index == position
+                              ? Container(
+                                  height: 4,
+                                  decoration: BoxDecoration(
+                                      borderRadius: BorderRadius.circular(10),
+                                      color: Theme.of(context).primaryColor),
+                                  width: 20,
+                                )
+                              : const SizedBox()
+                        ],
                       ),
-              );
-            }),
-          ),
+                    ),
+            );
+          }),
         ),
-        FutureBuilder<bool>(
-          future: getAllListBlogs(categories: categories),
-          builder: (context, check) {
-            if (blogs.isEmpty) {
-              return MasonryGridView.count(
-                crossAxisCount: 4,
-                key: Key(categories[position].id.toString()),
-                shrinkWrap: true,
-                controller: _controller,
-                itemCount: 4,
-                itemBuilder: (context, value) {
-                  return BlogCard(
-                    item: Blog.empty(value),
-                    width: MediaQuery.of(context).size.width / 2,
-                    onTap: () {},
-                  );
-                },
-                // staggeredTileBuilder: (index) => const StaggeredTile.fit(2),
-              );
-            }
-            if (blogs[position].isEmpty) {
-              return SizedBox(
-                height: MediaQuery.of(context).size.width / 2,
-                child: Center(
-                  child: Text(S.of(context).noProduct),
-                ),
-              );
-            }
-            return MediaQuery.removePadding(
-              removeTop: true,
-              context: context,
-              child: MasonryGridView.count(
-                crossAxisCount: 2,
-                key: Key(categories[position].id.toString()),
-                shrinkWrap: true,
-                controller: _controller,
-                itemCount: blogs[position].length,
-                itemBuilder: (context, value) {
-                  return BlogSelectCard(
-                    item: blogs[position][value],
-                    listBlog: blogs[position],
-                    width: MediaQuery.of(context).size.width / 2,
-                  );
-                },
-                // staggeredTileBuilder: (index) => const StaggeredTile.fit(2),
+      ),
+      FutureBuilder<bool>(
+        future: getAllListBlogs(categories: categories),
+        builder: (context, check) {
+          if (blogs.isEmpty) {
+            return MasonryGridView.count(
+              crossAxisCount: 4,
+              key: Key(categories[position].id.toString()),
+              shrinkWrap: true,
+              controller: _controller,
+              itemCount: 4,
+              itemBuilder: (context, value) {
+                return BlogCard(
+                  item: Blog.empty(value),
+                  width: MediaQuery.of(context).size.width / 2,
+                  onTap: () {},
+                );
+              },
+              // staggeredTileBuilder: (index) => const StaggeredTile.fit(2),
+            );
+          }
+          if (blogs[position].isEmpty) {
+            return SizedBox(
+              height: MediaQuery.of(context).size.width / 2,
+              child: Center(
+                child: Text(S.of(context).noProduct),
               ),
             );
-          },
-        )
-      ],
-    );
+          }
+          return MediaQuery.removePadding(
+            removeTop: true,
+            context: context,
+            child: MasonryGridView.count(
+              crossAxisCount: 2,
+              key: Key(categories[position].id.toString()),
+              shrinkWrap: true,
+              controller: _controller,
+              itemCount: blogs[position].length,
+              itemBuilder: (context, value) {
+                return BlogSelectCard(
+                  item: blogs[position][value],
+                  listBlog: blogs[position],
+                  width: MediaQuery.of(context).size.width / 2,
+                );
+              },
+              // staggeredTileBuilder: (index) => const StaggeredTile.fit(2),
+            ),
+          );
+        },
+      ),
+    ]));
   }
 }
diff --git a/lib/frameworks/wordpress/presentation/widgets/vertical/pinterest_card.dart b/lib/frameworks/wordpress/presentation/widgets/vertical/pinterest_card.dart
index fc478a8..888868b 100644
--- a/lib/frameworks/wordpress/presentation/widgets/vertical/pinterest_card.dart
+++ b/lib/frameworks/wordpress/presentation/widgets/vertical/pinterest_card.dart
@@ -51,7 +51,7 @@ class PinterestCard extends StatelessWidget {
           children: <Widget>[
             Stack(
               children: <Widget>[
-                ImageTools.image(
+                ImageResize(
                   url: item.imageFeature,
                   width: width,
                   size: kSize.medium,
diff --git a/lib/frameworks/wordpress/presentation/widgets/vertical/pinterest_layout.dart b/lib/frameworks/wordpress/presentation/widgets/vertical/pinterest_layout.dart
index a5bd643..7d27079 100644
--- a/lib/frameworks/wordpress/presentation/widgets/vertical/pinterest_layout.dart
+++ b/lib/frameworks/wordpress/presentation/widgets/vertical/pinterest_layout.dart
@@ -40,29 +40,22 @@ class _PinterestLayoutState extends State<PinterestLayout> {
 
   @override
   Widget build(BuildContext context) {
-    return Column(
-      children: <Widget>[
-        MediaQuery.removePadding(
-          context: context,
-          removeTop: true,
-          child: MasonryGridView.count(
-            crossAxisCount: 2,
-            mainAxisSpacing: 4.0,
-            shrinkWrap: true,
-            primary: false,
-            crossAxisSpacing: 4.0,
-            itemCount: _blogs.length,
-            itemBuilder: (context, index) => PinterestCard(
-              item: _blogs[index],
-              listBlog: _blogs,
-              showOnlyImage: widget.config.showOnlyImage,
-              width: MediaQuery.of(context).size.width / 2,
-              showCart: false,
-            ),
-            // staggeredTileBuilder: (index) => const StaggeredTile.fit(2),
-          ),
+    return MediaQuery.removePadding(
+      context: context,
+      removeTop: true,
+      child: SliverMasonryGrid.count(
+        crossAxisCount: 2,
+        mainAxisSpacing: 4.0,
+        crossAxisSpacing: 4.0,
+        childCount: _blogs.length,
+        itemBuilder: (context, index) => PinterestCard(
+          item: _blogs[index],
+          listBlog: _blogs,
+          showOnlyImage: widget.config.showOnlyImage,
+          width: MediaQuery.of(context).size.width / 2,
+          showCart: false,
         ),
-      ],
+      ),
     );
   }
 }
diff --git a/lib/frameworks/wordpress/presentation/widgets/vertical/vertical.dart b/lib/frameworks/wordpress/presentation/widgets/vertical/vertical.dart
index 000f377..105b35a 100644
--- a/lib/frameworks/wordpress/presentation/widgets/vertical/vertical.dart
+++ b/lib/frameworks/wordpress/presentation/widgets/vertical/vertical.dart
@@ -35,21 +35,22 @@ class _VerticalLayoutState extends State<VerticalLayout> {
 
   @override
   Widget build(BuildContext context) {
-    return Column(
-      mainAxisAlignment: MainAxisAlignment.start,
-      children: <Widget>[
+    return CustomScrollView(
+      slivers: [
         if (blogConfig.name?.isNotEmpty ?? false)
-          HeaderView(
-            headerText: blogConfig.name,
-            showSeeAll: true,
-            callback: () => FluxNavigate.pushNamed(
-              RouteList.backdrop,
-              arguments: BackDropArguments(
-                config: blogConfig.toJson(),
+          SliverToBoxAdapter(
+            child: HeaderView(
+              headerText: blogConfig.name,
+              showSeeAll: true,
+              callback: () => FluxNavigate.pushNamed(
+                RouteList.backdrop,
+                arguments: BackDropArguments(
+                  config: blogConfig.toJson(),
+                ),
               ),
             ),
           ),
-        renderLayout()
+        renderLayout(),
       ],
     );
   }
diff --git a/lib/frameworks/wordpress/presentation/widgets/vertical/vertical_layout.dart b/lib/frameworks/wordpress/presentation/widgets/vertical/vertical_layout.dart
index 4379fa4..5deea8e 100644
--- a/lib/frameworks/wordpress/presentation/widgets/vertical/vertical_layout.dart
+++ b/lib/frameworks/wordpress/presentation/widgets/vertical/vertical_layout.dart
@@ -67,38 +67,34 @@ class _VerticalViewLayoutState extends State<VerticalViewLayout> {
           isTablet ? widthScreen / 3 : (widthScreen / 2) - 20; //two columns
     }
 
-    return Padding(
+    return SliverPadding(
       padding: const EdgeInsets.only(left: 5.0),
-      child: Column(
-        children: <Widget>[
-          SingleChildScrollView(
-            child: Wrap(
-              children: <Widget>[
-                for (var i = 0; i < _blogs.length; i++)
-                  widget.config.layout == 'list'
-                      ? SimpleListView(
-                          item: _blogs[i],
-                          type: SimpleListType.backgroundColor,
-                          listBlog: _blogs,
-                        )
-                      : BlogCard(
-                          item: _blogs[i],
-                          width: widthContent,
-                          config: widget.config,
-                          onTap: () {
-                            if (_blogs[i].imageFeature == '') return;
-                            FluxNavigate.pushNamed(
-                              RouteList.detailBlog,
-                              arguments: BlogDetailArguments(
-                                blog: _blogs[i],
-                                listBlog: _blogs,
-                              ),
-                            );
-                          },
-                        ),
-              ],
-            ),
-          ),
+      sliver: SliverList(
+        delegate: SliverChildListDelegate([
+          ...List.generate(_blogs.length, (i) {
+            if (widget.config.layout == 'list') {
+              return SimpleListView(
+                item: _blogs[i],
+                type: SimpleListType.backgroundColor,
+                listBlog: _blogs,
+              );
+            }
+            return BlogCard(
+              item: _blogs[i],
+              width: widthContent,
+              config: widget.config,
+              onTap: () {
+                if (_blogs[i].imageFeature == '') return;
+                FluxNavigate.pushNamed(
+                  RouteList.detailBlog,
+                  arguments: BlogDetailArguments(
+                    blog: _blogs[i],
+                    listBlog: _blogs,
+                  ),
+                );
+              },
+            );
+          }),
           VisibilityDetector(
             key: const Key('loading_vertical'),
             onVisibilityChanged: (VisibilityInfo info) => _loadProduct(),
@@ -110,8 +106,8 @@ class _VerticalViewLayoutState extends State<VerticalViewLayout> {
                       child: Text(S.of(context).loading),
                     ),
                   ),
-          )
-        ],
+          ),
+        ]),
       ),
     );
   }
diff --git a/lib/frameworks/wordpress/presentation/widgets/vertical/vertical_simple_list.dart b/lib/frameworks/wordpress/presentation/widgets/vertical/vertical_simple_list.dart
index 7cce49a..a86dab8 100644
--- a/lib/frameworks/wordpress/presentation/widgets/vertical/vertical_simple_list.dart
+++ b/lib/frameworks/wordpress/presentation/widgets/vertical/vertical_simple_list.dart
@@ -60,7 +60,7 @@ class SimpleListView extends StatelessWidget {
                     ClipRRect(
                       borderRadius:
                           const BorderRadius.all(Radius.circular(10.0)),
-                      child: ImageTools.image(
+                      child: ImageResize(
                         url: item.imageFeature,
                         width: imageWidth.toDouble(),
                         size: kSize.medium,
diff --git a/lib/frameworks/wordpress/services/wordpress_mixin.dart b/lib/frameworks/wordpress/services/wordpress_mixin.dart
index 71715a5..52fa88d 100644
--- a/lib/frameworks/wordpress/services/wordpress_mixin.dart
+++ b/lib/frameworks/wordpress/services/wordpress_mixin.dart
@@ -7,7 +7,6 @@ mixin WordPressMixin on ConfigMixin {
   void configWordPress(appConfig) {
     final wordpressService = WordPressService(
       domain: appConfig['url'],
-      blogDomain: appConfig['blog'],
     );
     api = wordpressService;
     widget = WordPressWidget();
diff --git a/lib/frameworks/wordpress/services/wordpress_service.dart b/lib/frameworks/wordpress/services/wordpress_service.dart
index 13b9a5e..7ab56e3 100644
--- a/lib/frameworks/wordpress/services/wordpress_service.dart
+++ b/lib/frameworks/wordpress/services/wordpress_service.dart
@@ -14,11 +14,9 @@ import '../../../services/base_services.dart';
 class WordPressService extends BaseServices {
   WordPressService({
     required String domain,
-    String? blogDomain,
   })  : isSecure = domain.contains('https') ? '' : '&insecure=cool',
         super(
           domain: domain,
-          blogDomain: blogDomain,
         );
 
   final String isSecure;
@@ -63,12 +61,13 @@ class WordPressService extends BaseServices {
   }
 
   @override
-  Future<Blog> getPageById(int? pageId) async {
+  Future<Blog?> getPageById(int? pageId) async {
     try {
       var response = await blogApi.getAsync('pages/$pageId?_embed');
+      if (response['code'] != null) return null;
       return Blog.fromJson(response);
-    } catch (e) {
-      debugPrint(e.toString());
+    } catch (e, trace) {
+      printError(e, trace);
       rethrow;
     }
   }
@@ -235,7 +234,7 @@ class WordPressService extends BaseServices {
     try {
       var niceName = [firstName ?? '', lastName ?? ''].join(' ').trim();
 
-      final response = await http.post(
+      final response = await httpPost(
           '$domain/wp-json/api/flutter_user/register/?insecure=cool'.toUri()!,
           body: convert.jsonEncode({
             'user_email': username,
@@ -282,9 +281,7 @@ class WordPressService extends BaseServices {
         throw Exception('The username or password is incorrect.');
       }
     } catch (err, trace) {
-      printLog('🔥 Integration error:');
-      printLog(err);
-      printLog(trace);
+      printError(err, trace, '🔥 Integration error:');
       //This error exception is about your Rest API is not config correctly so that not return the correct JSON format, please double check the document from this link https://docs.inspireui.com/fluxstore/woocommerce-setup/
       rethrow;
     }
@@ -325,8 +322,7 @@ class WordPressService extends BaseServices {
         throw convert.jsonDecode(response.body)['message'];
       }
     } catch (e, trace) {
-      debugPrint('createBlog: fail');
-      debugPrint(trace.toString());
+      printError(e, trace);
       rethrow;
     }
   }
diff --git a/lib/generated/intl/messages_all.dart b/lib/generated/intl/messages_all.dart
index 5360c51..445fba7 100644
--- a/lib/generated/intl/messages_all.dart
+++ b/lib/generated/intl/messages_all.dart
@@ -16,6 +16,7 @@ import 'package:intl/message_lookup_by_library.dart';
 import 'package:intl/src/intl_helpers.dart';
 
 import 'messages_ar.dart' deferred as messages_ar;
+import 'messages_az.dart' deferred as messages_az;
 import 'messages_bn.dart' deferred as messages_bn;
 import 'messages_bs.dart' deferred as messages_bs;
 import 'messages_cs.dart' deferred as messages_cs;
@@ -66,6 +67,7 @@ import 'messages_zh_TW.dart' deferred as messages_zh_tw;
 typedef Future<dynamic> LibraryLoader();
 Map<String, LibraryLoader> _deferredLibraries = {
   'ar': messages_ar.loadLibrary,
+  'az': messages_az.loadLibrary,
   'bn': messages_bn.loadLibrary,
   'bs': messages_bs.loadLibrary,
   'cs': messages_cs.loadLibrary,
@@ -118,6 +120,8 @@ MessageLookupByLibrary? _findExact(String localeName) {
   switch (localeName) {
     case 'ar':
       return messages_ar.messages;
+    case 'az':
+      return messages_az.messages;
     case 'bn':
       return messages_bn.messages;
     case 'bs':
diff --git a/lib/generated/intl/messages_ar.dart b/lib/generated/intl/messages_ar.dart
index c05924a..e63f016 100644
--- a/lib/generated/intl/messages_ar.dart
+++ b/lib/generated/intl/messages_ar.dart
@@ -91,23 +91,14 @@ class MessageLookup extends MessageLookupByLibrary {
 
   final messages = _notInlinedMessages(_notInlinedMessages);
   static Map<String, Function> _notInlinedMessages(_) => <String, Function>{
-        "DateDESC": MessageLookupByLibrary.simpleMessage("التاريخ تنازليا"),
-        "Dutch": MessageLookupByLibrary.simpleMessage("الهولندية"),
-        "Egypt": MessageLookupByLibrary.simpleMessage("مصر"),
-        "India": MessageLookupByLibrary.simpleMessage("الهند"),
-        "Korean": MessageLookupByLibrary.simpleMessage("الكورية"),
-        "Netherlands": MessageLookupByLibrary.simpleMessage("هولندا"),
-        "Polish": MessageLookupByLibrary.simpleMessage("البولندية"),
-        "PrivacyAndTerm":
-            MessageLookupByLibrary.simpleMessage("شروط وأحكام الخصوصية"),
-        "Qty": MessageLookupByLibrary.simpleMessage("الكمية"),
-        "Tamil": MessageLookupByLibrary.simpleMessage("التاميلية"),
         "UserNameInCorrect": MessageLookupByLibrary.simpleMessage(
             " خطأ في اسم المستخدم أو كلمة المرور"),
         "aboutUs": MessageLookupByLibrary.simpleMessage("من نـحن"),
         "account": MessageLookupByLibrary.simpleMessage("الحساب"),
         "accountDeleteDescription": MessageLookupByLibrary.simpleMessage(
             "يؤدي حذف حسابك إلى إزالة المعلومات الشخصية من قاعدة بياناتنا. يصبح بريدك الإلكتروني محجوزًا بشكل دائم ولا يمكن إعادة استخدام نفس البريد الإلكتروني لتسجيل حساب جديد."),
+        "accountIsPendingApproval":
+            MessageLookupByLibrary.simpleMessage("الحساب في انتظار الموافقة."),
         "accountSetup": MessageLookupByLibrary.simpleMessage("اعدادات الحساب"),
         "active": MessageLookupByLibrary.simpleMessage("نشطة"),
         "addAName": MessageLookupByLibrary.simpleMessage("أضف اسمًا"),
@@ -172,6 +163,7 @@ class MessageLookup extends MessageLookupByLibrary {
             "تم الكشف عن عنصر/عناصر صوتية، هل تريد إضافتها لمشغل الصوت؟"),
         "availability": MessageLookupByLibrary.simpleMessage("توافر المنتجات"),
         "availablePoints": m1,
+        "averageRating": MessageLookupByLibrary.simpleMessage("متوسط تقييم"),
         "back": MessageLookupByLibrary.simpleMessage("الى الخلف"),
         "backOrder": MessageLookupByLibrary.simpleMessage("اطلب مؤخر"),
         "backToShop": MessageLookupByLibrary.simpleMessage("العودة إلى المتجر"),
@@ -221,10 +213,24 @@ class MessageLookup extends MessageLookupByLibrary {
         "byTag": MessageLookupByLibrary.simpleMessage("بواسطة الوسم"),
         "call": MessageLookupByLibrary.simpleMessage("إجراءإتصال"),
         "callTo": MessageLookupByLibrary.simpleMessage("اتصل على"),
+        "canNotCreateOrder":
+            MessageLookupByLibrary.simpleMessage("لا يمكن إنشاء النظام"),
+        "canNotCreateUser":
+            MessageLookupByLibrary.simpleMessage("لا يمكن إنشاء المستخدم."),
+        "canNotGetPayments": MessageLookupByLibrary.simpleMessage(
+            "لا يمكن الحصول على طرق الدفع"),
+        "canNotGetShipping": MessageLookupByLibrary.simpleMessage(
+            "لا يمكن الحصول على طرق الشحن"),
+        "canNotGetToken": MessageLookupByLibrary.simpleMessage(
+            "لا يمكن الحصول على معلومات رمزية."),
         "canNotLaunch": MessageLookupByLibrary.simpleMessage(
             "لا يمكن تشغيل هذا التطبيق ، تأكد من صحة إعداداتك في config.dart"),
         "canNotLoadThisLink":
             MessageLookupByLibrary.simpleMessage("لا يمكن تحميل هذا الرابط"),
+        "canNotSaveOrder":
+            MessageLookupByLibrary.simpleMessage("لا يمكن حفظ الطلب في الموقع"),
+        "canNotUpdateInfo": MessageLookupByLibrary.simpleMessage(
+            "لا يمكن تحديث معلومات المستخدم."),
         "cancel": MessageLookupByLibrary.simpleMessage("إلغاء"),
         "cantFindThisOrderId": MessageLookupByLibrary.simpleMessage(
             "لا يمكن العثور على رقم الطلبية"),
@@ -341,6 +347,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "date": MessageLookupByLibrary.simpleMessage("التاريخ"),
         "dateASC": MessageLookupByLibrary.simpleMessage("التاريخ تصاعدياً"),
         "dateBooking": MessageLookupByLibrary.simpleMessage("تاريخ الحجز"),
+        "dateDESC": MessageLookupByLibrary.simpleMessage("التاريخ تنازليا"),
         "dateEnd": MessageLookupByLibrary.simpleMessage("تاريخ الإنتهاء"),
         "dateLatest": MessageLookupByLibrary.simpleMessage("التاريخ الأحدث"),
         "dateOldest": MessageLookupByLibrary.simpleMessage("التاريخ الأقدم"),
@@ -395,6 +402,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "editProductInfo":
             MessageLookupByLibrary.simpleMessage("تحرير معلومات المنتج"),
         "editWithoutColon": MessageLookupByLibrary.simpleMessage("تحرير"),
+        "egypt": MessageLookupByLibrary.simpleMessage("مصر"),
         "email": MessageLookupByLibrary.simpleMessage("البريد الإلكتروني"),
         "emailDeleteDescription": MessageLookupByLibrary.simpleMessage(
             "سيؤدي حذف حسابك إلى إلغاء اشتراكك من جميع القوائم البريدية."),
@@ -410,6 +418,8 @@ class MessageLookup extends MessageLookupByLibrary {
             "لا يمكنك إضافة تعليقاً فارغاً"),
         "emptySearch": MessageLookupByLibrary.simpleMessage(
             "لم تقم بالبحث عن أي عناصر حتى الآن. لتبدأ الآن - سنساعدك"),
+        "emptyShippingMsg": MessageLookupByLibrary.simpleMessage(
+            "لا توجد خيارات الشحن المتاحة. يرجى التأكد من إدخال عنوانك بشكل صحيح ، أو الاتصال بنا إذا كنت بحاجة إلى أي مساعدة."),
         "emptyUsername": MessageLookupByLibrary.simpleMessage(
             "اسم المستخدم / البريد الإلكتروني فارغ"),
         "emptyWishlistSubtitle": MessageLookupByLibrary.simpleMessage(
@@ -544,6 +554,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "inStock": MessageLookupByLibrary.simpleMessage("متوفر"),
         "incorrectPassword": MessageLookupByLibrary.simpleMessage(
             "عذراً، كلمة المرور غير صحيحة"),
+        "india": MessageLookupByLibrary.simpleMessage("الهند"),
         "indonesian": MessageLookupByLibrary.simpleMessage("الإندونيسية"),
         "instantlyClose": MessageLookupByLibrary.simpleMessage("إغلاق فوري"),
         "invalidPhoneNumber":
@@ -649,6 +660,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "nearbyPlaces": MessageLookupByLibrary.simpleMessage("الأماكن القريبة"),
         "needToLoginAgain": MessageLookupByLibrary.simpleMessage(
             "تحتاج إلى تسجيل الدخول مرة أخرى لتفعيل التحديث"),
+        "netherlands": MessageLookupByLibrary.simpleMessage("هولندا"),
         "newPassword":
             MessageLookupByLibrary.simpleMessage("كلمة المرور الجديدة"),
         "newVariation": MessageLookupByLibrary.simpleMessage("خيار جديد"),
@@ -849,7 +861,9 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("تم تطبيق نقطة الخصم بنجاح"),
         "pointRewardMessage": MessageLookupByLibrary.simpleMessage(
             "توجد قاعدة خصم لتطبيق نقاطك على سلة التسوق"),
+        "polish": MessageLookupByLibrary.simpleMessage("البولندية"),
         "popular": MessageLookupByLibrary.simpleMessage("الأكثر رواجاً"),
+        "popularity": MessageLookupByLibrary.simpleMessage("شعبية"),
         "posAddressToolTip": MessageLookupByLibrary.simpleMessage(
             "سيتم حفظ هذا العنوان على جهازك المحلي. إنه ليس عنوان المستخدم."),
         "postContent": MessageLookupByLibrary.simpleMessage("محتوى المنشور"),
@@ -879,6 +893,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "printerSelection":
             MessageLookupByLibrary.simpleMessage("تحديد الطابعة"),
         "printing": MessageLookupByLibrary.simpleMessage("جاري الطباعة ..."),
+        "privacyAndTerm":
+            MessageLookupByLibrary.simpleMessage("شروط وأحكام الخصوصية"),
         "privacyPolicy": MessageLookupByLibrary.simpleMessage("سياسة الخصوصية"),
         "privacyTerms":
             MessageLookupByLibrary.simpleMessage("الخصوصية والبنود"),
@@ -898,6 +914,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "publish": MessageLookupByLibrary.simpleMessage("نشر"),
         "pullToLoadMore":
             MessageLookupByLibrary.simpleMessage("قم بالسحب لتحميل المزيد"),
+        "qty": MessageLookupByLibrary.simpleMessage("الكمية"),
         "qtyTotal": m19,
         "rate": MessageLookupByLibrary.simpleMessage("تقييم التطبيق"),
         "rateTheApp": MessageLookupByLibrary.simpleMessage("تقييم التطبيق"),
@@ -1099,6 +1116,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "support": MessageLookupByLibrary.simpleMessage("الدعم الفني"),
         "swahili": MessageLookupByLibrary.simpleMessage("السواحيلية"),
         "swedish": MessageLookupByLibrary.simpleMessage("السويدية"),
+        "tagNotExist":
+            MessageLookupByLibrary.simpleMessage("هذه العلامة غير موجودة"),
         "tags": MessageLookupByLibrary.simpleMessage("الوسوم"),
         "takePicture": MessageLookupByLibrary.simpleMessage("التقاط صورة"),
         "tamil": MessageLookupByLibrary.simpleMessage("التاميلية"),
@@ -1119,6 +1138,12 @@ class MessageLookup extends MessageLookupByLibrary {
         "tickets": MessageLookupByLibrary.simpleMessage("تذاكر"),
         "time": MessageLookupByLibrary.simpleMessage("الوقت"),
         "title": MessageLookupByLibrary.simpleMessage("العنوان"),
+        "titleAToZ":
+            MessageLookupByLibrary.simpleMessage("العنوان: من الألف إلى الياء"),
+        "titleZToA":
+            MessageLookupByLibrary.simpleMessage("العنوان: من ي إلى أ"),
+        "tooManyFaildedLogin": MessageLookupByLibrary.simpleMessage(
+            "عدد كبير جدًا من محاولات تسجيل الدخول الفاشلة. الرجاء معاودة المحاولة في وقت لاحق."),
         "topUp": MessageLookupByLibrary.simpleMessage("اشحن رصيدك"),
         "topUpProductNotFound": MessageLookupByLibrary.simpleMessage(
             "لم يتم العثور على منتج زيادة الرصيد"),
@@ -1172,6 +1197,8 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("استخدم هذه الصورة"),
         "userExists": MessageLookupByLibrary.simpleMessage(
             "عذراً، اسم المستخدم/البريد الإلكتروني غير متاح."),
+        "userNameInCorrect": MessageLookupByLibrary.simpleMessage(
+            "خطأ في اسم المستخدم أو كلمة السر."),
         "username": MessageLookupByLibrary.simpleMessage("اسم المستخدم"),
         "usernameAndPasswordRequired": MessageLookupByLibrary.simpleMessage(
             "تعبئة حقل اسم المستخدم وكلمة المرور إجباري"),
@@ -1190,6 +1217,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "viaWallet": MessageLookupByLibrary.simpleMessage("من خلال المحفظة"),
         "video": MessageLookupByLibrary.simpleMessage("فيديو"),
         "vietnamese": MessageLookupByLibrary.simpleMessage("الفيتنامية"),
+        "viewOnGoogleMaps":
+            MessageLookupByLibrary.simpleMessage("عرض على خرائط جوجل"),
         "viewRecentTransactions":
             MessageLookupByLibrary.simpleMessage("عرض المعاملات الأخيرة"),
         "visible": MessageLookupByLibrary.simpleMessage("مرئي"),
diff --git a/lib/generated/intl/messages_az.dart b/lib/generated/intl/messages_az.dart
new file mode 100644
index 0000000..598d3c0
--- /dev/null
+++ b/lib/generated/intl/messages_az.dart
@@ -0,0 +1,1298 @@
+// DO NOT EDIT. This is code generated via package:intl/generate_localized.dart
+// This is a library that provides messages for a az locale. All the
+// messages from the main program should be duplicated here with the same
+// function name.
+
+// Ignore issues from commonly used lints in this file.
+// ignore_for_file:unnecessary_brace_in_string_interps, unnecessary_new
+// ignore_for_file:prefer_single_quotes,comment_references, directives_ordering
+// ignore_for_file:annotate_overrides,prefer_generic_function_type_aliases
+// ignore_for_file:unused_import, file_names, avoid_escaping_inner_quotes
+// ignore_for_file:unnecessary_string_interpolations, unnecessary_string_escapes
+
+import 'package:intl/intl.dart';
+import 'package:intl/message_lookup_by_library.dart';
+
+final messages = new MessageLookup();
+
+typedef String MessageIfAbsent(String messageStr, List<dynamic> args);
+
+class MessageLookup extends MessageLookupByLibrary {
+  String get localeName => 'az';
+
+  static String m0(attribute) => "İstənilən ${attribute}";
+
+  static String m1(point) => "Əlçatan xallarınız: ${point}";
+
+  static String m2(state) => "Bluetooth Adapteri: ${state}";
+
+  static String m3(currency) => "Valyuta ${currency}olaraq dəyişdirildi";
+
+  static String m4(day) => "${day} gün öncə";
+
+  static String m5(total) => "~${total} km";
+
+  static String m6(timeLeft) => " ${timeLeft}tarixində bitir";
+
+  static String m7(captcha) => "Təsdiq etmək üçün ${captcha} daxil edin:";
+
+  static String m8(message) => "Xəta: ${message}";
+
+  static String m9(time) => " ${time}tarixində başa çatır";
+
+  static String m10(total) => ">${total} km";
+
+  static String m11(hour) => "${hour} saat öncə";
+
+  static String m12(message) =>
+      "Data sorğusu zamanı tətbiqdə problem var, problemləri həll etmək üçün admin ilə əlaqə saxlayın: ${message}";
+
+  static String m13(size) => "Maksimum fayl ölçüsü: ${size} MB";
+
+  static String m14(minute) => "${minute} dəqiqə öncə";
+
+  static String m15(month) => "${month} ay əvvəl";
+
+  static String m16(store) => " ${store}saytından daha çox";
+
+  static String m17(itemCount) => "${itemCount} məhsul";
+
+  static String m18(price) => "Cəmi seçimlər: ${price}";
+
+  static String m19(total) => "Miqdar: ${total}";
+
+  static String m20(percent) => "Endirim ${percent}%";
+
+  static String m21(second) => "${second} saniyə öncə";
+
+  static String m22(totalCartQuantity) =>
+      "Səbətdə ${totalCartQuantity} məhsul var";
+
+  static String m23(numberOfUnitsSold) => "Satıldı: ${numberOfUnitsSold}";
+
+  static String m24(fieldName) => " ${fieldName} sahəsi tələb olunur";
+
+  static String m25(total) => "${total} məhsul";
+
+  static String m26(date) => " ${date}tarixinə qədər etibarlıdır";
+
+  static String m27(message) => "Xəbərdarlıq: ${message}";
+
+  static String m28(default_currency) =>
+      "Hazırda seçilmiş valyuta Pulqabı funksiyası üçün əlçatan deyil, lütfən, onu ${default_currency}ilə dəyişin";
+
+  static String m29(length) => "${length} məhsul tapıldı";
+
+  static String m30(week) => "Həftə ${week}";
+
+  static String m31(year) => "${year} il əvvəl";
+
+  static String m32(total) => "Siz №${total}sifarişi təyin etdiniz";
+
+  final messages = _notInlinedMessages(_notInlinedMessages);
+  static Map<String, Function> _notInlinedMessages(_) => <String, Function>{
+        "UserNameInCorrect": MessageLookupByLibrary.simpleMessage(
+            "İstifadəçi adı və ya parol səhvdir"),
+        "aboutUs": MessageLookupByLibrary.simpleMessage("Haqqımızda"),
+        "account": MessageLookupByLibrary.simpleMessage("Hesab"),
+        "accountDeleteDescription": MessageLookupByLibrary.simpleMessage(
+            "Hesabınızın silinməsi şəxsi məlumatları verilənlər bazamızdan silir."),
+        "accountIsPendingApproval": MessageLookupByLibrary.simpleMessage(
+            "Hesab təsdiqlənməyi gözləyir."),
+        "accountSetup":
+            MessageLookupByLibrary.simpleMessage("Hesabın qurulması"),
+        "active": MessageLookupByLibrary.simpleMessage("Aktivdir"),
+        "addAName": MessageLookupByLibrary.simpleMessage("Ad əlavə edin"),
+        "addANewPost":
+            MessageLookupByLibrary.simpleMessage("Yeni Yazı əlavə edin"),
+        "addASlug": MessageLookupByLibrary.simpleMessage("Bir şlak əlavə edin"),
+        "addAnAttr": MessageLookupByLibrary.simpleMessage("Atribut əlavə edin"),
+        "addListing": MessageLookupByLibrary.simpleMessage("Siyahı əlavə edin"),
+        "addNew": MessageLookupByLibrary.simpleMessage("Yenisini əlavə edin"),
+        "addNewBlog":
+            MessageLookupByLibrary.simpleMessage("Yeni Bloq əlavə edin"),
+        "addNewPost": MessageLookupByLibrary.simpleMessage("Yeni Yazı Yaradın"),
+        "addProduct": MessageLookupByLibrary.simpleMessage("Məhsul əlavə edin"),
+        "addToCart": MessageLookupByLibrary.simpleMessage("Səbətə Əlavə Et "),
+        "addToCartMaximum":
+            MessageLookupByLibrary.simpleMessage("Maksimum miqdar keçildi"),
+        "addToCartSucessfully":
+            MessageLookupByLibrary.simpleMessage("Səbətinizə əlavə edildi"),
+        "addToOrder":
+            MessageLookupByLibrary.simpleMessage("Sifarişə əlavə edin"),
+        "added": MessageLookupByLibrary.simpleMessage("Əlavə edilib"),
+        "addedSuccessfully":
+            MessageLookupByLibrary.simpleMessage("Uğurla əlavə edildi."),
+        "addingYourImage":
+            MessageLookupByLibrary.simpleMessage("Şəkil əlavəsi"),
+        "additionalInformation":
+            MessageLookupByLibrary.simpleMessage("Əlavə Məlumat"),
+        "additionalServices":
+            MessageLookupByLibrary.simpleMessage("Əlavə xidmətlər"),
+        "address": MessageLookupByLibrary.simpleMessage("Ünvan"),
+        "adults": MessageLookupByLibrary.simpleMessage("Böyüklər"),
+        "afternoon": MessageLookupByLibrary.simpleMessage("Günorta"),
+        "agree": MessageLookupByLibrary.simpleMessage("Razılaşmaq"),
+        "agreeWithPrivacy":
+            MessageLookupByLibrary.simpleMessage("Məxfilik Siyasəti"),
+        "albanian": MessageLookupByLibrary.simpleMessage("Alban"),
+        "all": MessageLookupByLibrary.simpleMessage("Hamısı"),
+        "allBrands": MessageLookupByLibrary.simpleMessage("Bütün Brendlər"),
+        "allDeliveryOrders":
+            MessageLookupByLibrary.simpleMessage("Bütün sifarişlər"),
+        "allOrders": MessageLookupByLibrary.simpleMessage("Son Satışlar"),
+        "allProducts": MessageLookupByLibrary.simpleMessage("Bütün məhsullar"),
+        "allow": MessageLookupByLibrary.simpleMessage("İcazə verin"),
+        "allowCameraAccess": MessageLookupByLibrary.simpleMessage(
+            "Kameraya giriş icazəsi verilsin?"),
+        "almostSoldOut":
+            MessageLookupByLibrary.simpleMessage("Demək olar ki, satılıb"),
+        "amount": MessageLookupByLibrary.simpleMessage("Məbləğ"),
+        "anyAttr": m0,
+        "appearance": MessageLookupByLibrary.simpleMessage("Görünüş"),
+        "apply": MessageLookupByLibrary.simpleMessage("Təsdiqlə"),
+        "approve": MessageLookupByLibrary.simpleMessage("Təsdiqləyin"),
+        "approved": MessageLookupByLibrary.simpleMessage("Təsdiq edildi"),
+        "arabic": MessageLookupByLibrary.simpleMessage("Arabic"),
+        "areYouSure": MessageLookupByLibrary.simpleMessage("Əminsiniz?"),
+        "areYouSureDeleteAccount": MessageLookupByLibrary.simpleMessage(
+            "Hesabınızı siləcəyinizə əminsiniz?"),
+        "assigned": MessageLookupByLibrary.simpleMessage("Təyin edilmişdir"),
+        "atLeastThreeCharacters":
+            MessageLookupByLibrary.simpleMessage("Ən azı 3 simvol..."),
+        "attributeAlreadyExists":
+            MessageLookupByLibrary.simpleMessage("Atribut artıq mövcuddur"),
+        "attributes": MessageLookupByLibrary.simpleMessage("Atribut"),
+        "audioDetected": MessageLookupByLibrary.simpleMessage(
+            "Audio element(lər) aşkar edildi. Audio Pleyerə əlavə etmək istəyirsiniz?"),
+        "availability": MessageLookupByLibrary.simpleMessage("Mövcudluğu"),
+        "availablePoints": m1,
+        "averageRating": MessageLookupByLibrary.simpleMessage("Orta reytinq"),
+        "back": MessageLookupByLibrary.simpleMessage("Geri"),
+        "backOrder": MessageLookupByLibrary.simpleMessage("Arxa sifarişlə"),
+        "backToShop": MessageLookupByLibrary.simpleMessage("AVM-YƏ GERİ DÖNÜN"),
+        "backToWallet":
+            MessageLookupByLibrary.simpleMessage("Pulqabı səhifəsinə qayıt"),
+        "bagsCollections":
+            MessageLookupByLibrary.simpleMessage("Dişli Alətlər"),
+        "balance": MessageLookupByLibrary.simpleMessage("Balans"),
+        "bannerListType":
+            MessageLookupByLibrary.simpleMessage("Banner Siyahı Növü"),
+        "bannerType": MessageLookupByLibrary.simpleMessage("Banner növü"),
+        "bannerYoutubeURL":
+            MessageLookupByLibrary.simpleMessage("Banner Youtube URL"),
+        "basicInformation":
+            MessageLookupByLibrary.simpleMessage("Əsas məlumat"),
+        "bengali": MessageLookupByLibrary.simpleMessage("benqal dili"),
+        "billingAddress": MessageLookupByLibrary.simpleMessage("Ünvan"),
+        "bleHasNotBeenEnabled": MessageLookupByLibrary.simpleMessage(
+            "Bluetooth aktivləşdirilməyib"),
+        "bleState": m2,
+        "blog": MessageLookupByLibrary.simpleMessage("Bloq"),
+        "booked":
+            MessageLookupByLibrary.simpleMessage("Artıq rezervasiya olunub"),
+        "booking": MessageLookupByLibrary.simpleMessage("Rezervasyon"),
+        "bookingCancelled":
+            MessageLookupByLibrary.simpleMessage("Rezervasiya Ləğv et"),
+        "bookingConfirm": MessageLookupByLibrary.simpleMessage("Təsdiq edildi"),
+        "bookingError": MessageLookupByLibrary.simpleMessage(
+            "Səhv bir şey var. Zəhmət olmasa bir az sonra yenə cəhd edin."),
+        "bookingHistory":
+            MessageLookupByLibrary.simpleMessage("Rezervasyon Tarixçəsi"),
+        "bookingNow": MessageLookupByLibrary.simpleMessage("İndi sifariş et"),
+        "bookingSuccess":
+            MessageLookupByLibrary.simpleMessage("Uğurla rezervasiya edildi"),
+        "bookingSummary":
+            MessageLookupByLibrary.simpleMessage("Rezervasiya xülasəsi"),
+        "bookingUnavailable":
+            MessageLookupByLibrary.simpleMessage("Rezervasyon mümkün deyil"),
+        "bosnian": MessageLookupByLibrary.simpleMessage("Bosniya"),
+        "brand": MessageLookupByLibrary.simpleMessage("Brend"),
+        "brazil": MessageLookupByLibrary.simpleMessage("Portuqal"),
+        "burmese": MessageLookupByLibrary.simpleMessage("Birma"),
+        "buyNow": MessageLookupByLibrary.simpleMessage("AL"),
+        "byCategory": MessageLookupByLibrary.simpleMessage("Kateqoriyaya Görə"),
+        "byPrice": MessageLookupByLibrary.simpleMessage("Qiymətə Görə"),
+        "bySignup": MessageLookupByLibrary.simpleMessage(
+            "Qeydiyyatdan keçməklə siz bizimlə razılaşırsınız"),
+        "byTag": MessageLookupByLibrary.simpleMessage("Tag tərəfindən"),
+        "call": MessageLookupByLibrary.simpleMessage("Zəng edin"),
+        "callTo": MessageLookupByLibrary.simpleMessage("Zəng et"),
+        "canNotCreateOrder": MessageLookupByLibrary.simpleMessage(
+            "Sifariş yaratmaq mümkün deyil"),
+        "canNotCreateUser": MessageLookupByLibrary.simpleMessage(
+            "İstifadəçi yaratmaq mümkün deyil."),
+        "canNotGetPayments": MessageLookupByLibrary.simpleMessage(
+            "Ödəniş üsullarını əldə etmək mümkün deyil"),
+        "canNotGetShipping": MessageLookupByLibrary.simpleMessage(
+            "Göndərmə üsullarını əldə etmək mümkün deyil"),
+        "canNotGetToken": MessageLookupByLibrary.simpleMessage(
+            "Token məlumatını əldə etmək mümkün deyil."),
+        "canNotLaunch": MessageLookupByLibrary.simpleMessage(
+            "Bu proqramı işə salmaq mümkün deyil, config.dart-da parametrlərinizin düzgün olduğundan əmin olun"),
+        "canNotLoadThisLink": MessageLookupByLibrary.simpleMessage(
+            "Bu linki yükləmək mümkün deyil"),
+        "canNotSaveOrder": MessageLookupByLibrary.simpleMessage(
+            "Sifarişi vebsaytda saxlamaq mümkün deyil"),
+        "canNotUpdateInfo": MessageLookupByLibrary.simpleMessage(
+            "İstifadəçi məlumatını yeniləmək mümkün deyil."),
+        "cancel": MessageLookupByLibrary.simpleMessage("İmtina"),
+        "cantFindThisOrderId": MessageLookupByLibrary.simpleMessage(
+            "Bu sifariş ID-sini tapmaq mümkün deyil"),
+        "cantPickDateInThePast": MessageLookupByLibrary.simpleMessage(
+            "Keçmiş tarixə icazə verilmir"),
+        "cardHolder": MessageLookupByLibrary.simpleMessage("Kart Sahibi"),
+        "cardNumber": MessageLookupByLibrary.simpleMessage("Kartı nömrəsi"),
+        "cart": MessageLookupByLibrary.simpleMessage("Səbət"),
+        "cartDiscount": MessageLookupByLibrary.simpleMessage("Səbət endirimi"),
+        "cash": MessageLookupByLibrary.simpleMessage("Nağd pul"),
+        "categories": MessageLookupByLibrary.simpleMessage("Kateqoriyalar"),
+        "category": MessageLookupByLibrary.simpleMessage("Kateqoriya"),
+        "change": MessageLookupByLibrary.simpleMessage("Dəyiş"),
+        "changePrinter":
+            MessageLookupByLibrary.simpleMessage("Printeri dəyişdirin"),
+        "changedCurrencyTo": m3,
+        "chat": MessageLookupByLibrary.simpleMessage("Çat"),
+        "chatListScreen": MessageLookupByLibrary.simpleMessage("Mesajlar"),
+        "chatViaFacebook": MessageLookupByLibrary.simpleMessage(
+            "Facebook Messenger vasitəsilə söhbət edin"),
+        "chatViaWhatApp": MessageLookupByLibrary.simpleMessage(
+            "WhatsApp vasitəsilə söhbət edin"),
+        "chatWithStoreOwner": MessageLookupByLibrary.simpleMessage(
+            "Mağaza sahibi ilə söhbət edin"),
+        "checkConfirmLink": MessageLookupByLibrary.simpleMessage(
+            "Şifrə keçidi üçün emailinizi yoxlayın"),
+        "checking": MessageLookupByLibrary.simpleMessage("Yoxlama..."),
+        "checkout": MessageLookupByLibrary.simpleMessage("Ödəmə"),
+        "chinese": MessageLookupByLibrary.simpleMessage("Chinese"),
+        "chineseSimplified":
+            MessageLookupByLibrary.simpleMessage("Çin (Sadələşdirilmiş)"),
+        "chineseTraditional":
+            MessageLookupByLibrary.simpleMessage("Çin (Ənənəvi)"),
+        "chooseCategory":
+            MessageLookupByLibrary.simpleMessage("Kateqoriya seçin"),
+        "chooseFromGallery":
+            MessageLookupByLibrary.simpleMessage("Qalereyadan seçin"),
+        "chooseFromServer":
+            MessageLookupByLibrary.simpleMessage("Serverdən seçin"),
+        "choosePlan": MessageLookupByLibrary.simpleMessage("Plan seçin"),
+        "chooseStaff": MessageLookupByLibrary.simpleMessage("Heyət seçin"),
+        "chooseType": MessageLookupByLibrary.simpleMessage("Növü seçin"),
+        "chooseYourPaymentMethod":
+            MessageLookupByLibrary.simpleMessage("Ödəmə üsulunuzu seçin"),
+        "city": MessageLookupByLibrary.simpleMessage("Şəhər"),
+        "cityIsRequired":
+            MessageLookupByLibrary.simpleMessage("Şəhər sətrini boş qoymayın"),
+        "clear": MessageLookupByLibrary.simpleMessage("Təmizlə"),
+        "clearCart": MessageLookupByLibrary.simpleMessage("Səbəti Təmizlə"),
+        "close": MessageLookupByLibrary.simpleMessage("Bağla"),
+        "closeNow": MessageLookupByLibrary.simpleMessage("İndi bağlıdır"),
+        "codExtraFee": MessageLookupByLibrary.simpleMessage("COD Əlavə haqqı"),
+        "color": MessageLookupByLibrary.simpleMessage("Rəng"),
+        "comment": MessageLookupByLibrary.simpleMessage("Şərh"),
+        "commentFirst":
+            MessageLookupByLibrary.simpleMessage("Şərhinizi qeyd edin"),
+        "commentSuccessfully": MessageLookupByLibrary.simpleMessage(
+            "Şərh yazıldı, lütfən, şərhiniz təsdiqlənənə qədər gözləyin"),
+        "complete": MessageLookupByLibrary.simpleMessage("Tamam"),
+        "confirm": MessageLookupByLibrary.simpleMessage("Təsdiq edin"),
+        "confirmAccountDeletion": MessageLookupByLibrary.simpleMessage(
+            "Hesabın Silinməsini təsdiqləyin"),
+        "confirmClearCartWhenTopUp": MessageLookupByLibrary.simpleMessage(
+            "Səbət doldurulduqda təmizlənəcək."),
+        "confirmClearTheCart": MessageLookupByLibrary.simpleMessage(
+            "Səbəti təmizləmək istədiyinizə əminsiniz?"),
+        "confirmDeleteItem": MessageLookupByLibrary.simpleMessage(
+            "Bu elementi silmək istədiyinizə əminsiniz?"),
+        "connect": MessageLookupByLibrary.simpleMessage("Qoşul"),
+        "contact": MessageLookupByLibrary.simpleMessage("Əlaqə"),
+        "content": MessageLookupByLibrary.simpleMessage("Məzmun"),
+        "continueToPayment": MessageLookupByLibrary.simpleMessage("Ödə"),
+        "continueToReview": MessageLookupByLibrary.simpleMessage("Göstər"),
+        "continueToShipping":
+            MessageLookupByLibrary.simpleMessage("Çatdırılma"),
+        "continues": MessageLookupByLibrary.simpleMessage("Davam edin"),
+        "conversations": MessageLookupByLibrary.simpleMessage("Söhbət"),
+        "country": MessageLookupByLibrary.simpleMessage("Ölkə"),
+        "countryIsRequired":
+            MessageLookupByLibrary.simpleMessage("Ölkə sətrini boş qoymayın"),
+        "couponCode": MessageLookupByLibrary.simpleMessage("Kupon kodu"),
+        "couponHasBeenSavedSuccessfully": MessageLookupByLibrary.simpleMessage(
+            "Kupon uğurla yadda saxlanıldı."),
+        "couponInvalid":
+            MessageLookupByLibrary.simpleMessage("Kupon kodunuz yanlışdır"),
+        "couponMsgSuccess": MessageLookupByLibrary.simpleMessage(
+            "Təbriklər! Kupon kodu uğurla qəbul edildi"),
+        "createAnAccount": MessageLookupByLibrary.simpleMessage("Hesab Yarat"),
+        "createNewPostSuccessfully": MessageLookupByLibrary.simpleMessage(
+            "Postunuz qaralama olaraq uğurla yaradıldı. Zəhmət olmasa admin saytınıza nəzər salın."),
+        "createPost": MessageLookupByLibrary.simpleMessage("Post yaradın"),
+        "createProduct": MessageLookupByLibrary.simpleMessage("Yenisini Yarat"),
+        "createVariants":
+            MessageLookupByLibrary.simpleMessage("Bütün variantları yaradın"),
+        "createdOn": MessageLookupByLibrary.simpleMessage("Yaradılma tarixi:"),
+        "currencies": MessageLookupByLibrary.simpleMessage("Valyutalar"),
+        "currentPassword":
+            MessageLookupByLibrary.simpleMessage("Hazırki Şifrə"),
+        "currentlyWeOnlyHave":
+            MessageLookupByLibrary.simpleMessage("Hazırda yalnız bizdə"),
+        "customerDetail":
+            MessageLookupByLibrary.simpleMessage("Müştəri təfərrüatı"),
+        "customerNote": MessageLookupByLibrary.simpleMessage("Müştəri qeydi"),
+        "cvv": MessageLookupByLibrary.simpleMessage("CVV"),
+        "czech": MessageLookupByLibrary.simpleMessage("Çex"),
+        "danish": MessageLookupByLibrary.simpleMessage("Danimarkalı"),
+        "darkTheme": MessageLookupByLibrary.simpleMessage("Gecə Modu"),
+        "dashboard": MessageLookupByLibrary.simpleMessage("İdarə paneli"),
+        "dataEmpty": MessageLookupByLibrary.simpleMessage("Məlumat Yoxdur"),
+        "date": MessageLookupByLibrary.simpleMessage("Tarix"),
+        "dateASC": MessageLookupByLibrary.simpleMessage("Artan tarix"),
+        "dateBooking": MessageLookupByLibrary.simpleMessage("Rezervasiya et"),
+        "dateDESC": MessageLookupByLibrary.simpleMessage("Azalan tarix"),
+        "dateEnd": MessageLookupByLibrary.simpleMessage("Bitmə tarixi"),
+        "dateLatest": MessageLookupByLibrary.simpleMessage("Tarix: Ən son"),
+        "dateOldest": MessageLookupByLibrary.simpleMessage("Tarix: Ən köhnə"),
+        "dateStart": MessageLookupByLibrary.simpleMessage("Başlama tarixi"),
+        "dateTime": MessageLookupByLibrary.simpleMessage("Tarix vaxt"),
+        "dateWiseClose":
+            MessageLookupByLibrary.simpleMessage("Müdrik yaxın tarix"),
+        "daysAgo": m4,
+        "debit": MessageLookupByLibrary.simpleMessage("Debet"),
+        "decline": MessageLookupByLibrary.simpleMessage("Rədd olun"),
+        "delete": MessageLookupByLibrary.simpleMessage("Sil"),
+        "deleteAccount": MessageLookupByLibrary.simpleMessage("Hesabı silin"),
+        "deleteAccountMsg": MessageLookupByLibrary.simpleMessage(
+            "Hesabınızı silmək istədiyinizə əminsiniz? Hesabın silinməsinin necə təsir edəcəyini oxuyun."),
+        "deleteAccountSuccess": MessageLookupByLibrary.simpleMessage(
+            "Hesab uğurla silindi. Sessiyanızın vaxtı keçib."),
+        "deleteAll": MessageLookupByLibrary.simpleMessage("Hamısını silin"),
+        "delivered": MessageLookupByLibrary.simpleMessage("Çatdırılmış"),
+        "deliveredTo": MessageLookupByLibrary.simpleMessage("-a çatdırılır"),
+        "deliveryBoy":
+            MessageLookupByLibrary.simpleMessage("Çatdırılma Oğlan:"),
+        "deliveryDate":
+            MessageLookupByLibrary.simpleMessage("Çatdırılma tarixi"),
+        "deliveryDetails":
+            MessageLookupByLibrary.simpleMessage("Çatdırılma təfərrüatları"),
+        "deliveryManagement":
+            MessageLookupByLibrary.simpleMessage("Çatdırılma"),
+        "deliveryNotificationError": MessageLookupByLibrary.simpleMessage(
+            "Məlumat yoxdur.\nBu sifariş silindi."),
+        "description": MessageLookupByLibrary.simpleMessage("Məlumat"),
+        "didntReceiveCode":
+            MessageLookupByLibrary.simpleMessage("Kodu almadınız?"),
+        "direction": MessageLookupByLibrary.simpleMessage("İstiqamət"),
+        "disablePurchase":
+            MessageLookupByLibrary.simpleMessage("Alışı deaktiv edin"),
+        "discount": MessageLookupByLibrary.simpleMessage("Endirim"),
+        "displayName": MessageLookupByLibrary.simpleMessage("Ad - Soyad"),
+        "distance": m5,
+        "doNotAnyTransactions": MessageLookupByLibrary.simpleMessage(
+            "Hələ heç bir əməliyyatınız yoxdur"),
+        "doYouWantToExitApp": MessageLookupByLibrary.simpleMessage(
+            "Tətbiqi bağlamaq istəyirsiniz?"),
+        "doYouWantToLogout":
+            MessageLookupByLibrary.simpleMessage("Çıxmaq istəyirsiniz?"),
+        "done": MessageLookupByLibrary.simpleMessage("Tamam"),
+        "dontHaveAccount":
+            MessageLookupByLibrary.simpleMessage("Hesabınız yoxdur?"),
+        "download": MessageLookupByLibrary.simpleMessage("Endir"),
+        "downloadApp":
+            MessageLookupByLibrary.simpleMessage("Mobil Tətbiqi Endir"),
+        "draft": MessageLookupByLibrary.simpleMessage("Qaralama"),
+        "driverAssigned":
+            MessageLookupByLibrary.simpleMessage("Sürücü təyin edildi"),
+        "duration": MessageLookupByLibrary.simpleMessage("Müddət"),
+        "dutch": MessageLookupByLibrary.simpleMessage("Holland"),
+        "earnings": MessageLookupByLibrary.simpleMessage("Qazanclar"),
+        "edit": MessageLookupByLibrary.simpleMessage("Redaktə edin:"),
+        "editProductInfo": MessageLookupByLibrary.simpleMessage(
+            "Məhsul məlumatını redaktə edin"),
+        "editWithoutColon":
+            MessageLookupByLibrary.simpleMessage("Redaktə edin"),
+        "egypt": MessageLookupByLibrary.simpleMessage("Misir"),
+        "email": MessageLookupByLibrary.simpleMessage("Email"),
+        "emailDeleteDescription": MessageLookupByLibrary.simpleMessage(
+            "Hesabınızın silinməsi sizi bütün poçt siyahılarından çıxaracaq."),
+        "emailDoesNotExist": MessageLookupByLibrary.simpleMessage(
+            "Daxil etdiyiniz e-poçt hesabı mövcud deyil. Zəhmət olmasa bir daha cəhd edin."),
+        "emailIsRequired":
+            MessageLookupByLibrary.simpleMessage("Email sətrini boş qoymayın"),
+        "emailSubscription":
+            MessageLookupByLibrary.simpleMessage("E-poçt Abunəliyi"),
+        "emptyCartSubtitle": MessageLookupByLibrary.simpleMessage(
+            "Deyəsən çantaya hələ heç bir əşya əlavə etməmisiniz. Onu doldurmaq üçün alış-verişə başlayın."),
+        "emptyComment":
+            MessageLookupByLibrary.simpleMessage("Şərhiniz boş ola bilməz"),
+        "emptySearch": MessageLookupByLibrary.simpleMessage(
+            "Siz hələ elementləri axtarmamısınız. İndi başlayaq - sizə kömək edəcəyik."),
+        "emptyShippingMsg": MessageLookupByLibrary.simpleMessage(
+            "Çatdırılma variantları mövcud deyil. Ünvanınızın düzgün daxil edildiyinə əmin olun və ya hər hansı yardıma ehtiyacınız olarsa, bizimlə əlaqə saxlayın."),
+        "emptyUsername":
+            MessageLookupByLibrary.simpleMessage("İstifadəçi adı/Email boşdur"),
+        "emptyWishlistSubtitle": MessageLookupByLibrary.simpleMessage(
+            "Sevimlilər üçün məhsulun yanında istənilən ürəyin üzərinə toxunun. Onları sizin üçün burada saxlayacağıq!"),
+        "enableVacationMode": MessageLookupByLibrary.simpleMessage(
+            "Tətil rejimini aktivləşdirin"),
+        "endDateCantBeAfterFirstDate": MessageLookupByLibrary.simpleMessage(
+            "Zəhmət olmasa ilk tarixdən sonra bir tarix seçin"),
+        "endsIn": m6,
+        "english": MessageLookupByLibrary.simpleMessage("English"),
+        "enterCaptcha": m7,
+        "enterSendedCode":
+            MessageLookupByLibrary.simpleMessage("Göndərilən kodu daxil edin"),
+        "enterYourEmail":
+            MessageLookupByLibrary.simpleMessage("Emailinizi qeyd edin"),
+        "enterYourEmailOrUsername": MessageLookupByLibrary.simpleMessage(
+            "E-poçt və ya istifadəçi adınızı daxil edin"),
+        "enterYourFirstName":
+            MessageLookupByLibrary.simpleMessage("Adınızı daxil edin"),
+        "enterYourLastName":
+            MessageLookupByLibrary.simpleMessage("Soyadınızı daxil edin"),
+        "enterYourMobile": MessageLookupByLibrary.simpleMessage(
+            "Zəhmət olmasa mobil nömrənizi daxil edin"),
+        "enterYourPassword":
+            MessageLookupByLibrary.simpleMessage("Şifrənizi qeyd edin"),
+        "enterYourPhone": MessageLookupByLibrary.simpleMessage(
+            "Başlamaq üçün telefon nömrənizi daxil edin."),
+        "enterYourPhoneNumber": MessageLookupByLibrary.simpleMessage(
+            "Telefon nömrənizi daxil edin"),
+        "error": m8,
+        "errorAmountTransfer": MessageLookupByLibrary.simpleMessage(
+            "Daxil edilmiş məbləğ cari pul kisəsi məbləğindən çoxdur. Zəhmət olmasa bir daha cəhd edin!"),
+        "errorEmailFormat": MessageLookupByLibrary.simpleMessage(
+            "Etibarlı e-poçt ünvanı daxil edin."),
+        "errorPasswordFormat": MessageLookupByLibrary.simpleMessage(
+            "Ən azı 8 simvoldan ibarət parol daxil edin"),
+        "evening": MessageLookupByLibrary.simpleMessage("Axşam"),
+        "events": MessageLookupByLibrary.simpleMessage("Tədbirlər"),
+        "expectedDeliveryDate": MessageLookupByLibrary.simpleMessage(
+            "Gözlənilən Çatdırılma Tarixi"),
+        "expired": MessageLookupByLibrary.simpleMessage("Müddəti bitmişdir"),
+        "expiredDate": MessageLookupByLibrary.simpleMessage(
+            "İstifadə müddəti bitmiş tarix"),
+        "expiredDateHint": MessageLookupByLibrary.simpleMessage("MM/YY"),
+        "expiringInTime": m9,
+        "external": MessageLookupByLibrary.simpleMessage("Xarici"),
+        "extraServices":
+            MessageLookupByLibrary.simpleMessage("Əlavə xidmətlər"),
+        "failToAssign": MessageLookupByLibrary.simpleMessage(
+            "İstifadəçi təyin etmək alınmadı"),
+        "failedToGenerateLink":
+            MessageLookupByLibrary.simpleMessage("Link yaratmaq alınmadı"),
+        "failedToLoadImage":
+            MessageLookupByLibrary.simpleMessage("Şəkli yükləmək alınmadı"),
+        "favorite": MessageLookupByLibrary.simpleMessage("Sevimli"),
+        "featureProducts": MessageLookupByLibrary.simpleMessage("Seçilmişlər"),
+        "featured": MessageLookupByLibrary.simpleMessage("Seçilmiş"),
+        "features": MessageLookupByLibrary.simpleMessage("Xüsusiyyətləri"),
+        "fileIsTooBig": MessageLookupByLibrary.simpleMessage(
+            "Fayl çox böyükdür. Zəhmət olmasa daha kiçik fayl seçin!"),
+        "fileUploadFailed":
+            MessageLookupByLibrary.simpleMessage("Fayl yükləmə uğursuz oldu!"),
+        "files": MessageLookupByLibrary.simpleMessage("Fayllar"),
+        "filter": MessageLookupByLibrary.simpleMessage("Süzgəc"),
+        "finishSetup":
+            MessageLookupByLibrary.simpleMessage("Quraşdırmanı tamamlayın"),
+        "finnish": MessageLookupByLibrary.simpleMessage("Fin"),
+        "firstComment": MessageLookupByLibrary.simpleMessage(
+            "Bu yazıya ilk şərh yazan siz olun!"),
+        "firstName": MessageLookupByLibrary.simpleMessage("Ad"),
+        "firstNameIsRequired":
+            MessageLookupByLibrary.simpleMessage("Ad sətrini boş qoymayın"),
+        "firstRenewal": MessageLookupByLibrary.simpleMessage("İlk Yeniləmə"),
+        "fixedCartDiscount":
+            MessageLookupByLibrary.simpleMessage("Sabit Səbətə Endirim"),
+        "fixedProductDiscount":
+            MessageLookupByLibrary.simpleMessage("Sabit məhsul endirimi"),
+        "forThisProduct":
+            MessageLookupByLibrary.simpleMessage("bu məhsul üçün"),
+        "freeOfCharge": MessageLookupByLibrary.simpleMessage("Pulsuz"),
+        "french": MessageLookupByLibrary.simpleMessage("Fransız dili"),
+        "from": MessageLookupByLibrary.simpleMessage("From"),
+        "fullName": MessageLookupByLibrary.simpleMessage("Tam adı"),
+        "gallery": MessageLookupByLibrary.simpleMessage("Qalereya"),
+        "generalSetting":
+            MessageLookupByLibrary.simpleMessage("Ümumi Parametrlər"),
+        "generatingLink":
+            MessageLookupByLibrary.simpleMessage("Link yaradılır..."),
+        "german": MessageLookupByLibrary.simpleMessage("German"),
+        "getNotification": MessageLookupByLibrary.simpleMessage("Bildiriş al"),
+        "getNotified": MessageLookupByLibrary.simpleMessage("Xəbərdar olun!"),
+        "getPasswordLink":
+            MessageLookupByLibrary.simpleMessage("Şifrə keçidini əldə et"),
+        "getStarted": MessageLookupByLibrary.simpleMessage("Başlamaq"),
+        "goBack": MessageLookupByLibrary.simpleMessage("Qeri gayıt"),
+        "goBackHomePage":
+            MessageLookupByLibrary.simpleMessage("Ana Səhifəyə dön"),
+        "goBackToAddress": MessageLookupByLibrary.simpleMessage("Ünvana dön"),
+        "goBackToReview": MessageLookupByLibrary.simpleMessage("Göstərə dön"),
+        "goBackToShipping":
+            MessageLookupByLibrary.simpleMessage("Çatdırılmaya dön"),
+        "greaterDistance": m10,
+        "greek": MessageLookupByLibrary.simpleMessage("Yunan"),
+        "grossSales": MessageLookupByLibrary.simpleMessage("Ümumi satış"),
+        "grouped": MessageLookupByLibrary.simpleMessage("Qruplaşdırılmış"),
+        "guests": MessageLookupByLibrary.simpleMessage("Qonaqlar"),
+        "hasBeenDeleted": MessageLookupByLibrary.simpleMessage("silinmişdir"),
+        "hebrew": MessageLookupByLibrary.simpleMessage("İbrani"),
+        "hideAbout": MessageLookupByLibrary.simpleMessage("Haqqında gizlət"),
+        "hideAddress": MessageLookupByLibrary.simpleMessage("Ünvanı gizlədin"),
+        "hideEmail": MessageLookupByLibrary.simpleMessage("E-poçtu gizlədin"),
+        "hideMap": MessageLookupByLibrary.simpleMessage("Xəritəni gizlədin"),
+        "hidePhone": MessageLookupByLibrary.simpleMessage("Telefonu gizlədin"),
+        "hidePolicy": MessageLookupByLibrary.simpleMessage("Siyasəti gizlədin"),
+        "hindi": MessageLookupByLibrary.simpleMessage("Hindi"),
+        "history": MessageLookupByLibrary.simpleMessage("Tarix"),
+        "historyTransaction": MessageLookupByLibrary.simpleMessage("Tarix"),
+        "home": MessageLookupByLibrary.simpleMessage("Ev"),
+        "hour": MessageLookupByLibrary.simpleMessage("saat"),
+        "hoursAgo": m11,
+        "hungarian": MessageLookupByLibrary.simpleMessage("Macar"),
+        "hungary": MessageLookupByLibrary.simpleMessage("Macar"),
+        "iAgree": MessageLookupByLibrary.simpleMessage("Oxudum, təsdiq edirəm"),
+        "imIn": MessageLookupByLibrary.simpleMessage("Mən içindəyəm"),
+        "imageFeature":
+            MessageLookupByLibrary.simpleMessage("Şəkil Xüsusiyyəti"),
+        "imageGallery": MessageLookupByLibrary.simpleMessage("Qalereya"),
+        "imageNetwork": MessageLookupByLibrary.simpleMessage("Şəkil Şəbəkəsi"),
+        "inStock": MessageLookupByLibrary.simpleMessage("Satışda"),
+        "incorrectPassword":
+            MessageLookupByLibrary.simpleMessage("Şifrə səhvdir"),
+        "india": MessageLookupByLibrary.simpleMessage("Hindi"),
+        "indonesian": MessageLookupByLibrary.simpleMessage("Indonesian"),
+        "instantlyClose": MessageLookupByLibrary.simpleMessage("Dərhal yaxın"),
+        "invalidPhoneNumber":
+            MessageLookupByLibrary.simpleMessage("Yanlış Telefon Nömrəsi"),
+        "invalidSMSCode":
+            MessageLookupByLibrary.simpleMessage("Keçərsiz SMS doğrulama kodu"),
+        "invalidYearOfBirth":
+            MessageLookupByLibrary.simpleMessage("Yanlış Doğum İli"),
+        "invoice": MessageLookupByLibrary.simpleMessage("Faktura"),
+        "isEverythingSet":
+            MessageLookupByLibrary.simpleMessage("Hər şey hazırdır...?"),
+        "italian": MessageLookupByLibrary.simpleMessage("Italian"),
+        "item": MessageLookupByLibrary.simpleMessage("ƏMLAK"),
+        "itemTotal": MessageLookupByLibrary.simpleMessage("Ümumi maddə:"),
+        "items": MessageLookupByLibrary.simpleMessage("Məhsullar"),
+        "itsOrdered": MessageLookupByLibrary.simpleMessage("Təşəkkürlər!"),
+        "iwantToCreateAccount": MessageLookupByLibrary.simpleMessage(
+            "Məxfilik Siyasətini oxudum və qəbul edirəm"),
+        "japanese": MessageLookupByLibrary.simpleMessage("Japanese"),
+        "kannada": MessageLookupByLibrary.simpleMessage("Kannada"),
+        "keep": MessageLookupByLibrary.simpleMessage("Saxla"),
+        "khmer": MessageLookupByLibrary.simpleMessage("Khmer"),
+        "korean": MessageLookupByLibrary.simpleMessage("Koreyalı"),
+        "kurdish": MessageLookupByLibrary.simpleMessage("Kürd"),
+        "language": MessageLookupByLibrary.simpleMessage("Dillər"),
+        "languageSuccess": MessageLookupByLibrary.simpleMessage(
+            "Yeni dil uğurla tətbiq edildi"),
+        "lao": MessageLookupByLibrary.simpleMessage("Lao"),
+        "lastName": MessageLookupByLibrary.simpleMessage("Soyad"),
+        "lastNameIsRequired":
+            MessageLookupByLibrary.simpleMessage("Soyad sətrini boş qoymayın"),
+        "lastTransactions":
+            MessageLookupByLibrary.simpleMessage("Son əməliyyatlar"),
+        "latestProducts":
+            MessageLookupByLibrary.simpleMessage("Ən Son Məhsullar"),
+        "layout": MessageLookupByLibrary.simpleMessage("Düzən"),
+        "lightTheme": MessageLookupByLibrary.simpleMessage("Yüngül Mövzu"),
+        "link": MessageLookupByLibrary.simpleMessage("Bağlantı"),
+        "listBannerType":
+            MessageLookupByLibrary.simpleMessage("Siyahı Banner Növü"),
+        "listBannerVideo":
+            MessageLookupByLibrary.simpleMessage("Banner Video Siyahı"),
+        "listMessages":
+            MessageLookupByLibrary.simpleMessage("Gələn Bildirişlər"),
+        "loadFail":
+            MessageLookupByLibrary.simpleMessage("Yükləmə uğursuz oldu!"),
+        "loading": MessageLookupByLibrary.simpleMessage("Yüklənir..."),
+        "loadingLink": MessageLookupByLibrary.simpleMessage("Link yüklənir..."),
+        "location": MessageLookupByLibrary.simpleMessage("Yer"),
+        "login": MessageLookupByLibrary.simpleMessage("Daxil ol"),
+        "loginCanceled":
+            MessageLookupByLibrary.simpleMessage("Giriş ləğv edilir"),
+        "loginErrorServiceProvider": m12,
+        "loginFailed":
+            MessageLookupByLibrary.simpleMessage("Giriş uğursuz oldu!"),
+        "loginInvalid": MessageLookupByLibrary.simpleMessage(
+            "Bu proqramdan istifadə etməyə icazəniz yoxdur."),
+        "loginSuccess":
+            MessageLookupByLibrary.simpleMessage("Uğurla daxil olun!"),
+        "loginToComment":
+            MessageLookupByLibrary.simpleMessage("Şərh yazmaq üçün daxil olun"),
+        "loginToContinue":
+            MessageLookupByLibrary.simpleMessage("Davam etmək üçün daxil olun"),
+        "loginToYourAccount":
+            MessageLookupByLibrary.simpleMessage("Hesabınıza daxil olun"),
+        "logout": MessageLookupByLibrary.simpleMessage("Çıx"),
+        "malay": MessageLookupByLibrary.simpleMessage("Malay"),
+        "manCollections": MessageLookupByLibrary.simpleMessage("Kişilər"),
+        "manageStock":
+            MessageLookupByLibrary.simpleMessage("Səhmləri idarə edin"),
+        "map": MessageLookupByLibrary.simpleMessage("Xəritə"),
+        "marathi": MessageLookupByLibrary.simpleMessage("Marathi"),
+        "markAsRead":
+            MessageLookupByLibrary.simpleMessage("Oxunmuş kimi qeyd edin"),
+        "markAsShipped":
+            MessageLookupByLibrary.simpleMessage("Göndərilən kimi qeyd edin"),
+        "markAsUnread":
+            MessageLookupByLibrary.simpleMessage("Oxunmamış kimi qeyd edin"),
+        "maximumFileSizeMb": m13,
+        "maybeLater": MessageLookupByLibrary.simpleMessage("Bəlkə sonra"),
+        "message": MessageLookupByLibrary.simpleMessage("Mesaj"),
+        "messageTo": MessageLookupByLibrary.simpleMessage("Mesaj göndər"),
+        "minimumQuantityIs":
+            MessageLookupByLibrary.simpleMessage("Minimum miqdardır"),
+        "minutesAgo": m14,
+        "mobileVerification":
+            MessageLookupByLibrary.simpleMessage("Mobil Doğrulama"),
+        "momentAgo": MessageLookupByLibrary.simpleMessage("bir an əvvəl"),
+        "monthsAgo": m15,
+        "more": MessageLookupByLibrary.simpleMessage("...daha çox"),
+        "moreFromStore": m16,
+        "moreInformation":
+            MessageLookupByLibrary.simpleMessage("Ətraflı Məlumat"),
+        "morning": MessageLookupByLibrary.simpleMessage("Şəhər"),
+        "mustSelectOneItem":
+            MessageLookupByLibrary.simpleMessage("1 element seçilməlidir"),
+        "myCart": MessageLookupByLibrary.simpleMessage("Səbət"),
+        "myPoints": MessageLookupByLibrary.simpleMessage("Xallarım"),
+        "myProducts": MessageLookupByLibrary.simpleMessage("Məhsullar"),
+        "myProductsEmpty": MessageLookupByLibrary.simpleMessage(
+            "Hələ heç bir məhsul yaratmamısınız. Birini yarada bilərsiniz."),
+        "myWallet": MessageLookupByLibrary.simpleMessage("Mənim portmanatım"),
+        "myWishList": MessageLookupByLibrary.simpleMessage("Sevdiklərim"),
+        "nItems": m17,
+        "name": MessageLookupByLibrary.simpleMessage("Adı"),
+        "nearbyPlaces":
+            MessageLookupByLibrary.simpleMessage("Yaxınlıqdakı Yerlər"),
+        "needToLoginAgain": MessageLookupByLibrary.simpleMessage(
+            "Yeniləmənin qüvvəyə minməsi üçün yenidən daxil olmalısınız"),
+        "netherlands": MessageLookupByLibrary.simpleMessage("Holland"),
+        "newPassword": MessageLookupByLibrary.simpleMessage("Yeni Şifrə"),
+        "newVariation": MessageLookupByLibrary.simpleMessage("Yeni variasiya"),
+        "next": MessageLookupByLibrary.simpleMessage("Növbəti"),
+        "niceName": MessageLookupByLibrary.simpleMessage("Email"),
+        "no": MessageLookupByLibrary.simpleMessage("Xeyr"),
+        "noBackHistoryItem":
+            MessageLookupByLibrary.simpleMessage("Keçmişdə məlumat olmayıb."),
+        "noBlog": MessageLookupByLibrary.simpleMessage("Məqalə mövcud deyil."),
+        "noCameraPermissionIsGranted": MessageLookupByLibrary.simpleMessage(
+            "Kamera icazəsi verilmir. Lütfən, bunu cihazınızın Parametrlərində verin."),
+        "noData": MessageLookupByLibrary.simpleMessage(
+            "Yalnız bu qədər məlumat tapıldı"),
+        "noFavoritesYet": MessageLookupByLibrary.simpleMessage(
+            "Sevdiyiniz məhsullar siyahınız boşdur."),
+        "noFileToDownload":
+            MessageLookupByLibrary.simpleMessage("Yükləmək üçün fayl yoxdur."),
+        "noForwardHistoryItem": MessageLookupByLibrary.simpleMessage(
+            "Gələcək məlumatlar mövcud deyil."),
+        "noInternetConnection": MessageLookupByLibrary.simpleMessage(
+            "İnternet Bağlantınız Kəsildi"),
+        "noListingNearby":
+            MessageLookupByLibrary.simpleMessage("Yaxınlıqda siyahı yoxdur!"),
+        "noOrders": MessageLookupByLibrary.simpleMessage("Sifariş Yoxdur"),
+        "noPost": MessageLookupByLibrary.simpleMessage(
+            "Təəssüf ki, bu səhifə artıq mövcud deyil!"),
+        "noPrinters": MessageLookupByLibrary.simpleMessage("Printer yoxdur"),
+        "noProduct": MessageLookupByLibrary.simpleMessage("Məhsul yoxdur"),
+        "noResultFound":
+            MessageLookupByLibrary.simpleMessage("Heç bir nəticə tapılmadı"),
+        "noReviews": MessageLookupByLibrary.simpleMessage("Rəy mövcud deyil"),
+        "noSlotAvailable": MessageLookupByLibrary.simpleMessage("Slot yoxdur"),
+        "noThanks": MessageLookupByLibrary.simpleMessage("Xeyr, təşəkkürlər"),
+        "none": MessageLookupByLibrary.simpleMessage("Heç biri"),
+        "notFound": MessageLookupByLibrary.simpleMessage("Tapılmadı"),
+        "note": MessageLookupByLibrary.simpleMessage("Sifariş Qeydi"),
+        "noteMessage": MessageLookupByLibrary.simpleMessage("Qeyd"),
+        "noteTransfer":
+            MessageLookupByLibrary.simpleMessage("Qeyd (isteğe bağlı)"),
+        "notice": MessageLookupByLibrary.simpleMessage("Xəbərdarlıq"),
+        "notifications": MessageLookupByLibrary.simpleMessage("Bildirişlər"),
+        "notifyLatestOffer": MessageLookupByLibrary.simpleMessage(
+            "Ən son təklifləri və məhsulun mövcudluğunu bildirin"),
+        "ofThisProduct": MessageLookupByLibrary.simpleMessage("bu məhsulun"),
+        "ok": MessageLookupByLibrary.simpleMessage("Tamam"),
+        "on": MessageLookupByLibrary.simpleMessage("Yandırın"),
+        "onSale": MessageLookupByLibrary.simpleMessage("Endirimdə"),
+        "onVacation": MessageLookupByLibrary.simpleMessage("Tətildə"),
+        "online": MessageLookupByLibrary.simpleMessage("Onlayn"),
+        "openMap": MessageLookupByLibrary.simpleMessage("Xəritə"),
+        "openNow": MessageLookupByLibrary.simpleMessage("İndi açın"),
+        "options": MessageLookupByLibrary.simpleMessage("Seçimlər"),
+        "optionsTotal": m18,
+        "or": MessageLookupByLibrary.simpleMessage("YAXUD"),
+        "orLoginWith":
+            MessageLookupByLibrary.simpleMessage("və ya ilə daxil olun"),
+        "orderConfirmation":
+            MessageLookupByLibrary.simpleMessage("Sifarişin təsdiqi"),
+        "orderConfirmationMsg": MessageLookupByLibrary.simpleMessage(
+            "Sifariş yaratmağa əminsiniz?"),
+        "orderDate": MessageLookupByLibrary.simpleMessage("Sifariş tarixi"),
+        "orderDetail": MessageLookupByLibrary.simpleMessage("SİFARİŞİNİZ"),
+        "orderHistory":
+            MessageLookupByLibrary.simpleMessage("Sifariş Tarixçəsi"),
+        "orderId": MessageLookupByLibrary.simpleMessage("Sifariş ID:"),
+        "orderIdWithoutColon":
+            MessageLookupByLibrary.simpleMessage("Sifariş ID"),
+        "orderNo": MessageLookupByLibrary.simpleMessage("Sifariş №"),
+        "orderNotes": MessageLookupByLibrary.simpleMessage("Sifariş Qeydləri"),
+        "orderNumber": MessageLookupByLibrary.simpleMessage("Sifariş nömrəsi"),
+        "orderStatusCanceledReversal":
+            MessageLookupByLibrary.simpleMessage("Ləğv edildi"),
+        "orderStatusCancelled":
+            MessageLookupByLibrary.simpleMessage("İmtina edildi"),
+        "orderStatusChargeBack":
+            MessageLookupByLibrary.simpleMessage("Geri doldurun"),
+        "orderStatusCompleted":
+            MessageLookupByLibrary.simpleMessage("Tamamlandı"),
+        "orderStatusDenied":
+            MessageLookupByLibrary.simpleMessage("Rədd edildi"),
+        "orderStatusExpired":
+            MessageLookupByLibrary.simpleMessage("Müddəti bitmişdir"),
+        "orderStatusFailed": MessageLookupByLibrary.simpleMessage("Uğursuz"),
+        "orderStatusOnHold": MessageLookupByLibrary.simpleMessage("Gözləmədə"),
+        "orderStatusPending": MessageLookupByLibrary.simpleMessage("Gözləyir"),
+        "orderStatusPendingPayment":
+            MessageLookupByLibrary.simpleMessage("Ödəniş Gözləyir"),
+        "orderStatusProcessed":
+            MessageLookupByLibrary.simpleMessage("Emal edilib"),
+        "orderStatusProcessing":
+            MessageLookupByLibrary.simpleMessage("İşlənir"),
+        "orderStatusRefunded":
+            MessageLookupByLibrary.simpleMessage("Qaytarıldı"),
+        "orderStatusReversed":
+            MessageLookupByLibrary.simpleMessage("Ters çevrildi"),
+        "orderStatusShipped":
+            MessageLookupByLibrary.simpleMessage("Göndərilib"),
+        "orderStatusVoided":
+            MessageLookupByLibrary.simpleMessage("Ləğv edildi"),
+        "orderSuccessMsg1": MessageLookupByLibrary.simpleMessage(
+            "Çatdırılmanın Vəziyyəti xüsusiyyətimizdən istifadə edərək sifarişinizin vəziyyətini yoxlaya bilərsiniz. Sizə sifarişinizin təfərrüatları və gedişatını izləmək üçün içində keçid olan sifarişin təsdiqlənməsi emaili göndərəcəyik."),
+        "orderSuccessMsg2": MessageLookupByLibrary.simpleMessage(
+            "Daha əvvəl müəyyən etdiyiniz email və şifrədən istifadə edərək hesabınıza daxil ola bilərsiniz. Hesab Panelindən son Sifarişlərinizi görə, Çatdırılma və Faktura Ünvanlarınızı redaktə edə və Şifrəniz ilə Hesab Parametrlərini düzəldə, yaxud dəyişə bilərsiniz. Bunlardan əlavə, daha çoxu üçün aşağıdakı başlıqlar köməkçiniz olacaqdır."),
+        "orderSuccessTitle1": MessageLookupByLibrary.simpleMessage(
+            "Təşəkkür edirik. Sifarişiniz qəbul edildi."),
+        "orderSuccessTitle2": MessageLookupByLibrary.simpleMessage("Hesabım"),
+        "orderSummary": MessageLookupByLibrary.simpleMessage("Sifariş Xülasə"),
+        "orderTotal": MessageLookupByLibrary.simpleMessage("Sifariş Cəmi"),
+        "orders": MessageLookupByLibrary.simpleMessage("Sifarişlər"),
+        "otpVerification":
+            MessageLookupByLibrary.simpleMessage("OTP Doğrulaması"),
+        "outOfStock": MessageLookupByLibrary.simpleMessage("Bitmişdir"),
+        "pageView": MessageLookupByLibrary.simpleMessage("Səhifə Görünüşü"),
+        "paid": MessageLookupByLibrary.simpleMessage("Ödənilmişdir"),
+        "paidStatus": MessageLookupByLibrary.simpleMessage("Ödənişli status"),
+        "password": MessageLookupByLibrary.simpleMessage("Şifrə"),
+        "pasteYourImageUrl":
+            MessageLookupByLibrary.simpleMessage("Şəkil url-ni yapışdırın"),
+        "payByWallet":
+            MessageLookupByLibrary.simpleMessage("Pul kisəsi ilə ödəyin"),
+        "payNow": MessageLookupByLibrary.simpleMessage("İndi ödə"),
+        "payment": MessageLookupByLibrary.simpleMessage("Ödəmə"),
+        "paymentMethod": MessageLookupByLibrary.simpleMessage("Ödəmə Üsulu"),
+        "paymentMethods": MessageLookupByLibrary.simpleMessage("Ödəmə Üsulu"),
+        "paymentSuccessful":
+            MessageLookupByLibrary.simpleMessage("Ödəniş uğurlu oldu"),
+        "pending": MessageLookupByLibrary.simpleMessage("gözləyən"),
+        "persian": MessageLookupByLibrary.simpleMessage("Fars"),
+        "phone": MessageLookupByLibrary.simpleMessage("Telefon"),
+        "phoneEmpty": MessageLookupByLibrary.simpleMessage("Telefon boşdur"),
+        "phoneHintFormat":
+            MessageLookupByLibrary.simpleMessage("Format: +84123456789"),
+        "phoneIsRequired": MessageLookupByLibrary.simpleMessage(
+            "Telefon sətrini boş qoymayın"),
+        "phoneNumber": MessageLookupByLibrary.simpleMessage("Nömrə"),
+        "phoneNumberVerification": MessageLookupByLibrary.simpleMessage(
+            "Telefon nömrəsinin yoxlanılması"),
+        "pickADate":
+            MessageLookupByLibrary.simpleMessage("Tarix və Saat seçin"),
+        "placeMyOrder":
+            MessageLookupByLibrary.simpleMessage("SİFARİŞİ TAMAMLA"),
+        "playAll": MessageLookupByLibrary.simpleMessage("Hamısını Oyna"),
+        "pleaseAddPrice": MessageLookupByLibrary.simpleMessage(
+            "Zəhmət olmasa qiymət əlavə edin"),
+        "pleaseAgreeTerms":
+            MessageLookupByLibrary.simpleMessage("Şərtlərimizlə razılaşın"),
+        "pleaseAllowAccessCameraGallery": MessageLookupByLibrary.simpleMessage(
+            "Kamera və qalereyaya girişə icazə verin"),
+        "pleaseCheckInternet": MessageLookupByLibrary.simpleMessage(
+            "İnternet bağlantınızı yoxlayın!"),
+        "pleaseChooseCategory": MessageLookupByLibrary.simpleMessage(
+            "Zəhmət olmasa kateqoriya seçin"),
+        "pleaseEnterProductName": MessageLookupByLibrary.simpleMessage(
+            "Zəhmət olmasa məhsulun adını daxil edin"),
+        "pleaseFillCode":
+            MessageLookupByLibrary.simpleMessage("Kodunuzu yazın."),
+        "pleaseInput": MessageLookupByLibrary.simpleMessage(
+            "Lütfən bütün sətrləri doldurun"),
+        "pleaseInputFillAllFields": MessageLookupByLibrary.simpleMessage(
+            "Zəhmət olmasa bütün sahələri doldurun"),
+        "pleaseSelectADate": MessageLookupByLibrary.simpleMessage(
+            "Zəhmət olmasa rezervasiya tarixi seçin"),
+        "pleaseSelectALocation":
+            MessageLookupByLibrary.simpleMessage("Lütfən, yer seçin"),
+        "pleaseSelectAllAttributes": MessageLookupByLibrary.simpleMessage(
+            "Zəhmət olmasa məhsulun hər bir atributu üçün bir seçim seçin"),
+        "pleaseSelectAttr": MessageLookupByLibrary.simpleMessage(
+            "Hər bir aktiv atribut üçün ən azı 1 seçim seçin"),
+        "pleaseSelectImages": MessageLookupByLibrary.simpleMessage(
+            "Zəhmət olmasa şəkilləri seçin"),
+        "pleaseSelectRequiredOptions": MessageLookupByLibrary.simpleMessage(
+            "Zəhmət olmasa tələb olunan variantları seçin!"),
+        "pleaseSignInBeforeUploading": MessageLookupByLibrary.simpleMessage(
+            "Hər hansı fayl yükləməzdən əvvəl hesabınıza daxil olun."),
+        "pleasefillUpAllCellsProperly": MessageLookupByLibrary.simpleMessage(
+            "*Lütfən, bütün xanaları düzgün doldurun"),
+        "point": MessageLookupByLibrary.simpleMessage("Xal"),
+        "pointMsgConfigNotFound": MessageLookupByLibrary.simpleMessage(
+            "Serverdə endirim nöqtəsi konfiqurasiyası tapılmadı"),
+        "pointMsgEnter": MessageLookupByLibrary.simpleMessage(
+            "Zəhmət olmasa endirim nöqtəsini daxil edin"),
+        "pointMsgMaximumDiscountPoint":
+            MessageLookupByLibrary.simpleMessage("Maksimum endirim nöqtəsi"),
+        "pointMsgNotEnough": MessageLookupByLibrary.simpleMessage(
+            "Kifayət qədər endirim nöqtəniz yoxdur. Sizin ümumi endirim nöqtənizdir"),
+        "pointMsgOverMaximumDiscountPoint":
+            MessageLookupByLibrary.simpleMessage(
+                "Maksimum endirim nöqtəsinə çatdınız"),
+        "pointMsgOverTotalBill": MessageLookupByLibrary.simpleMessage(
+            "Ümumi endirim dəyəri faktura cəmindən çoxdur"),
+        "pointMsgRemove":
+            MessageLookupByLibrary.simpleMessage("Endirim nöqtəsi silinir"),
+        "pointMsgSuccess": MessageLookupByLibrary.simpleMessage(
+            "Endirim nöqtəsi uğurla tətbiq olundu"),
+        "pointRewardMessage": MessageLookupByLibrary.simpleMessage(
+            "Ballarınızı Səbətə tətbiq etmək üçün Endirim Qaydası var"),
+        "polish": MessageLookupByLibrary.simpleMessage("Polyak"),
+        "popular": MessageLookupByLibrary.simpleMessage("Məşhur"),
+        "popularity": MessageLookupByLibrary.simpleMessage("Populyarlıq"),
+        "posAddressToolTip": MessageLookupByLibrary.simpleMessage(
+            "Bu ünvan yerli cihazınızda yadda saxlanılacaq. Bu istifadəçi ünvanı DEYİL."),
+        "postContent": MessageLookupByLibrary.simpleMessage("Məzmun"),
+        "postFail": MessageLookupByLibrary.simpleMessage(
+            "Postunuzu yaratmaq mümkün olmadı"),
+        "postImageFeature":
+            MessageLookupByLibrary.simpleMessage("Şəkil Xüsusiyyəti"),
+        "postManagement":
+            MessageLookupByLibrary.simpleMessage("Post İdarəetmə"),
+        "postProduct": MessageLookupByLibrary.simpleMessage("Tamamla"),
+        "postSuccessfully":
+            MessageLookupByLibrary.simpleMessage("Postunuz uğurla yaradıldı"),
+        "postTitle": MessageLookupByLibrary.simpleMessage("Başlıq"),
+        "prepaid": MessageLookupByLibrary.simpleMessage("Əvvəlcədən ödənilmiş"),
+        "prev": MessageLookupByLibrary.simpleMessage("Öncəki"),
+        "priceHighToLow":
+            MessageLookupByLibrary.simpleMessage("Qiymət: Yüksəkdən Aşağıya"),
+        "priceLowToHigh":
+            MessageLookupByLibrary.simpleMessage("Qiymət: Aşağıdan Yüksəkə"),
+        "prices": MessageLookupByLibrary.simpleMessage("Menyular"),
+        "printReceipt": MessageLookupByLibrary.simpleMessage("Qəbzi çap edin"),
+        "printer": MessageLookupByLibrary.simpleMessage("Printer"),
+        "printerNotFound":
+            MessageLookupByLibrary.simpleMessage("Printer tapılmadı"),
+        "printerSelection":
+            MessageLookupByLibrary.simpleMessage("Printer seçimi"),
+        "printing": MessageLookupByLibrary.simpleMessage("Çap edilir..."),
+        "privacyAndTerm":
+            MessageLookupByLibrary.simpleMessage("Məxfilik və Müddət"),
+        "privacyPolicy":
+            MessageLookupByLibrary.simpleMessage("Gizlilik Siyasəti"),
+        "privacyTerms":
+            MessageLookupByLibrary.simpleMessage("Məxfilik və Şərtlər"),
+        "private": MessageLookupByLibrary.simpleMessage("Şəxsi"),
+        "product": MessageLookupByLibrary.simpleMessage("Məhsul"),
+        "productAdded":
+            MessageLookupByLibrary.simpleMessage("Məhsul əlavə edildi"),
+        "productCreateReview": MessageLookupByLibrary.simpleMessage(
+            "Məhsulunuz nəzərdən keçirildikdən sonra görünəcək."),
+        "productName": MessageLookupByLibrary.simpleMessage("Məhsulun adı"),
+        "productNeedAtLeastOneVariation": MessageLookupByLibrary.simpleMessage(
+            "Məhsul növü dəyişəninə ən azı bir variant lazımdır"),
+        "productNeedNameAndPrice": MessageLookupByLibrary.simpleMessage(
+            "Sadə məhsul növü ad və normal qiymət tələb edir"),
+        "productRating": MessageLookupByLibrary.simpleMessage("Rəyiniz"),
+        "productType": MessageLookupByLibrary.simpleMessage("Məhsulun Növü"),
+        "products": MessageLookupByLibrary.simpleMessage("Məhsullar"),
+        "publish": MessageLookupByLibrary.simpleMessage("Dərc et"),
+        "pullToLoadMore": MessageLookupByLibrary.simpleMessage(
+            "Daha çox yükləmək üçün dartın"),
+        "qty": MessageLookupByLibrary.simpleMessage("Qty"),
+        "qtyTotal": m19,
+        "rate": MessageLookupByLibrary.simpleMessage("Dərəcəsi"),
+        "rateTheApp": MessageLookupByLibrary.simpleMessage("Tətbiqə Rəy Ver"),
+        "rateThisApp": MessageLookupByLibrary.simpleMessage("Tətbiqə Rəy Ver"),
+        "rateThisAppDescription": MessageLookupByLibrary.simpleMessage(
+            "Bu proqramı bəyənirsinizsə, onu nəzərdən keçirmək üçün bir az vaxtınızı ayırın!\nBu, həqiqətən bizə kömək edir və bir dəqiqədən çox vaxtınızı almamalıdır."),
+        "rating": MessageLookupByLibrary.simpleMessage("Reytinq"),
+        "ratingFirst": MessageLookupByLibrary.simpleMessage(
+            "Şərh yazmazdan əvvəl rəy verin"),
+        "reOrder": MessageLookupByLibrary.simpleMessage("Yenidən sifariş edin"),
+        "readReviews": MessageLookupByLibrary.simpleMessage("Rəylər"),
+        "receivedMoney": MessageLookupByLibrary.simpleMessage("Alınan pul"),
+        "receiver": MessageLookupByLibrary.simpleMessage("Qəbuledici"),
+        "recentSearches": MessageLookupByLibrary.simpleMessage("Tarixçə"),
+        "recentView": MessageLookupByLibrary.simpleMessage("Son Baxdıqlarınız"),
+        "recents": MessageLookupByLibrary.simpleMessage("Hazırki"),
+        "recommended": MessageLookupByLibrary.simpleMessage("Tövsiyə"),
+        "recurringTotals":
+            MessageLookupByLibrary.simpleMessage("Təkrarlanan Cəmilər"),
+        "refresh": MessageLookupByLibrary.simpleMessage("təzələmək"),
+        "refundOrderFailed": MessageLookupByLibrary.simpleMessage(
+            "Sifariş üçün pulun geri qaytarılması sorğusu uğursuz oldu"),
+        "refundOrderSuccess": MessageLookupByLibrary.simpleMessage(
+            "Sifarişinizin geri qaytarılmasını tələb edin!"),
+        "refundRequest":
+            MessageLookupByLibrary.simpleMessage("Qaytarma Tələbi"),
+        "refundRequested": MessageLookupByLibrary.simpleMessage(
+            "Pulun qaytarılması tələb olunur"),
+        "refunds": MessageLookupByLibrary.simpleMessage("Geri qaytarmalar"),
+        "registerAsVendor": MessageLookupByLibrary.simpleMessage(
+            "Satıcı istifadəçisi kimi qeydiyyatdan keçin"),
+        "registerFailed":
+            MessageLookupByLibrary.simpleMessage("Qeydiyyat uğursuz oldu"),
+        "registerSuccess":
+            MessageLookupByLibrary.simpleMessage("Uğurla qeydiyyatdan keçin"),
+        "regularPrice": MessageLookupByLibrary.simpleMessage("Qiymət"),
+        "relatedLayoutTitle":
+            MessageLookupByLibrary.simpleMessage("Sevə biləcəyiniz Şeylər"),
+        "releaseToLoadMore": MessageLookupByLibrary.simpleMessage(
+            "Daha çox yükləmək üçün buraxın"),
+        "remove": MessageLookupByLibrary.simpleMessage("Sil"),
+        "removeFromWishList":
+            MessageLookupByLibrary.simpleMessage("İstək siyahısından silin"),
+        "requestBooking":
+            MessageLookupByLibrary.simpleMessage("Rezervasyon tələb edin"),
+        "requestTooMany": MessageLookupByLibrary.simpleMessage(
+            "Qısa müddətdə çoxlu kod tələb etmisiniz. Zəhmət olmasa bir az sonra yenə cəhd edin."),
+        "resend": MessageLookupByLibrary.simpleMessage(" YENİDƏN GÖNDƏRMƏK"),
+        "reset": MessageLookupByLibrary.simpleMessage("Sıfırla"),
+        "resetPassword":
+            MessageLookupByLibrary.simpleMessage("Şifrə Sıfırlama"),
+        "resetYourPassword":
+            MessageLookupByLibrary.simpleMessage("Şifrəni Sıfırla"),
+        "results": MessageLookupByLibrary.simpleMessage("Nəticələr"),
+        "review": MessageLookupByLibrary.simpleMessage("Göstər"),
+        "reviewApproval":
+            MessageLookupByLibrary.simpleMessage("Təsdiqi nəzərdən keçirin"),
+        "reviewPendingApproval": MessageLookupByLibrary.simpleMessage(
+            "Rəyiniz göndərildi və təsdiqini gözləyir!"),
+        "reviewSent":
+            MessageLookupByLibrary.simpleMessage("Rəyiniz göndərildi!"),
+        "reviews": MessageLookupByLibrary.simpleMessage("Rəylər"),
+        "romanian": MessageLookupByLibrary.simpleMessage("Romanian"),
+        "russian": MessageLookupByLibrary.simpleMessage("Rus"),
+        "sale": m20,
+        "salePrice": MessageLookupByLibrary.simpleMessage("Endirimli qiymət"),
+        "save": MessageLookupByLibrary.simpleMessage("Yadda saxla"),
+        "saveAddress": MessageLookupByLibrary.simpleMessage("Yadda Saxla"),
+        "saveAddressSuccess": MessageLookupByLibrary.simpleMessage(
+            "Ünvanınız cihazınıza qeyd olunub"),
+        "saveForLater":
+            MessageLookupByLibrary.simpleMessage("Sonra üçün saxlamaq"),
+        "saveToWishList": MessageLookupByLibrary.simpleMessage("Sev"),
+        "scannerCannotScan": MessageLookupByLibrary.simpleMessage(
+            "Bu elementi skan etmək mümkün deyil"),
+        "scannerLoginFirst": MessageLookupByLibrary.simpleMessage(
+            "Sifarişi skan etmək üçün əvvəlcə daxil olmalısınız"),
+        "scannerOrderAvailable": MessageLookupByLibrary.simpleMessage(
+            "Bu sifariş hesabınız üçün əlçatan deyil"),
+        "search": MessageLookupByLibrary.simpleMessage("Tap"),
+        "searchByName": MessageLookupByLibrary.simpleMessage("Adla Axtar..."),
+        "searchForItems": MessageLookupByLibrary.simpleMessage(
+            "Minlərlə məhsul arasında tap.."),
+        "searchInput":
+            MessageLookupByLibrary.simpleMessage("Axtarışa mətninizi yazın"),
+        "searchOrderId":
+            MessageLookupByLibrary.simpleMessage("Sifariş ID ilə axtar..."),
+        "searchPlace": MessageLookupByLibrary.simpleMessage("Yer axtar"),
+        "searchingAddress": MessageLookupByLibrary.simpleMessage("Ünvanı Tap"),
+        "secondsAgo": m21,
+        "seeAll": MessageLookupByLibrary.simpleMessage("Hamısını göstər"),
+        "seeOrder": MessageLookupByLibrary.simpleMessage("Sifarişə baxın"),
+        "seeReviews": MessageLookupByLibrary.simpleMessage("Rəylərə baxın"),
+        "select": MessageLookupByLibrary.simpleMessage("Seçin"),
+        "selectAddress": MessageLookupByLibrary.simpleMessage("Ünvanı Seçin"),
+        "selectAll": MessageLookupByLibrary.simpleMessage("Hamısını seç"),
+        "selectDates": MessageLookupByLibrary.simpleMessage("Tarixləri seçin"),
+        "selectFileCancelled":
+            MessageLookupByLibrary.simpleMessage("Ləğv edilən faylı seçin!"),
+        "selectImage": MessageLookupByLibrary.simpleMessage("Şəkli seçin"),
+        "selectNone": MessageLookupByLibrary.simpleMessage("Heç birini seçin"),
+        "selectPrinter": MessageLookupByLibrary.simpleMessage("Printer seçin"),
+        "selectTheColor": MessageLookupByLibrary.simpleMessage("Rəngi seçin"),
+        "selectThePoint": MessageLookupByLibrary.simpleMessage("Nöqtə seçin"),
+        "selectTheQuantity":
+            MessageLookupByLibrary.simpleMessage("Miqdarı seçin"),
+        "selectTheSize": MessageLookupByLibrary.simpleMessage("Ölçünü seçin"),
+        "send": MessageLookupByLibrary.simpleMessage("Göndər"),
+        "sendBack": MessageLookupByLibrary.simpleMessage("Geri göndərmək"),
+        "sendSMSCode": MessageLookupByLibrary.simpleMessage("Kodu əldə et"),
+        "serbian": MessageLookupByLibrary.simpleMessage("Serb"),
+        "setAnAddressInSettingPage": MessageLookupByLibrary.simpleMessage(
+            "Zəhmət olmasa parametrlər səhifəsində ünvan təyin edin"),
+        "settings": MessageLookupByLibrary.simpleMessage("Parametrlər"),
+        "share": MessageLookupByLibrary.simpleMessage("Paylaş"),
+        "shipped": MessageLookupByLibrary.simpleMessage("Göndərilib"),
+        "shipping": MessageLookupByLibrary.simpleMessage("Çatdırılma"),
+        "shippingAddress":
+            MessageLookupByLibrary.simpleMessage("Çatdırılma Ünvanı"),
+        "shippingMethod":
+            MessageLookupByLibrary.simpleMessage("Çatdırılma Üsulu"),
+        "shop": MessageLookupByLibrary.simpleMessage("Mağaza"),
+        "shopEmail": MessageLookupByLibrary.simpleMessage("Mağaza e-poçtu"),
+        "shopName": MessageLookupByLibrary.simpleMessage("Mağaza adı"),
+        "shopOrders":
+            MessageLookupByLibrary.simpleMessage("Mağaza Sifarişləri"),
+        "shopPhone": MessageLookupByLibrary.simpleMessage("Mağaza telefonu"),
+        "shopSlug": MessageLookupByLibrary.simpleMessage("Mağaza şlak"),
+        "shoppingCartItems": m22,
+        "shortDescription": MessageLookupByLibrary.simpleMessage("Qısa Təsvir"),
+        "showAllMyOrdered":
+            MessageLookupByLibrary.simpleMessage("Sifarişlərimi Göstər"),
+        "showDetails":
+            MessageLookupByLibrary.simpleMessage("Detalları göstərin"),
+        "showGallery":
+            MessageLookupByLibrary.simpleMessage("Qalereyanı Göstər"),
+        "signIn": MessageLookupByLibrary.simpleMessage("Daxil ol"),
+        "signInWithEmail":
+            MessageLookupByLibrary.simpleMessage("Email ilə daxil ol "),
+        "signUp": MessageLookupByLibrary.simpleMessage("Qeydiyyat"),
+        "signup": MessageLookupByLibrary.simpleMessage("Qeydiyyat"),
+        "simple": MessageLookupByLibrary.simpleMessage("Sadə"),
+        "size": MessageLookupByLibrary.simpleMessage("Ölçü"),
+        "skip": MessageLookupByLibrary.simpleMessage("Atla"),
+        "sku": MessageLookupByLibrary.simpleMessage("sku"),
+        "slovak": MessageLookupByLibrary.simpleMessage("Slovak"),
+        "sold": m23,
+        "soldBy": MessageLookupByLibrary.simpleMessage("tərəfindən satılır"),
+        "somethingWrong": MessageLookupByLibrary.simpleMessage(
+            "Nəsə xəta baş verdi. Zəhmət olmasa bir az sonra yenə cəhd edin."),
+        "sortBy": MessageLookupByLibrary.simpleMessage("Sırala"),
+        "spanish": MessageLookupByLibrary.simpleMessage("Spanish"),
+        "startExploring":
+            MessageLookupByLibrary.simpleMessage("Kəşf etməyə başlayın"),
+        "startShopping":
+            MessageLookupByLibrary.simpleMessage("AVM-YƏ GERİ DÖNÜN"),
+        "state": MessageLookupByLibrary.simpleMessage("dövlət"),
+        "stateIsRequired": MessageLookupByLibrary.simpleMessage(
+            "Bölgə/Səmt/Rayon sətrini boş qoymayın"),
+        "stateProvince":
+            MessageLookupByLibrary.simpleMessage("Bölgə/Səmt/Rayon"),
+        "status": MessageLookupByLibrary.simpleMessage("Vəziyyət"),
+        "stock": MessageLookupByLibrary.simpleMessage("Səhm"),
+        "stockQuantity": MessageLookupByLibrary.simpleMessage("Stok Miqdarı"),
+        "stop": MessageLookupByLibrary.simpleMessage("Dayan"),
+        "store": MessageLookupByLibrary.simpleMessage("Mağaza"),
+        "storeAddress": MessageLookupByLibrary.simpleMessage("Mağaza ünvanı"),
+        "storeBanner": MessageLookupByLibrary.simpleMessage("Banner"),
+        "storeBrand": MessageLookupByLibrary.simpleMessage("Mağaza Brend"),
+        "storeClosed":
+            MessageLookupByLibrary.simpleMessage("Mağaza indi bağlıdır"),
+        "storeEmail": MessageLookupByLibrary.simpleMessage("Mağaza e-poçtu"),
+        "storeInformation":
+            MessageLookupByLibrary.simpleMessage("Mağaza Məlumatı"),
+        "storeListBanner":
+            MessageLookupByLibrary.simpleMessage("Mağaza Siyahısı Banneri"),
+        "storeLocation": MessageLookupByLibrary.simpleMessage("Mağaza Yeri"),
+        "storeLogo": MessageLookupByLibrary.simpleMessage("Mağaza Loqosu"),
+        "storeMobileBanner":
+            MessageLookupByLibrary.simpleMessage("Mağaza Mobil Banner"),
+        "storeSettings":
+            MessageLookupByLibrary.simpleMessage("Mağaza Parametrləri"),
+        "storeSliderBanner":
+            MessageLookupByLibrary.simpleMessage("Slayd bannerini saxla"),
+        "storeStaticBanner":
+            MessageLookupByLibrary.simpleMessage("Statik Banner Saxlayın"),
+        "storeVacation": MessageLookupByLibrary.simpleMessage("Mağaza tətili"),
+        "stores": MessageLookupByLibrary.simpleMessage("Mağazalar"),
+        "street": MessageLookupByLibrary.simpleMessage("Küçə"),
+        "street2": MessageLookupByLibrary.simpleMessage("Küçə 2"),
+        "streetIsRequired":
+            MessageLookupByLibrary.simpleMessage("Ünvan sətrini boş qoymayın"),
+        "streetName": MessageLookupByLibrary.simpleMessage("Ünvan"),
+        "streetNameApartment": MessageLookupByLibrary.simpleMessage("Mənzil"),
+        "streetNameBlock": MessageLookupByLibrary.simpleMessage("blok"),
+        "submit": MessageLookupByLibrary.simpleMessage("təqdim"),
+        "submitYourPost":
+            MessageLookupByLibrary.simpleMessage("Postunuzu Göndərin"),
+        "subtotal": MessageLookupByLibrary.simpleMessage("Toplam"),
+        "support": MessageLookupByLibrary.simpleMessage("Dəstək"),
+        "swahili": MessageLookupByLibrary.simpleMessage("Suahilicə"),
+        "swedish": MessageLookupByLibrary.simpleMessage("İsveçcə"),
+        "tagNotExist":
+            MessageLookupByLibrary.simpleMessage("Bu etiket mövcud deyil"),
+        "tags": MessageLookupByLibrary.simpleMessage("Etiket"),
+        "takePicture": MessageLookupByLibrary.simpleMessage("Şəkil çəkmək"),
+        "tamil": MessageLookupByLibrary.simpleMessage("Tamil"),
+        "tapSelectLocation":
+            MessageLookupByLibrary.simpleMessage("Bu yeri seçmək üçün toxunun"),
+        "tax": MessageLookupByLibrary.simpleMessage("Vergi"),
+        "thailand": MessageLookupByLibrary.simpleMessage("Tayland"),
+        "theFieldIsRequired": m24,
+        "thisDateIsNotAvailable":
+            MessageLookupByLibrary.simpleMessage("Bu tarix mövcud deyil"),
+        "thisFeatureDoesNotSupportTheCurrentLanguage":
+            MessageLookupByLibrary.simpleMessage(
+                "Bu funksiya cari dili dəstəkləmir"),
+        "thisPlatformNotSupportWebview": MessageLookupByLibrary.simpleMessage(
+            "Bu platforma web brauzeri dəstəkləmir."),
+        "thisProductNotSupport":
+            MessageLookupByLibrary.simpleMessage("Bu məhsul dəstəklənmir"),
+        "tickets": MessageLookupByLibrary.simpleMessage("Biletlər"),
+        "time": MessageLookupByLibrary.simpleMessage("Vaxt"),
+        "title": MessageLookupByLibrary.simpleMessage("Başlıq"),
+        "titleAToZ": MessageLookupByLibrary.simpleMessage("Başlıq: A-dan Z-yə"),
+        "titleZToA": MessageLookupByLibrary.simpleMessage("Başlıq: Z-dən A"),
+        "tooManyFaildedLogin": MessageLookupByLibrary.simpleMessage(
+            "Həddindən artıq uğursuz giriş cəhdi. Zəhmət olmasa bir az sonra yenə cəhd edin."),
+        "topUp": MessageLookupByLibrary.simpleMessage("Yuxarı"),
+        "topUpProductNotFound":
+            MessageLookupByLibrary.simpleMessage("Yükləmə məhsulu tapılmadı"),
+        "total": MessageLookupByLibrary.simpleMessage("Yekun"),
+        "totalCartValue": MessageLookupByLibrary.simpleMessage(
+            "Sifarişin ümumi dəyəri ən azı olmalıdır"),
+        "totalProducts": m25,
+        "totalTax": MessageLookupByLibrary.simpleMessage("Vergi"),
+        "trackingNumberIs": MessageLookupByLibrary.simpleMessage("İzləmə "),
+        "trackingPage": MessageLookupByLibrary.simpleMessage("İzləmə Səhifəsi"),
+        "transactionCancelled":
+            MessageLookupByLibrary.simpleMessage("Əməliyyat ləğv edildi"),
+        "transactionDetail":
+            MessageLookupByLibrary.simpleMessage("Əməliyyat təfərrüatı"),
+        "transactionFee":
+            MessageLookupByLibrary.simpleMessage("Əməliyyat haqqı"),
+        "transactionResult":
+            MessageLookupByLibrary.simpleMessage("Əməliyyat Nəticəsi"),
+        "transfer": MessageLookupByLibrary.simpleMessage("Transfer"),
+        "transferConfirm":
+            MessageLookupByLibrary.simpleMessage("Transferin təsdiqi"),
+        "transferErrorMessage": MessageLookupByLibrary.simpleMessage(
+            "Siz bu istifadəçiyə köçürə bilməzsiniz"),
+        "transferFailed":
+            MessageLookupByLibrary.simpleMessage("Transfer alınmadı"),
+        "transferSuccess":
+            MessageLookupByLibrary.simpleMessage("Transfer uğuru"),
+        "turkish": MessageLookupByLibrary.simpleMessage("Türkçe"),
+        "turnOnBle":
+            MessageLookupByLibrary.simpleMessage("Bluetooth-u yandırın"),
+        "typeYourMessage":
+            MessageLookupByLibrary.simpleMessage("Mesajınızı bura yazın..."),
+        "ukrainian": MessageLookupByLibrary.simpleMessage("Ukraynalı"),
+        "unavailable": MessageLookupByLibrary.simpleMessage("Mövcud deyil"),
+        "undo": MessageLookupByLibrary.simpleMessage("Geri"),
+        "unpaid": MessageLookupByLibrary.simpleMessage("ÖDƏNİŞSİZ"),
+        "update": MessageLookupByLibrary.simpleMessage("Yenilə"),
+        "updateFailed":
+            MessageLookupByLibrary.simpleMessage("Yeniləmə uğursuz oldu!"),
+        "updateInfo":
+            MessageLookupByLibrary.simpleMessage("Məlumatı yeniləyin"),
+        "updatePassword":
+            MessageLookupByLibrary.simpleMessage("Şifrəni yeniləyin"),
+        "updateStatus": MessageLookupByLibrary.simpleMessage("Statusu yenilə"),
+        "updateSuccess":
+            MessageLookupByLibrary.simpleMessage("Uğurla yeniləyin!"),
+        "updateUserInfor":
+            MessageLookupByLibrary.simpleMessage("Məlumatları Yenilə"),
+        "uploadFile": MessageLookupByLibrary.simpleMessage("Fayl yükləyin"),
+        "uploadProduct":
+            MessageLookupByLibrary.simpleMessage("Məhsulu yükləyin"),
+        "uploading": MessageLookupByLibrary.simpleMessage("Yüklənir"),
+        "url": MessageLookupByLibrary.simpleMessage("URL"),
+        "useNow": MessageLookupByLibrary.simpleMessage("İndi istifadə edin"),
+        "useThisImage":
+            MessageLookupByLibrary.simpleMessage("Bu Şəkildən istifadə edin"),
+        "userExists": MessageLookupByLibrary.simpleMessage(
+            "Bu istifadəçi adı/e-poçt mövcud deyil."),
+        "userNameInCorrect": MessageLookupByLibrary.simpleMessage(
+            "İstifadəçi adı və ya parol səhvdir."),
+        "username": MessageLookupByLibrary.simpleMessage("İstifadəçi adı"),
+        "usernameAndPasswordRequired": MessageLookupByLibrary.simpleMessage(
+            "İstifadəçi adı və parol tələb olunur"),
+        "vacationMessage": MessageLookupByLibrary.simpleMessage("Tətil Mesajı"),
+        "vacationType": MessageLookupByLibrary.simpleMessage("Tətil növü"),
+        "validUntilDate": m26,
+        "variable": MessageLookupByLibrary.simpleMessage("Dəyişən"),
+        "variation": MessageLookupByLibrary.simpleMessage("Variasiya"),
+        "vendorAdmin": MessageLookupByLibrary.simpleMessage("Satıcı Admin"),
+        "vendorInfo": MessageLookupByLibrary.simpleMessage("Satıcı məlumatı"),
+        "verificationCode":
+            MessageLookupByLibrary.simpleMessage("Doğrulama kodu (6 rəqəmli)"),
+        "verifySMSCode": MessageLookupByLibrary.simpleMessage("Doğrula"),
+        "viaWallet": MessageLookupByLibrary.simpleMessage("Cüzdan vasitəsilə"),
+        "video": MessageLookupByLibrary.simpleMessage("Video"),
+        "vietnamese": MessageLookupByLibrary.simpleMessage("Vietnamese"),
+        "viewOnGoogleMaps":
+            MessageLookupByLibrary.simpleMessage("Google Xəritədə baxın"),
+        "viewRecentTransactions":
+            MessageLookupByLibrary.simpleMessage("Son əməliyyatlara baxın"),
+        "visible": MessageLookupByLibrary.simpleMessage("Görünən"),
+        "visitStore": MessageLookupByLibrary.simpleMessage("eMağazam"),
+        "waitForLoad": MessageLookupByLibrary.simpleMessage(
+            "Şəklin yüklənməsini gözləyirik"),
+        "waitForPost": MessageLookupByLibrary.simpleMessage(
+            "Məhsulun göndərilməsini gözləyirik"),
+        "waitingForConfirmation":
+            MessageLookupByLibrary.simpleMessage("Təsdiq gözlənilir"),
+        "walletBalance":
+            MessageLookupByLibrary.simpleMessage("Pul kisəsi balansı"),
+        "walletName": MessageLookupByLibrary.simpleMessage("Pulqabı adı"),
+        "warning": m27,
+        "warningCurrencyMessageForWallet": m28,
+        "weFoundBlogs":
+            MessageLookupByLibrary.simpleMessage("Bloq(lar)ı Tapdıq"),
+        "weFoundProducts": m29,
+        "weNeedCameraAccessTo": MessageLookupByLibrary.simpleMessage(
+            "QR kodunu və ya ştrix kodunu skan etmək üçün bizə kamera girişi lazımdır."),
+        "weSentAnOTPTo":
+            MessageLookupByLibrary.simpleMessage("Doğrulama kodu göndərildi"),
+        "weWillSendYouNotification": MessageLookupByLibrary.simpleMessage(
+            "Yeni məhsullar və ya təkliflər mövcud olduqda sizə bildirişlər göndərəcəyik. Siz həmişə parametrlərdə onu söndürə bilərsiniz."),
+        "webView": MessageLookupByLibrary.simpleMessage("Veb Görünüşü"),
+        "week": m30,
+        "welcome": MessageLookupByLibrary.simpleMessage("Xoş Gəldiniz"),
+        "womanCollections": MessageLookupByLibrary.simpleMessage("Qadınlar"),
+        "writeComment": MessageLookupByLibrary.simpleMessage("Şərhiniz"),
+        "writeYourNote":
+            MessageLookupByLibrary.simpleMessage("Qeyd əlavə edin"),
+        "yearsAgo": m31,
+        "yes": MessageLookupByLibrary.simpleMessage("Bəli"),
+        "youCanOnlyOrderSingleStore": MessageLookupByLibrary.simpleMessage(
+            "Yalnız bir mağazadan ala bilərsiniz."),
+        "youCanOnlyPurchase":
+            MessageLookupByLibrary.simpleMessage("Yalnız satın ala bilərsiniz"),
+        "youHaveAssignedToOrder": m32,
+        "youHaveBeenSaveAddressYourLocal": MessageLookupByLibrary.simpleMessage(
+            "Yerli faylınızda ünvanı uğurlu saxladınız!"),
+        "youHavePoints":
+            MessageLookupByLibrary.simpleMessage("\$point xalınız var"),
+        "youMightAlsoLike":
+            MessageLookupByLibrary.simpleMessage("Diqqətinizi Çəkənlər"),
+        "youNotBeAsked": MessageLookupByLibrary.simpleMessage(
+            "Bitirdikdən sonra növbəti dəfə sizdən soruşulmayacaq"),
+        "yourAddressExistYourLocal": MessageLookupByLibrary.simpleMessage(
+            "Ünvan cihazınızda zatən mövcuddur."),
+        "yourAddressHasBeenSaved": MessageLookupByLibrary.simpleMessage(
+            "Ünvan cihazınızda yadda saxlanıldı."),
+        "yourApplicationIsUnderReview": MessageLookupByLibrary.simpleMessage(
+            "Müraciətiniz nəzərdən keçirilir."),
+        "yourBagIsEmpty":
+            MessageLookupByLibrary.simpleMessage("Səbətiniz boşdur"),
+        "yourBookingDetail":
+            MessageLookupByLibrary.simpleMessage("Rezervasyon təfərrüatınız"),
+        "yourEarningsThisMonth":
+            MessageLookupByLibrary.simpleMessage("Bu ay qazancınız"),
+        "yourNote": MessageLookupByLibrary.simpleMessage("Qeydiniz"),
+        "yourOrderHasBeenAdded":
+            MessageLookupByLibrary.simpleMessage("Sifarişiniz əlavə edildi"),
+        "yourOrders": MessageLookupByLibrary.simpleMessage("Sifarişləriniz"),
+        "yourProductIsUnderReview": MessageLookupByLibrary.simpleMessage(
+            "Məhsulunuz nəzərdən keçirilir"),
+        "yourUsernameEmail":
+            MessageLookupByLibrary.simpleMessage("İstifadəçi adı və ya Email"),
+        "zipCode": MessageLookupByLibrary.simpleMessage("Poçt kodu"),
+        "zipCodeIsRequired": MessageLookupByLibrary.simpleMessage(
+            "Poçt kodu sətrini boş qoymayın")
+      };
+}
diff --git a/lib/generated/intl/messages_bn.dart b/lib/generated/intl/messages_bn.dart
index 3433713..f7663f1 100644
--- a/lib/generated/intl/messages_bn.dart
+++ b/lib/generated/intl/messages_bn.dart
@@ -91,23 +91,14 @@ class MessageLookup extends MessageLookupByLibrary {
 
   final messages = _notInlinedMessages(_notInlinedMessages);
   static Map<String, Function> _notInlinedMessages(_) => <String, Function>{
-        "DateDESC": MessageLookupByLibrary.simpleMessage("তারিখ অবতরণ"),
-        "Dutch": MessageLookupByLibrary.simpleMessage("ডাচ"),
-        "Egypt": MessageLookupByLibrary.simpleMessage("মিশর"),
-        "India": MessageLookupByLibrary.simpleMessage("হিন্দি"),
-        "Korean": MessageLookupByLibrary.simpleMessage("কোরিয়ান"),
-        "Netherlands": MessageLookupByLibrary.simpleMessage("ডাচ"),
-        "Polish": MessageLookupByLibrary.simpleMessage("পোলিশ"),
-        "PrivacyAndTerm":
-            MessageLookupByLibrary.simpleMessage("গোপনীয়তা এবং মেয়াদ"),
-        "Qty": MessageLookupByLibrary.simpleMessage("পরিমাণ"),
-        "Tamil": MessageLookupByLibrary.simpleMessage("তামিল"),
         "UserNameInCorrect": MessageLookupByLibrary.simpleMessage(
             "ব্যবহারকারী নাম বা পাসওয়ার্ড ভুল"),
         "aboutUs": MessageLookupByLibrary.simpleMessage("আমাদের সম্পর্কে"),
         "account": MessageLookupByLibrary.simpleMessage("হিসাব"),
         "accountDeleteDescription": MessageLookupByLibrary.simpleMessage(
             "আপনার অ্যাকাউন্ট মুছে ফেলা আমাদের ডাটাবেস থেকে ব্যক্তিগত তথ্য মুছে ফেলা হয়. আপনার ইমেল স্থায়ীভাবে সংরক্ষিত হয়ে যায় এবং একই ইমেল একটি নতুন অ্যাকাউন্ট নিবন্ধন করার জন্য পুনরায় ব্যবহার করা যাবে না।"),
+        "accountIsPendingApproval": MessageLookupByLibrary.simpleMessage(
+            "অ্যাকাউন্ট অনুমোদন মুলতুবি আছে."),
         "accountSetup":
             MessageLookupByLibrary.simpleMessage("অ্যাকাউন্ট সেটআপ"),
         "active": MessageLookupByLibrary.simpleMessage("সক্রিয়"),
@@ -176,6 +167,7 @@ class MessageLookup extends MessageLookupByLibrary {
             "অডিও আইটেম সনাক্ত করা হয়েছে। আপনি কি অডিও প্লেয়ার যুক্ত করতে চান?"),
         "availability": MessageLookupByLibrary.simpleMessage("উপস্থিতি"),
         "availablePoints": m1,
+        "averageRating": MessageLookupByLibrary.simpleMessage("গড় রেটিং"),
         "back": MessageLookupByLibrary.simpleMessage("পিছনে"),
         "backOrder": MessageLookupByLibrary.simpleMessage("ব্যাকর্ডারে"),
         "backToShop": MessageLookupByLibrary.simpleMessage("দোকানে ফিরে যান"),
@@ -225,10 +217,24 @@ class MessageLookup extends MessageLookupByLibrary {
         "byTag": MessageLookupByLibrary.simpleMessage("ট্যাগ দ্বারা"),
         "call": MessageLookupByLibrary.simpleMessage("ফোন করুন"),
         "callTo": MessageLookupByLibrary.simpleMessage("একটি কল করুন"),
+        "canNotCreateOrder":
+            MessageLookupByLibrary.simpleMessage("অর্ডার তৈরি করতে পারে না"),
+        "canNotCreateUser": MessageLookupByLibrary.simpleMessage(
+            "ব্যবহারকারী তৈরি করতে পারবেন না।"),
+        "canNotGetPayments": MessageLookupByLibrary.simpleMessage(
+            "পেমেন্ট পদ্ধতি পেতে পারেন না"),
+        "canNotGetShipping":
+            MessageLookupByLibrary.simpleMessage("শিপিং পদ্ধতি পেতে পারেন না"),
+        "canNotGetToken":
+            MessageLookupByLibrary.simpleMessage("টোকেন তথ্য পেতে পারেন না."),
         "canNotLaunch": MessageLookupByLibrary.simpleMessage(
             "এই অ্যাপ্লিকেশনটি আরম্ভ করা যাবে না, কনফিগারেশন.আর্টে আপনার সেটিংস সঠিক কিনা তা নিশ্চিত করুন"),
         "canNotLoadThisLink":
             MessageLookupByLibrary.simpleMessage("এই লিঙ্ক লোড করতে পারবেন না"),
+        "canNotSaveOrder": MessageLookupByLibrary.simpleMessage(
+            "ওয়েবসাইটে অর্ডার সংরক্ষণ করতে পারবেন না"),
+        "canNotUpdateInfo": MessageLookupByLibrary.simpleMessage(
+            "ব্যবহারকারীর তথ্য আপডেট করা যাবে না।"),
         "cancel": MessageLookupByLibrary.simpleMessage("বাতিল"),
         "cantFindThisOrderId": MessageLookupByLibrary.simpleMessage(
             "এই অর্ডার আইডি খুঁজে পাচ্ছি না"),
@@ -346,6 +352,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "date": MessageLookupByLibrary.simpleMessage("তারিখ"),
         "dateASC": MessageLookupByLibrary.simpleMessage("আরোহণের তারিখ"),
         "dateBooking": MessageLookupByLibrary.simpleMessage("তারিখ বুকিং"),
+        "dateDESC": MessageLookupByLibrary.simpleMessage("তারিখ অবতরণ"),
         "dateEnd": MessageLookupByLibrary.simpleMessage("তারিখ শেষ"),
         "dateLatest": MessageLookupByLibrary.simpleMessage("তারিখ: সর্বশেষ"),
         "dateOldest": MessageLookupByLibrary.simpleMessage("তারিখ: প্রাচীনতম"),
@@ -404,6 +411,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "editProductInfo":
             MessageLookupByLibrary.simpleMessage("পণ্য তথ্য সম্পাদনা করুন"),
         "editWithoutColon": MessageLookupByLibrary.simpleMessage("সম্পাদন করা"),
+        "egypt": MessageLookupByLibrary.simpleMessage("মিশর"),
         "email": MessageLookupByLibrary.simpleMessage("ইমেইল"),
         "emailDeleteDescription": MessageLookupByLibrary.simpleMessage(
             "আপনার অ্যাকাউন্ট মুছে ফেলা হলে আপনি সমস্ত মেলিং তালিকা থেকে সদস্যতা ত্যাগ করবেন৷"),
@@ -419,6 +427,8 @@ class MessageLookup extends MessageLookupByLibrary {
             "আপনার মন্তব্য খালি থাকতে পারে না"),
         "emptySearch": MessageLookupByLibrary.simpleMessage(
             "আপনি এখনও আইটেম অনুসন্ধান করেন নি। এখনই শুরু করা যাক - আমরা আপনাকে সহায়তা করব।"),
+        "emptyShippingMsg": MessageLookupByLibrary.simpleMessage(
+            "কোন শিপিং বিকল্প উপলব্ধ আছে. অনুগ্রহ করে নিশ্চিত করুন যে আপনার ঠিকানা সঠিকভাবে প্রবেশ করানো হয়েছে, অথবা আপনার কোন সাহায্যের প্রয়োজন হলে আমাদের সাথে যোগাযোগ করুন।"),
         "emptyUsername": MessageLookupByLibrary.simpleMessage(
             "ব্যবহারকারীর নাম / ইমেল খালি"),
         "emptyWishlistSubtitle": MessageLookupByLibrary.simpleMessage(
@@ -553,6 +563,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "inStock": MessageLookupByLibrary.simpleMessage("মজুদ"),
         "incorrectPassword":
             MessageLookupByLibrary.simpleMessage("ভুল পাসওয়ার্ড৤"),
+        "india": MessageLookupByLibrary.simpleMessage("হিন্দি"),
         "indonesian":
             MessageLookupByLibrary.simpleMessage("ইন্দোনেশিয়াসম্বন্ধীয়"),
         "instantlyClose":
@@ -660,6 +671,7 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("আশেপাশের স্থানগুলি"),
         "needToLoginAgain": MessageLookupByLibrary.simpleMessage(
             "আপডেট কার্যকর করতে আপনাকে আবার লগইন করতে হবে"),
+        "netherlands": MessageLookupByLibrary.simpleMessage("ডাচ"),
         "newPassword": MessageLookupByLibrary.simpleMessage("নতুন পাসওয়ার্ড"),
         "newVariation": MessageLookupByLibrary.simpleMessage("নতুন বৈচিত্র"),
         "next": MessageLookupByLibrary.simpleMessage("পরবর্তী"),
@@ -852,7 +864,9 @@ class MessageLookup extends MessageLookupByLibrary {
             "ডিসকাউন্ট পয়েন্ট সফলভাবে প্রয়োগ করা হয়েছে"),
         "pointRewardMessage": MessageLookupByLibrary.simpleMessage(
             "কার্টে আপনার পয়েন্ট প্রয়োগ করার জন্য ছাড়ের নিয়ম রয়েছে"),
+        "polish": MessageLookupByLibrary.simpleMessage("পোলিশ"),
         "popular": MessageLookupByLibrary.simpleMessage("জনপ্রিয়"),
+        "popularity": MessageLookupByLibrary.simpleMessage("জনপ্রিয়তা"),
         "posAddressToolTip": MessageLookupByLibrary.simpleMessage(
             "এই ঠিকানাটি আপনার স্থানীয় ডিভাইসে সংরক্ষণ করা হবে। এটি ব্যবহারকারীর ঠিকানা নয়।"),
         "postContent": MessageLookupByLibrary.simpleMessage("সন্তুষ্ট"),
@@ -880,6 +894,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "printerSelection":
             MessageLookupByLibrary.simpleMessage("প্রিন্টার নির্বাচন"),
         "printing": MessageLookupByLibrary.simpleMessage("মুদ্রণ..."),
+        "privacyAndTerm":
+            MessageLookupByLibrary.simpleMessage("গোপনীয়তা এবং মেয়াদ"),
         "privacyPolicy": MessageLookupByLibrary.simpleMessage("গোপনীয়তা নীতি"),
         "privacyTerms":
             MessageLookupByLibrary.simpleMessage("গোপনীয়তা এবং শর্তাদি"),
@@ -899,6 +915,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "products": MessageLookupByLibrary.simpleMessage("পণ্য"),
         "publish": MessageLookupByLibrary.simpleMessage("প্রকাশ করা"),
         "pullToLoadMore": MessageLookupByLibrary.simpleMessage("আরও লোড টানুন"),
+        "qty": MessageLookupByLibrary.simpleMessage("পরিমাণ"),
         "qtyTotal": m19,
         "rate": MessageLookupByLibrary.simpleMessage("হার"),
         "rateTheApp": MessageLookupByLibrary.simpleMessage("অ্যাপ্লিকেশন রেট"),
@@ -1108,6 +1125,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "support": MessageLookupByLibrary.simpleMessage("সমর্থন"),
         "swahili": MessageLookupByLibrary.simpleMessage("সোয়াহিলি"),
         "swedish": MessageLookupByLibrary.simpleMessage("সুইডিশ"),
+        "tagNotExist":
+            MessageLookupByLibrary.simpleMessage("এই ট্যাগ বিদ্যমান নেই"),
         "tags": MessageLookupByLibrary.simpleMessage("ট্যাগ"),
         "takePicture": MessageLookupByLibrary.simpleMessage("ছবি তোলা"),
         "tamil": MessageLookupByLibrary.simpleMessage("তামিল"),
@@ -1128,6 +1147,12 @@ class MessageLookup extends MessageLookupByLibrary {
         "tickets": MessageLookupByLibrary.simpleMessage("টিকিট"),
         "time": MessageLookupByLibrary.simpleMessage("সময়"),
         "title": MessageLookupByLibrary.simpleMessage("খেতাব"),
+        "titleAToZ":
+            MessageLookupByLibrary.simpleMessage("শিরোনাম: এ থেকে জেড"),
+        "titleZToA":
+            MessageLookupByLibrary.simpleMessage("শিরোনাম: জেড থেকে এ"),
+        "tooManyFaildedLogin": MessageLookupByLibrary.simpleMessage(
+            "অনেকগুলি ব্যর্থ লগইন প্রচেষ্টা৷ অনুগ্রহ করে একটু পরে আবার চেষ্টা করুন."),
         "topUp": MessageLookupByLibrary.simpleMessage("টপ আপ"),
         "topUpProductNotFound":
             MessageLookupByLibrary.simpleMessage("টপ আপ পণ্য পাওয়া যায় নি"),
@@ -1184,6 +1209,8 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("এই ইমেজ ব্যবহার করুন"),
         "userExists": MessageLookupByLibrary.simpleMessage(
             "এই ব্যবহারকারীর নাম/ইমেল পাওয়া যায় না।"),
+        "userNameInCorrect": MessageLookupByLibrary.simpleMessage(
+            "ব্যবহারকারী নাম বা পাসওয়ার্ড ভুল।"),
         "username": MessageLookupByLibrary.simpleMessage("ব্যবহারকারীর নাম"),
         "usernameAndPasswordRequired": MessageLookupByLibrary.simpleMessage(
             "ব্যবহারকারীর নাম এবং পাসওয়ার্ড প্রয়োজন"),
@@ -1202,6 +1229,8 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("মানিব্যাগের মাধ্যমে"),
         "video": MessageLookupByLibrary.simpleMessage("ভিডিও"),
         "vietnamese": MessageLookupByLibrary.simpleMessage("ভিয়েতনামী"),
+        "viewOnGoogleMaps":
+            MessageLookupByLibrary.simpleMessage("গুগল ম্যাপে দেখুন"),
         "viewRecentTransactions":
             MessageLookupByLibrary.simpleMessage("সাম্প্রতিক লেনদেন দেখুন"),
         "visible": MessageLookupByLibrary.simpleMessage("দৃশ্যমান"),
diff --git a/lib/generated/intl/messages_bs.dart b/lib/generated/intl/messages_bs.dart
index cdded82..41dc8b8 100644
--- a/lib/generated/intl/messages_bs.dart
+++ b/lib/generated/intl/messages_bs.dart
@@ -79,17 +79,6 @@ class MessageLookup extends MessageLookupByLibrary {
 
   final messages = _notInlinedMessages(_notInlinedMessages);
   static Map<String, Function> _notInlinedMessages(_) => <String, Function>{
-        "DateDESC": MessageLookupByLibrary.simpleMessage("Datum silazno"),
-        "Dutch": MessageLookupByLibrary.simpleMessage("Dutch"),
-        "Egypt": MessageLookupByLibrary.simpleMessage("Egypt"),
-        "India": MessageLookupByLibrary.simpleMessage("Hindi"),
-        "Korean": MessageLookupByLibrary.simpleMessage("Korean"),
-        "Netherlands": MessageLookupByLibrary.simpleMessage("Dutch"),
-        "Polish": MessageLookupByLibrary.simpleMessage("Poljski"),
-        "PrivacyAndTerm": MessageLookupByLibrary.simpleMessage(
-            "Privatnost i uslove korišćenja"),
-        "Qty": MessageLookupByLibrary.simpleMessage("Kol."),
-        "Tamil": MessageLookupByLibrary.simpleMessage("Tamil"),
         "UserNameInCorrect": MessageLookupByLibrary.simpleMessage(
             "Korisničko ime ili lozinka su netačni"),
         "aboutUs": MessageLookupByLibrary.simpleMessage("O nama"),
@@ -292,6 +281,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "date": MessageLookupByLibrary.simpleMessage("Datum"),
         "dateASC": MessageLookupByLibrary.simpleMessage("Datum uzlazno"),
         "dateBooking": MessageLookupByLibrary.simpleMessage("Datum bukiranja"),
+        "dateDESC": MessageLookupByLibrary.simpleMessage("Datum silazno"),
         "dateEnd": MessageLookupByLibrary.simpleMessage("Do"),
         "dateStart": MessageLookupByLibrary.simpleMessage("Od"),
         "dateWiseClose":
@@ -326,12 +316,13 @@ class MessageLookup extends MessageLookupByLibrary {
         "download": MessageLookupByLibrary.simpleMessage("Download"),
         "draft": MessageLookupByLibrary.simpleMessage("Draft"),
         "duration": MessageLookupByLibrary.simpleMessage("Trajanje"),
-        "dutch": MessageLookupByLibrary.simpleMessage("Dutch"),
+        "dutch": MessageLookupByLibrary.simpleMessage("dutch"),
         "earnings": MessageLookupByLibrary.simpleMessage("Zarada"),
         "edit": MessageLookupByLibrary.simpleMessage("Uredi: "),
         "editProductInfo": MessageLookupByLibrary.simpleMessage(
             "Uredi informacije o proizvodu"),
         "editWithoutColon": MessageLookupByLibrary.simpleMessage("Uredi"),
+        "egypt": MessageLookupByLibrary.simpleMessage("egypt"),
         "email": MessageLookupByLibrary.simpleMessage("E-pošta"),
         "emailDoesNotExist": MessageLookupByLibrary.simpleMessage(
             "Nalog e-pošte koji ste unijeli ne postoji. Molimo pokušajte ponovo."),
@@ -457,6 +448,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "inStock": MessageLookupByLibrary.simpleMessage("Na stanju"),
         "incorrectPassword":
             MessageLookupByLibrary.simpleMessage("Netačna lozinka"),
+        "india": MessageLookupByLibrary.simpleMessage("Hindi"),
         "indonesian": MessageLookupByLibrary.simpleMessage("Indoneški"),
         "instantlyClose": MessageLookupByLibrary.simpleMessage("Zatvori odmah"),
         "invalidPhoneNumber":
@@ -475,7 +467,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "kannada": MessageLookupByLibrary.simpleMessage("Kanda"),
         "keep": MessageLookupByLibrary.simpleMessage("Zadrži"),
         "khmer": MessageLookupByLibrary.simpleMessage("Khmer"),
-        "korean": MessageLookupByLibrary.simpleMessage("Korean"),
+        "korean": MessageLookupByLibrary.simpleMessage("korean"),
         "kurdish": MessageLookupByLibrary.simpleMessage("Kurdish"),
         "language": MessageLookupByLibrary.simpleMessage("Jezici"),
         "languageSuccess":
@@ -550,6 +542,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "name": MessageLookupByLibrary.simpleMessage("Ime"),
         "nearbyPlaces":
             MessageLookupByLibrary.simpleMessage("Mjesta u blizini"),
+        "netherlands": MessageLookupByLibrary.simpleMessage("dutch"),
         "newPassword": MessageLookupByLibrary.simpleMessage("Nova lozinka"),
         "next": MessageLookupByLibrary.simpleMessage("Dalje"),
         "niceName": MessageLookupByLibrary.simpleMessage("Nadimak"),
@@ -723,6 +716,7 @@ class MessageLookup extends MessageLookupByLibrary {
             "Popust je uspješno primijenjen"),
         "pointRewardMessage": MessageLookupByLibrary.simpleMessage(
             "Postoji pravilo popusta za primjenu bodova u košarici"),
+        "polish": MessageLookupByLibrary.simpleMessage("Poljski"),
         "popular": MessageLookupByLibrary.simpleMessage("Popularno"),
         "postContent": MessageLookupByLibrary.simpleMessage("Tekst"),
         "postFail": MessageLookupByLibrary.simpleMessage(
@@ -737,6 +731,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "prepaid": MessageLookupByLibrary.simpleMessage("Prepaid"),
         "prev": MessageLookupByLibrary.simpleMessage("Predhodna"),
         "prices": MessageLookupByLibrary.simpleMessage("Menu"),
+        "privacyAndTerm": MessageLookupByLibrary.simpleMessage(
+            "Privatnost i uslove korišćenja"),
         "privacyPolicy":
             MessageLookupByLibrary.simpleMessage("Politika privatnosti"),
         "private": MessageLookupByLibrary.simpleMessage("Privatno"),
@@ -752,6 +748,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "publish": MessageLookupByLibrary.simpleMessage("Objavi"),
         "pullToLoadMore":
             MessageLookupByLibrary.simpleMessage("Povuci da učitate više"),
+        "qty": MessageLookupByLibrary.simpleMessage("Kol."),
         "qtyTotal": m19,
         "rate": MessageLookupByLibrary.simpleMessage("Ocijeni"),
         "rateTheApp":
diff --git a/lib/generated/intl/messages_cs.dart b/lib/generated/intl/messages_cs.dart
index cad03c8..8262082 100644
--- a/lib/generated/intl/messages_cs.dart
+++ b/lib/generated/intl/messages_cs.dart
@@ -91,23 +91,14 @@ class MessageLookup extends MessageLookupByLibrary {
 
   final messages = _notInlinedMessages(_notInlinedMessages);
   static Map<String, Function> _notInlinedMessages(_) => <String, Function>{
-        "DateDESC": MessageLookupByLibrary.simpleMessage("Datum sestupně"),
-        "Dutch": MessageLookupByLibrary.simpleMessage("holandský"),
-        "Egypt": MessageLookupByLibrary.simpleMessage("Egypt"),
-        "India": MessageLookupByLibrary.simpleMessage("hindština"),
-        "Korean": MessageLookupByLibrary.simpleMessage("korejština"),
-        "Netherlands": MessageLookupByLibrary.simpleMessage("holandský"),
-        "Polish": MessageLookupByLibrary.simpleMessage("polština"),
-        "PrivacyAndTerm":
-            MessageLookupByLibrary.simpleMessage("Ochrana soukromí a podmínky"),
-        "Qty": MessageLookupByLibrary.simpleMessage("Ks"),
-        "Tamil": MessageLookupByLibrary.simpleMessage("Tamil"),
         "UserNameInCorrect": MessageLookupByLibrary.simpleMessage(
             "Uživatelské jméno nebo heslo je nesprávné"),
         "aboutUs": MessageLookupByLibrary.simpleMessage("O nás"),
         "account": MessageLookupByLibrary.simpleMessage("Účet"),
         "accountDeleteDescription": MessageLookupByLibrary.simpleMessage(
             "Smazáním vašeho účtu odstraníte osobní údaje z naší databáze. Váš e-mail bude trvale rezervován a stejný e-mail nelze znovu použít k registraci nového účtu."),
+        "accountIsPendingApproval":
+            MessageLookupByLibrary.simpleMessage("Účet čeká na schválení."),
         "accountSetup": MessageLookupByLibrary.simpleMessage("Nastavení účtu"),
         "active": MessageLookupByLibrary.simpleMessage("Aktivní"),
         "addAName": MessageLookupByLibrary.simpleMessage("Přidat jméno"),
@@ -175,6 +166,8 @@ class MessageLookup extends MessageLookupByLibrary {
             "Zjištěny zvukové položky. Chcete přidat do přehrávače zvuku?"),
         "availability": MessageLookupByLibrary.simpleMessage("Dostupnost"),
         "availablePoints": m1,
+        "averageRating":
+            MessageLookupByLibrary.simpleMessage("Průměrné hodnocení"),
         "back": MessageLookupByLibrary.simpleMessage("Zpět"),
         "backOrder": MessageLookupByLibrary.simpleMessage("Ve skladě"),
         "backToShop": MessageLookupByLibrary.simpleMessage("Zpět do eshopu"),
@@ -225,10 +218,24 @@ class MessageLookup extends MessageLookupByLibrary {
         "byTag": MessageLookupByLibrary.simpleMessage("Podle značky"),
         "call": MessageLookupByLibrary.simpleMessage("Volání"),
         "callTo": MessageLookupByLibrary.simpleMessage("Zavolejte"),
+        "canNotCreateOrder":
+            MessageLookupByLibrary.simpleMessage("Nelze vytvořit objednávku"),
+        "canNotCreateUser":
+            MessageLookupByLibrary.simpleMessage("Nelze vytvořit uživatele."),
+        "canNotGetPayments": MessageLookupByLibrary.simpleMessage(
+            "Nelze získat platební metody"),
+        "canNotGetShipping": MessageLookupByLibrary.simpleMessage(
+            "Nelze získat způsoby dopravy"),
+        "canNotGetToken": MessageLookupByLibrary.simpleMessage(
+            "Nelze získat informace o tokenu."),
         "canNotLaunch": MessageLookupByLibrary.simpleMessage(
             "Tuto aplikaci nelze spustit, ujistěte se, že je vaše nastavení na config.dart správné"),
         "canNotLoadThisLink":
             MessageLookupByLibrary.simpleMessage("Tento odkaz nelze načíst"),
+        "canNotSaveOrder": MessageLookupByLibrary.simpleMessage(
+            "Objednávku nelze uložit na web"),
+        "canNotUpdateInfo": MessageLookupByLibrary.simpleMessage(
+            "Nelze aktualizovat informace o uživateli."),
         "cancel": MessageLookupByLibrary.simpleMessage("Zrušit"),
         "cantFindThisOrderId":
             MessageLookupByLibrary.simpleMessage("ID objednávky nelze najít"),
@@ -348,6 +355,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "date": MessageLookupByLibrary.simpleMessage("Datum"),
         "dateASC": MessageLookupByLibrary.simpleMessage("Datum vzestupně"),
         "dateBooking": MessageLookupByLibrary.simpleMessage("Datum rezervace"),
+        "dateDESC": MessageLookupByLibrary.simpleMessage("Datum sestupně"),
         "dateEnd": MessageLookupByLibrary.simpleMessage("Datum konce"),
         "dateLatest": MessageLookupByLibrary.simpleMessage("Datum: Nejnovější"),
         "dateOldest": MessageLookupByLibrary.simpleMessage("Datum: nejstarší"),
@@ -405,6 +413,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "editProductInfo": MessageLookupByLibrary.simpleMessage(
             "Upravit informace o produktu"),
         "editWithoutColon": MessageLookupByLibrary.simpleMessage("Upravit"),
+        "egypt": MessageLookupByLibrary.simpleMessage("egypt"),
         "email": MessageLookupByLibrary.simpleMessage("E-mailem"),
         "emailDeleteDescription": MessageLookupByLibrary.simpleMessage(
             "Smazáním účtu se odhlásíte ze všech seznamů adresátů."),
@@ -420,6 +429,8 @@ class MessageLookup extends MessageLookupByLibrary {
             "Váš komentář nemůže být prázdný"),
         "emptySearch": MessageLookupByLibrary.simpleMessage(
             "Ještě jste nevyhledali položky. Začněme hned - pomůžeme vám."),
+        "emptyShippingMsg": MessageLookupByLibrary.simpleMessage(
+            "Nejsou k dispozici žádné možnosti dopravy. Ujistěte se, že byla vaše adresa zadána správně, nebo nás kontaktujte, pokud potřebujete pomoc."),
         "emptyUsername": MessageLookupByLibrary.simpleMessage(
             "Uživatelské jméno/e -mail je prázdný"),
         "emptyWishlistSubtitle": MessageLookupByLibrary.simpleMessage(
@@ -555,6 +566,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "inStock": MessageLookupByLibrary.simpleMessage("Skladem"),
         "incorrectPassword":
             MessageLookupByLibrary.simpleMessage("Nesprávné heslo"),
+        "india": MessageLookupByLibrary.simpleMessage("hindština"),
         "indonesian": MessageLookupByLibrary.simpleMessage("indonéština"),
         "instantlyClose":
             MessageLookupByLibrary.simpleMessage("Okamžitě zavřít"),
@@ -664,6 +676,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "nearbyPlaces": MessageLookupByLibrary.simpleMessage("Místa v okolí"),
         "needToLoginAgain": MessageLookupByLibrary.simpleMessage(
             "Pro provedení aktualizace se musíte znovu přihlásit"),
+        "netherlands": MessageLookupByLibrary.simpleMessage("holandský"),
         "newPassword": MessageLookupByLibrary.simpleMessage("Nové heslo"),
         "newVariation": MessageLookupByLibrary.simpleMessage("Nová variace"),
         "next": MessageLookupByLibrary.simpleMessage("Další"),
@@ -859,7 +872,9 @@ class MessageLookup extends MessageLookupByLibrary {
             "Slevový bod byl úspěšně uplatněn"),
         "pointRewardMessage": MessageLookupByLibrary.simpleMessage(
             "Pro uplatnění bodů v košíku existuje Pravidlo slevy"),
+        "polish": MessageLookupByLibrary.simpleMessage("polština"),
         "popular": MessageLookupByLibrary.simpleMessage("Oblíbený"),
+        "popularity": MessageLookupByLibrary.simpleMessage("popularita"),
         "posAddressToolTip": MessageLookupByLibrary.simpleMessage(
             "Tato adresa bude uložena do vašeho místního zařízení. NENÍ to adresa uživatele."),
         "postContent": MessageLookupByLibrary.simpleMessage("Obsah"),
@@ -887,6 +902,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "printerSelection":
             MessageLookupByLibrary.simpleMessage("Výběr tiskárny"),
         "printing": MessageLookupByLibrary.simpleMessage("Tisk..."),
+        "privacyAndTerm":
+            MessageLookupByLibrary.simpleMessage("Ochrana soukromí a podmínky"),
         "privacyPolicy": MessageLookupByLibrary.simpleMessage(
             "Zásady ochrany osobních údajů"),
         "privacyTerms": MessageLookupByLibrary.simpleMessage(
@@ -908,6 +925,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "publish": MessageLookupByLibrary.simpleMessage("Publikovat"),
         "pullToLoadMore":
             MessageLookupByLibrary.simpleMessage("Zatažením načtete více"),
+        "qty": MessageLookupByLibrary.simpleMessage("Ks"),
         "qtyTotal": m19,
         "rate": MessageLookupByLibrary.simpleMessage("Hodnotit"),
         "rateTheApp":
@@ -1119,6 +1137,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "support": MessageLookupByLibrary.simpleMessage("Podpěra, podpora"),
         "swahili": MessageLookupByLibrary.simpleMessage("Svahilsky"),
         "swedish": MessageLookupByLibrary.simpleMessage("švédský"),
+        "tagNotExist":
+            MessageLookupByLibrary.simpleMessage("Tato značka neexistuje"),
         "tags": MessageLookupByLibrary.simpleMessage("Tagy"),
         "takePicture": MessageLookupByLibrary.simpleMessage("Vyfotit"),
         "tamil": MessageLookupByLibrary.simpleMessage("Tamil"),
@@ -1139,6 +1159,10 @@ class MessageLookup extends MessageLookupByLibrary {
         "tickets": MessageLookupByLibrary.simpleMessage("Vstupenky"),
         "time": MessageLookupByLibrary.simpleMessage("Čas"),
         "title": MessageLookupByLibrary.simpleMessage("Titul"),
+        "titleAToZ": MessageLookupByLibrary.simpleMessage("Název: A až Z"),
+        "titleZToA": MessageLookupByLibrary.simpleMessage("Název: Z až A"),
+        "tooManyFaildedLogin": MessageLookupByLibrary.simpleMessage(
+            "Příliš mnoho neúspěšných pokusů o přihlášení. Prosím zkuste to znovu později."),
         "topUp": MessageLookupByLibrary.simpleMessage("Doplňte"),
         "topUpProductNotFound": MessageLookupByLibrary.simpleMessage(
             "Doplňovací produkt nebyl nalezen"),
@@ -1198,6 +1222,8 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("Použijte tento obrázek"),
         "userExists": MessageLookupByLibrary.simpleMessage(
             "Toto uživatelské jméno/e -mail není k dispozici."),
+        "userNameInCorrect": MessageLookupByLibrary.simpleMessage(
+            "Uživatelské jméno nebo heslo je nesprávné."),
         "username": MessageLookupByLibrary.simpleMessage("Uživatelské jméno"),
         "usernameAndPasswordRequired": MessageLookupByLibrary.simpleMessage(
             "Uživatelské jméno a heslo jsou povinné"),
@@ -1216,6 +1242,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "viaWallet": MessageLookupByLibrary.simpleMessage("Přes peněženku"),
         "video": MessageLookupByLibrary.simpleMessage("Video"),
         "vietnamese": MessageLookupByLibrary.simpleMessage("vietnamština"),
+        "viewOnGoogleMaps":
+            MessageLookupByLibrary.simpleMessage("Zobrazit na Google Maps"),
         "viewRecentTransactions":
             MessageLookupByLibrary.simpleMessage("Zobrazit nedávné transakce"),
         "visible": MessageLookupByLibrary.simpleMessage("Viditelné"),
diff --git a/lib/generated/intl/messages_da.dart b/lib/generated/intl/messages_da.dart
index 9ea3f68..49314e9 100644
--- a/lib/generated/intl/messages_da.dart
+++ b/lib/generated/intl/messages_da.dart
@@ -91,23 +91,14 @@ class MessageLookup extends MessageLookupByLibrary {
 
   final messages = _notInlinedMessages(_notInlinedMessages);
   static Map<String, Function> _notInlinedMessages(_) => <String, Function>{
-        "DateDESC": MessageLookupByLibrary.simpleMessage("Dato faldende"),
-        "Dutch": MessageLookupByLibrary.simpleMessage("hollandske"),
-        "Egypt": MessageLookupByLibrary.simpleMessage("Egypten"),
-        "India": MessageLookupByLibrary.simpleMessage("Hindi"),
-        "Korean": MessageLookupByLibrary.simpleMessage("Korean"),
-        "Netherlands": MessageLookupByLibrary.simpleMessage("hollandske"),
-        "Polish": MessageLookupByLibrary.simpleMessage("Polere"),
-        "PrivacyAndTerm":
-            MessageLookupByLibrary.simpleMessage("Fortrolighed og vilkår"),
-        "Qty": MessageLookupByLibrary.simpleMessage("QTY"),
-        "Tamil": MessageLookupByLibrary.simpleMessage("Tamil"),
         "UserNameInCorrect": MessageLookupByLibrary.simpleMessage(
             "Brugernavnet eller adgangskoden er forkert"),
         "aboutUs": MessageLookupByLibrary.simpleMessage("Om os"),
         "account": MessageLookupByLibrary.simpleMessage("konto"),
         "accountDeleteDescription": MessageLookupByLibrary.simpleMessage(
             "Sletning af din konto fjerner personlige oplysninger fra vores database."),
+        "accountIsPendingApproval": MessageLookupByLibrary.simpleMessage(
+            "Kontoen afventer godkendelse."),
         "accountSetup": MessageLookupByLibrary.simpleMessage("Kontoopsætning"),
         "active": MessageLookupByLibrary.simpleMessage("Aktiv"),
         "addAName": MessageLookupByLibrary.simpleMessage("Tilføj et navn"),
@@ -173,6 +164,8 @@ class MessageLookup extends MessageLookupByLibrary {
             "Lydelement(er) blev fundet. Vil du tilføje til Audio Player?"),
         "availability": MessageLookupByLibrary.simpleMessage("tilgængelighed"),
         "availablePoints": m1,
+        "averageRating":
+            MessageLookupByLibrary.simpleMessage("Gennemsnitlig vurdering"),
         "back": MessageLookupByLibrary.simpleMessage("Tilbage"),
         "backOrder": MessageLookupByLibrary.simpleMessage("I restordre"),
         "backToShop": MessageLookupByLibrary.simpleMessage("Tilbage til Shop"),
@@ -223,10 +216,24 @@ class MessageLookup extends MessageLookupByLibrary {
         "byTag": MessageLookupByLibrary.simpleMessage("Ved tag"),
         "call": MessageLookupByLibrary.simpleMessage("Opkald"),
         "callTo": MessageLookupByLibrary.simpleMessage("Foretag et opkald til"),
+        "canNotCreateOrder":
+            MessageLookupByLibrary.simpleMessage("Kan ikke oprette ordre"),
+        "canNotCreateUser":
+            MessageLookupByLibrary.simpleMessage("Kan ikke oprette brugeren."),
+        "canNotGetPayments": MessageLookupByLibrary.simpleMessage(
+            "Kan ikke få betalingsmetoder"),
+        "canNotGetShipping": MessageLookupByLibrary.simpleMessage(
+            "Kan ikke få forsendelsesmetoder"),
+        "canNotGetToken":
+            MessageLookupByLibrary.simpleMessage("Kan ikke få token info."),
         "canNotLaunch": MessageLookupByLibrary.simpleMessage(
             "Kan ikke starte denne app, sørg for at dine indstillinger på config.dart er korrekte"),
         "canNotLoadThisLink":
             MessageLookupByLibrary.simpleMessage("Kan ikke indlæse dette link"),
+        "canNotSaveOrder": MessageLookupByLibrary.simpleMessage(
+            "Kan ikke gemme ordren på hjemmesiden"),
+        "canNotUpdateInfo": MessageLookupByLibrary.simpleMessage(
+            "Kan ikke opdatere brugeroplysninger."),
         "cancel": MessageLookupByLibrary.simpleMessage("afbestille"),
         "cantFindThisOrderId": MessageLookupByLibrary.simpleMessage(
             "Kan ikke finde dette ordre-id"),
@@ -339,6 +346,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "date": MessageLookupByLibrary.simpleMessage("Dato"),
         "dateASC": MessageLookupByLibrary.simpleMessage("Datoen stiger"),
         "dateBooking": MessageLookupByLibrary.simpleMessage("Dato booking"),
+        "dateDESC": MessageLookupByLibrary.simpleMessage("Dato faldende"),
         "dateEnd": MessageLookupByLibrary.simpleMessage("Dato slut"),
         "dateLatest": MessageLookupByLibrary.simpleMessage("Dato: Senest"),
         "dateOldest": MessageLookupByLibrary.simpleMessage("Dato: Ældst"),
@@ -394,6 +402,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "editProductInfo":
             MessageLookupByLibrary.simpleMessage("Rediger produktinfo"),
         "editWithoutColon": MessageLookupByLibrary.simpleMessage("Redigere"),
+        "egypt": MessageLookupByLibrary.simpleMessage("Egypten"),
         "email": MessageLookupByLibrary.simpleMessage("E-mail"),
         "emailDeleteDescription": MessageLookupByLibrary.simpleMessage(
             "Sletning af din konto vil afmelde dig fra alle mailinglister."),
@@ -409,6 +418,8 @@ class MessageLookup extends MessageLookupByLibrary {
             "Din kommentar må ikke være tom"),
         "emptySearch": MessageLookupByLibrary.simpleMessage(
             "Du har ikke søgt efter varer endnu. Lad os starte nu - vi hjælper dig."),
+        "emptyShippingMsg": MessageLookupByLibrary.simpleMessage(
+            "Der er ingen tilgængelige forsendelsesmuligheder. Sørg for, at din adresse er indtastet korrekt, eller kontakt os, hvis du har brug for hjælp."),
         "emptyUsername":
             MessageLookupByLibrary.simpleMessage("Brugernavn/e-mail er tom"),
         "emptyWishlistSubtitle": MessageLookupByLibrary.simpleMessage(
@@ -543,6 +554,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "inStock": MessageLookupByLibrary.simpleMessage("På lager"),
         "incorrectPassword":
             MessageLookupByLibrary.simpleMessage("forkert kodeord"),
+        "india": MessageLookupByLibrary.simpleMessage("Hindi"),
         "indonesian": MessageLookupByLibrary.simpleMessage("Indonesisk"),
         "instantlyClose":
             MessageLookupByLibrary.simpleMessage("Luk med det samme"),
@@ -566,7 +578,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "kannada": MessageLookupByLibrary.simpleMessage("kannaresisk"),
         "keep": MessageLookupByLibrary.simpleMessage("HOLDE"),
         "khmer": MessageLookupByLibrary.simpleMessage("Khmer"),
-        "korean": MessageLookupByLibrary.simpleMessage("Korean"),
+        "korean": MessageLookupByLibrary.simpleMessage("korean"),
         "kurdish": MessageLookupByLibrary.simpleMessage("kurdisk"),
         "language": MessageLookupByLibrary.simpleMessage("Sprog"),
         "languageSuccess":
@@ -652,6 +664,7 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("Steder i nærheden"),
         "needToLoginAgain": MessageLookupByLibrary.simpleMessage(
             "Du skal logge ind igen for at gennemføre opdateringen"),
+        "netherlands": MessageLookupByLibrary.simpleMessage("hollandske"),
         "newPassword": MessageLookupByLibrary.simpleMessage("Nyt kodeord"),
         "newVariation": MessageLookupByLibrary.simpleMessage("Ny variation"),
         "next": MessageLookupByLibrary.simpleMessage("Næste"),
@@ -843,7 +856,9 @@ class MessageLookup extends MessageLookupByLibrary {
             "Rabatpoint er anvendt med succes"),
         "pointRewardMessage": MessageLookupByLibrary.simpleMessage(
             "Der er rabatreglen for at anvende dine point til kurven"),
+        "polish": MessageLookupByLibrary.simpleMessage("Polere"),
         "popular": MessageLookupByLibrary.simpleMessage("Populær"),
+        "popularity": MessageLookupByLibrary.simpleMessage("popularitet"),
         "posAddressToolTip": MessageLookupByLibrary.simpleMessage(
             "Denne adresse vil blive gemt på din lokale enhed. Det er IKKE brugeradressen."),
         "postContent": MessageLookupByLibrary.simpleMessage("Indhold"),
@@ -871,6 +886,8 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("Printeren blev ikke fundet"),
         "printerSelection": MessageLookupByLibrary.simpleMessage("Printervalg"),
         "printing": MessageLookupByLibrary.simpleMessage("Trykning..."),
+        "privacyAndTerm":
+            MessageLookupByLibrary.simpleMessage("Fortrolighed og vilkår"),
         "privacyPolicy":
             MessageLookupByLibrary.simpleMessage("Fortrolighedspolitik"),
         "privacyTerms":
@@ -892,6 +909,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "publish": MessageLookupByLibrary.simpleMessage("Offentliggøre"),
         "pullToLoadMore":
             MessageLookupByLibrary.simpleMessage("Træk for at indlæse mere"),
+        "qty": MessageLookupByLibrary.simpleMessage("QTY"),
         "qtyTotal": m19,
         "rate": MessageLookupByLibrary.simpleMessage("Sats"),
         "rateTheApp": MessageLookupByLibrary.simpleMessage("Bedøm appen"),
@@ -1096,6 +1114,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "support": MessageLookupByLibrary.simpleMessage("Support"),
         "swahili": MessageLookupByLibrary.simpleMessage("Swahili"),
         "swedish": MessageLookupByLibrary.simpleMessage("Svensk"),
+        "tagNotExist":
+            MessageLookupByLibrary.simpleMessage("Dette tag findes ikke"),
         "tags": MessageLookupByLibrary.simpleMessage("Tags"),
         "takePicture": MessageLookupByLibrary.simpleMessage("Tage billede"),
         "tamil": MessageLookupByLibrary.simpleMessage("Tamil"),
@@ -1116,6 +1136,10 @@ class MessageLookup extends MessageLookupByLibrary {
         "tickets": MessageLookupByLibrary.simpleMessage("Billetter"),
         "time": MessageLookupByLibrary.simpleMessage("Tid"),
         "title": MessageLookupByLibrary.simpleMessage("Titel"),
+        "titleAToZ": MessageLookupByLibrary.simpleMessage("Titel: A til Z"),
+        "titleZToA": MessageLookupByLibrary.simpleMessage("Titel: Z til A"),
+        "tooManyFaildedLogin": MessageLookupByLibrary.simpleMessage(
+            "For mange mislykkede loginforsøg. Prøv igen senere."),
         "topUp": MessageLookupByLibrary.simpleMessage("Top Up"),
         "topUpProductNotFound": MessageLookupByLibrary.simpleMessage(
             "Top Up-produkt blev ikke fundet"),
@@ -1172,6 +1196,8 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("Brug dette billede"),
         "userExists": MessageLookupByLibrary.simpleMessage(
             "Dette brugernavn/e-mail er ikke tilgængelig."),
+        "userNameInCorrect": MessageLookupByLibrary.simpleMessage(
+            "Brugernavnet eller adgangskoden er forkert."),
         "username": MessageLookupByLibrary.simpleMessage("Brugernavn"),
         "usernameAndPasswordRequired": MessageLookupByLibrary.simpleMessage(
             "Brugernavn og adgangskode er påkrævet"),
@@ -1188,6 +1214,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "viaWallet": MessageLookupByLibrary.simpleMessage("Via tegnebogen"),
         "video": MessageLookupByLibrary.simpleMessage("video"),
         "vietnamese": MessageLookupByLibrary.simpleMessage("Vietnamesisk"),
+        "viewOnGoogleMaps":
+            MessageLookupByLibrary.simpleMessage("Se på Google Maps"),
         "viewRecentTransactions":
             MessageLookupByLibrary.simpleMessage("Se seneste transaktioner"),
         "visible": MessageLookupByLibrary.simpleMessage("Synlig"),
diff --git a/lib/generated/intl/messages_de.dart b/lib/generated/intl/messages_de.dart
index 60df0a0..c07f380 100644
--- a/lib/generated/intl/messages_de.dart
+++ b/lib/generated/intl/messages_de.dart
@@ -91,23 +91,14 @@ class MessageLookup extends MessageLookupByLibrary {
 
   final messages = _notInlinedMessages(_notInlinedMessages);
   static Map<String, Function> _notInlinedMessages(_) => <String, Function>{
-        "DateDESC": MessageLookupByLibrary.simpleMessage("Datum absteigend"),
-        "Dutch": MessageLookupByLibrary.simpleMessage("Niederländisch"),
-        "Egypt": MessageLookupByLibrary.simpleMessage("Ägypten"),
-        "India": MessageLookupByLibrary.simpleMessage("Indien"),
-        "Korean": MessageLookupByLibrary.simpleMessage("Koreanisch"),
-        "Netherlands": MessageLookupByLibrary.simpleMessage("Niederlande"),
-        "Polish": MessageLookupByLibrary.simpleMessage("Polieren"),
-        "PrivacyAndTerm":
-            MessageLookupByLibrary.simpleMessage(" Datenschutz und Laufzeit "),
-        "Qty": MessageLookupByLibrary.simpleMessage("Menge"),
-        "Tamil": MessageLookupByLibrary.simpleMessage("Tamil"),
         "UserNameInCorrect": MessageLookupByLibrary.simpleMessage(
             "Der Benutzername oder das Passwort ist falsch"),
         "aboutUs": MessageLookupByLibrary.simpleMessage("Über uns"),
         "account": MessageLookupByLibrary.simpleMessage("Konto"),
         "accountDeleteDescription": MessageLookupByLibrary.simpleMessage(
             "Durch das Löschen Ihres Kontos werden personenbezogene Daten aus unserer Datenbank entfernt. Ihre E-Mail-Adresse wird dauerhaft reserviert und dieselbe E-Mail-Adresse kann nicht wiederverwendet werden, um ein neues Konto zu registrieren."),
+        "accountIsPendingApproval": MessageLookupByLibrary.simpleMessage(
+            "Die Genehmigung des Kontos steht noch aus."),
         "accountSetup":
             MessageLookupByLibrary.simpleMessage("Kontoeinrichtung"),
         "active": MessageLookupByLibrary.simpleMessage("Aktiv"),
@@ -181,6 +172,8 @@ class MessageLookup extends MessageLookupByLibrary {
             "Audioelement(e) erkannt. Möchten Sie Audioplayer hinzufügen?"),
         "availability": MessageLookupByLibrary.simpleMessage("Verfügbarkeit"),
         "availablePoints": m1,
+        "averageRating":
+            MessageLookupByLibrary.simpleMessage("Durchschnittliche Bewertung"),
         "back": MessageLookupByLibrary.simpleMessage("Zurück"),
         "backOrder": MessageLookupByLibrary.simpleMessage("Bei Rückstand"),
         "backToShop": MessageLookupByLibrary.simpleMessage("Zurück zum Shop"),
@@ -230,10 +223,24 @@ class MessageLookup extends MessageLookupByLibrary {
         "byTag": MessageLookupByLibrary.simpleMessage("nach Tag"),
         "call": MessageLookupByLibrary.simpleMessage("Anruf"),
         "callTo": MessageLookupByLibrary.simpleMessage("Rufen Sie an"),
+        "canNotCreateOrder": MessageLookupByLibrary.simpleMessage(
+            "Bestellung kann nicht erstellt werden"),
+        "canNotCreateUser": MessageLookupByLibrary.simpleMessage(
+            "Der Benutzer kann nicht erstellt werden."),
+        "canNotGetPayments": MessageLookupByLibrary.simpleMessage(
+            "Zahlungsmethoden können nicht abgerufen werden"),
+        "canNotGetShipping": MessageLookupByLibrary.simpleMessage(
+            "Versandarten können nicht abgerufen werden"),
+        "canNotGetToken": MessageLookupByLibrary.simpleMessage(
+            "Token-Info kann nicht abgerufen werden."),
         "canNotLaunch": MessageLookupByLibrary.simpleMessage(
             "Diese App kann nicht gestartet werden. Stellen Sie sicher, dass Ihre Einstellungen korrekt sind"),
         "canNotLoadThisLink": MessageLookupByLibrary.simpleMessage(
             "Dieser Link kann nicht geladen werden"),
+        "canNotSaveOrder": MessageLookupByLibrary.simpleMessage(
+            "Die Bestellung kann nicht auf der Website gespeichert werden"),
+        "canNotUpdateInfo": MessageLookupByLibrary.simpleMessage(
+            "Benutzerinformationen können nicht aktualisiert werden."),
         "cancel": MessageLookupByLibrary.simpleMessage("Stornieren"),
         "cantFindThisOrderId": MessageLookupByLibrary.simpleMessage(
             "Diese Bestellnummer kann nicht gefunden werden"),
@@ -353,6 +360,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "date": MessageLookupByLibrary.simpleMessage("Datum"),
         "dateASC": MessageLookupByLibrary.simpleMessage("Datum aufsteigend"),
         "dateBooking": MessageLookupByLibrary.simpleMessage("Bestelldatum"),
+        "dateDESC": MessageLookupByLibrary.simpleMessage("Datum absteigend"),
         "dateEnd": MessageLookupByLibrary.simpleMessage("Datum Ende"),
         "dateLatest": MessageLookupByLibrary.simpleMessage("Datum: Spätestens"),
         "dateOldest": MessageLookupByLibrary.simpleMessage("Datum: Älteste"),
@@ -410,6 +418,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "editProductInfo":
             MessageLookupByLibrary.simpleMessage("Produktinfo bearbeiten"),
         "editWithoutColon": MessageLookupByLibrary.simpleMessage("Bearbeiten"),
+        "egypt": MessageLookupByLibrary.simpleMessage("Ägypten"),
         "email": MessageLookupByLibrary.simpleMessage("E-Mail"),
         "emailDeleteDescription": MessageLookupByLibrary.simpleMessage(
             "Wenn Sie Ihr Konto löschen, werden Sie von allen Mailinglisten abgemeldet."),
@@ -425,6 +434,8 @@ class MessageLookup extends MessageLookupByLibrary {
             "Ihr Kommentar darf nicht leer sein"),
         "emptySearch": MessageLookupByLibrary.simpleMessage(
             "Sie haben noch nicht nach Artikeln gesucht. Fangen wir jetzt an - wir helfen Ihnen."),
+        "emptyShippingMsg": MessageLookupByLibrary.simpleMessage(
+            "Es sind keine Versandoptionen verfügbar. Bitte stellen Sie sicher, dass Ihre Adresse korrekt eingegeben wurde, oder kontaktieren Sie uns, wenn Sie Hilfe benötigen."),
         "emptyUsername": MessageLookupByLibrary.simpleMessage(
             "Benutzername/E-Mail ist leer"),
         "emptyWishlistSubtitle": MessageLookupByLibrary.simpleMessage(
@@ -566,6 +577,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "inStock": MessageLookupByLibrary.simpleMessage("Auf Lager"),
         "incorrectPassword":
             MessageLookupByLibrary.simpleMessage("Falsches Passwort"),
+        "india": MessageLookupByLibrary.simpleMessage("Indien"),
         "indonesian": MessageLookupByLibrary.simpleMessage("Indonesisch"),
         "instantlyClose":
             MessageLookupByLibrary.simpleMessage("Sofort schließen"),
@@ -678,6 +690,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "nearbyPlaces": MessageLookupByLibrary.simpleMessage("In meiner Nähe"),
         "needToLoginAgain": MessageLookupByLibrary.simpleMessage(
             "Sie müssen sich erneut anmelden, um die Aktualisierung durchzuführen"),
+        "netherlands": MessageLookupByLibrary.simpleMessage("Niederlande"),
         "newPassword": MessageLookupByLibrary.simpleMessage("Neues Passwort"),
         "newVariation": MessageLookupByLibrary.simpleMessage("Neue Variante"),
         "next": MessageLookupByLibrary.simpleMessage("nächste"),
@@ -877,7 +890,9 @@ class MessageLookup extends MessageLookupByLibrary {
             "Rabattpunkt wurde erfolgreich angewendet"),
         "pointRewardMessage": MessageLookupByLibrary.simpleMessage(
             "Sie können Ihre Punkte zum Warenkorb hinzufügen"),
+        "polish": MessageLookupByLibrary.simpleMessage("Polieren"),
         "popular": MessageLookupByLibrary.simpleMessage("Beliebt"),
+        "popularity": MessageLookupByLibrary.simpleMessage("Popularität"),
         "posAddressToolTip": MessageLookupByLibrary.simpleMessage(
             "Diese Adresse wird auf Ihrem lokalen Gerät gespeichert. Es ist NICHT die Benutzeradresse."),
         "postContent": MessageLookupByLibrary.simpleMessage("Inhalt"),
@@ -905,6 +920,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "printerSelection":
             MessageLookupByLibrary.simpleMessage("Druckerauswahl"),
         "printing": MessageLookupByLibrary.simpleMessage("Drucken..."),
+        "privacyAndTerm":
+            MessageLookupByLibrary.simpleMessage(" Datenschutz und Laufzeit "),
         "privacyPolicy":
             MessageLookupByLibrary.simpleMessage("Datenschutz-Bestimmungen"),
         "privacyTerms": MessageLookupByLibrary.simpleMessage("Datenschutz"),
@@ -925,6 +942,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "publish": MessageLookupByLibrary.simpleMessage("Veröffentlichen"),
         "pullToLoadMore":
             MessageLookupByLibrary.simpleMessage("Nach oben ziehen Mehr laden"),
+        "qty": MessageLookupByLibrary.simpleMessage("Menge"),
         "qtyTotal": m19,
         "rate": MessageLookupByLibrary.simpleMessage("Bewerten"),
         "rateTheApp":
@@ -1139,6 +1157,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "support": MessageLookupByLibrary.simpleMessage("Unterstützung"),
         "swahili": MessageLookupByLibrary.simpleMessage("Suaheli"),
         "swedish": MessageLookupByLibrary.simpleMessage("Schwedisch"),
+        "tagNotExist":
+            MessageLookupByLibrary.simpleMessage("Dieses Tag existiert nicht"),
         "tags": MessageLookupByLibrary.simpleMessage("Markierungen"),
         "takePicture": MessageLookupByLibrary.simpleMessage("Ein Bild machen"),
         "tamil": MessageLookupByLibrary.simpleMessage("Tamil"),
@@ -1159,6 +1179,10 @@ class MessageLookup extends MessageLookupByLibrary {
         "tickets": MessageLookupByLibrary.simpleMessage("Tickets"),
         "time": MessageLookupByLibrary.simpleMessage("Zeit"),
         "title": MessageLookupByLibrary.simpleMessage("Titel"),
+        "titleAToZ": MessageLookupByLibrary.simpleMessage("Titel: A bis Z"),
+        "titleZToA": MessageLookupByLibrary.simpleMessage("Titel: Z bis A"),
+        "tooManyFaildedLogin": MessageLookupByLibrary.simpleMessage(
+            "Zu viele fehlgeschlagene Anmeldeversuche. Bitte versuchen Sie es später erneut."),
         "topUp": MessageLookupByLibrary.simpleMessage("Nachfüllen"),
         "topUpProductNotFound": MessageLookupByLibrary.simpleMessage(
             "Produkt aufladen nicht gefunden"),
@@ -1217,6 +1241,8 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("Verwenden Sie dieses Bild"),
         "userExists": MessageLookupByLibrary.simpleMessage(
             "Dieser Benutzername/diese E-Mail-Adresse ist nicht verfügbar."),
+        "userNameInCorrect": MessageLookupByLibrary.simpleMessage(
+            "Der Benutzername oder das Passwort ist falsch."),
         "username": MessageLookupByLibrary.simpleMessage("Benutzername"),
         "usernameAndPasswordRequired": MessageLookupByLibrary.simpleMessage(
             "Benutzername und Passwort sind erforderlich"),
@@ -1234,6 +1260,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "viaWallet": MessageLookupByLibrary.simpleMessage("Über Brieftasche"),
         "video": MessageLookupByLibrary.simpleMessage("Video"),
         "vietnamese": MessageLookupByLibrary.simpleMessage("Vietnamesisch"),
+        "viewOnGoogleMaps":
+            MessageLookupByLibrary.simpleMessage("Auf Google Maps ansehen"),
         "viewRecentTransactions": MessageLookupByLibrary.simpleMessage(
             "Letzte Transaktionen anzeigen"),
         "visible": MessageLookupByLibrary.simpleMessage("Sichtbar"),
diff --git a/lib/generated/intl/messages_el.dart b/lib/generated/intl/messages_el.dart
index 1bbf7cd..ea37b35 100644
--- a/lib/generated/intl/messages_el.dart
+++ b/lib/generated/intl/messages_el.dart
@@ -91,23 +91,14 @@ class MessageLookup extends MessageLookupByLibrary {
 
   final messages = _notInlinedMessages(_notInlinedMessages);
   static Map<String, Function> _notInlinedMessages(_) => <String, Function>{
-        "DateDESC": MessageLookupByLibrary.simpleMessage("Ημερομηνία φθίνουσα"),
-        "Dutch": MessageLookupByLibrary.simpleMessage("Ολλανδός"),
-        "Egypt": MessageLookupByLibrary.simpleMessage("Αίγυπτος"),
-        "India": MessageLookupByLibrary.simpleMessage("Χίντι"),
-        "Korean": MessageLookupByLibrary.simpleMessage("κορεάτης"),
-        "Netherlands": MessageLookupByLibrary.simpleMessage("Ολλανδός"),
-        "Polish": MessageLookupByLibrary.simpleMessage("Στίλβωση"),
-        "PrivacyAndTerm":
-            MessageLookupByLibrary.simpleMessage("Απόρρητο και όρος"),
-        "Qty": MessageLookupByLibrary.simpleMessage("Ποσότητα"),
-        "Tamil": MessageLookupByLibrary.simpleMessage("Ταμίλ"),
         "UserNameInCorrect": MessageLookupByLibrary.simpleMessage(
             "Το όνομα χρήστη ή ο κωδικός πρόσβασης δεν είναι σωστά"),
         "aboutUs": MessageLookupByLibrary.simpleMessage("Σχετικά με εμάς"),
         "account": MessageLookupByLibrary.simpleMessage("λογαριασμός"),
         "accountDeleteDescription": MessageLookupByLibrary.simpleMessage(
             "Η διαγραφή του λογαριασμού σας αφαιρεί προσωπικές πληροφορίες από τη βάση δεδομένων μας. Το email σας γίνεται μόνιμα δεσμευμένο και το ίδιο email δεν μπορεί να χρησιμοποιηθεί ξανά για την εγγραφή νέου λογαριασμού."),
+        "accountIsPendingApproval": MessageLookupByLibrary.simpleMessage(
+            "Ο λογαριασμός εκκρεμεί έγκριση."),
         "accountSetup":
             MessageLookupByLibrary.simpleMessage("Ρύθμιση λογαριασμού"),
         "active": MessageLookupByLibrary.simpleMessage("Ενεργός"),
@@ -183,6 +174,8 @@ class MessageLookup extends MessageLookupByLibrary {
             "Εντοπίστηκαν στοιχεία ήχου. Θέλετε να προσθέσετε στο Audio Player;"),
         "availability": MessageLookupByLibrary.simpleMessage("Διαθεσιμότητα"),
         "availablePoints": m1,
+        "averageRating":
+            MessageLookupByLibrary.simpleMessage("Μέση Βαθμολογία"),
         "back": MessageLookupByLibrary.simpleMessage("Πίσω"),
         "backOrder": MessageLookupByLibrary.simpleMessage("Σε παραγγελία"),
         "backToShop":
@@ -238,10 +231,24 @@ class MessageLookup extends MessageLookupByLibrary {
         "call": MessageLookupByLibrary.simpleMessage("Κλήση"),
         "callTo": MessageLookupByLibrary.simpleMessage(
             "Πραγματοποιήστε μια κλήση προς"),
+        "canNotCreateOrder": MessageLookupByLibrary.simpleMessage(
+            "Δεν είναι δυνατή η δημιουργία παραγγελίας"),
+        "canNotCreateUser": MessageLookupByLibrary.simpleMessage(
+            "Δεν είναι δυνατή η δημιουργία του χρήστη."),
+        "canNotGetPayments": MessageLookupByLibrary.simpleMessage(
+            "Δεν είναι δυνατή η λήψη τρόπων πληρωμής"),
+        "canNotGetShipping": MessageLookupByLibrary.simpleMessage(
+            "Δεν είναι δυνατή η λήψη μεθόδων αποστολής"),
+        "canNotGetToken": MessageLookupByLibrary.simpleMessage(
+            "Δεν είναι δυνατή η λήψη πληροφοριών διακριτικού."),
         "canNotLaunch": MessageLookupByLibrary.simpleMessage(
             "Δεν είναι δυνατή η εκκίνηση αυτής της εφαρμογής, βεβαιωθείτε ότι οι ρυθμίσεις σας στο config.dart είναι σωστές"),
         "canNotLoadThisLink": MessageLookupByLibrary.simpleMessage(
             "Δεν είναι δυνατή η φόρτωση αυτού του συνδέσμου"),
+        "canNotSaveOrder": MessageLookupByLibrary.simpleMessage(
+            "Δεν είναι δυνατή η αποθήκευση της παραγγελίας στον ιστότοπο"),
+        "canNotUpdateInfo": MessageLookupByLibrary.simpleMessage(
+            "Δεν είναι δυνατή η ενημέρωση των στοιχείων χρήστη."),
         "cancel": MessageLookupByLibrary.simpleMessage("Ματαίωση"),
         "cantFindThisOrderId": MessageLookupByLibrary.simpleMessage(
             "Δεν είναι δυνατή η εύρεση αυτού του αναγνωριστικού παραγγελίας"),
@@ -363,6 +370,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "dateASC": MessageLookupByLibrary.simpleMessage("Ημερομηνία αύξουσα"),
         "dateBooking":
             MessageLookupByLibrary.simpleMessage("Ημερομηνία κράτησης"),
+        "dateDESC": MessageLookupByLibrary.simpleMessage("Ημερομηνία φθίνουσα"),
         "dateEnd": MessageLookupByLibrary.simpleMessage("Ημερομηνία λήξης"),
         "dateLatest":
             MessageLookupByLibrary.simpleMessage("Ημερομηνία: Τελευταία"),
@@ -424,6 +432,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "editProductInfo": MessageLookupByLibrary.simpleMessage(
             "Επεξεργασία πληροφοριών προϊόντος"),
         "editWithoutColon": MessageLookupByLibrary.simpleMessage("Επεξεργασία"),
+        "egypt": MessageLookupByLibrary.simpleMessage("Αίγυπτος"),
         "email": MessageLookupByLibrary.simpleMessage("ΗΛΕΚΤΡΟΝΙΚΗ ΔΙΕΥΘΥΝΣΗ"),
         "emailDeleteDescription": MessageLookupByLibrary.simpleMessage(
             "Η διαγραφή του λογαριασμού σας θα καταργήσει την εγγραφή σας από όλες τις λίστες αλληλογραφίας."),
@@ -439,6 +448,8 @@ class MessageLookup extends MessageLookupByLibrary {
             "Το σχόλιό σας δεν μπορεί να είναι κενό"),
         "emptySearch": MessageLookupByLibrary.simpleMessage(
             "Δεν έχετε αναζητήσει ακόμη αντικείμενα. Ας ξεκινήσουμε τώρα - θα σας βοηθήσουμε."),
+        "emptyShippingMsg": MessageLookupByLibrary.simpleMessage(
+            "Δεν υπάρχουν διαθέσιμες επιλογές αποστολής. Βεβαιωθείτε ότι η διεύθυνσή σας έχει εισαχθεί σωστά ή επικοινωνήστε μαζί μας εάν χρειάζεστε βοήθεια."),
         "emptyUsername": MessageLookupByLibrary.simpleMessage(
             "Το όνομα χρήστη / το ηλεκτρονικό ταχυδρομείο είναι κενό"),
         "emptyWishlistSubtitle": MessageLookupByLibrary.simpleMessage(
@@ -578,6 +589,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "inStock": MessageLookupByLibrary.simpleMessage("Σε απόθεμα"),
         "incorrectPassword":
             MessageLookupByLibrary.simpleMessage("Λάθος κωδικός"),
+        "india": MessageLookupByLibrary.simpleMessage("Χίντι"),
         "indonesian": MessageLookupByLibrary.simpleMessage("Ινδονησιακά"),
         "instantlyClose":
             MessageLookupByLibrary.simpleMessage("Κλείσιμο αμέσως"),
@@ -691,6 +703,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "nearbyPlaces": MessageLookupByLibrary.simpleMessage("Κοντινά μέρη"),
         "needToLoginAgain": MessageLookupByLibrary.simpleMessage(
             "Πρέπει να συνδεθείτε ξανά για να πραγματοποιήσετε την ενημέρωση"),
+        "netherlands": MessageLookupByLibrary.simpleMessage("Ολλανδός"),
         "newPassword":
             MessageLookupByLibrary.simpleMessage("Νέος κωδικός πρόσβασης"),
         "newVariation": MessageLookupByLibrary.simpleMessage("Νέα παραλλαγή"),
@@ -901,7 +914,9 @@ class MessageLookup extends MessageLookupByLibrary {
             "Το σημείο έκπτωσης εφαρμόστηκε με επιτυχία"),
         "pointRewardMessage": MessageLookupByLibrary.simpleMessage(
             "Υπάρχει ο κανόνας έκπτωσης για την εφαρμογή των πόντων σας στο καλάθι"),
+        "polish": MessageLookupByLibrary.simpleMessage("Στίλβωση"),
         "popular": MessageLookupByLibrary.simpleMessage("Δημοφιλής"),
+        "popularity": MessageLookupByLibrary.simpleMessage("δημοτικότητα"),
         "posAddressToolTip": MessageLookupByLibrary.simpleMessage(
             "Αυτή η διεύθυνση θα αποθηκευτεί στην τοπική συσκευή σας. ΔΕΝ είναι η διεύθυνση χρήστη."),
         "postContent": MessageLookupByLibrary.simpleMessage("ΠΕΡΙΕΧΟΜΕΝΟ"),
@@ -931,6 +946,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "printerSelection":
             MessageLookupByLibrary.simpleMessage("Επιλογή εκτυπωτή"),
         "printing": MessageLookupByLibrary.simpleMessage("Εκτύπωση..."),
+        "privacyAndTerm":
+            MessageLookupByLibrary.simpleMessage("Απόρρητο και όρος"),
         "privacyPolicy":
             MessageLookupByLibrary.simpleMessage("Πολιτική Απορρήτου"),
         "privacyTerms":
@@ -953,6 +970,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "publish": MessageLookupByLibrary.simpleMessage("Δημοσιεύω"),
         "pullToLoadMore": MessageLookupByLibrary.simpleMessage(
             "Τραβήξτε για να φορτώσετε περισσότερα"),
+        "qty": MessageLookupByLibrary.simpleMessage("Ποσότητα"),
         "qtyTotal": m19,
         "rate": MessageLookupByLibrary.simpleMessage("Τιμή"),
         "rateTheApp":
@@ -1178,6 +1196,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "support": MessageLookupByLibrary.simpleMessage("Υποστήριξη"),
         "swahili": MessageLookupByLibrary.simpleMessage("Σουαχίλι"),
         "swedish": MessageLookupByLibrary.simpleMessage("Σουηδικά"),
+        "tagNotExist":
+            MessageLookupByLibrary.simpleMessage("Αυτή η ετικέτα δεν υπάρχει"),
         "tags": MessageLookupByLibrary.simpleMessage("Ετικέτες"),
         "takePicture":
             MessageLookupByLibrary.simpleMessage("Τραβήξετε τη φωτογραφία"),
@@ -1199,6 +1219,10 @@ class MessageLookup extends MessageLookupByLibrary {
         "tickets": MessageLookupByLibrary.simpleMessage("Εισιτήρια"),
         "time": MessageLookupByLibrary.simpleMessage("χρόνος"),
         "title": MessageLookupByLibrary.simpleMessage("Τίτλος"),
+        "titleAToZ": MessageLookupByLibrary.simpleMessage("Τίτλος: Α έως Ω"),
+        "titleZToA": MessageLookupByLibrary.simpleMessage("Τίτλος: Ω έως Α"),
+        "tooManyFaildedLogin": MessageLookupByLibrary.simpleMessage(
+            "Πάρα πολλές αποτυχημένες προσπάθειες σύνδεσης. Παρακαλώ προσπαθήστε ξανά αργότερα."),
         "topUp": MessageLookupByLibrary.simpleMessage("Ξεχειλίζω"),
         "topUpProductNotFound": MessageLookupByLibrary.simpleMessage(
             "Το προϊόν συμπλήρωσης δεν βρέθηκε"),
@@ -1260,6 +1284,8 @@ class MessageLookup extends MessageLookupByLibrary {
             "Χρησιμοποιήστε αυτήν την εικόνα"),
         "userExists": MessageLookupByLibrary.simpleMessage(
             "Αυτό το όνομα χρήστη/email δεν είναι διαθέσιμο."),
+        "userNameInCorrect": MessageLookupByLibrary.simpleMessage(
+            "Το όνομα χρήστη ή ο κωδικός πρόσβασης είναι λανθασμένο."),
         "username": MessageLookupByLibrary.simpleMessage("όνομα χρήστη"),
         "usernameAndPasswordRequired": MessageLookupByLibrary.simpleMessage(
             "Απαιτούνται όνομα χρήστη και κωδικός πρόσβασης"),
@@ -1279,6 +1305,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "viaWallet": MessageLookupByLibrary.simpleMessage("Μέσω πορτοφολιού"),
         "video": MessageLookupByLibrary.simpleMessage("βίντεο"),
         "vietnamese": MessageLookupByLibrary.simpleMessage("Βιετναμέζοι"),
+        "viewOnGoogleMaps":
+            MessageLookupByLibrary.simpleMessage("Προβολή στους Χάρτες Google"),
         "viewRecentTransactions": MessageLookupByLibrary.simpleMessage(
             "Δείτε τις πρόσφατες συναλλαγές"),
         "visible": MessageLookupByLibrary.simpleMessage("Ορατός"),
diff --git a/lib/generated/intl/messages_en.dart b/lib/generated/intl/messages_en.dart
index 1153811..e9f65e2 100644
--- a/lib/generated/intl/messages_en.dart
+++ b/lib/generated/intl/messages_en.dart
@@ -91,23 +91,14 @@ class MessageLookup extends MessageLookupByLibrary {
 
   final messages = _notInlinedMessages(_notInlinedMessages);
   static Map<String, Function> _notInlinedMessages(_) => <String, Function>{
-        "DateDESC": MessageLookupByLibrary.simpleMessage("Date descending"),
-        "Dutch": MessageLookupByLibrary.simpleMessage("Dutch"),
-        "Egypt": MessageLookupByLibrary.simpleMessage("Egypt"),
-        "India": MessageLookupByLibrary.simpleMessage("Hindi"),
-        "Korean": MessageLookupByLibrary.simpleMessage("Korean"),
-        "Netherlands": MessageLookupByLibrary.simpleMessage("Dutch"),
-        "Polish": MessageLookupByLibrary.simpleMessage("Polish"),
-        "PrivacyAndTerm":
-            MessageLookupByLibrary.simpleMessage("Privacy and Term"),
-        "Qty": MessageLookupByLibrary.simpleMessage("Qty"),
-        "Tamil": MessageLookupByLibrary.simpleMessage("Tamil"),
         "UserNameInCorrect": MessageLookupByLibrary.simpleMessage(
             "The username or password is incorrect"),
         "aboutUs": MessageLookupByLibrary.simpleMessage("About Us"),
         "account": MessageLookupByLibrary.simpleMessage("Account"),
         "accountDeleteDescription": MessageLookupByLibrary.simpleMessage(
             "Deleting your account removes personal information from our database."),
+        "accountIsPendingApproval": MessageLookupByLibrary.simpleMessage(
+            "The account is pending approval."),
         "accountSetup": MessageLookupByLibrary.simpleMessage("Account setup"),
         "active": MessageLookupByLibrary.simpleMessage("Active"),
         "addAName": MessageLookupByLibrary.simpleMessage("Add a name"),
@@ -171,6 +162,7 @@ class MessageLookup extends MessageLookupByLibrary {
             "Audio item(s) detected. Do you want to add to Audio Player?"),
         "availability": MessageLookupByLibrary.simpleMessage("Availability"),
         "availablePoints": m1,
+        "averageRating": MessageLookupByLibrary.simpleMessage("Average Rating"),
         "back": MessageLookupByLibrary.simpleMessage("Back"),
         "backOrder": MessageLookupByLibrary.simpleMessage("On backorder"),
         "backToShop": MessageLookupByLibrary.simpleMessage("Back to Shop"),
@@ -220,10 +212,24 @@ class MessageLookup extends MessageLookupByLibrary {
         "byTag": MessageLookupByLibrary.simpleMessage("By Tag"),
         "call": MessageLookupByLibrary.simpleMessage("Call"),
         "callTo": MessageLookupByLibrary.simpleMessage("Make a Call To"),
+        "canNotCreateOrder":
+            MessageLookupByLibrary.simpleMessage("Can not create order"),
+        "canNotCreateUser":
+            MessageLookupByLibrary.simpleMessage("Can not create the user."),
+        "canNotGetPayments":
+            MessageLookupByLibrary.simpleMessage("Can not get payment methods"),
+        "canNotGetShipping": MessageLookupByLibrary.simpleMessage(
+            "Can not get shipping methods"),
+        "canNotGetToken":
+            MessageLookupByLibrary.simpleMessage("Can not get token Info."),
         "canNotLaunch": MessageLookupByLibrary.simpleMessage(
             "Cannot launch this app, make sure your settings on config.dart is correct"),
         "canNotLoadThisLink":
             MessageLookupByLibrary.simpleMessage("Can not load this link"),
+        "canNotSaveOrder": MessageLookupByLibrary.simpleMessage(
+            "Can\'t save the order to website"),
+        "canNotUpdateInfo":
+            MessageLookupByLibrary.simpleMessage("Can not update user info."),
         "cancel": MessageLookupByLibrary.simpleMessage("Cancel"),
         "cantFindThisOrderId":
             MessageLookupByLibrary.simpleMessage("Can\'t find this order ID"),
@@ -338,6 +344,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "date": MessageLookupByLibrary.simpleMessage("Date"),
         "dateASC": MessageLookupByLibrary.simpleMessage("Date ascending"),
         "dateBooking": MessageLookupByLibrary.simpleMessage("Date Booking"),
+        "dateDESC": MessageLookupByLibrary.simpleMessage("Date descending"),
         "dateEnd": MessageLookupByLibrary.simpleMessage("Date End"),
         "dateLatest": MessageLookupByLibrary.simpleMessage("Date: Latest"),
         "dateOldest": MessageLookupByLibrary.simpleMessage("Date: Oldest"),
@@ -388,12 +395,13 @@ class MessageLookup extends MessageLookupByLibrary {
         "driverAssigned":
             MessageLookupByLibrary.simpleMessage("Driver Assigned"),
         "duration": MessageLookupByLibrary.simpleMessage("Duration"),
-        "dutch": MessageLookupByLibrary.simpleMessage("Dutch"),
+        "dutch": MessageLookupByLibrary.simpleMessage("dutch"),
         "earnings": MessageLookupByLibrary.simpleMessage("Earnings"),
         "edit": MessageLookupByLibrary.simpleMessage("Edit: "),
         "editProductInfo":
             MessageLookupByLibrary.simpleMessage("Edit Product Info"),
         "editWithoutColon": MessageLookupByLibrary.simpleMessage("Edit"),
+        "egypt": MessageLookupByLibrary.simpleMessage("Egypt"),
         "email": MessageLookupByLibrary.simpleMessage("Email"),
         "emailDeleteDescription": MessageLookupByLibrary.simpleMessage(
             "Deleting your account will unsubscribe you from all mailing lists."),
@@ -409,6 +417,8 @@ class MessageLookup extends MessageLookupByLibrary {
             "Your comment can not be empty"),
         "emptySearch": MessageLookupByLibrary.simpleMessage(
             "You haven\'t searched for items yet. Let\'s start now - we\'ll help you."),
+        "emptyShippingMsg": MessageLookupByLibrary.simpleMessage(
+            "There are no shipping options available. Please ensure that your address has been entered correctly, or contact us if you need any help."),
         "emptyUsername":
             MessageLookupByLibrary.simpleMessage("Username/Email is empty"),
         "emptyWishlistSubtitle": MessageLookupByLibrary.simpleMessage(
@@ -541,6 +551,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "inStock": MessageLookupByLibrary.simpleMessage("In stock"),
         "incorrectPassword":
             MessageLookupByLibrary.simpleMessage("Incorrect password"),
+        "india": MessageLookupByLibrary.simpleMessage("Hindi"),
         "indonesian": MessageLookupByLibrary.simpleMessage("Indonesian"),
         "instantlyClose":
             MessageLookupByLibrary.simpleMessage("Instantly close"),
@@ -564,7 +575,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "kannada": MessageLookupByLibrary.simpleMessage("Kannada"),
         "keep": MessageLookupByLibrary.simpleMessage("Keep"),
         "khmer": MessageLookupByLibrary.simpleMessage("Khmer"),
-        "korean": MessageLookupByLibrary.simpleMessage("Korean"),
+        "korean": MessageLookupByLibrary.simpleMessage("korean"),
         "kurdish": MessageLookupByLibrary.simpleMessage("Kurdish"),
         "language": MessageLookupByLibrary.simpleMessage("Languages"),
         "languageSuccess": MessageLookupByLibrary.simpleMessage(
@@ -645,6 +656,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "nearbyPlaces": MessageLookupByLibrary.simpleMessage("Nearby Places"),
         "needToLoginAgain": MessageLookupByLibrary.simpleMessage(
             "You need to login again to effect update"),
+        "netherlands": MessageLookupByLibrary.simpleMessage("dutch"),
         "newPassword": MessageLookupByLibrary.simpleMessage("New Password"),
         "newVariation": MessageLookupByLibrary.simpleMessage("New variation"),
         "next": MessageLookupByLibrary.simpleMessage("Next"),
@@ -831,7 +843,9 @@ class MessageLookup extends MessageLookupByLibrary {
             "Discount point is applied successfully"),
         "pointRewardMessage": MessageLookupByLibrary.simpleMessage(
             "There is the Discount Rule for applying your points to Cart"),
+        "polish": MessageLookupByLibrary.simpleMessage("Polish"),
         "popular": MessageLookupByLibrary.simpleMessage("Popular"),
+        "popularity": MessageLookupByLibrary.simpleMessage("Popularity"),
         "posAddressToolTip": MessageLookupByLibrary.simpleMessage(
             "This address will be saved to your local device. It is NOT the user address."),
         "postContent": MessageLookupByLibrary.simpleMessage("Content"),
@@ -859,6 +873,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "printerSelection":
             MessageLookupByLibrary.simpleMessage("Printer Selection"),
         "printing": MessageLookupByLibrary.simpleMessage("Printing..."),
+        "privacyAndTerm":
+            MessageLookupByLibrary.simpleMessage("Privacy and Term"),
         "privacyPolicy": MessageLookupByLibrary.simpleMessage("Privacy Policy"),
         "privacyTerms": MessageLookupByLibrary.simpleMessage("Privacy & Terms"),
         "private": MessageLookupByLibrary.simpleMessage("Private"),
@@ -878,6 +894,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "publish": MessageLookupByLibrary.simpleMessage("Publish"),
         "pullToLoadMore":
             MessageLookupByLibrary.simpleMessage("Pull to Load more"),
+        "qty": MessageLookupByLibrary.simpleMessage("qty"),
         "qtyTotal": m19,
         "rate": MessageLookupByLibrary.simpleMessage("Rate"),
         "rateTheApp": MessageLookupByLibrary.simpleMessage("Rate the app"),
@@ -1025,6 +1042,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "skip": MessageLookupByLibrary.simpleMessage("Skip"),
         "sku": MessageLookupByLibrary.simpleMessage("SKU"),
         "slovak": MessageLookupByLibrary.simpleMessage("Slovak"),
+        "smsCodeExpired": MessageLookupByLibrary.simpleMessage(
+            "The SMS code has expired. Please re-send the verification code to try again."),
         "sold": m23,
         "soldBy": MessageLookupByLibrary.simpleMessage("Sold by"),
         "somethingWrong": MessageLookupByLibrary.simpleMessage(
@@ -1080,6 +1099,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "support": MessageLookupByLibrary.simpleMessage("Support"),
         "swahili": MessageLookupByLibrary.simpleMessage("Swahili"),
         "swedish": MessageLookupByLibrary.simpleMessage("Swedish"),
+        "tagNotExist":
+            MessageLookupByLibrary.simpleMessage("This tag does not exist"),
         "tags": MessageLookupByLibrary.simpleMessage("Tags"),
         "takePicture": MessageLookupByLibrary.simpleMessage("Take Picture"),
         "tamil": MessageLookupByLibrary.simpleMessage("Tamil"),
@@ -1100,6 +1121,10 @@ class MessageLookup extends MessageLookupByLibrary {
         "tickets": MessageLookupByLibrary.simpleMessage("Tickets"),
         "time": MessageLookupByLibrary.simpleMessage("Time"),
         "title": MessageLookupByLibrary.simpleMessage("Title"),
+        "titleAToZ": MessageLookupByLibrary.simpleMessage("Title: A to Z"),
+        "titleZToA": MessageLookupByLibrary.simpleMessage("Title: Z to A"),
+        "tooManyFaildedLogin": MessageLookupByLibrary.simpleMessage(
+            "Too many failed login attempts. Please try again later."),
         "topUp": MessageLookupByLibrary.simpleMessage("Top Up"),
         "topUpProductNotFound":
             MessageLookupByLibrary.simpleMessage("Top Up product not found"),
@@ -1154,6 +1179,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "useThisImage": MessageLookupByLibrary.simpleMessage("Use this Image"),
         "userExists": MessageLookupByLibrary.simpleMessage(
             "This username/email is not available."),
+        "userNameInCorrect": MessageLookupByLibrary.simpleMessage(
+            "The username or password is incorrect."),
         "username": MessageLookupByLibrary.simpleMessage("Username"),
         "usernameAndPasswordRequired": MessageLookupByLibrary.simpleMessage(
             "Username and password are required"),
@@ -1171,6 +1198,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "viaWallet": MessageLookupByLibrary.simpleMessage("Via wallet"),
         "video": MessageLookupByLibrary.simpleMessage("Video"),
         "vietnamese": MessageLookupByLibrary.simpleMessage("Vietnamese"),
+        "viewOnGoogleMaps":
+            MessageLookupByLibrary.simpleMessage("View on Google Maps"),
         "viewRecentTransactions":
             MessageLookupByLibrary.simpleMessage("View recent transactions"),
         "visible": MessageLookupByLibrary.simpleMessage("Visible"),
@@ -1216,6 +1245,8 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("You have \$point points"),
         "youMightAlsoLike":
             MessageLookupByLibrary.simpleMessage("You might also like"),
+        "youNeedToLoginCheckout": MessageLookupByLibrary.simpleMessage(
+            "You need to login to checkout"),
         "youNotBeAsked": MessageLookupByLibrary.simpleMessage(
             "You won\'t be asked next time after the completion"),
         "yourAddressExistYourLocal": MessageLookupByLibrary.simpleMessage(
diff --git a/lib/generated/intl/messages_es.dart b/lib/generated/intl/messages_es.dart
index c109f74..3dcda8d 100644
--- a/lib/generated/intl/messages_es.dart
+++ b/lib/generated/intl/messages_es.dart
@@ -91,23 +91,14 @@ class MessageLookup extends MessageLookupByLibrary {
 
   final messages = _notInlinedMessages(_notInlinedMessages);
   static Map<String, Function> _notInlinedMessages(_) => <String, Function>{
-        "DateDESC": MessageLookupByLibrary.simpleMessage("Fecha Descendente"),
-        "Dutch": MessageLookupByLibrary.simpleMessage("holandés"),
-        "Egypt": MessageLookupByLibrary.simpleMessage("EGIPTO"),
-        "India": MessageLookupByLibrary.simpleMessage("hindi"),
-        "Korean": MessageLookupByLibrary.simpleMessage("coreano"),
-        "Netherlands": MessageLookupByLibrary.simpleMessage("Países Bajos"),
-        "Polish": MessageLookupByLibrary.simpleMessage("Polaco"),
-        "PrivacyAndTerm": MessageLookupByLibrary.simpleMessage(
-            "Política de Privacidad y Términos"),
-        "Qty": MessageLookupByLibrary.simpleMessage("Cantidad"),
-        "Tamil": MessageLookupByLibrary.simpleMessage("Tamil"),
         "UserNameInCorrect": MessageLookupByLibrary.simpleMessage(
             "El nombre de usuario o contraseña son incorrectos"),
         "aboutUs": MessageLookupByLibrary.simpleMessage("Sobre nosotros"),
         "account": MessageLookupByLibrary.simpleMessage("Cuenta"),
         "accountDeleteDescription": MessageLookupByLibrary.simpleMessage(
             "Eliminar su cuenta elimina la información personal de nuestra base de datos. Su correo electrónico se reserva permanentemente y el mismo correo electrónico no se puede reutilizar para registrar una nueva cuenta."),
+        "accountIsPendingApproval": MessageLookupByLibrary.simpleMessage(
+            "La cuenta está pendiente de aprobación."),
         "accountSetup":
             MessageLookupByLibrary.simpleMessage("Configuracion de cuenta"),
         "active": MessageLookupByLibrary.simpleMessage("Activo"),
@@ -177,6 +168,8 @@ class MessageLookup extends MessageLookupByLibrary {
             "Elementos de audio detectados. ¿Quieres agregarlo al reproductor de audio?"),
         "availability": MessageLookupByLibrary.simpleMessage("Disponibilidad"),
         "availablePoints": m1,
+        "averageRating":
+            MessageLookupByLibrary.simpleMessage("Puntuación media"),
         "back": MessageLookupByLibrary.simpleMessage("atrás"),
         "backOrder": MessageLookupByLibrary.simpleMessage("Realizado pedido"),
         "backToShop":
@@ -228,10 +221,24 @@ class MessageLookup extends MessageLookupByLibrary {
         "byTag": MessageLookupByLibrary.simpleMessage("Por etiqueta"),
         "call": MessageLookupByLibrary.simpleMessage("Llamada"),
         "callTo": MessageLookupByLibrary.simpleMessage("Hacer una llamada a"),
+        "canNotCreateOrder":
+            MessageLookupByLibrary.simpleMessage("No se puede crear orden"),
+        "canNotCreateUser": MessageLookupByLibrary.simpleMessage(
+            "No se puede crear el usuario."),
+        "canNotGetPayments": MessageLookupByLibrary.simpleMessage(
+            "No puedo obtener métodos de pago"),
+        "canNotGetShipping": MessageLookupByLibrary.simpleMessage(
+            "No se pueden obtener los métodos de envío."),
+        "canNotGetToken": MessageLookupByLibrary.simpleMessage(
+            "No se puede obtener la información del token."),
         "canNotLaunch": MessageLookupByLibrary.simpleMessage(
             "No se puede iniciar esta aplicación, asegúrese de que su configuración en config.dart sea correcta"),
         "canNotLoadThisLink": MessageLookupByLibrary.simpleMessage(
             "No se puede cargar este enlace"),
+        "canNotSaveOrder": MessageLookupByLibrary.simpleMessage(
+            "No se puede guardar el pedido en el sitio web"),
+        "canNotUpdateInfo": MessageLookupByLibrary.simpleMessage(
+            "No se puede actualizar la información del usuario."),
         "cancel": MessageLookupByLibrary.simpleMessage("Cancelar"),
         "cantFindThisOrderId": MessageLookupByLibrary.simpleMessage(
             "No puedo encontrar este ID de pedido"),
@@ -352,6 +359,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "date": MessageLookupByLibrary.simpleMessage("Fecha"),
         "dateASC": MessageLookupByLibrary.simpleMessage("Fecha Ascendente"),
         "dateBooking": MessageLookupByLibrary.simpleMessage("fecha reserva"),
+        "dateDESC": MessageLookupByLibrary.simpleMessage("Fecha Descendente"),
         "dateEnd":
             MessageLookupByLibrary.simpleMessage("Fecha de finalización"),
         "dateLatest":
@@ -415,6 +423,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "editProductInfo": MessageLookupByLibrary.simpleMessage(
             "Editar información del producto"),
         "editWithoutColon": MessageLookupByLibrary.simpleMessage("Editar"),
+        "egypt": MessageLookupByLibrary.simpleMessage("EGIPTO"),
         "email": MessageLookupByLibrary.simpleMessage("Email"),
         "emailDeleteDescription": MessageLookupByLibrary.simpleMessage(
             "Eliminar su cuenta lo cancelará de todas las listas de correo."),
@@ -430,6 +439,8 @@ class MessageLookup extends MessageLookupByLibrary {
             "Tu comentario no puede estar vacío"),
         "emptySearch": MessageLookupByLibrary.simpleMessage(
             "Aún no has buscado artículos. Empecemos ahora, te ayudaremos."),
+        "emptyShippingMsg": MessageLookupByLibrary.simpleMessage(
+            "No hay opciones de envío disponibles. Asegúrese de haber ingresado su dirección correctamente o contáctenos si necesita ayuda."),
         "emptyUsername": MessageLookupByLibrary.simpleMessage(
             "Nombre de usuario / correo electrónico está vacío"),
         "emptyWishlistSubtitle": MessageLookupByLibrary.simpleMessage(
@@ -570,6 +581,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "inStock": MessageLookupByLibrary.simpleMessage("En stock"),
         "incorrectPassword":
             MessageLookupByLibrary.simpleMessage("Contraseña incorrecta"),
+        "india": MessageLookupByLibrary.simpleMessage("hindi"),
         "indonesian": MessageLookupByLibrary.simpleMessage("Indonesio"),
         "instantlyClose":
             MessageLookupByLibrary.simpleMessage("Cerrar instantáneamente"),
@@ -682,6 +694,7 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("Lugares cercanos"),
         "needToLoginAgain": MessageLookupByLibrary.simpleMessage(
             "Necesita iniciar sesión de nuevo para efectuar la actualización"),
+        "netherlands": MessageLookupByLibrary.simpleMessage("Países Bajos"),
         "newPassword": MessageLookupByLibrary.simpleMessage("Nueva contraseña"),
         "newVariation": MessageLookupByLibrary.simpleMessage("Nueva variación"),
         "next": MessageLookupByLibrary.simpleMessage("Próximo"),
@@ -878,7 +891,9 @@ class MessageLookup extends MessageLookupByLibrary {
             "El punto de descuento se aplica correctamente"),
         "pointRewardMessage": MessageLookupByLibrary.simpleMessage(
             "Existe la regla de descuento para aplicar sus puntos al carrito"),
+        "polish": MessageLookupByLibrary.simpleMessage("Polaco"),
         "popular": MessageLookupByLibrary.simpleMessage("Popular"),
+        "popularity": MessageLookupByLibrary.simpleMessage("Popularidad"),
         "posAddressToolTip": MessageLookupByLibrary.simpleMessage(
             "Esta dirección se guardará en su dispositivo local. NO es la dirección del usuario."),
         "postContent": MessageLookupByLibrary.simpleMessage("Contenido"),
@@ -908,6 +923,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "printerSelection":
             MessageLookupByLibrary.simpleMessage("Selección de impresora"),
         "printing": MessageLookupByLibrary.simpleMessage("Impresión..."),
+        "privacyAndTerm": MessageLookupByLibrary.simpleMessage(
+            "Política de Privacidad y Términos"),
         "privacyPolicy":
             MessageLookupByLibrary.simpleMessage("Política de privacidad"),
         "privacyTerms":
@@ -931,6 +948,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "publish": MessageLookupByLibrary.simpleMessage("Publicar"),
         "pullToLoadMore": MessageLookupByLibrary.simpleMessage(
             "Refresquela pantalla para cargar más"),
+        "qty": MessageLookupByLibrary.simpleMessage("Cantidad"),
         "qtyTotal": m19,
         "rate": MessageLookupByLibrary.simpleMessage("Calificar"),
         "rateTheApp":
@@ -1157,6 +1175,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "support": MessageLookupByLibrary.simpleMessage("Apoyo"),
         "swahili": MessageLookupByLibrary.simpleMessage("swahili"),
         "swedish": MessageLookupByLibrary.simpleMessage("sueco"),
+        "tagNotExist":
+            MessageLookupByLibrary.simpleMessage("Esta etiqueta no existe"),
         "tags": MessageLookupByLibrary.simpleMessage("Etiquetas"),
         "takePicture": MessageLookupByLibrary.simpleMessage("Tomar la foto"),
         "tamil": MessageLookupByLibrary.simpleMessage("Tamil"),
@@ -1177,6 +1197,12 @@ class MessageLookup extends MessageLookupByLibrary {
         "tickets": MessageLookupByLibrary.simpleMessage("entradas"),
         "time": MessageLookupByLibrary.simpleMessage("hora"),
         "title": MessageLookupByLibrary.simpleMessage("Título"),
+        "titleAToZ":
+            MessageLookupByLibrary.simpleMessage("Título: de la A a la Z"),
+        "titleZToA":
+            MessageLookupByLibrary.simpleMessage("Título: De la Z a la A"),
+        "tooManyFaildedLogin": MessageLookupByLibrary.simpleMessage(
+            "Demasiados intentos de inicio de sesión fallidos. Por favor, inténtelo de nuevo más tarde."),
         "topUp": MessageLookupByLibrary.simpleMessage("Completar"),
         "topUpProductNotFound": MessageLookupByLibrary.simpleMessage(
             "Producto de recarga no encontrado"),
@@ -1235,6 +1261,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "useThisImage": MessageLookupByLibrary.simpleMessage("Usa esta imagen"),
         "userExists": MessageLookupByLibrary.simpleMessage(
             "Este nombre de usuario / correo electrónico no está disponible."),
+        "userNameInCorrect": MessageLookupByLibrary.simpleMessage(
+            "El nombre de usuario o contraseña son incorrectos."),
         "username": MessageLookupByLibrary.simpleMessage("Nombre de usuario"),
         "usernameAndPasswordRequired": MessageLookupByLibrary.simpleMessage(
             "Se requiere nombre de usuario y contraseña"),
@@ -1255,6 +1283,8 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("A través de billetera"),
         "video": MessageLookupByLibrary.simpleMessage("Vídeo"),
         "vietnamese": MessageLookupByLibrary.simpleMessage("vietnamita"),
+        "viewOnGoogleMaps":
+            MessageLookupByLibrary.simpleMessage("VER EN GOOGLE MAPS"),
         "viewRecentTransactions":
             MessageLookupByLibrary.simpleMessage("Ver transacciones recientes"),
         "visible": MessageLookupByLibrary.simpleMessage("visible"),
diff --git a/lib/generated/intl/messages_fa.dart b/lib/generated/intl/messages_fa.dart
index 75d64f3..0c39b05 100644
--- a/lib/generated/intl/messages_fa.dart
+++ b/lib/generated/intl/messages_fa.dart
@@ -91,23 +91,14 @@ class MessageLookup extends MessageLookupByLibrary {
 
   final messages = _notInlinedMessages(_notInlinedMessages);
   static Map<String, Function> _notInlinedMessages(_) => <String, Function>{
-        "DateDESC": MessageLookupByLibrary.simpleMessage("تاریخ نزولی است"),
-        "Dutch": MessageLookupByLibrary.simpleMessage("هلندی"),
-        "Egypt": MessageLookupByLibrary.simpleMessage("مصر"),
-        "India": MessageLookupByLibrary.simpleMessage("هندی"),
-        "Korean": MessageLookupByLibrary.simpleMessage("کره ای"),
-        "Netherlands": MessageLookupByLibrary.simpleMessage("هلندی"),
-        "Polish": MessageLookupByLibrary.simpleMessage("لهستانی"),
-        "PrivacyAndTerm":
-            MessageLookupByLibrary.simpleMessage("توافقنامه حریم خصوصی"),
-        "Qty": MessageLookupByLibrary.simpleMessage("QTY"),
-        "Tamil": MessageLookupByLibrary.simpleMessage("تامیل"),
         "UserNameInCorrect": MessageLookupByLibrary.simpleMessage(
             "نام کاربری یا رمز عبور اشتباه است"),
         "aboutUs": MessageLookupByLibrary.simpleMessage("درباره ما"),
         "account": MessageLookupByLibrary.simpleMessage("حساب"),
         "accountDeleteDescription": MessageLookupByLibrary.simpleMessage(
             "حذف حساب شما اطلاعات شخصی را از پایگاه داده ما حذف می کند. ایمیل شما برای همیشه رزرو می شود و نمی توان از همان ایمیل برای ثبت حساب جدید مجددا استفاده کرد."),
+        "accountIsPendingApproval":
+            MessageLookupByLibrary.simpleMessage("حساب در انتظار تایید است."),
         "accountSetup": MessageLookupByLibrary.simpleMessage("تنظیمات حساب"),
         "active": MessageLookupByLibrary.simpleMessage("فعال"),
         "addAName": MessageLookupByLibrary.simpleMessage("یک نام اضافه کنید"),
@@ -173,6 +164,7 @@ class MessageLookup extends MessageLookupByLibrary {
             "مورد (های) صوتی شناسایی شد آیا می خواهید به پخش کننده صوتی اضافه کنید؟"),
         "availability": MessageLookupByLibrary.simpleMessage("موجود میباشد"),
         "availablePoints": m1,
+        "averageRating": MessageLookupByLibrary.simpleMessage("میانگین امتیاز"),
         "back": MessageLookupByLibrary.simpleMessage("بازگشت"),
         "backOrder": MessageLookupByLibrary.simpleMessage("تقاضا"),
         "backToShop":
@@ -219,10 +211,24 @@ class MessageLookup extends MessageLookupByLibrary {
         "byTag": MessageLookupByLibrary.simpleMessage("توسط تگ ها"),
         "call": MessageLookupByLibrary.simpleMessage("صدا زدن"),
         "callTo": MessageLookupByLibrary.simpleMessage("تماس بگیرید"),
+        "canNotCreateOrder":
+            MessageLookupByLibrary.simpleMessage("نمی توان نظم ایجاد کرد"),
+        "canNotCreateUser": MessageLookupByLibrary.simpleMessage(
+            "نمی توان کاربر را ایجاد کرد."),
+        "canNotGetPayments": MessageLookupByLibrary.simpleMessage(
+            "نمی توان روش های پرداخت را دریافت کرد"),
+        "canNotGetShipping": MessageLookupByLibrary.simpleMessage(
+            "نمی توان روش های حمل و نقل را دریافت کرد"),
+        "canNotGetToken": MessageLookupByLibrary.simpleMessage(
+            "نمی توان اطلاعات رمز را دریافت کرد."),
         "canNotLaunch": MessageLookupByLibrary.simpleMessage(
             "این برنامه قابل اجرا نیست ، مطمئن شوید که تنظیمات شما درست است "),
         "canNotLoadThisLink": MessageLookupByLibrary.simpleMessage(
             "نمی توان این لینک را بارگیری کرد"),
+        "canNotSaveOrder": MessageLookupByLibrary.simpleMessage(
+            "نمی توان سفارش را در وب سایت ذخیره کرد"),
+        "canNotUpdateInfo": MessageLookupByLibrary.simpleMessage(
+            "نمی توان اطلاعات کاربر را به روز کرد."),
         "cancel": MessageLookupByLibrary.simpleMessage("لغو"),
         "cantFindThisOrderId":
             MessageLookupByLibrary.simpleMessage("این شناسه سفارش پیدا نشد"),
@@ -341,6 +347,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "date": MessageLookupByLibrary.simpleMessage("تاريخ"),
         "dateASC": MessageLookupByLibrary.simpleMessage("تاریخ صعودی"),
         "dateBooking": MessageLookupByLibrary.simpleMessage("تاریخ ثبت"),
+        "dateDESC": MessageLookupByLibrary.simpleMessage("تاریخ نزولی است"),
         "dateEnd": MessageLookupByLibrary.simpleMessage("تاریخ پایان"),
         "dateLatest": MessageLookupByLibrary.simpleMessage("تاریخ: آخرین"),
         "dateOldest": MessageLookupByLibrary.simpleMessage("تاریخ: قدیمی ترین"),
@@ -397,6 +404,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "editProductInfo":
             MessageLookupByLibrary.simpleMessage("ویرایش اطلاعات محصول"),
         "editWithoutColon": MessageLookupByLibrary.simpleMessage("ویرایش کنید"),
+        "egypt": MessageLookupByLibrary.simpleMessage("مصر"),
         "email": MessageLookupByLibrary.simpleMessage("ایمیل"),
         "emailDeleteDescription": MessageLookupByLibrary.simpleMessage(
             "حذف حساب کاربری شما را از تمام لیست های پستی لغو می کند."),
@@ -412,6 +420,8 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("نظر شما نمی تواند خالی باشد"),
         "emptySearch": MessageLookupByLibrary.simpleMessage(
             "شما هنوز مواردی را جستجو نکرده اید. بیایید از همین حالا شروع کنیم - ما به شما کمک می کنیم."),
+        "emptyShippingMsg": MessageLookupByLibrary.simpleMessage(
+            "هیچ گزینه حمل و نقل در دسترس نیست. لطفا مطمئن شوید که آدرس شما به درستی وارد شده است یا در صورت نیاز به کمک با ما تماس بگیرید."),
         "emptyUsername":
             MessageLookupByLibrary.simpleMessage("نام کاربری / ایمیل خالی است"),
         "emptyWishlistSubtitle":
@@ -542,6 +552,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "inStock": MessageLookupByLibrary.simpleMessage("موجود میباشد"),
         "incorrectPassword":
             MessageLookupByLibrary.simpleMessage("رمز عبور اشتباه است"),
+        "india": MessageLookupByLibrary.simpleMessage("هندی"),
         "indonesian": MessageLookupByLibrary.simpleMessage("اندونیسیایی"),
         "instantlyClose":
             MessageLookupByLibrary.simpleMessage("بلافاصله بسته می شود"),
@@ -646,6 +657,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "nearbyPlaces": MessageLookupByLibrary.simpleMessage("مکان های نزدیگ"),
         "needToLoginAgain": MessageLookupByLibrary.simpleMessage(
             "برای تأثیر به روز رسانی باید دوباره وارد شوید"),
+        "netherlands": MessageLookupByLibrary.simpleMessage("هلندی"),
         "newPassword": MessageLookupByLibrary.simpleMessage("رمز عبور جدید"),
         "newVariation": MessageLookupByLibrary.simpleMessage("تنوع جدید"),
         "next": MessageLookupByLibrary.simpleMessage("بعدی"),
@@ -835,7 +847,9 @@ class MessageLookup extends MessageLookupByLibrary {
             "نقطه تخفیف با موفقیت اعمال می شود"),
         "pointRewardMessage":
             MessageLookupByLibrary.simpleMessage("انتخاب بر اساس تخفیف ها"),
+        "polish": MessageLookupByLibrary.simpleMessage("لهستانی"),
         "popular": MessageLookupByLibrary.simpleMessage("محبوب"),
+        "popularity": MessageLookupByLibrary.simpleMessage("محبوبیت"),
         "posAddressToolTip": MessageLookupByLibrary.simpleMessage(
             "این آدرس در دستگاه محلی شما ذخیره خواهد شد. آدرس کاربر نیست."),
         "postContent": MessageLookupByLibrary.simpleMessage("محتوا"),
@@ -860,6 +874,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "printerSelection":
             MessageLookupByLibrary.simpleMessage("انتخاب چاپگر"),
         "printing": MessageLookupByLibrary.simpleMessage("چاپ ..."),
+        "privacyAndTerm":
+            MessageLookupByLibrary.simpleMessage("توافقنامه حریم خصوصی"),
         "privacyPolicy":
             MessageLookupByLibrary.simpleMessage("سیاست حفظ حریم خصوصی"),
         "privacyTerms": MessageLookupByLibrary.simpleMessage("بعدا"),
@@ -881,6 +897,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "publish": MessageLookupByLibrary.simpleMessage("انتشار"),
         "pullToLoadMore":
             MessageLookupByLibrary.simpleMessage("بازیافت دوباره"),
+        "qty": MessageLookupByLibrary.simpleMessage("QTY"),
         "qtyTotal": m19,
         "rate": MessageLookupByLibrary.simpleMessage("ارزیابی"),
         "rateTheApp": MessageLookupByLibrary.simpleMessage("ریت برای آپلیکشین"),
@@ -1087,6 +1104,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "support": MessageLookupByLibrary.simpleMessage("پشتیبانی"),
         "swahili": MessageLookupByLibrary.simpleMessage("سواحیلی"),
         "swedish": MessageLookupByLibrary.simpleMessage("سوئدی"),
+        "tagNotExist":
+            MessageLookupByLibrary.simpleMessage("این برچسب وجود ندارد"),
         "tags": MessageLookupByLibrary.simpleMessage("نشانه ها"),
         "takePicture": MessageLookupByLibrary.simpleMessage("عکس بگیرید"),
         "tamil": MessageLookupByLibrary.simpleMessage("تامیل"),
@@ -1107,6 +1126,10 @@ class MessageLookup extends MessageLookupByLibrary {
         "tickets": MessageLookupByLibrary.simpleMessage("بلیط"),
         "time": MessageLookupByLibrary.simpleMessage("زمان"),
         "title": MessageLookupByLibrary.simpleMessage("عنوان"),
+        "titleAToZ": MessageLookupByLibrary.simpleMessage("عنوان: A تا Z"),
+        "titleZToA": MessageLookupByLibrary.simpleMessage("عنوان: Z تا A"),
+        "tooManyFaildedLogin": MessageLookupByLibrary.simpleMessage(
+            "تعداد زیادی تلاش برای ورود ناموفق. لطفاً بعداً دوباره امتحان کنید."),
         "topUp": MessageLookupByLibrary.simpleMessage("پر کردن"),
         "topUpProductNotFound":
             MessageLookupByLibrary.simpleMessage("محصول پر کردن یافت نشد"),
@@ -1164,6 +1187,8 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("از این تصویر استفاده کنید"),
         "userExists": MessageLookupByLibrary.simpleMessage(
             "این نام کاربری/ایمیل در دسترس نیست."),
+        "userNameInCorrect": MessageLookupByLibrary.simpleMessage(
+            "نام کاربری یا رمز عبور اشتباه است."),
         "username": MessageLookupByLibrary.simpleMessage("نام کاربری"),
         "usernameAndPasswordRequired": MessageLookupByLibrary.simpleMessage(
             "نام کاربری و رمز عبور لازم است"),
@@ -1181,6 +1206,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "viaWallet": MessageLookupByLibrary.simpleMessage("از طریق کیف پول"),
         "video": MessageLookupByLibrary.simpleMessage("ویدو"),
         "vietnamese": MessageLookupByLibrary.simpleMessage("ویتنامی"),
+        "viewOnGoogleMaps":
+            MessageLookupByLibrary.simpleMessage("مشاهده در نقشه های گوگل"),
         "viewRecentTransactions":
             MessageLookupByLibrary.simpleMessage("مشاهده معاملات اخیر"),
         "visible": MessageLookupByLibrary.simpleMessage("قابل رویت"),
diff --git a/lib/generated/intl/messages_fi.dart b/lib/generated/intl/messages_fi.dart
index 3310384..cff25a5 100644
--- a/lib/generated/intl/messages_fi.dart
+++ b/lib/generated/intl/messages_fi.dart
@@ -91,23 +91,14 @@ class MessageLookup extends MessageLookupByLibrary {
 
   final messages = _notInlinedMessages(_notInlinedMessages);
   static Map<String, Function> _notInlinedMessages(_) => <String, Function>{
-        "DateDESC": MessageLookupByLibrary.simpleMessage("Päivämäärä laskeva"),
-        "Dutch": MessageLookupByLibrary.simpleMessage("Hollannin kieli"),
-        "Egypt": MessageLookupByLibrary.simpleMessage("Egypti"),
-        "India": MessageLookupByLibrary.simpleMessage("hindi"),
-        "Korean": MessageLookupByLibrary.simpleMessage("Korealainen"),
-        "Netherlands": MessageLookupByLibrary.simpleMessage("Hollannin kieli"),
-        "Polish": MessageLookupByLibrary.simpleMessage("Kiillottaa"),
-        "PrivacyAndTerm":
-            MessageLookupByLibrary.simpleMessage("Yksityisyys ja termi"),
-        "Qty": MessageLookupByLibrary.simpleMessage("Määrä"),
-        "Tamil": MessageLookupByLibrary.simpleMessage("tamil"),
         "UserNameInCorrect": MessageLookupByLibrary.simpleMessage(
             "Käyttäjänimi tai salasana on väärä"),
         "aboutUs": MessageLookupByLibrary.simpleMessage("meistä"),
         "account": MessageLookupByLibrary.simpleMessage("Tili"),
         "accountDeleteDescription": MessageLookupByLibrary.simpleMessage(
             "Tilin poistaminen poistaa henkilökohtaiset tiedot tietokannastamme. Sähköpostiosoitteesi varataan pysyvästi, eikä samaa sähköpostiosoitetta voi käyttää uudelleen uuden tilin rekisteröintiin."),
+        "accountIsPendingApproval":
+            MessageLookupByLibrary.simpleMessage("Tili odottaa hyväksyntää."),
         "accountSetup": MessageLookupByLibrary.simpleMessage("Tilin asetukset"),
         "active": MessageLookupByLibrary.simpleMessage("Aktiivinen"),
         "addAName": MessageLookupByLibrary.simpleMessage("Lisää nimi"),
@@ -173,6 +164,8 @@ class MessageLookup extends MessageLookupByLibrary {
             "Äänikohde havaittu. Haluatko lisätä äänisoittimen?"),
         "availability": MessageLookupByLibrary.simpleMessage("saatavuus"),
         "availablePoints": m1,
+        "averageRating":
+            MessageLookupByLibrary.simpleMessage("Keskiarvoluokitus"),
         "back": MessageLookupByLibrary.simpleMessage("Takaisin"),
         "backOrder": MessageLookupByLibrary.simpleMessage("Jälkitoimituksessa"),
         "backToShop": MessageLookupByLibrary.simpleMessage("Takaisin kauppaan"),
@@ -222,10 +215,24 @@ class MessageLookup extends MessageLookupByLibrary {
         "byTag": MessageLookupByLibrary.simpleMessage("Tunnisteen mukaan"),
         "call": MessageLookupByLibrary.simpleMessage("Puhelu"),
         "callTo": MessageLookupByLibrary.simpleMessage("Soita numeroon"),
+        "canNotCreateOrder":
+            MessageLookupByLibrary.simpleMessage("Tilausta ei voi luoda"),
+        "canNotCreateUser":
+            MessageLookupByLibrary.simpleMessage("Käyttäjää ei voi luoda."),
+        "canNotGetPayments":
+            MessageLookupByLibrary.simpleMessage("Maksutapoja ei voi saada"),
+        "canNotGetShipping": MessageLookupByLibrary.simpleMessage(
+            "Toimitusmenetelmiä ei voi saada"),
+        "canNotGetToken":
+            MessageLookupByLibrary.simpleMessage("Tunnustietoja ei voi saada."),
         "canNotLaunch": MessageLookupByLibrary.simpleMessage(
             "Tätä sovellusta ei voi käynnistää. Varmista, että config.dart -asetukset ovat oikein"),
         "canNotLoadThisLink":
             MessageLookupByLibrary.simpleMessage("Tätä linkkiä ei voi ladata"),
+        "canNotSaveOrder": MessageLookupByLibrary.simpleMessage(
+            "Tilausta ei voi tallentaa verkkosivustolle"),
+        "canNotUpdateInfo": MessageLookupByLibrary.simpleMessage(
+            "Käyttäjätietoja ei voi päivittää."),
         "cancel": MessageLookupByLibrary.simpleMessage("Peruuttaa"),
         "cantFindThisOrderId": MessageLookupByLibrary.simpleMessage(
             "Tätä tilaustunnusta ei löydy"),
@@ -345,6 +352,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "dateASC": MessageLookupByLibrary.simpleMessage("Päivämäärä nouseva"),
         "dateBooking":
             MessageLookupByLibrary.simpleMessage("Päivämäärän varaus"),
+        "dateDESC": MessageLookupByLibrary.simpleMessage("Päivämäärä laskeva"),
         "dateEnd": MessageLookupByLibrary.simpleMessage("Päivämäärä Loppu"),
         "dateLatest":
             MessageLookupByLibrary.simpleMessage("Päivämäärä: Viimeisin"),
@@ -403,6 +411,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "editProductInfo":
             MessageLookupByLibrary.simpleMessage("Muokkaa tuotetietoja"),
         "editWithoutColon": MessageLookupByLibrary.simpleMessage("muokata"),
+        "egypt": MessageLookupByLibrary.simpleMessage("Egypti"),
         "email": MessageLookupByLibrary.simpleMessage("Sähköposti"),
         "emailDeleteDescription": MessageLookupByLibrary.simpleMessage(
             "Tilin poistaminen peruuttaa tilauksesi kaikilta postituslistoilta."),
@@ -418,6 +427,8 @@ class MessageLookup extends MessageLookupByLibrary {
             "Kommenttisi ei voi olla tyhjä"),
         "emptySearch": MessageLookupByLibrary.simpleMessage(
             "Et ole vielä etsinyt kohteita. Aloitetaan nyt - me autamme sinua."),
+        "emptyShippingMsg": MessageLookupByLibrary.simpleMessage(
+            "Toimitusvaihtoehtoja ei ole saatavilla. Varmista, että osoitteesi on syötetty oikein, tai ota yhteyttä, jos tarvitset apua."),
         "emptyUsername": MessageLookupByLibrary.simpleMessage(
             "Käyttäjätunnus/sähköposti on tyhjä"),
         "emptyWishlistSubtitle": MessageLookupByLibrary.simpleMessage(
@@ -553,6 +564,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "inStock": MessageLookupByLibrary.simpleMessage("Varastossa"),
         "incorrectPassword":
             MessageLookupByLibrary.simpleMessage("Väärä salasana"),
+        "india": MessageLookupByLibrary.simpleMessage("hindi"),
         "indonesian": MessageLookupByLibrary.simpleMessage("indonesialainen"),
         "instantlyClose": MessageLookupByLibrary.simpleMessage("Heti lähellä"),
         "invalidPhoneNumber":
@@ -658,6 +670,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "nearbyPlaces": MessageLookupByLibrary.simpleMessage("Läheiset paikat"),
         "needToLoginAgain": MessageLookupByLibrary.simpleMessage(
             "Sinun on kirjauduttava uudelleen sisään päivityksen suorittamiseksi"),
+        "netherlands": MessageLookupByLibrary.simpleMessage("Hollannin kieli"),
         "newPassword": MessageLookupByLibrary.simpleMessage("Uusi salasana"),
         "newVariation": MessageLookupByLibrary.simpleMessage("Uusi variaatio"),
         "next": MessageLookupByLibrary.simpleMessage("Seuraava"),
@@ -851,7 +864,9 @@ class MessageLookup extends MessageLookupByLibrary {
             "Alennuspisteen käyttö onnistui"),
         "pointRewardMessage": MessageLookupByLibrary.simpleMessage(
             "Pisteiden lisäämiseen ostoskoriin on alennussääntö"),
+        "polish": MessageLookupByLibrary.simpleMessage("Kiillottaa"),
         "popular": MessageLookupByLibrary.simpleMessage("Suosittu"),
+        "popularity": MessageLookupByLibrary.simpleMessage("suosio"),
         "posAddressToolTip": MessageLookupByLibrary.simpleMessage(
             "Tämä osoite tallennetaan paikalliselle laitteellesi. Se EI ole käyttäjän osoite."),
         "postContent": MessageLookupByLibrary.simpleMessage("Sisältö"),
@@ -879,6 +894,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "printerSelection":
             MessageLookupByLibrary.simpleMessage("Tulostimen valinta"),
         "printing": MessageLookupByLibrary.simpleMessage("Tulostus ..."),
+        "privacyAndTerm":
+            MessageLookupByLibrary.simpleMessage("Yksityisyys ja termi"),
         "privacyPolicy":
             MessageLookupByLibrary.simpleMessage("Tietosuojakäytäntö"),
         "privacyTerms":
@@ -899,6 +916,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "publish": MessageLookupByLibrary.simpleMessage("Julkaista"),
         "pullToLoadMore":
             MessageLookupByLibrary.simpleMessage("Lataa lisää vetämällä"),
+        "qty": MessageLookupByLibrary.simpleMessage("Määrä"),
         "qtyTotal": m19,
         "rate": MessageLookupByLibrary.simpleMessage("Nopeus"),
         "rateTheApp": MessageLookupByLibrary.simpleMessage("Arvioi sovellus"),
@@ -1107,6 +1125,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "support": MessageLookupByLibrary.simpleMessage("Tuki"),
         "swahili": MessageLookupByLibrary.simpleMessage("Suahili"),
         "swedish": MessageLookupByLibrary.simpleMessage("Ruotsin kieli"),
+        "tagNotExist": MessageLookupByLibrary.simpleMessage(
+            "Tätä tunnistetta ei ole olemassa"),
         "tags": MessageLookupByLibrary.simpleMessage("Tunnisteet"),
         "takePicture": MessageLookupByLibrary.simpleMessage("Ottaa kuva"),
         "tamil": MessageLookupByLibrary.simpleMessage("tamil"),
@@ -1127,6 +1147,10 @@ class MessageLookup extends MessageLookupByLibrary {
         "tickets": MessageLookupByLibrary.simpleMessage("liput"),
         "time": MessageLookupByLibrary.simpleMessage("Aika"),
         "title": MessageLookupByLibrary.simpleMessage("Otsikko"),
+        "titleAToZ": MessageLookupByLibrary.simpleMessage("Otsikko: A-Z"),
+        "titleZToA": MessageLookupByLibrary.simpleMessage("Otsikko: Z - A"),
+        "tooManyFaildedLogin": MessageLookupByLibrary.simpleMessage(
+            "Liian monta epäonnistunutta kirjautumisyritystä. Yritä uudelleen myöhemmin."),
         "topUp": MessageLookupByLibrary.simpleMessage("Lisää ylös"),
         "topUpProductNotFound": MessageLookupByLibrary.simpleMessage(
             "Top Up -tuotetta ei löytynyt"),
@@ -1183,6 +1207,8 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("Käytä tätä kuvaa"),
         "userExists": MessageLookupByLibrary.simpleMessage(
             "Tämä käyttäjänimi/sähköpostiosoite ei ole käytettävissä."),
+        "userNameInCorrect": MessageLookupByLibrary.simpleMessage(
+            "Käyttäjänimi tai salasana on väärä."),
         "username": MessageLookupByLibrary.simpleMessage("Käyttäjätunnus"),
         "usernameAndPasswordRequired": MessageLookupByLibrary.simpleMessage(
             "Käyttäjätunnus ja salasana vaaditaan"),
@@ -1200,6 +1226,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "viaWallet": MessageLookupByLibrary.simpleMessage("Lompakon kautta"),
         "video": MessageLookupByLibrary.simpleMessage("Video"),
         "vietnamese": MessageLookupByLibrary.simpleMessage("Vietnam"),
+        "viewOnGoogleMaps":
+            MessageLookupByLibrary.simpleMessage("Näytä Google Mapsissa"),
         "viewRecentTransactions": MessageLookupByLibrary.simpleMessage(
             "Tarkastele viimeaikaisia tapahtumia"),
         "visible": MessageLookupByLibrary.simpleMessage("näkyvä"),
diff --git a/lib/generated/intl/messages_fr.dart b/lib/generated/intl/messages_fr.dart
index 6e408ca..dbb5797 100644
--- a/lib/generated/intl/messages_fr.dart
+++ b/lib/generated/intl/messages_fr.dart
@@ -91,22 +91,14 @@ class MessageLookup extends MessageLookupByLibrary {
 
   final messages = _notInlinedMessages(_notInlinedMessages);
   static Map<String, Function> _notInlinedMessages(_) => <String, Function>{
-        "DateDESC": MessageLookupByLibrary.simpleMessage("Date décroissante"),
-        "Dutch": MessageLookupByLibrary.simpleMessage("Néerlandais"),
-        "Egypt": MessageLookupByLibrary.simpleMessage("Egypte"),
-        "India": MessageLookupByLibrary.simpleMessage("Hindi"),
-        "Korean": MessageLookupByLibrary.simpleMessage("coréen"),
-        "Netherlands": MessageLookupByLibrary.simpleMessage("Pays-Bas"),
-        "Polish": MessageLookupByLibrary.simpleMessage("Polonais"),
-        "PrivacyAndTerm": MessageLookupByLibrary.simpleMessage("CGV"),
-        "Qty": MessageLookupByLibrary.simpleMessage("qté"),
-        "Tamil": MessageLookupByLibrary.simpleMessage("tamil"),
         "UserNameInCorrect": MessageLookupByLibrary.simpleMessage(
             "Le pseudo ou mot de passe est incorect"),
         "aboutUs": MessageLookupByLibrary.simpleMessage("À propos de nous"),
         "account": MessageLookupByLibrary.simpleMessage("Compte"),
         "accountDeleteDescription": MessageLookupByLibrary.simpleMessage(
             "La suppression de votre compte supprime les informations personnelles de notre base de données. Votre e-mail devient définitivement réservé et le même e-mail ne peut pas être réutilisé pour enregistrer un nouveau compte."),
+        "accountIsPendingApproval": MessageLookupByLibrary.simpleMessage(
+            "Le compte est en attente d\'approbation."),
         "accountSetup":
             MessageLookupByLibrary.simpleMessage("Configuration du compte"),
         "active": MessageLookupByLibrary.simpleMessage("actif"),
@@ -177,6 +169,7 @@ class MessageLookup extends MessageLookupByLibrary {
             "Élément(s) audio détecté(s). Voulez-vous ajouter au lecteur audio ?"),
         "availability": MessageLookupByLibrary.simpleMessage("Disponibilité"),
         "availablePoints": m1,
+        "averageRating": MessageLookupByLibrary.simpleMessage("Note moyenne"),
         "back": MessageLookupByLibrary.simpleMessage("Retour"),
         "backOrder":
             MessageLookupByLibrary.simpleMessage("En rupture de stock"),
@@ -229,10 +222,24 @@ class MessageLookup extends MessageLookupByLibrary {
         "byTag": MessageLookupByLibrary.simpleMessage("Par tag"),
         "call": MessageLookupByLibrary.simpleMessage("appel"),
         "callTo": MessageLookupByLibrary.simpleMessage("Passer un appel à"),
+        "canNotCreateOrder": MessageLookupByLibrary.simpleMessage(
+            "Impossible de créer la commande"),
+        "canNotCreateUser": MessageLookupByLibrary.simpleMessage(
+            "Impossible de créer l\'utilisateur."),
+        "canNotGetPayments": MessageLookupByLibrary.simpleMessage(
+            "Impossible d\'obtenir des méthodes de paiement"),
+        "canNotGetShipping": MessageLookupByLibrary.simpleMessage(
+            "Impossible d\'obtenir les méthodes d\'expédition"),
+        "canNotGetToken": MessageLookupByLibrary.simpleMessage(
+            "Impossible d\'obtenir les informations sur le jeton."),
         "canNotLaunch": MessageLookupByLibrary.simpleMessage(
             "Impossible de lancer cette application, assurez-vous que vos paramètres sur config.dart sont corrects"),
         "canNotLoadThisLink": MessageLookupByLibrary.simpleMessage(
             "Impossible de charger ce lien"),
+        "canNotSaveOrder": MessageLookupByLibrary.simpleMessage(
+            "Impossible d\'enregistrer la commande sur le site Web"),
+        "canNotUpdateInfo": MessageLookupByLibrary.simpleMessage(
+            "Impossible de mettre à jour les informations utilisateur."),
         "cancel": MessageLookupByLibrary.simpleMessage("Annuler"),
         "cantFindThisOrderId": MessageLookupByLibrary.simpleMessage(
             "Impossible de trouver cet ID de commande"),
@@ -356,6 +363,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "date": MessageLookupByLibrary.simpleMessage("Date"),
         "dateASC": MessageLookupByLibrary.simpleMessage("Date ascendante"),
         "dateBooking": MessageLookupByLibrary.simpleMessage("dateBooking"),
+        "dateDESC": MessageLookupByLibrary.simpleMessage("Date décroissante"),
         "dateEnd": MessageLookupByLibrary.simpleMessage("Date de fin"),
         "dateLatest": MessageLookupByLibrary.simpleMessage("Date : Dernière"),
         "dateOldest":
@@ -416,6 +424,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "editProductInfo": MessageLookupByLibrary.simpleMessage(
             "Modifier les informations sur le produit"),
         "editWithoutColon": MessageLookupByLibrary.simpleMessage("modifier"),
+        "egypt": MessageLookupByLibrary.simpleMessage("Egypte"),
         "email": MessageLookupByLibrary.simpleMessage("Email"),
         "emailDeleteDescription": MessageLookupByLibrary.simpleMessage(
             "La suppression de votre compte vous désabonnera de toutes les listes de diffusion."),
@@ -431,6 +440,8 @@ class MessageLookup extends MessageLookupByLibrary {
             "Votre commentaire ne peut pas être vide"),
         "emptySearch": MessageLookupByLibrary.simpleMessage(
             "Vous n\'avez pas encore recherché d\'articles. Commençons maintenant - nous vous aiderons."),
+        "emptyShippingMsg": MessageLookupByLibrary.simpleMessage(
+            "Il n\'y a pas d\'options d\'expédition disponibles. Veuillez vous assurer que votre adresse a été saisie correctement ou contactez-nous si vous avez besoin d\'aide."),
         "emptyUsername": MessageLookupByLibrary.simpleMessage(
             "Le nom d\'utilisateur / e-mail est vide"),
         "emptyWishlistSubtitle": MessageLookupByLibrary.simpleMessage(
@@ -576,6 +587,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "inStock": MessageLookupByLibrary.simpleMessage("En stock"),
         "incorrectPassword":
             MessageLookupByLibrary.simpleMessage("Mot de passe incorrect"),
+        "india": MessageLookupByLibrary.simpleMessage("Hindi"),
         "indonesian": MessageLookupByLibrary.simpleMessage("Indonesiana"),
         "instantlyClose":
             MessageLookupByLibrary.simpleMessage("Fermer instantanément"),
@@ -688,6 +700,7 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("Lieux à proximité"),
         "needToLoginAgain": MessageLookupByLibrary.simpleMessage(
             "Vous devez vous reconnecter pour effectuer la mise à jour"),
+        "netherlands": MessageLookupByLibrary.simpleMessage("Pays-Bas"),
         "newPassword":
             MessageLookupByLibrary.simpleMessage("Nouveau mot de passe"),
         "newVariation":
@@ -892,7 +905,9 @@ class MessageLookup extends MessageLookupByLibrary {
             "Le point de remise est appliqué avec succès"),
         "pointRewardMessage": MessageLookupByLibrary.simpleMessage(
             "There is the Discount Rule for applying your points to Cart"),
+        "polish": MessageLookupByLibrary.simpleMessage("Polonais"),
         "popular": MessageLookupByLibrary.simpleMessage("Populaire"),
+        "popularity": MessageLookupByLibrary.simpleMessage("Popularité"),
         "posAddressToolTip": MessageLookupByLibrary.simpleMessage(
             "Cette adresse sera enregistrée sur votre appareil local. Ce n\'est PAS l\'adresse de l\'utilisateur."),
         "postContent": MessageLookupByLibrary.simpleMessage("Contenu"),
@@ -922,6 +937,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "printerSelection":
             MessageLookupByLibrary.simpleMessage("Sélection de l\'imprimante"),
         "printing": MessageLookupByLibrary.simpleMessage("Impression..."),
+        "privacyAndTerm": MessageLookupByLibrary.simpleMessage("CGV"),
         "privacyPolicy": MessageLookupByLibrary.simpleMessage(
             "Politique de confidentialité"),
         "privacyTerms": MessageLookupByLibrary.simpleMessage(
@@ -943,6 +959,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "publish": MessageLookupByLibrary.simpleMessage("Publier"),
         "pullToLoadMore":
             MessageLookupByLibrary.simpleMessage("Tirez pour charger plus"),
+        "qty": MessageLookupByLibrary.simpleMessage("qté"),
         "qtyTotal": m19,
         "rate": MessageLookupByLibrary.simpleMessage("Evaluer"),
         "rateTheApp":
@@ -1168,6 +1185,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "support": MessageLookupByLibrary.simpleMessage("Soutien"),
         "swahili": MessageLookupByLibrary.simpleMessage("Swahili"),
         "swedish": MessageLookupByLibrary.simpleMessage("suédois"),
+        "tagNotExist":
+            MessageLookupByLibrary.simpleMessage("Cette balise n\'existe pas"),
         "tags": MessageLookupByLibrary.simpleMessage("Tags"),
         "takePicture":
             MessageLookupByLibrary.simpleMessage("PRENDRE UNE PHOTO"),
@@ -1189,6 +1208,10 @@ class MessageLookup extends MessageLookupByLibrary {
         "tickets": MessageLookupByLibrary.simpleMessage("Des billets"),
         "time": MessageLookupByLibrary.simpleMessage("Temps"),
         "title": MessageLookupByLibrary.simpleMessage("Titre"),
+        "titleAToZ": MessageLookupByLibrary.simpleMessage("Titre : A à Z"),
+        "titleZToA": MessageLookupByLibrary.simpleMessage("Titre : Z à A"),
+        "tooManyFaildedLogin": MessageLookupByLibrary.simpleMessage(
+            "Trop de tentatives de connexion infructueuses. Veuillez réessayer plus tard."),
         "topUp": MessageLookupByLibrary.simpleMessage("Recharger"),
         "topUpProductNotFound": MessageLookupByLibrary.simpleMessage(
             "Produit de recharge introuvable"),
@@ -1250,6 +1273,8 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("Utilisez cette image"),
         "userExists": MessageLookupByLibrary.simpleMessage(
             "Ce nom d\'utilisateur/adresse e-mail n\'est pas disponible."),
+        "userNameInCorrect": MessageLookupByLibrary.simpleMessage(
+            "Le pseudo ou mot de passe est incorect."),
         "username": MessageLookupByLibrary.simpleMessage("Nom d\'utilisateur"),
         "usernameAndPasswordRequired": MessageLookupByLibrary.simpleMessage(
             "Le nom d\'utilisateur et le mot de passe sont requis"),
@@ -1268,6 +1293,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "viaWallet": MessageLookupByLibrary.simpleMessage("Par portefeuille"),
         "video": MessageLookupByLibrary.simpleMessage("Vidéo"),
         "vietnamese": MessageLookupByLibrary.simpleMessage("vietnamien"),
+        "viewOnGoogleMaps":
+            MessageLookupByLibrary.simpleMessage("VOIR SUR GOOGLE MAPS"),
         "viewRecentTransactions": MessageLookupByLibrary.simpleMessage(
             "Afficher les transactions récentes"),
         "visible": MessageLookupByLibrary.simpleMessage("Visible"),
diff --git a/lib/generated/intl/messages_he.dart b/lib/generated/intl/messages_he.dart
index 868dec7..bbcfa0b 100644
--- a/lib/generated/intl/messages_he.dart
+++ b/lib/generated/intl/messages_he.dart
@@ -91,22 +91,14 @@ class MessageLookup extends MessageLookupByLibrary {
 
   final messages = _notInlinedMessages(_notInlinedMessages);
   static Map<String, Function> _notInlinedMessages(_) => <String, Function>{
-        "DateDESC": MessageLookupByLibrary.simpleMessage("תאריך יורד"),
-        "Dutch": MessageLookupByLibrary.simpleMessage("הולנדית"),
-        "Egypt": MessageLookupByLibrary.simpleMessage("מצרים"),
-        "India": MessageLookupByLibrary.simpleMessage("הינדי"),
-        "Korean": MessageLookupByLibrary.simpleMessage("קוריאנית"),
-        "Netherlands": MessageLookupByLibrary.simpleMessage("הולנד"),
-        "Polish": MessageLookupByLibrary.simpleMessage("פולני"),
-        "PrivacyAndTerm": MessageLookupByLibrary.simpleMessage("פרטיות ומונח"),
-        "Qty": MessageLookupByLibrary.simpleMessage("כמות"),
-        "Tamil": MessageLookupByLibrary.simpleMessage("טמילית"),
         "UserNameInCorrect":
             MessageLookupByLibrary.simpleMessage("שם המשתמש או הסיסמה שגויים"),
         "aboutUs": MessageLookupByLibrary.simpleMessage("עלינו"),
         "account": MessageLookupByLibrary.simpleMessage("חשבון"),
         "accountDeleteDescription": MessageLookupByLibrary.simpleMessage(
             "מחיקת חשבונך מסירה מידע אישי ממסד הנתונים שלנו. האימייל שלך הופך לשמור לצמיתות ולא ניתן לעשות שימוש חוזר באותו דוא\"ל לרישום חשבון חדש."),
+        "accountIsPendingApproval":
+            MessageLookupByLibrary.simpleMessage("החשבון ממתין לאישור."),
         "accountSetup": MessageLookupByLibrary.simpleMessage("הגדרת חשבון"),
         "active": MessageLookupByLibrary.simpleMessage("פעיל"),
         "addAName": MessageLookupByLibrary.simpleMessage("הוסף שם"),
@@ -169,6 +161,7 @@ class MessageLookup extends MessageLookupByLibrary {
             "פריט אודיו זוהה. האם אתה רוצה להוסיף לנגן האודיו?"),
         "availability": MessageLookupByLibrary.simpleMessage("זמינות"),
         "availablePoints": m1,
+        "averageRating": MessageLookupByLibrary.simpleMessage("דירוג ממוצע"),
         "back": MessageLookupByLibrary.simpleMessage("חזור"),
         "backOrder": MessageLookupByLibrary.simpleMessage("בהזמנה חוזרת"),
         "backToShop": MessageLookupByLibrary.simpleMessage("חזרה לחנות"),
@@ -215,10 +208,24 @@ class MessageLookup extends MessageLookupByLibrary {
         "byTag": MessageLookupByLibrary.simpleMessage("לפי תג"),
         "call": MessageLookupByLibrary.simpleMessage("התקשר"),
         "callTo": MessageLookupByLibrary.simpleMessage("התקשר אל"),
+        "canNotCreateOrder":
+            MessageLookupByLibrary.simpleMessage("לא ניתן ליצור סדר"),
+        "canNotCreateUser":
+            MessageLookupByLibrary.simpleMessage("לא ניתן ליצור את המשתמש."),
+        "canNotGetPayments":
+            MessageLookupByLibrary.simpleMessage("לא ניתן לקבל אמצעי תשלום"),
+        "canNotGetShipping":
+            MessageLookupByLibrary.simpleMessage("לא ניתן לקבל שיטות משלוח"),
+        "canNotGetToken":
+            MessageLookupByLibrary.simpleMessage("לא ניתן לקבל מידע אסימון."),
         "canNotLaunch": MessageLookupByLibrary.simpleMessage(
             "לא ניתן להפעיל את האפליקציה הזו, וודא שההגדרות שלך ב- config.dart נכונות"),
         "canNotLoadThisLink":
             MessageLookupByLibrary.simpleMessage("לא ניתן לטעון את הקישור הזה"),
+        "canNotSaveOrder": MessageLookupByLibrary.simpleMessage(
+            "לא ניתן לשמור את ההזמנה באתר"),
+        "canNotUpdateInfo": MessageLookupByLibrary.simpleMessage(
+            "לא ניתן לעדכן את פרטי המשתמש."),
         "cancel": MessageLookupByLibrary.simpleMessage("ביטול"),
         "cantFindThisOrderId": MessageLookupByLibrary.simpleMessage(
             "לא ניתן למצוא את מזהה ההזמנה הזה"),
@@ -327,6 +334,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "date": MessageLookupByLibrary.simpleMessage("תאריך"),
         "dateASC": MessageLookupByLibrary.simpleMessage("תאריך עלייה"),
         "dateBooking": MessageLookupByLibrary.simpleMessage("תאריך הזמנה"),
+        "dateDESC": MessageLookupByLibrary.simpleMessage("תאריך יורד"),
         "dateEnd": MessageLookupByLibrary.simpleMessage("סיום תאריך"),
         "dateLatest": MessageLookupByLibrary.simpleMessage("תאריך: אחרון"),
         "dateOldest": MessageLookupByLibrary.simpleMessage("תאריך: הישן ביותר"),
@@ -380,6 +388,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "editProductInfo":
             MessageLookupByLibrary.simpleMessage("ערוך פרטי מוצר"),
         "editWithoutColon": MessageLookupByLibrary.simpleMessage("ערוך"),
+        "egypt": MessageLookupByLibrary.simpleMessage("מצרים"),
         "email": MessageLookupByLibrary.simpleMessage("דוא״ל"),
         "emailDeleteDescription": MessageLookupByLibrary.simpleMessage(
             "מחיקת חשבונך תבטל את הרישום שלך מכל רשימות התפוצה."),
@@ -394,6 +403,8 @@ class MessageLookup extends MessageLookupByLibrary {
             "התגובה שלך לא יכולה להיות ריקה"),
         "emptySearch": MessageLookupByLibrary.simpleMessage(
             "עדיין לא חיפשת פריטים. נתחיל עכשיו - נעזור לך."),
+        "emptyShippingMsg": MessageLookupByLibrary.simpleMessage(
+            "אין אפשרויות משלוח זמינות. אנא ודא שהכתובת שלך הוזנה כהלכה, או צור איתנו קשר אם אתה זקוק לעזרה כלשהי."),
         "emptyUsername":
             MessageLookupByLibrary.simpleMessage("שם המשתמש / הדוא״ל ריק"),
         "emptyWishlistSubtitle": MessageLookupByLibrary.simpleMessage(
@@ -517,6 +528,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "inStock": MessageLookupByLibrary.simpleMessage("במלאי"),
         "incorrectPassword":
             MessageLookupByLibrary.simpleMessage("סיסמא לא נכונה"),
+        "india": MessageLookupByLibrary.simpleMessage("הינדי"),
         "indonesian": MessageLookupByLibrary.simpleMessage("אינדונזית"),
         "instantlyClose": MessageLookupByLibrary.simpleMessage("קרוב מיד"),
         "invalidPhoneNumber":
@@ -615,6 +627,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "nearbyPlaces": MessageLookupByLibrary.simpleMessage("מקומות קרובים"),
         "needToLoginAgain": MessageLookupByLibrary.simpleMessage(
             "עליך להתחבר שוב כדי לבצע עדכון"),
+        "netherlands": MessageLookupByLibrary.simpleMessage("הולנד"),
         "newPassword": MessageLookupByLibrary.simpleMessage("סיסמה חדשה"),
         "newVariation": MessageLookupByLibrary.simpleMessage("וריאציה חדשה"),
         "next": MessageLookupByLibrary.simpleMessage("הבא"),
@@ -796,7 +809,9 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("נקודת ההנחה מיושמת בהצלחה"),
         "pointRewardMessage": MessageLookupByLibrary.simpleMessage(
             "יש כלל הנחה להחלת הנקודות שלך לעגלה"),
+        "polish": MessageLookupByLibrary.simpleMessage("פולני"),
         "popular": MessageLookupByLibrary.simpleMessage("פופולרי"),
+        "popularity": MessageLookupByLibrary.simpleMessage("פּוֹפּוּלָרִיוּת"),
         "posAddressToolTip": MessageLookupByLibrary.simpleMessage(
             "כתובת זו תישמר במכשיר המקומי שלך. זו לא כתובת המשתמש."),
         "postContent": MessageLookupByLibrary.simpleMessage("תוכן"),
@@ -821,6 +836,7 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("המדפסת לא נמצאה"),
         "printerSelection": MessageLookupByLibrary.simpleMessage("בחירת מדפסת"),
         "printing": MessageLookupByLibrary.simpleMessage("הַדפָּסָה..."),
+        "privacyAndTerm": MessageLookupByLibrary.simpleMessage("פרטיות ומונח"),
         "privacyPolicy": MessageLookupByLibrary.simpleMessage("מדיניות פרטיות"),
         "privacyTerms": MessageLookupByLibrary.simpleMessage("פרטיות ותנאים"),
         "private": MessageLookupByLibrary.simpleMessage("פרטי"),
@@ -839,6 +855,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "publish": MessageLookupByLibrary.simpleMessage("פרסם"),
         "pullToLoadMore":
             MessageLookupByLibrary.simpleMessage("משוך כדי לטעון יותר"),
+        "qty": MessageLookupByLibrary.simpleMessage("כמות"),
         "qtyTotal": m19,
         "rate": MessageLookupByLibrary.simpleMessage("ציון"),
         "rateTheApp": MessageLookupByLibrary.simpleMessage("דרג את האפליקציה"),
@@ -1027,6 +1044,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "support": MessageLookupByLibrary.simpleMessage("תמיכה"),
         "swahili": MessageLookupByLibrary.simpleMessage("סווהילית"),
         "swedish": MessageLookupByLibrary.simpleMessage("שוודית"),
+        "tagNotExist": MessageLookupByLibrary.simpleMessage("תג זה לא קיים"),
         "tags": MessageLookupByLibrary.simpleMessage("תגים"),
         "takePicture": MessageLookupByLibrary.simpleMessage("צלם תמונה"),
         "tamil": MessageLookupByLibrary.simpleMessage("טמילית"),
@@ -1047,6 +1065,10 @@ class MessageLookup extends MessageLookupByLibrary {
         "tickets": MessageLookupByLibrary.simpleMessage("כרטיסים"),
         "time": MessageLookupByLibrary.simpleMessage("זמן"),
         "title": MessageLookupByLibrary.simpleMessage("כותרת"),
+        "titleAToZ": MessageLookupByLibrary.simpleMessage("כותרת: א\' עד ת\'"),
+        "titleZToA": MessageLookupByLibrary.simpleMessage("כותרת: Z עד A"),
+        "tooManyFaildedLogin": MessageLookupByLibrary.simpleMessage(
+            "יותר מדי ניסיונות כניסה כושלים. בבקשה נסה שוב מאוחר יותר."),
         "topUp": MessageLookupByLibrary.simpleMessage("טופ למעלה"),
         "topUpProductNotFound":
             MessageLookupByLibrary.simpleMessage("מוצר טעינה לא נמצא"),
@@ -1093,6 +1115,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "useThisImage": MessageLookupByLibrary.simpleMessage("השתמש בתמונה זו"),
         "userExists": MessageLookupByLibrary.simpleMessage(
             "שם משתמש/דוא\"ל זה אינו זמין."),
+        "userNameInCorrect":
+            MessageLookupByLibrary.simpleMessage("שם המשתמש או הסיסמה שגויים."),
         "username": MessageLookupByLibrary.simpleMessage("שם משתמש"),
         "usernameAndPasswordRequired":
             MessageLookupByLibrary.simpleMessage("שם משתמש וסיסמה נדרשים"),
@@ -1109,6 +1133,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "viaWallet": MessageLookupByLibrary.simpleMessage("באמצעות ארנק"),
         "video": MessageLookupByLibrary.simpleMessage("וידאו"),
         "vietnamese": MessageLookupByLibrary.simpleMessage("וייטנאמי"),
+        "viewOnGoogleMaps":
+            MessageLookupByLibrary.simpleMessage("הצג בגוגל מפות"),
         "viewRecentTransactions":
             MessageLookupByLibrary.simpleMessage("צפה בעסקאות האחרונות"),
         "visible": MessageLookupByLibrary.simpleMessage("גלוי"),
diff --git a/lib/generated/intl/messages_hi.dart b/lib/generated/intl/messages_hi.dart
index bf918d1..0b28348 100644
--- a/lib/generated/intl/messages_hi.dart
+++ b/lib/generated/intl/messages_hi.dart
@@ -91,23 +91,14 @@ class MessageLookup extends MessageLookupByLibrary {
 
   final messages = _notInlinedMessages(_notInlinedMessages);
   static Map<String, Function> _notInlinedMessages(_) => <String, Function>{
-        "DateDESC": MessageLookupByLibrary.simpleMessage("अवरोही तिथि"),
-        "Dutch": MessageLookupByLibrary.simpleMessage("डच"),
-        "Egypt": MessageLookupByLibrary.simpleMessage("मिस्र"),
-        "India": MessageLookupByLibrary.simpleMessage("हिंदी"),
-        "Korean": MessageLookupByLibrary.simpleMessage("कोरियाई"),
-        "Netherlands": MessageLookupByLibrary.simpleMessage("नीदरलैंड"),
-        "Polish": MessageLookupByLibrary.simpleMessage("पोलिश"),
-        "PrivacyAndTerm":
-            MessageLookupByLibrary.simpleMessage("गोपनीयता और शब्द"),
-        "Qty": MessageLookupByLibrary.simpleMessage("मात्रा"),
-        "Tamil": MessageLookupByLibrary.simpleMessage("तामिल"),
         "UserNameInCorrect":
             MessageLookupByLibrary.simpleMessage("यूजरनेम या पासवर्ड गलत है"),
         "aboutUs": MessageLookupByLibrary.simpleMessage("हमारे बारे में"),
         "account": MessageLookupByLibrary.simpleMessage("लेखा"),
         "accountDeleteDescription": MessageLookupByLibrary.simpleMessage(
             "आपका खाता हटाने से हमारे डेटाबेस से व्यक्तिगत जानकारी निकल जाती है। आपका ईमेल स्थायी रूप से आरक्षित हो जाता है और नया खाता पंजीकृत करने के लिए उसी ईमेल का पुन: उपयोग नहीं किया जा सकता है।"),
+        "accountIsPendingApproval": MessageLookupByLibrary.simpleMessage(
+            "खाता अनुमोदन के लिए लंबित है।"),
         "accountSetup":
             MessageLookupByLibrary.simpleMessage("खाता स्थापित करना"),
         "active": MessageLookupByLibrary.simpleMessage("सक्रिय"),
@@ -173,6 +164,7 @@ class MessageLookup extends MessageLookupByLibrary {
             "ऑडियो आइटम का पता चला है। क्या आप ऑडियो प्लेयर में जोड़ना चाहते हैं?"),
         "availability": MessageLookupByLibrary.simpleMessage("उपलब्धता"),
         "availablePoints": m1,
+        "averageRating": MessageLookupByLibrary.simpleMessage("औसत रेटिंग"),
         "back": MessageLookupByLibrary.simpleMessage("वापस"),
         "backOrder": MessageLookupByLibrary.simpleMessage("पिछले आदेश पर"),
         "backToShop": MessageLookupByLibrary.simpleMessage("वापस दुकान में"),
@@ -222,10 +214,24 @@ class MessageLookup extends MessageLookupByLibrary {
         "byTag": MessageLookupByLibrary.simpleMessage("टैग द्वारा"),
         "call": MessageLookupByLibrary.simpleMessage("कॉल"),
         "callTo": MessageLookupByLibrary.simpleMessage("एक कॉल करें"),
+        "canNotCreateOrder":
+            MessageLookupByLibrary.simpleMessage("आदेश नहीं बना सकता"),
+        "canNotCreateUser":
+            MessageLookupByLibrary.simpleMessage("उपयोगकर्ता नहीं बना सकता।"),
+        "canNotGetPayments": MessageLookupByLibrary.simpleMessage(
+            "भुगतान विधियां नहीं मिल सकतीं"),
+        "canNotGetShipping": MessageLookupByLibrary.simpleMessage(
+            "शिपिंग के तरीके नहीं मिल सकते"),
+        "canNotGetToken": MessageLookupByLibrary.simpleMessage(
+            "टोकन जानकारी नहीं मिल सकती है।"),
         "canNotLaunch": MessageLookupByLibrary.simpleMessage(
             "यह एप्लिकेशन लॉन्च नहीं कर सकता, सुनिश्चित करें कि config.dart पर आपकी सेटिंग सही है"),
         "canNotLoadThisLink":
             MessageLookupByLibrary.simpleMessage("इस लिंक को लोड नहीं कर सकता"),
+        "canNotSaveOrder": MessageLookupByLibrary.simpleMessage(
+            "वेबसाइट पर ऑर्डर सेव नहीं किया जा सकता"),
+        "canNotUpdateInfo": MessageLookupByLibrary.simpleMessage(
+            "उपयोगकर्ता जानकारी अपडेट नहीं कर सकता।"),
         "cancel": MessageLookupByLibrary.simpleMessage("रद्द करना"),
         "cantFindThisOrderId": MessageLookupByLibrary.simpleMessage(
             "यह आदेश आईडी नहीं मिल रहा है"),
@@ -339,6 +345,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "date": MessageLookupByLibrary.simpleMessage("दिनांक"),
         "dateASC": MessageLookupByLibrary.simpleMessage("आरोही तिथि"),
         "dateBooking": MessageLookupByLibrary.simpleMessage("डेट बुकिंग"),
+        "dateDESC": MessageLookupByLibrary.simpleMessage("अवरोही तिथि"),
         "dateEnd": MessageLookupByLibrary.simpleMessage("अंतिम तिथि"),
         "dateLatest": MessageLookupByLibrary.simpleMessage("दिनांक: नवीनतम"),
         "dateOldest":
@@ -399,6 +406,7 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("उत्पाद जानकारी संपादित करें"),
         "editWithoutColon":
             MessageLookupByLibrary.simpleMessage("संपादित करें"),
+        "egypt": MessageLookupByLibrary.simpleMessage("मिस्र"),
         "email": MessageLookupByLibrary.simpleMessage("ईमेल"),
         "emailDeleteDescription": MessageLookupByLibrary.simpleMessage(
             "अपना खाता हटाने से आप सभी मेलिंग सूचियों से सदस्यता समाप्त कर देंगे।"),
@@ -414,6 +422,8 @@ class MessageLookup extends MessageLookupByLibrary {
             "आपकी टिप्पणी खाली नहीं हो सकती"),
         "emptySearch": MessageLookupByLibrary.simpleMessage(
             "आपने अभी तक आइटम नहीं खोजे हैं। चलिए अब शुरू करते हैं - हम आपकी मदद करेंगे।"),
+        "emptyShippingMsg": MessageLookupByLibrary.simpleMessage(
+            "कोई शिपिंग विकल्प उपलब्ध नहीं हैं। कृपया सुनिश्चित करें कि आपका पता सही दर्ज किया गया है, या यदि आपको कोई सहायता चाहिए तो हमसे संपर्क करें।"),
         "emptyUsername": MessageLookupByLibrary.simpleMessage(
             "उपयोगकर्ता नाम / ईमेल खाली है"),
         "emptyWishlistSubtitle": MessageLookupByLibrary.simpleMessage(
@@ -548,6 +558,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "inStock": MessageLookupByLibrary.simpleMessage("स्टॉक में"),
         "incorrectPassword":
             MessageLookupByLibrary.simpleMessage("गलत पासवर्ड"),
+        "india": MessageLookupByLibrary.simpleMessage("हिंदी"),
         "indonesian": MessageLookupByLibrary.simpleMessage("इन्डोनेशियाई"),
         "instantlyClose":
             MessageLookupByLibrary.simpleMessage("तुरंत बंद करें"),
@@ -652,6 +663,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "nearbyPlaces": MessageLookupByLibrary.simpleMessage("निकटवर्ती स्थान"),
         "needToLoginAgain": MessageLookupByLibrary.simpleMessage(
             "अपडेट को प्रभावी करने के लिए आपको फिर से लॉग इन करना होगा"),
+        "netherlands": MessageLookupByLibrary.simpleMessage("नीदरलैंड"),
         "newPassword": MessageLookupByLibrary.simpleMessage("नया पासवर्ड"),
         "newVariation": MessageLookupByLibrary.simpleMessage("नई विविधता"),
         "next": MessageLookupByLibrary.simpleMessage("आगामी"),
@@ -841,7 +853,9 @@ class MessageLookup extends MessageLookupByLibrary {
             "छूट बिंदु सफलतापूर्वक लागू किया गया है"),
         "pointRewardMessage": MessageLookupByLibrary.simpleMessage(
             "अपने अंक को कार्ट पर लागू करने के लिए डिस्काउंट नियम है"),
+        "polish": MessageLookupByLibrary.simpleMessage("पोलिश"),
         "popular": MessageLookupByLibrary.simpleMessage("लोकप्रिय"),
+        "popularity": MessageLookupByLibrary.simpleMessage("लोकप्रियता"),
         "posAddressToolTip": MessageLookupByLibrary.simpleMessage(
             "यह पता आपके स्थानीय डिवाइस में सहेजा जाएगा। यह उपयोगकर्ता का पता नहीं है।"),
         "postContent": MessageLookupByLibrary.simpleMessage("सामग्री"),
@@ -866,6 +880,8 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("प्रिंटर नहीं मिला"),
         "printerSelection": MessageLookupByLibrary.simpleMessage("प्रिंटर चयन"),
         "printing": MessageLookupByLibrary.simpleMessage("मुद्रण..."),
+        "privacyAndTerm":
+            MessageLookupByLibrary.simpleMessage("गोपनीयता और शब्द"),
         "privacyPolicy": MessageLookupByLibrary.simpleMessage("गोपनीयता नीति"),
         "privacyTerms":
             MessageLookupByLibrary.simpleMessage("गोपनीयता व शर्तें"),
@@ -887,6 +903,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "publish": MessageLookupByLibrary.simpleMessage("प्रकाशित करना"),
         "pullToLoadMore":
             MessageLookupByLibrary.simpleMessage("अधिक लोड करने के लिए खींचो"),
+        "qty": MessageLookupByLibrary.simpleMessage("मात्रा"),
         "qtyTotal": m19,
         "rate": MessageLookupByLibrary.simpleMessage("मूल्यांकन करें"),
         "rateTheApp":
@@ -1094,6 +1111,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "support": MessageLookupByLibrary.simpleMessage("समर्थन"),
         "swahili": MessageLookupByLibrary.simpleMessage("स्वाहिली"),
         "swedish": MessageLookupByLibrary.simpleMessage("स्वीडिश"),
+        "tagNotExist":
+            MessageLookupByLibrary.simpleMessage("यह टैग मौजूद नहीं है"),
         "tags": MessageLookupByLibrary.simpleMessage("टैग"),
         "takePicture": MessageLookupByLibrary.simpleMessage("तस्वीर ले लो"),
         "tamil": MessageLookupByLibrary.simpleMessage("तामिल"),
@@ -1114,6 +1133,10 @@ class MessageLookup extends MessageLookupByLibrary {
         "tickets": MessageLookupByLibrary.simpleMessage("टिकट"),
         "time": MessageLookupByLibrary.simpleMessage("पहर"),
         "title": MessageLookupByLibrary.simpleMessage("शीर्षक"),
+        "titleAToZ": MessageLookupByLibrary.simpleMessage("शीर्षक: ए टू जेड"),
+        "titleZToA": MessageLookupByLibrary.simpleMessage("शीर्षक: Z से A"),
+        "tooManyFaildedLogin": MessageLookupByLibrary.simpleMessage(
+            "बहुत से असफल लॉगिन प्रयास। बाद में पुन: प्रयास करें।"),
         "topUp": MessageLookupByLibrary.simpleMessage("लबालब भरना"),
         "topUpProductNotFound":
             MessageLookupByLibrary.simpleMessage("टॉप अप उत्पाद नहीं मिला"),
@@ -1171,6 +1194,8 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("इस छवि का प्रयोग करें"),
         "userExists": MessageLookupByLibrary.simpleMessage(
             "यह उपयोगकर्ता नाम/ईमेल उपलब्ध नहीं है।"),
+        "userNameInCorrect":
+            MessageLookupByLibrary.simpleMessage("यूजरनेम या पासवर्ड गलत है।"),
         "username": MessageLookupByLibrary.simpleMessage("उपयोगकर्ता नाम"),
         "usernameAndPasswordRequired": MessageLookupByLibrary.simpleMessage(
             "उपयोगकर्ता नाम और पासवर्ड की आवश्यकता है"),
@@ -1189,6 +1214,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "viaWallet": MessageLookupByLibrary.simpleMessage("वॉलेट के माध्यम से"),
         "video": MessageLookupByLibrary.simpleMessage("वीडियो"),
         "vietnamese": MessageLookupByLibrary.simpleMessage("वियतनाम"),
+        "viewOnGoogleMaps":
+            MessageLookupByLibrary.simpleMessage("Google मानचित्र पर देखें"),
         "viewRecentTransactions":
             MessageLookupByLibrary.simpleMessage("हाल के लेनदेन देखें"),
         "visible": MessageLookupByLibrary.simpleMessage("दर्शनीय"),
diff --git a/lib/generated/intl/messages_hu.dart b/lib/generated/intl/messages_hu.dart
index 8c1455b..da28ad0 100644
--- a/lib/generated/intl/messages_hu.dart
+++ b/lib/generated/intl/messages_hu.dart
@@ -92,22 +92,14 @@ class MessageLookup extends MessageLookupByLibrary {
 
   final messages = _notInlinedMessages(_notInlinedMessages);
   static Map<String, Function> _notInlinedMessages(_) => <String, Function>{
-        "DateDESC": MessageLookupByLibrary.simpleMessage("Dátum csökkenő"),
-        "Dutch": MessageLookupByLibrary.simpleMessage("holland"),
-        "Egypt": MessageLookupByLibrary.simpleMessage("Egyiptom"),
-        "India": MessageLookupByLibrary.simpleMessage("hindi"),
-        "Korean": MessageLookupByLibrary.simpleMessage("koreai"),
-        "Netherlands": MessageLookupByLibrary.simpleMessage("Hollandia"),
-        "Polish": MessageLookupByLibrary.simpleMessage("Fényesít"),
-        "PrivacyAndTerm": MessageLookupByLibrary.simpleMessage("Adatvédelem"),
-        "Qty": MessageLookupByLibrary.simpleMessage("Mennyiség"),
-        "Tamil": MessageLookupByLibrary.simpleMessage("tamil"),
         "UserNameInCorrect": MessageLookupByLibrary.simpleMessage(
             "A felhasználónév vagy jelszó helytelen"),
         "aboutUs": MessageLookupByLibrary.simpleMessage("Rólunk"),
         "account": MessageLookupByLibrary.simpleMessage("számla"),
         "accountDeleteDescription": MessageLookupByLibrary.simpleMessage(
             "Fiókjának törlésével a személyes adatok törlődnek adatbázisunkból. E-mail címe véglegesen lefoglalttá válik, és ugyanazt az e-mail-címet nem lehet újra felhasználni új fiók regisztrálására."),
+        "accountIsPendingApproval":
+            MessageLookupByLibrary.simpleMessage("A fiók jóváhagyásra vár."),
         "accountSetup": MessageLookupByLibrary.simpleMessage("Fiók beállítása"),
         "active": MessageLookupByLibrary.simpleMessage("Aktív"),
         "addAName": MessageLookupByLibrary.simpleMessage("Adjon nevet"),
@@ -181,6 +173,8 @@ class MessageLookup extends MessageLookupByLibrary {
             "Hangelem (ek) észlelve. Hozzá akarja adni az Audio Player-hez?"),
         "availability": MessageLookupByLibrary.simpleMessage("Elérhetőség"),
         "availablePoints": m1,
+        "averageRating":
+            MessageLookupByLibrary.simpleMessage("Átlagos értékelés"),
         "back": MessageLookupByLibrary.simpleMessage("Hát"),
         "backOrder": MessageLookupByLibrary.simpleMessage("Utánrendelés"),
         "backToShop": MessageLookupByLibrary.simpleMessage("Vissza a Boltba"),
@@ -230,10 +224,24 @@ class MessageLookup extends MessageLookupByLibrary {
         "byTag": MessageLookupByLibrary.simpleMessage("Tag szerint"),
         "call": MessageLookupByLibrary.simpleMessage("Hívás"),
         "callTo": MessageLookupByLibrary.simpleMessage("Hívjon"),
+        "canNotCreateOrder": MessageLookupByLibrary.simpleMessage(
+            "Nem lehet sorrendet létrehozni"),
+        "canNotCreateUser": MessageLookupByLibrary.simpleMessage(
+            "Nem lehet létrehozni a felhasználót."),
+        "canNotGetPayments": MessageLookupByLibrary.simpleMessage(
+            "Fizetési módok nem érhetők el"),
+        "canNotGetShipping": MessageLookupByLibrary.simpleMessage(
+            "A szállítási módokat nem lehet megkapni"),
+        "canNotGetToken": MessageLookupByLibrary.simpleMessage(
+            "Nem érhető el token információ."),
         "canNotLaunch": MessageLookupByLibrary.simpleMessage(
             "Ezt az alkalmazást nem lehet elindítani, ellenőrizze, hogy a config.dart beállításai helyesek-e"),
         "canNotLoadThisLink": MessageLookupByLibrary.simpleMessage(
             "Ezt a linket nem lehet betölteni"),
+        "canNotSaveOrder": MessageLookupByLibrary.simpleMessage(
+            "A megrendelés nem menthető a webhelyre"),
+        "canNotUpdateInfo": MessageLookupByLibrary.simpleMessage(
+            "Nem lehet frissíteni a felhasználói adatokat."),
         "cancel": MessageLookupByLibrary.simpleMessage("Visszamond"),
         "cantFindThisOrderId": MessageLookupByLibrary.simpleMessage(
             "Nem található ez a rendelési azonosító"),
@@ -354,6 +362,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "date": MessageLookupByLibrary.simpleMessage("Dátum"),
         "dateASC": MessageLookupByLibrary.simpleMessage("Dátum növekvő"),
         "dateBooking": MessageLookupByLibrary.simpleMessage("dateBooking"),
+        "dateDESC": MessageLookupByLibrary.simpleMessage("Dátum csökkenő"),
         "dateEnd": MessageLookupByLibrary.simpleMessage("Dátum vége"),
         "dateLatest": MessageLookupByLibrary.simpleMessage("Dátum: Legutóbbi"),
         "dateOldest":
@@ -416,6 +425,7 @@ class MessageLookup extends MessageLookupByLibrary {
             "A termékinformációk szerkesztése"),
         "editWithoutColon":
             MessageLookupByLibrary.simpleMessage("szerkesztése"),
+        "egypt": MessageLookupByLibrary.simpleMessage("Egyiptom"),
         "email": MessageLookupByLibrary.simpleMessage("Email"),
         "emailDeleteDescription": MessageLookupByLibrary.simpleMessage(
             "A fiók törlésével leiratkozik az összes levelezőlistáról."),
@@ -431,6 +441,8 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("A megjegyzés nem lehet üres"),
         "emptySearch": MessageLookupByLibrary.simpleMessage(
             "Még nem keresett elemeket. Kezdjük most - segítünk."),
+        "emptyShippingMsg": MessageLookupByLibrary.simpleMessage(
+            "Nincsenek szállítási lehetőségek. Kérjük, ellenőrizze, hogy helyesen adta-e meg címét, vagy lépjen kapcsolatba velünk, ha segítségre van szüksége."),
         "emptyUsername": MessageLookupByLibrary.simpleMessage(
             "Felhasználónév / e-mail mező üres"),
         "emptyWishlistSubtitle": MessageLookupByLibrary.simpleMessage(
@@ -567,6 +579,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "inStock": MessageLookupByLibrary.simpleMessage("Készleten"),
         "incorrectPassword":
             MessageLookupByLibrary.simpleMessage("Hibás jelszó"),
+        "india": MessageLookupByLibrary.simpleMessage("hindi"),
         "indonesian": MessageLookupByLibrary.simpleMessage("Indonéz"),
         "instantlyClose": MessageLookupByLibrary.simpleMessage("Azonnal közel"),
         "invalidPhoneNumber":
@@ -678,6 +691,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "nearbyPlaces": MessageLookupByLibrary.simpleMessage("Nearby Places"),
         "needToLoginAgain": MessageLookupByLibrary.simpleMessage(
             "A frissítés végrehajtásához újra be kell jelentkeznie"),
+        "netherlands": MessageLookupByLibrary.simpleMessage("Hollandia"),
         "newPassword": MessageLookupByLibrary.simpleMessage("Új jelszó"),
         "newVariation": MessageLookupByLibrary.simpleMessage("Új variáció"),
         "next": MessageLookupByLibrary.simpleMessage("Következő"),
@@ -876,7 +890,9 @@ class MessageLookup extends MessageLookupByLibrary {
             "A kedvezménypont érvényesítése sikeres"),
         "pointRewardMessage": MessageLookupByLibrary.simpleMessage(
             "There is the Discount Rule for applying your points to Cart"),
+        "polish": MessageLookupByLibrary.simpleMessage("Fényesít"),
         "popular": MessageLookupByLibrary.simpleMessage("Népszerű"),
+        "popularity": MessageLookupByLibrary.simpleMessage("Népszerűség"),
         "posAddressToolTip": MessageLookupByLibrary.simpleMessage(
             "Ezt a címet a rendszer elmenti a helyi eszközére. NEM a felhasználói cím."),
         "postContent": MessageLookupByLibrary.simpleMessage("Tartalom"),
@@ -904,6 +920,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "printerSelection":
             MessageLookupByLibrary.simpleMessage("Nyomtató kiválasztása"),
         "printing": MessageLookupByLibrary.simpleMessage("Nyomtatás..."),
+        "privacyAndTerm": MessageLookupByLibrary.simpleMessage("Adatvédelem"),
         "privacyPolicy":
             MessageLookupByLibrary.simpleMessage("Adatvédelmi irányelvek"),
         "privacyTerms":
@@ -925,6 +942,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "publish": MessageLookupByLibrary.simpleMessage("közzétesz"),
         "pullToLoadMore": MessageLookupByLibrary.simpleMessage(
             "Húzza le, a továbbiak betöltése végett"),
+        "qty": MessageLookupByLibrary.simpleMessage("Mennyiség"),
         "qtyTotal": m19,
         "rate": MessageLookupByLibrary.simpleMessage("Értékelés"),
         "rateTheApp":
@@ -1140,6 +1158,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "support": MessageLookupByLibrary.simpleMessage("TÁMOGATÁS"),
         "swahili": MessageLookupByLibrary.simpleMessage("szuahéli"),
         "swedish": MessageLookupByLibrary.simpleMessage("svéd"),
+        "tagNotExist":
+            MessageLookupByLibrary.simpleMessage("Ez a címke nem létezik"),
         "tags": MessageLookupByLibrary.simpleMessage("Cimkék"),
         "takePicture": MessageLookupByLibrary.simpleMessage("Készíts képet"),
         "tamil": MessageLookupByLibrary.simpleMessage("tamil"),
@@ -1160,6 +1180,10 @@ class MessageLookup extends MessageLookupByLibrary {
         "tickets": MessageLookupByLibrary.simpleMessage("Jegyek"),
         "time": MessageLookupByLibrary.simpleMessage("Idő"),
         "title": MessageLookupByLibrary.simpleMessage("Cím"),
+        "titleAToZ": MessageLookupByLibrary.simpleMessage("Cím: A-tól Z-ig"),
+        "titleZToA": MessageLookupByLibrary.simpleMessage("Cím: Z-től A-ig"),
+        "tooManyFaildedLogin": MessageLookupByLibrary.simpleMessage(
+            "Túl sok sikertelen bejelentkezési kísérlet. Kérlek, próbáld újra később."),
         "topUp": MessageLookupByLibrary.simpleMessage("feltölt"),
         "topUpProductNotFound": MessageLookupByLibrary.simpleMessage(
             "A feltöltési termék nem található"),
@@ -1221,6 +1245,8 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("Használja ezt a képet"),
         "userExists": MessageLookupByLibrary.simpleMessage(
             "Ez a felhasználónév/e -mail nem érhető el."),
+        "userNameInCorrect": MessageLookupByLibrary.simpleMessage(
+            "A felhasználónév vagy jelszó helytelen."),
         "username": MessageLookupByLibrary.simpleMessage("Felhasználónév"),
         "usernameAndPasswordRequired": MessageLookupByLibrary.simpleMessage(
             "Felhasználónév és jelszó szükséges"),
@@ -1240,6 +1266,8 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("Pénztárcán keresztül"),
         "video": MessageLookupByLibrary.simpleMessage("Videó"),
         "vietnamese": MessageLookupByLibrary.simpleMessage("Vietnám"),
+        "viewOnGoogleMaps": MessageLookupByLibrary.simpleMessage(
+            "Megtekintés a Google Térképen"),
         "viewRecentTransactions": MessageLookupByLibrary.simpleMessage(
             "Tekintse meg a legutóbbi tranzakciókat"),
         "visible": MessageLookupByLibrary.simpleMessage("Látható"),
diff --git a/lib/generated/intl/messages_id.dart b/lib/generated/intl/messages_id.dart
index 616a66f..4bd9ab9 100644
--- a/lib/generated/intl/messages_id.dart
+++ b/lib/generated/intl/messages_id.dart
@@ -91,23 +91,14 @@ class MessageLookup extends MessageLookupByLibrary {
 
   final messages = _notInlinedMessages(_notInlinedMessages);
   static Map<String, Function> _notInlinedMessages(_) => <String, Function>{
-        "DateDESC": MessageLookupByLibrary.simpleMessage("Tanggal turun"),
-        "Dutch": MessageLookupByLibrary.simpleMessage("Belanda"),
-        "Egypt": MessageLookupByLibrary.simpleMessage("Mesir"),
-        "India": MessageLookupByLibrary.simpleMessage("India"),
-        "Korean": MessageLookupByLibrary.simpleMessage("Korea"),
-        "Netherlands": MessageLookupByLibrary.simpleMessage("Belanda"),
-        "Polish": MessageLookupByLibrary.simpleMessage("Polandia"),
-        "PrivacyAndTerm":
-            MessageLookupByLibrary.simpleMessage("Privasi dan Ketentuan"),
-        "Qty": MessageLookupByLibrary.simpleMessage("Jml"),
-        "Tamil": MessageLookupByLibrary.simpleMessage("Tamil"),
         "UserNameInCorrect": MessageLookupByLibrary.simpleMessage(
             "Nama pengguna atau kata sandi salah"),
         "aboutUs": MessageLookupByLibrary.simpleMessage("Tentang kami"),
         "account": MessageLookupByLibrary.simpleMessage("Rekening"),
         "accountDeleteDescription": MessageLookupByLibrary.simpleMessage(
             "Menghapus akun Anda akan menghapus informasi pribadi dari database kami. Email Anda menjadi cadangan permanen dan email yang sama tidak dapat digunakan kembali untuk mendaftarkan akun baru."),
+        "accountIsPendingApproval": MessageLookupByLibrary.simpleMessage(
+            "Akun sedang menunggu persetujuan."),
         "accountSetup": MessageLookupByLibrary.simpleMessage("Pengaturan akun"),
         "active": MessageLookupByLibrary.simpleMessage("Aktif"),
         "addAName": MessageLookupByLibrary.simpleMessage("Tambahkan nama"),
@@ -178,6 +169,8 @@ class MessageLookup extends MessageLookupByLibrary {
             "Item audio terdeteksi. Apakah Anda ingin menambahkan ke Audio Player?"),
         "availability": MessageLookupByLibrary.simpleMessage("Stok"),
         "availablePoints": m1,
+        "averageRating":
+            MessageLookupByLibrary.simpleMessage("Penilaian rata-rata"),
         "back": MessageLookupByLibrary.simpleMessage("Kembali"),
         "backOrder":
             MessageLookupByLibrary.simpleMessage("Sedang dipesan sebelumnya"),
@@ -229,10 +222,24 @@ class MessageLookup extends MessageLookupByLibrary {
         "byTag": MessageLookupByLibrary.simpleMessage("Dengan Tag"),
         "call": MessageLookupByLibrary.simpleMessage("Panggilan"),
         "callTo": MessageLookupByLibrary.simpleMessage("Lakukan Panggilan Ke"),
+        "canNotCreateOrder":
+            MessageLookupByLibrary.simpleMessage("Tidak dapat membuat pesanan"),
+        "canNotCreateUser": MessageLookupByLibrary.simpleMessage(
+            "Tidak dapat membuat pengguna."),
+        "canNotGetPayments": MessageLookupByLibrary.simpleMessage(
+            "Tidak bisa mendapatkan metode pembayaran"),
+        "canNotGetShipping": MessageLookupByLibrary.simpleMessage(
+            "Tidak bisa mendapatkan metode pengiriman"),
+        "canNotGetToken": MessageLookupByLibrary.simpleMessage(
+            "Tidak bisa mendapatkan Info token."),
         "canNotLaunch": MessageLookupByLibrary.simpleMessage(
             "No se puede iniciar esta aplicación, asegúrese de que su configuración en config.dart sea correcta"),
         "canNotLoadThisLink": MessageLookupByLibrary.simpleMessage(
             "Tidak dapat memuat tautan ini"),
+        "canNotSaveOrder": MessageLookupByLibrary.simpleMessage(
+            "Tidak dapat menyimpan pesanan ke situs web"),
+        "canNotUpdateInfo": MessageLookupByLibrary.simpleMessage(
+            "Tidak dapat memperbarui info pengguna."),
         "cancel": MessageLookupByLibrary.simpleMessage("Batal"),
         "cantFindThisOrderId": MessageLookupByLibrary.simpleMessage(
             "Tidak dapat menemukan ID pesanan ini"),
@@ -351,6 +358,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "date": MessageLookupByLibrary.simpleMessage("Tanggal"),
         "dateASC": MessageLookupByLibrary.simpleMessage("Tanggal naik"),
         "dateBooking": MessageLookupByLibrary.simpleMessage("dateBooking"),
+        "dateDESC": MessageLookupByLibrary.simpleMessage("Tanggal turun"),
         "dateEnd": MessageLookupByLibrary.simpleMessage("Tanggal Berakhir"),
         "dateLatest": MessageLookupByLibrary.simpleMessage("Tanggal: Terbaru"),
         "dateOldest": MessageLookupByLibrary.simpleMessage("Tanggal: Terlama"),
@@ -410,6 +418,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "editProductInfo":
             MessageLookupByLibrary.simpleMessage("Edit Info Produk"),
         "editWithoutColon": MessageLookupByLibrary.simpleMessage("Edit"),
+        "egypt": MessageLookupByLibrary.simpleMessage("Mesir"),
         "email": MessageLookupByLibrary.simpleMessage("Email"),
         "emailDeleteDescription": MessageLookupByLibrary.simpleMessage(
             "Menghapus akun Anda akan menghentikan langganan Anda dari semua milis."),
@@ -425,6 +434,8 @@ class MessageLookup extends MessageLookupByLibrary {
             "Komentar Anda tidak boleh kosong"),
         "emptySearch": MessageLookupByLibrary.simpleMessage(
             "Anda belum mencari item. Mari mulai sekarang - kami akan membantu Anda."),
+        "emptyShippingMsg": MessageLookupByLibrary.simpleMessage(
+            "Tidak ada opsi pengiriman yang tersedia. Harap pastikan bahwa alamat Anda telah dimasukkan dengan benar, atau hubungi kami jika Anda memerlukan bantuan."),
         "emptyUsername": MessageLookupByLibrary.simpleMessage(
             "Nama pengguna / Email kosong"),
         "emptyWishlistSubtitle": MessageLookupByLibrary.simpleMessage(
@@ -564,6 +575,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "inStock": MessageLookupByLibrary.simpleMessage("Stok Tersedia"),
         "incorrectPassword":
             MessageLookupByLibrary.simpleMessage("kata kunci Salah"),
+        "india": MessageLookupByLibrary.simpleMessage("india"),
         "indonesian": MessageLookupByLibrary.simpleMessage("Bahasa Indonesia"),
         "instantlyClose":
             MessageLookupByLibrary.simpleMessage("Langsung tutup"),
@@ -670,6 +682,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "nearbyPlaces": MessageLookupByLibrary.simpleMessage("Nearby Places"),
         "needToLoginAgain": MessageLookupByLibrary.simpleMessage(
             "Anda harus masuk lagi untuk melakukan pembaruan"),
+        "netherlands": MessageLookupByLibrary.simpleMessage("Belanda"),
         "newPassword": MessageLookupByLibrary.simpleMessage("kata sandi baru"),
         "newVariation": MessageLookupByLibrary.simpleMessage("Variasi baru"),
         "next": MessageLookupByLibrary.simpleMessage("Lanjut"),
@@ -865,7 +878,9 @@ class MessageLookup extends MessageLookupByLibrary {
             "Poin diskon berhasil diterapkan"),
         "pointRewardMessage": MessageLookupByLibrary.simpleMessage(
             "There is the Discount Rule for applying your points to Cart"),
+        "polish": MessageLookupByLibrary.simpleMessage("Polandia"),
         "popular": MessageLookupByLibrary.simpleMessage("Populer"),
+        "popularity": MessageLookupByLibrary.simpleMessage("Kepopuleran"),
         "posAddressToolTip": MessageLookupByLibrary.simpleMessage(
             "Alamat ini akan disimpan ke perangkat lokal Anda. Ini BUKAN alamat pengguna."),
         "postContent": MessageLookupByLibrary.simpleMessage("Kandungan"),
@@ -892,6 +907,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "printerSelection":
             MessageLookupByLibrary.simpleMessage("Pilihan Pencetak"),
         "printing": MessageLookupByLibrary.simpleMessage("Pencetakan..."),
+        "privacyAndTerm":
+            MessageLookupByLibrary.simpleMessage("Privasi dan Ketentuan"),
         "privacyPolicy":
             MessageLookupByLibrary.simpleMessage("Rahasia pribadi"),
         "privacyTerms":
@@ -913,6 +930,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "publish": MessageLookupByLibrary.simpleMessage("Menerbitkan"),
         "pullToLoadMore": MessageLookupByLibrary.simpleMessage(
             "Tarik untuk Muat lebih banyak"),
+        "qty": MessageLookupByLibrary.simpleMessage("Jml"),
         "qtyTotal": m19,
         "rate": MessageLookupByLibrary.simpleMessage("Ulas"),
         "rateTheApp":
@@ -1121,6 +1139,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "support": MessageLookupByLibrary.simpleMessage("Dukung"),
         "swahili": MessageLookupByLibrary.simpleMessage("Swahili"),
         "swedish": MessageLookupByLibrary.simpleMessage("Orang Swedia"),
+        "tagNotExist":
+            MessageLookupByLibrary.simpleMessage("Tag ini tidak ada"),
         "tags": MessageLookupByLibrary.simpleMessage("Tags"),
         "takePicture": MessageLookupByLibrary.simpleMessage("Mengambil gambar"),
         "tamil": MessageLookupByLibrary.simpleMessage("Tamil"),
@@ -1141,6 +1161,10 @@ class MessageLookup extends MessageLookupByLibrary {
         "tickets": MessageLookupByLibrary.simpleMessage("Tiket"),
         "time": MessageLookupByLibrary.simpleMessage("Waktu"),
         "title": MessageLookupByLibrary.simpleMessage("Judul"),
+        "titleAToZ": MessageLookupByLibrary.simpleMessage("Judul : A sampai Z"),
+        "titleZToA": MessageLookupByLibrary.simpleMessage("Judul: Z ke A"),
+        "tooManyFaildedLogin": MessageLookupByLibrary.simpleMessage(
+            "Terlalu banyak upaya login yang gagal. Silakan coba lagi nanti."),
         "topUp": MessageLookupByLibrary.simpleMessage("Isi ulang"),
         "topUpProductNotFound": MessageLookupByLibrary.simpleMessage(
             "Produk Top Up tidak ditemukan"),
@@ -1199,6 +1223,8 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("Gunakan Gambar ini"),
         "userExists": MessageLookupByLibrary.simpleMessage(
             "Nama pengguna/email ini tidak tersedia."),
+        "userNameInCorrect": MessageLookupByLibrary.simpleMessage(
+            "Nama pengguna atau kata sandi salah."),
         "username": MessageLookupByLibrary.simpleMessage("Nama Pengguna"),
         "usernameAndPasswordRequired": MessageLookupByLibrary.simpleMessage(
             "Nama pengguna dan kata sandi diperlukan"),
@@ -1216,6 +1242,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "viaWallet": MessageLookupByLibrary.simpleMessage("Melalui dompet"),
         "video": MessageLookupByLibrary.simpleMessage("Vidio"),
         "vietnamese": MessageLookupByLibrary.simpleMessage("Orang Vietnam"),
+        "viewOnGoogleMaps":
+            MessageLookupByLibrary.simpleMessage("Lihat di Google Maps"),
         "viewRecentTransactions":
             MessageLookupByLibrary.simpleMessage("Lihat transaksi terbaru"),
         "visible": MessageLookupByLibrary.simpleMessage("Terlihat"),
diff --git a/lib/generated/intl/messages_it.dart b/lib/generated/intl/messages_it.dart
index f5177b3..5901c8f 100644
--- a/lib/generated/intl/messages_it.dart
+++ b/lib/generated/intl/messages_it.dart
@@ -91,23 +91,14 @@ class MessageLookup extends MessageLookupByLibrary {
 
   final messages = _notInlinedMessages(_notInlinedMessages);
   static Map<String, Function> _notInlinedMessages(_) => <String, Function>{
-        "DateDESC": MessageLookupByLibrary.simpleMessage("Data decrescente"),
-        "Dutch": MessageLookupByLibrary.simpleMessage("olandese"),
-        "Egypt": MessageLookupByLibrary.simpleMessage("Egitto"),
-        "India": MessageLookupByLibrary.simpleMessage("hindi"),
-        "Korean": MessageLookupByLibrary.simpleMessage("coreano"),
-        "Netherlands": MessageLookupByLibrary.simpleMessage("Olanda"),
-        "Polish": MessageLookupByLibrary.simpleMessage("Polish"),
-        "PrivacyAndTerm":
-            MessageLookupByLibrary.simpleMessage("Privacy e termini"),
-        "Qty": MessageLookupByLibrary.simpleMessage("Quantità"),
-        "Tamil": MessageLookupByLibrary.simpleMessage("tamil"),
         "UserNameInCorrect": MessageLookupByLibrary.simpleMessage(
             "Il nome utente o password non sono corretti"),
         "aboutUs": MessageLookupByLibrary.simpleMessage("Riguardo a noi"),
         "account": MessageLookupByLibrary.simpleMessage("account"),
         "accountDeleteDescription": MessageLookupByLibrary.simpleMessage(
             "L\'eliminazione del tuo account rimuove le informazioni personali dal nostro database. La tua email diventa permanentemente riservata e la stessa email non può essere riutilizzata per registrare un nuovo account."),
+        "accountIsPendingApproval": MessageLookupByLibrary.simpleMessage(
+            "Il conto è in attesa di approvazione."),
         "accountSetup": MessageLookupByLibrary.simpleMessage(
             "Configurazione dell\'account"),
         "active": MessageLookupByLibrary.simpleMessage("Attivo"),
@@ -177,6 +168,7 @@ class MessageLookup extends MessageLookupByLibrary {
             "Elementi audio rilevati. Vuoi aggiungere a Audio Player?"),
         "availability": MessageLookupByLibrary.simpleMessage("Disponibilità"),
         "availablePoints": m1,
+        "averageRating": MessageLookupByLibrary.simpleMessage("Voto medio"),
         "back": MessageLookupByLibrary.simpleMessage("indietro"),
         "backOrder": MessageLookupByLibrary.simpleMessage("In arretrato"),
         "backToShop": MessageLookupByLibrary.simpleMessage("Torna al negozio"),
@@ -228,10 +220,24 @@ class MessageLookup extends MessageLookupByLibrary {
         "call": MessageLookupByLibrary.simpleMessage("chiamata"),
         "callTo":
             MessageLookupByLibrary.simpleMessage("Effettua una chiamata a"),
+        "canNotCreateOrder": MessageLookupByLibrary.simpleMessage(
+            "Impossibile creare l\'ordine"),
+        "canNotCreateUser": MessageLookupByLibrary.simpleMessage(
+            "Impossibile creare l\'utente."),
+        "canNotGetPayments": MessageLookupByLibrary.simpleMessage(
+            "Impossibile ottenere metodi di pagamento"),
+        "canNotGetShipping": MessageLookupByLibrary.simpleMessage(
+            "Impossibile ottenere i metodi di spedizione"),
+        "canNotGetToken": MessageLookupByLibrary.simpleMessage(
+            "Impossibile ottenere informazioni sul token."),
         "canNotLaunch": MessageLookupByLibrary.simpleMessage(
             "Impossibile avviare questa app, assicurati che le tue impostazioni su config.dart siano corrette"),
         "canNotLoadThisLink": MessageLookupByLibrary.simpleMessage(
             "Impossibile caricare questo collegamento"),
+        "canNotSaveOrder": MessageLookupByLibrary.simpleMessage(
+            "Impossibile salvare l\'ordine sul sito web"),
+        "canNotUpdateInfo": MessageLookupByLibrary.simpleMessage(
+            "Impossibile aggiornare le informazioni sull\'utente."),
         "cancel": MessageLookupByLibrary.simpleMessage("Elimina"),
         "cantFindThisOrderId": MessageLookupByLibrary.simpleMessage(
             "Impossibile trovare questo ID ordine"),
@@ -352,6 +358,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "date": MessageLookupByLibrary.simpleMessage("Data"),
         "dateASC": MessageLookupByLibrary.simpleMessage("Data crescente"),
         "dateBooking": MessageLookupByLibrary.simpleMessage("dateBooking"),
+        "dateDESC": MessageLookupByLibrary.simpleMessage("Data decrescente"),
         "dateEnd": MessageLookupByLibrary.simpleMessage("Data fine"),
         "dateLatest": MessageLookupByLibrary.simpleMessage("Data: più recente"),
         "dateOldest":
@@ -412,6 +419,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "editProductInfo": MessageLookupByLibrary.simpleMessage(
             "Modifica informazioni sul prodotto"),
         "editWithoutColon": MessageLookupByLibrary.simpleMessage("Modificare"),
+        "egypt": MessageLookupByLibrary.simpleMessage("Egitto"),
         "email": MessageLookupByLibrary.simpleMessage("Email"),
         "emailDeleteDescription": MessageLookupByLibrary.simpleMessage(
             "L\'eliminazione del tuo account annullerà l\'iscrizione a tutte le mailing list."),
@@ -427,6 +435,8 @@ class MessageLookup extends MessageLookupByLibrary {
             "Il tuo commento non può essere vuoto"),
         "emptySearch": MessageLookupByLibrary.simpleMessage(
             "Non hai ancora cercato elementi. Cominciamo ora: ti aiuteremo."),
+        "emptyShippingMsg": MessageLookupByLibrary.simpleMessage(
+            "Non sono disponibili opzioni di spedizione. Assicurati che il tuo indirizzo sia stato inserito correttamente o contattaci se hai bisogno di aiuto."),
         "emptyUsername":
             MessageLookupByLibrary.simpleMessage("Nome utente / Email è vuoto"),
         "emptyWishlistSubtitle": MessageLookupByLibrary.simpleMessage(
@@ -564,6 +574,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "inStock": MessageLookupByLibrary.simpleMessage("A magazzino"),
         "incorrectPassword":
             MessageLookupByLibrary.simpleMessage("Password errata"),
+        "india": MessageLookupByLibrary.simpleMessage("hindi"),
         "indonesian": MessageLookupByLibrary.simpleMessage("Italiana"),
         "instantlyClose":
             MessageLookupByLibrary.simpleMessage("Chiudi istantaneamente"),
@@ -674,6 +685,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "nearbyPlaces": MessageLookupByLibrary.simpleMessage("Nearby Places"),
         "needToLoginAgain": MessageLookupByLibrary.simpleMessage(
             "È necessario effettuare nuovamente il login per effettuare l\'aggiornamento"),
+        "netherlands": MessageLookupByLibrary.simpleMessage("Olanda"),
         "newPassword": MessageLookupByLibrary.simpleMessage("Nuova password"),
         "newVariation":
             MessageLookupByLibrary.simpleMessage("Nuova variazione"),
@@ -872,7 +884,9 @@ class MessageLookup extends MessageLookupByLibrary {
             "Il punto sconto è stato applicato con successo"),
         "pointRewardMessage": MessageLookupByLibrary.simpleMessage(
             "There is the Discount Rule for applying your points to Cart"),
+        "polish": MessageLookupByLibrary.simpleMessage("Polish"),
         "popular": MessageLookupByLibrary.simpleMessage("Popolare"),
+        "popularity": MessageLookupByLibrary.simpleMessage("Popolarità"),
         "posAddressToolTip": MessageLookupByLibrary.simpleMessage(
             "Questo indirizzo verrà salvato sul tuo dispositivo locale. NON è l\'indirizzo dell\'utente."),
         "postContent": MessageLookupByLibrary.simpleMessage("Soddisfare"),
@@ -901,6 +915,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "printerSelection":
             MessageLookupByLibrary.simpleMessage("Selezione della stampante"),
         "printing": MessageLookupByLibrary.simpleMessage("Stampa..."),
+        "privacyAndTerm":
+            MessageLookupByLibrary.simpleMessage("Privacy e termini"),
         "privacyPolicy":
             MessageLookupByLibrary.simpleMessage("POLITICA SULLA RISERVATEZZA"),
         "privacyTerms":
@@ -925,6 +941,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "publish": MessageLookupByLibrary.simpleMessage("pubblicare"),
         "pullToLoadMore":
             MessageLookupByLibrary.simpleMessage("Tirare per caricare di più"),
+        "qty": MessageLookupByLibrary.simpleMessage("Quantità"),
         "qtyTotal": m19,
         "rate": MessageLookupByLibrary.simpleMessage("Rate"),
         "rateTheApp": MessageLookupByLibrary.simpleMessage("Valuta l\'app"),
@@ -1145,6 +1162,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "support": MessageLookupByLibrary.simpleMessage("Supporto"),
         "swahili": MessageLookupByLibrary.simpleMessage("Swahili"),
         "swedish": MessageLookupByLibrary.simpleMessage("svedese"),
+        "tagNotExist":
+            MessageLookupByLibrary.simpleMessage("Questo tag non esiste"),
         "tags": MessageLookupByLibrary.simpleMessage("Tag"),
         "takePicture": MessageLookupByLibrary.simpleMessage("Fare una foto"),
         "tamil": MessageLookupByLibrary.simpleMessage("tamil"),
@@ -1165,6 +1184,12 @@ class MessageLookup extends MessageLookupByLibrary {
         "tickets": MessageLookupByLibrary.simpleMessage("biglietti"),
         "time": MessageLookupByLibrary.simpleMessage("tempo"),
         "title": MessageLookupByLibrary.simpleMessage("Titolo"),
+        "titleAToZ":
+            MessageLookupByLibrary.simpleMessage("Titolo: dalla A alla Z"),
+        "titleZToA":
+            MessageLookupByLibrary.simpleMessage("Titolo: dalla Z alla A"),
+        "tooManyFaildedLogin": MessageLookupByLibrary.simpleMessage(
+            "Troppi tentativi di accesso non riusciti. Per favore riprova più tardi."),
         "topUp": MessageLookupByLibrary.simpleMessage("Riempire"),
         "topUpProductNotFound": MessageLookupByLibrary.simpleMessage(
             "Ricarica prodotto non trovato"),
@@ -1224,6 +1249,8 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("Usa questa immagine"),
         "userExists": MessageLookupByLibrary.simpleMessage(
             "Questo nome utente/e-mail non è disponibile."),
+        "userNameInCorrect": MessageLookupByLibrary.simpleMessage(
+            "L\'username o la password non sono corretti."),
         "username": MessageLookupByLibrary.simpleMessage("Nome utente"),
         "usernameAndPasswordRequired": MessageLookupByLibrary.simpleMessage(
             "Sono richiesti nome utente e password"),
@@ -1243,6 +1270,8 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("Tramite portafoglio"),
         "video": MessageLookupByLibrary.simpleMessage("Video"),
         "vietnamese": MessageLookupByLibrary.simpleMessage("vietnamita"),
+        "viewOnGoogleMaps":
+            MessageLookupByLibrary.simpleMessage("Visualizza su Google Maps"),
         "viewRecentTransactions": MessageLookupByLibrary.simpleMessage(
             "Visualizza le transazioni recenti"),
         "visible": MessageLookupByLibrary.simpleMessage("Visibile"),
diff --git a/lib/generated/intl/messages_ja.dart b/lib/generated/intl/messages_ja.dart
index 052fc57..e0d42c5 100644
--- a/lib/generated/intl/messages_ja.dart
+++ b/lib/generated/intl/messages_ja.dart
@@ -91,22 +91,14 @@ class MessageLookup extends MessageLookupByLibrary {
 
   final messages = _notInlinedMessages(_notInlinedMessages);
   static Map<String, Function> _notInlinedMessages(_) => <String, Function>{
-        "DateDESC": MessageLookupByLibrary.simpleMessage("日付の降順"),
-        "Dutch": MessageLookupByLibrary.simpleMessage("オランダの"),
-        "Egypt": MessageLookupByLibrary.simpleMessage("エジプト"),
-        "India": MessageLookupByLibrary.simpleMessage("インド"),
-        "Korean": MessageLookupByLibrary.simpleMessage("韓国語"),
-        "Netherlands": MessageLookupByLibrary.simpleMessage("オランダ"),
-        "Polish": MessageLookupByLibrary.simpleMessage("研磨"),
-        "PrivacyAndTerm": MessageLookupByLibrary.simpleMessage("プライバシーと期間"),
-        "Qty": MessageLookupByLibrary.simpleMessage("数量"),
-        "Tamil": MessageLookupByLibrary.simpleMessage("タミル語"),
         "UserNameInCorrect":
             MessageLookupByLibrary.simpleMessage("ユーザー名またはパスワードが正しくありません"),
         "aboutUs": MessageLookupByLibrary.simpleMessage("私たちに関しては"),
         "account": MessageLookupByLibrary.simpleMessage("アカウント"),
         "accountDeleteDescription": MessageLookupByLibrary.simpleMessage(
             "アカウントを削除すると、データベースから個人情報が削除されます。メールは永久に予約され、同じメールを再利用して新しいアカウントを登録することはできません。"),
+        "accountIsPendingApproval":
+            MessageLookupByLibrary.simpleMessage("アカウントは承認待ちです。"),
         "accountSetup": MessageLookupByLibrary.simpleMessage("アカウント設定"),
         "active": MessageLookupByLibrary.simpleMessage("アクティブ"),
         "addAName": MessageLookupByLibrary.simpleMessage("名前を追加する"),
@@ -163,6 +155,7 @@ class MessageLookup extends MessageLookupByLibrary {
             "オーディオアイテムが検出されました。オーディオプレーヤーに追加しますか？"),
         "availability": MessageLookupByLibrary.simpleMessage("可用性"),
         "availablePoints": m1,
+        "averageRating": MessageLookupByLibrary.simpleMessage("平均評価"),
         "back": MessageLookupByLibrary.simpleMessage("バック"),
         "backOrder": MessageLookupByLibrary.simpleMessage("入荷待ち"),
         "backToShop": MessageLookupByLibrary.simpleMessage("ショップに戻る"),
@@ -204,10 +197,24 @@ class MessageLookup extends MessageLookupByLibrary {
         "byTag": MessageLookupByLibrary.simpleMessage("タグ別"),
         "call": MessageLookupByLibrary.simpleMessage("コール"),
         "callTo": MessageLookupByLibrary.simpleMessage("電話をかける"),
+        "canNotCreateOrder":
+            MessageLookupByLibrary.simpleMessage("オーダーを作成できません"),
+        "canNotCreateUser":
+            MessageLookupByLibrary.simpleMessage("ユーザーを作成できません。"),
+        "canNotGetPayments":
+            MessageLookupByLibrary.simpleMessage("支払い方法を取得できません"),
+        "canNotGetShipping":
+            MessageLookupByLibrary.simpleMessage("配送方法を取得できません"),
+        "canNotGetToken":
+            MessageLookupByLibrary.simpleMessage("トークン情報を取得できません。"),
         "canNotLaunch": MessageLookupByLibrary.simpleMessage(
             "このアプリを起動できません。config.dartの設定が正しいことを確認してください"),
         "canNotLoadThisLink":
             MessageLookupByLibrary.simpleMessage("このリンクを読み込めません"),
+        "canNotSaveOrder":
+            MessageLookupByLibrary.simpleMessage("注文をウェブサイトに保存できません"),
+        "canNotUpdateInfo":
+            MessageLookupByLibrary.simpleMessage("ユーザー情報を更新できません。"),
         "cancel": MessageLookupByLibrary.simpleMessage("キャンセル"),
         "cantFindThisOrderId":
             MessageLookupByLibrary.simpleMessage("この注文IDが見つかりません"),
@@ -308,6 +315,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "date": MessageLookupByLibrary.simpleMessage("日付"),
         "dateASC": MessageLookupByLibrary.simpleMessage("日付の昇順"),
         "dateBooking": MessageLookupByLibrary.simpleMessage("dateBooking"),
+        "dateDESC": MessageLookupByLibrary.simpleMessage("日付の降順"),
         "dateEnd": MessageLookupByLibrary.simpleMessage("終了日"),
         "dateLatest": MessageLookupByLibrary.simpleMessage("日付：最新"),
         "dateOldest": MessageLookupByLibrary.simpleMessage("日付：最古"),
@@ -358,6 +366,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "edit": MessageLookupByLibrary.simpleMessage("編集："),
         "editProductInfo": MessageLookupByLibrary.simpleMessage("製品情報の編集"),
         "editWithoutColon": MessageLookupByLibrary.simpleMessage("編集"),
+        "egypt": MessageLookupByLibrary.simpleMessage("エジプト"),
         "email": MessageLookupByLibrary.simpleMessage("Eメール"),
         "emailDeleteDescription": MessageLookupByLibrary.simpleMessage(
             "アカウントを削除すると、すべてのメーリングリストから退会します。"),
@@ -372,6 +381,8 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("コメントを空にすることはできません"),
         "emptySearch": MessageLookupByLibrary.simpleMessage(
             "まだアイテムを検索していません。今から始めましょう-私たちはあなたを助けます。"),
+        "emptyShippingMsg": MessageLookupByLibrary.simpleMessage(
+            "利用可能な配送オプションはありません。住所が正しく入力されていることを確認するか、サポートが必要な場合はお問い合わせください。"),
         "emptyUsername": MessageLookupByLibrary.simpleMessage("ユーザー名/メールが空です"),
         "emptyWishlistSubtitle": MessageLookupByLibrary.simpleMessage(
             "お気に入りの商品の横にある任意のハートをタップします。ここに保存します！"),
@@ -490,6 +501,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "imageNetwork": MessageLookupByLibrary.simpleMessage("画像ネットワーク"),
         "inStock": MessageLookupByLibrary.simpleMessage("在庫あり"),
         "incorrectPassword": MessageLookupByLibrary.simpleMessage("間違ったパスワード"),
+        "india": MessageLookupByLibrary.simpleMessage("インド"),
         "indonesian": MessageLookupByLibrary.simpleMessage("インドネシア語"),
         "instantlyClose": MessageLookupByLibrary.simpleMessage("すぐに閉じる"),
         "invalidPhoneNumber": MessageLookupByLibrary.simpleMessage("無効な電話番号"),
@@ -582,6 +594,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "nearbyPlaces": MessageLookupByLibrary.simpleMessage("Nearby Places"),
         "needToLoginAgain":
             MessageLookupByLibrary.simpleMessage("更新するには、再度ログインする必要があります"),
+        "netherlands": MessageLookupByLibrary.simpleMessage("オランダ"),
         "newPassword": MessageLookupByLibrary.simpleMessage("新しいパスワード"),
         "newVariation": MessageLookupByLibrary.simpleMessage("新しいバリエーション"),
         "next": MessageLookupByLibrary.simpleMessage("次"),
@@ -759,7 +772,9 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("割引ポイントが正常に適用されました"),
         "pointRewardMessage": MessageLookupByLibrary.simpleMessage(
             "There is the Discount Rule for applying your points to Cart"),
+        "polish": MessageLookupByLibrary.simpleMessage("研磨"),
         "popular": MessageLookupByLibrary.simpleMessage("人気"),
+        "popularity": MessageLookupByLibrary.simpleMessage("人気"),
         "posAddressToolTip": MessageLookupByLibrary.simpleMessage(
             "このアドレスはローカルデバイスに保存されます。ユーザーアドレスではありません。"),
         "postContent": MessageLookupByLibrary.simpleMessage("コンテンツ"),
@@ -781,6 +796,7 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("プリンターが見つかりません"),
         "printerSelection": MessageLookupByLibrary.simpleMessage("プリンタの選択"),
         "printing": MessageLookupByLibrary.simpleMessage("印刷..."),
+        "privacyAndTerm": MessageLookupByLibrary.simpleMessage("プライバシーと期間"),
         "privacyPolicy": MessageLookupByLibrary.simpleMessage("個人情報保護方針"),
         "privacyTerms": MessageLookupByLibrary.simpleMessage("プライバシーと利用規約"),
         "private": MessageLookupByLibrary.simpleMessage("非公開"),
@@ -798,6 +814,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "products": MessageLookupByLibrary.simpleMessage("製品"),
         "publish": MessageLookupByLibrary.simpleMessage("公開する"),
         "pullToLoadMore": MessageLookupByLibrary.simpleMessage("プルしてさらにロード"),
+        "qty": MessageLookupByLibrary.simpleMessage("数量"),
         "qtyTotal": m19,
         "rate": MessageLookupByLibrary.simpleMessage("Rate"),
         "rateTheApp": MessageLookupByLibrary.simpleMessage("アプリを評価し"),
@@ -973,6 +990,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "support": MessageLookupByLibrary.simpleMessage("サポート"),
         "swahili": MessageLookupByLibrary.simpleMessage("スワヒリ語"),
         "swedish": MessageLookupByLibrary.simpleMessage("スウェーデンの"),
+        "tagNotExist": MessageLookupByLibrary.simpleMessage("このタグは存在しません"),
         "tags": MessageLookupByLibrary.simpleMessage("タグ"),
         "takePicture": MessageLookupByLibrary.simpleMessage("写真を撮る"),
         "tamil": MessageLookupByLibrary.simpleMessage("タミル語"),
@@ -992,6 +1010,10 @@ class MessageLookup extends MessageLookupByLibrary {
         "tickets": MessageLookupByLibrary.simpleMessage("切符売場"),
         "time": MessageLookupByLibrary.simpleMessage("時間"),
         "title": MessageLookupByLibrary.simpleMessage("タイトル"),
+        "titleAToZ": MessageLookupByLibrary.simpleMessage("タイトル: A to Z"),
+        "titleZToA": MessageLookupByLibrary.simpleMessage("タイトル: Z to A"),
+        "tooManyFaildedLogin": MessageLookupByLibrary.simpleMessage(
+            "ログイン試行の失敗が多すぎます。後でもう一度やり直してください。"),
         "topUp": MessageLookupByLibrary.simpleMessage("補充"),
         "topUpProductNotFound":
             MessageLookupByLibrary.simpleMessage("トップアップ製品が見つかりません"),
@@ -1036,6 +1058,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "useThisImage": MessageLookupByLibrary.simpleMessage("この画像を使用する"),
         "userExists":
             MessageLookupByLibrary.simpleMessage("このユーザー名/メールアドレスは利用できません。"),
+        "userNameInCorrect":
+            MessageLookupByLibrary.simpleMessage("ユーザー名またはパスワードが正しくありません。"),
         "username": MessageLookupByLibrary.simpleMessage("ユーザー名"),
         "usernameAndPasswordRequired":
             MessageLookupByLibrary.simpleMessage("ユーザー名とパスワードが必要です"),
@@ -1051,6 +1075,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "viaWallet": MessageLookupByLibrary.simpleMessage("ウォレット経由"),
         "video": MessageLookupByLibrary.simpleMessage("ビデオ"),
         "vietnamese": MessageLookupByLibrary.simpleMessage("ベトナム"),
+        "viewOnGoogleMaps":
+            MessageLookupByLibrary.simpleMessage("Google マップで見る"),
         "viewRecentTransactions":
             MessageLookupByLibrary.simpleMessage("最近の取引を見る"),
         "visible": MessageLookupByLibrary.simpleMessage("見える"),
diff --git a/lib/generated/intl/messages_km.dart b/lib/generated/intl/messages_km.dart
index 5a78376..76cd2a1 100644
--- a/lib/generated/intl/messages_km.dart
+++ b/lib/generated/intl/messages_km.dart
@@ -92,24 +92,14 @@ class MessageLookup extends MessageLookupByLibrary {
 
   final messages = _notInlinedMessages(_notInlinedMessages);
   static Map<String, Function> _notInlinedMessages(_) => <String, Function>{
-        "DateDESC":
-            MessageLookupByLibrary.simpleMessage("កាលបរិច្ឆេទធ្លាក់ចុះ"),
-        "Dutch": MessageLookupByLibrary.simpleMessage("ហូឡង់"),
-        "Egypt": MessageLookupByLibrary.simpleMessage("អេហ្ស៊ីប"),
-        "India": MessageLookupByLibrary.simpleMessage("ហិណ្ឌូ"),
-        "Korean": MessageLookupByLibrary.simpleMessage("កូរ៉េ"),
-        "Netherlands": MessageLookupByLibrary.simpleMessage("ហូឡង់"),
-        "Polish": MessageLookupByLibrary.simpleMessage("ប៉ូឡូញ"),
-        "PrivacyAndTerm":
-            MessageLookupByLibrary.simpleMessage("ភាពឯកជន និងរយៈពេល"),
-        "Qty": MessageLookupByLibrary.simpleMessage("ចំនួន"),
-        "Tamil": MessageLookupByLibrary.simpleMessage("តាមិល"),
         "UserNameInCorrect": MessageLookupByLibrary.simpleMessage(
             "ឈ្មោះ​អ្នក​ប្រើ ឬ​ពាក្យ​សម្ងាត់​មិន​ត្រឹមត្រូវ។"),
         "aboutUs": MessageLookupByLibrary.simpleMessage("អំពី​ពួក​យើង"),
         "account": MessageLookupByLibrary.simpleMessage("គណនី"),
         "accountDeleteDescription": MessageLookupByLibrary.simpleMessage(
             "ការលុបគណនីរបស់អ្នកលុបព័ត៌មានផ្ទាល់ខ្លួនចេញពីមូលដ្ឋានទិន្នន័យរបស់យើង។ អ៊ីមែលរបស់អ្នកត្រូវបានបម្រុងទុកជាអចិន្ត្រៃយ៍ ហើយអ៊ីមែលដដែលមិនអាចប្រើឡើងវិញដើម្បីចុះឈ្មោះគណនីថ្មីបានទេ។"),
+        "accountIsPendingApproval":
+            MessageLookupByLibrary.simpleMessage("គណនីកំពុងរង់ចាំការអនុម័ត។"),
         "accountSetup": MessageLookupByLibrary.simpleMessage("ការដំឡើងគណនី"),
         "active": MessageLookupByLibrary.simpleMessage("សកម្ម"),
         "addAName": MessageLookupByLibrary.simpleMessage("បន្ថែមឈ្មោះ"),
@@ -176,6 +166,8 @@ class MessageLookup extends MessageLookupByLibrary {
             "បានរកឃើញប្រភេទសំឡេង។ តើអ្នកចង់បន្ថែមទៅកម្មវិធីចាក់អូឌីយ៉ូទេ?"),
         "availability": MessageLookupByLibrary.simpleMessage("ភាពអាចរកបាន"),
         "availablePoints": m1,
+        "averageRating":
+            MessageLookupByLibrary.simpleMessage("ការវាយតម្លៃជាមធ្យម"),
         "back": MessageLookupByLibrary.simpleMessage("ថយក្រោយ"),
         "backOrder": MessageLookupByLibrary.simpleMessage("នៅ​លើ backorder"),
         "backToShop": MessageLookupByLibrary.simpleMessage("ត្រឡប់ទៅហាង"),
@@ -223,10 +215,24 @@ class MessageLookup extends MessageLookupByLibrary {
         "byTag": MessageLookupByLibrary.simpleMessage("ដោយ Tag"),
         "call": MessageLookupByLibrary.simpleMessage("ហៅ"),
         "callTo": MessageLookupByLibrary.simpleMessage("ធ្វើការហៅទៅកាន់"),
+        "canNotCreateOrder": MessageLookupByLibrary.simpleMessage(
+            "មិនអាចបង្កើតការបញ្ជាទិញបានទេ។"),
+        "canNotCreateUser": MessageLookupByLibrary.simpleMessage(
+            "មិនអាចបង្កើតអ្នកប្រើប្រាស់បានទេ។"),
+        "canNotGetPayments": MessageLookupByLibrary.simpleMessage(
+            "មិនអាចទទួលបានវិធីបង់ប្រាក់បានទេ។"),
+        "canNotGetShipping": MessageLookupByLibrary.simpleMessage(
+            "មិនអាចទទួលបានវិធីសាស្រ្តដឹកជញ្ជូន"),
+        "canNotGetToken": MessageLookupByLibrary.simpleMessage(
+            "មិនអាចទទួលបានព័ត៌មានសញ្ញាសម្ងាត់។"),
         "canNotLaunch": MessageLookupByLibrary.simpleMessage(
             "មិនអាចបើកដំណើរការកម្មវិធីនេះបានទេ សូមប្រាកដថាការកំណត់របស់អ្នកនៅលើ config.dart គឺត្រឹមត្រូវ។"),
         "canNotLoadThisLink":
             MessageLookupByLibrary.simpleMessage("មិនអាចផ្ទុកតំណនេះបានទេ។"),
+        "canNotSaveOrder": MessageLookupByLibrary.simpleMessage(
+            "មិនអាចរក្សាទុកការបញ្ជាទិញទៅគេហទំព័របានទេ។"),
+        "canNotUpdateInfo": MessageLookupByLibrary.simpleMessage(
+            "មិនអាចធ្វើបច្ចុប្បន្នភាពព័ត៌មានអ្នកប្រើប្រាស់បានទេ។"),
         "cancel": MessageLookupByLibrary.simpleMessage("បោះបង់"),
         "cantFindThisOrderId": MessageLookupByLibrary.simpleMessage(
             "រកមិនឃើញលេខសម្គាល់ការបញ្ជាទិញនេះទេ។"),
@@ -345,6 +351,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "dateASC": MessageLookupByLibrary.simpleMessage("កាលបរិច្ឆេទកើនឡើង"),
         "dateBooking":
             MessageLookupByLibrary.simpleMessage("ការកក់កាលបរិច្ឆេទ"),
+        "dateDESC":
+            MessageLookupByLibrary.simpleMessage("កាលបរិច្ឆេទធ្លាក់ចុះ"),
         "dateEnd": MessageLookupByLibrary.simpleMessage("កាលបរិច្ឆេទបញ្ចប់"),
         "dateLatest":
             MessageLookupByLibrary.simpleMessage("កាលបរិច្ឆេទ៖ ចុងក្រោយ"),
@@ -406,6 +414,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "editProductInfo":
             MessageLookupByLibrary.simpleMessage("កែសម្រួលព័ត៌មានផលិតផល"),
         "editWithoutColon": MessageLookupByLibrary.simpleMessage("កែសម្រួល"),
+        "egypt": MessageLookupByLibrary.simpleMessage("អេហ្ស៊ីប"),
         "email": MessageLookupByLibrary.simpleMessage("អ៊ីមែល"),
         "emailDeleteDescription": MessageLookupByLibrary.simpleMessage(
             "ការលុបគណនីរបស់អ្នកនឹងឈប់ជាវអ្នកពីបញ្ជីសំបុត្ររួមទាំងអស់។"),
@@ -421,6 +430,8 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("មតិរបស់អ្នកមិនអាចទទេបានទេ។"),
         "emptySearch": MessageLookupByLibrary.simpleMessage(
             "អ្នកមិនទាន់បានស្វែងរកធាតុនៅឡើយទេ។ ចូរចាប់ផ្តើមឥឡូវនេះ - យើងនឹងជួយអ្នក។"),
+        "emptyShippingMsg": MessageLookupByLibrary.simpleMessage(
+            "មិនមានជម្រើសដឹកជញ្ជូនទេ។ សូមប្រាកដថាអាសយដ្ឋានរបស់អ្នកត្រូវបានបញ្ចូលត្រឹមត្រូវ ឬទាក់ទងមកយើង ប្រសិនបើអ្នកត្រូវការជំនួយណាមួយ។"),
         "emptyUsername":
             MessageLookupByLibrary.simpleMessage("ឈ្មោះអ្នកប្រើ/អ៊ីមែលគឺទទេ"),
         "emptyWishlistSubtitle": MessageLookupByLibrary.simpleMessage(
@@ -558,6 +569,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "inStock": MessageLookupByLibrary.simpleMessage("នៅ​ក្នុង​ស្តុក"),
         "incorrectPassword":
             MessageLookupByLibrary.simpleMessage("ពាក្យសម្ងាត់មិនត្រឹមត្រូវ"),
+        "india": MessageLookupByLibrary.simpleMessage("ហិណ្ឌូ"),
         "indonesian": MessageLookupByLibrary.simpleMessage("ឥណ្ឌូនេស៊ី"),
         "instantlyClose": MessageLookupByLibrary.simpleMessage("បិទភ្លាមៗ"),
         "invalidPhoneNumber":
@@ -665,6 +677,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "nearbyPlaces": MessageLookupByLibrary.simpleMessage("កន្លែងនៅក្បែរ"),
         "needToLoginAgain": MessageLookupByLibrary.simpleMessage(
             "អ្នក​ត្រូវ​ចូល​ម្ដង​ទៀត​ដើម្បី​មាន​ប្រសិទ្ធភាព​អាប់ដេត"),
+        "netherlands": MessageLookupByLibrary.simpleMessage("ហូឡង់"),
         "newPassword":
             MessageLookupByLibrary.simpleMessage("ពាក្យសម្ងាត់​ថ្មី"),
         "newVariation": MessageLookupByLibrary.simpleMessage("បំរែបំរួលថ្មី។"),
@@ -876,7 +889,9 @@ class MessageLookup extends MessageLookupByLibrary {
             "ចំណុចបញ្ចុះតម្លៃត្រូវបានអនុវត្តដោយជោគជ័យ"),
         "pointRewardMessage": MessageLookupByLibrary.simpleMessage(
             "មានច្បាប់បញ្ចុះតម្លៃសម្រាប់អនុវត្តពិន្ទុរបស់អ្នកទៅកន្រ្តក"),
+        "polish": MessageLookupByLibrary.simpleMessage("ប៉ូឡូញ"),
         "popular": MessageLookupByLibrary.simpleMessage("ពេញនិយម"),
+        "popularity": MessageLookupByLibrary.simpleMessage("ប្រជាប្រិយភាព"),
         "posAddressToolTip": MessageLookupByLibrary.simpleMessage(
             "អាសយដ្ឋាននេះនឹងត្រូវបានរក្សាទុកទៅក្នុងឧបករណ៍មូលដ្ឋានរបស់អ្នក។ វាមិនមែនជាអាសយដ្ឋានអ្នកប្រើប្រាស់ទេ។"),
         "postContent": MessageLookupByLibrary.simpleMessage("បង្ហោះខ្លឹមសារ"),
@@ -905,6 +920,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "printerSelection":
             MessageLookupByLibrary.simpleMessage("ការជ្រើសរើសម៉ាស៊ីនបោះពុម្ព"),
         "printing": MessageLookupByLibrary.simpleMessage("ការបោះពុម្ព..."),
+        "privacyAndTerm":
+            MessageLookupByLibrary.simpleMessage("ភាពឯកជន និងរយៈពេល"),
         "privacyPolicy":
             MessageLookupByLibrary.simpleMessage("គោលការណ៍​ភាព​ឯកជន"),
         "privacyTerms":
@@ -927,6 +944,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "publish": MessageLookupByLibrary.simpleMessage("ដាក់ជាសាធារណៈ"),
         "pullToLoadMore":
             MessageLookupByLibrary.simpleMessage("ទាញដើម្បីផ្ទុកបន្ថែមទៀត"),
+        "qty": MessageLookupByLibrary.simpleMessage("ចំនួន"),
         "qtyTotal": m19,
         "rate": MessageLookupByLibrary.simpleMessage("អត្រា"),
         "rateTheApp": MessageLookupByLibrary.simpleMessage("វាយតម្លៃកម្មវិធី"),
@@ -1134,6 +1152,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "support": MessageLookupByLibrary.simpleMessage("គាំទ្រ"),
         "swahili": MessageLookupByLibrary.simpleMessage("ស្វាហ៊ីលី"),
         "swedish": MessageLookupByLibrary.simpleMessage("ស៊ុយអែត"),
+        "tagNotExist":
+            MessageLookupByLibrary.simpleMessage("ស្លាកនេះមិនមានទេ។"),
         "tags": MessageLookupByLibrary.simpleMessage("ស្លាក"),
         "takePicture": MessageLookupByLibrary.simpleMessage("ថតរូប"),
         "tamil": MessageLookupByLibrary.simpleMessage("តាមិល"),
@@ -1154,6 +1174,10 @@ class MessageLookup extends MessageLookupByLibrary {
         "tickets": MessageLookupByLibrary.simpleMessage("សំបុត្រ"),
         "time": MessageLookupByLibrary.simpleMessage("ពេលវេលា"),
         "title": MessageLookupByLibrary.simpleMessage("ចំណងជើង"),
+        "titleAToZ": MessageLookupByLibrary.simpleMessage("ចំណងជើង៖ A ដល់ Z"),
+        "titleZToA": MessageLookupByLibrary.simpleMessage("ចំណងជើង៖ Z ដល់ A"),
+        "tooManyFaildedLogin": MessageLookupByLibrary.simpleMessage(
+            "ការព្យាយាមចូលដែលបរាជ័យច្រើនពេក។ សូម​ព្យាយាម​ម្តង​ទៀត​នៅ​ពេល​ក្រោយ។"),
         "topUp": MessageLookupByLibrary.simpleMessage("បញ្ចូល​លុយ"),
         "topUpProductNotFound": MessageLookupByLibrary.simpleMessage(
             "រកមិនឃើញផលិតផលបញ្ចូលទឹកប្រាក់ទេ។"),
@@ -1209,6 +1233,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "useThisImage": MessageLookupByLibrary.simpleMessage("ប្រើរូបភាពនេះ។"),
         "userExists": MessageLookupByLibrary.simpleMessage(
             "ឈ្មោះអ្នកប្រើ/អ៊ីមែលនេះមានរួចហើយ។"),
+        "userNameInCorrect": MessageLookupByLibrary.simpleMessage(
+            "ឈ្មោះ​អ្នក​ប្រើ ឬ​ពាក្យ​សម្ងាត់​មិន​ត្រឹមត្រូវ។"),
         "username":
             MessageLookupByLibrary.simpleMessage("ឈ្មោះ​អ្នកប្រើប្រាស់"),
         "usernameAndPasswordRequired": MessageLookupByLibrary.simpleMessage(
@@ -1227,6 +1253,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "viaWallet": MessageLookupByLibrary.simpleMessage("តាមរយៈកាបូប Online"),
         "video": MessageLookupByLibrary.simpleMessage("វីដេអូ"),
         "vietnamese": MessageLookupByLibrary.simpleMessage("ជនជាតិវៀតណាម"),
+        "viewOnGoogleMaps":
+            MessageLookupByLibrary.simpleMessage("មើលនៅលើផែនទី Google"),
         "viewRecentTransactions":
             MessageLookupByLibrary.simpleMessage("មើលប្រតិបត្តិដែលកើតមានឡើង"),
         "visible": MessageLookupByLibrary.simpleMessage("ដែល​អាច​មើលឃើញ"),
diff --git a/lib/generated/intl/messages_kn.dart b/lib/generated/intl/messages_kn.dart
index 81d7c0f..f842330 100644
--- a/lib/generated/intl/messages_kn.dart
+++ b/lib/generated/intl/messages_kn.dart
@@ -73,17 +73,6 @@ class MessageLookup extends MessageLookupByLibrary {
 
   final messages = _notInlinedMessages(_notInlinedMessages);
   static Map<String, Function> _notInlinedMessages(_) => <String, Function>{
-        "DateDESC": MessageLookupByLibrary.simpleMessage("ಅವರೋಹಣ ದಿನಾಂಕ"),
-        "Dutch": MessageLookupByLibrary.simpleMessage("ಡಚ್"),
-        "Egypt": MessageLookupByLibrary.simpleMessage("ಈಜಿಪ್ಟ್"),
-        "India": MessageLookupByLibrary.simpleMessage("ಹಿಂದಿ"),
-        "Korean": MessageLookupByLibrary.simpleMessage("ಕೊರಿಯನ್"),
-        "Netherlands": MessageLookupByLibrary.simpleMessage("ಡಚ್"),
-        "Polish": MessageLookupByLibrary.simpleMessage("ಹೊಳಪು ಕೊಡು"),
-        "PrivacyAndTerm":
-            MessageLookupByLibrary.simpleMessage("ಗೌಪ್ಯತೆ ಮತ್ತು ನಿಯಮಗಳು"),
-        "Qty": MessageLookupByLibrary.simpleMessage("ಪ್ರಮಾಣ"),
-        "Tamil": MessageLookupByLibrary.simpleMessage("ತಮಿಲ್"),
         "UserNameInCorrect": MessageLookupByLibrary.simpleMessage(
             "ಬಳಕೆದಾರ ಹೆಸರು ಅಥವಾ ಪಾಸ್ವರ್ಡ್ ತಪ್ಪಾಗಿದೆ"),
         "aboutUs": MessageLookupByLibrary.simpleMessage("ನಮ್ಮ ಬಗ್ಗೆ"),
@@ -273,6 +262,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "date": MessageLookupByLibrary.simpleMessage("ದಿನಾಂಕ"),
         "dateASC": MessageLookupByLibrary.simpleMessage("ಆರೋಹಣ ದಿನಾಂಕ"),
         "dateBooking": MessageLookupByLibrary.simpleMessage("ದಿನಾಂಕ ಬುಕಿಂಗ್"),
+        "dateDESC": MessageLookupByLibrary.simpleMessage("ಅವರೋಹಣ ದಿನಾಂಕ"),
         "dateEnd": MessageLookupByLibrary.simpleMessage("ದಿನಾಂಕ ಅಂತ್ಯ"),
         "dateStart": MessageLookupByLibrary.simpleMessage("ದಿನಾಂಕ ಆರಂಭ"),
         "daysAgo": m4,
@@ -307,6 +297,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "editProductInfo": MessageLookupByLibrary.simpleMessage(
             "ಉತ್ಪನ್ನ ಮಾಹಿತಿಯನ್ನು ಸಂಪಾದಿಸಿ"),
         "editWithoutColon": MessageLookupByLibrary.simpleMessage("ತಿದ್ದು"),
+        "egypt": MessageLookupByLibrary.simpleMessage("ಈಜಿಪ್ಟ್"),
         "email": MessageLookupByLibrary.simpleMessage("ಇಮೇಲ್"),
         "emailDoesNotExist": MessageLookupByLibrary.simpleMessage(
             "ನೀವು ನಮೂದಿಸಿದ ಇ-ಮೇಲ್ ಖಾತೆ ಅಸ್ತಿತ್ವದಲ್ಲಿಲ್ಲ ದಯವಿಟ್ಟು ಪುನಃ ಪ್ರಯತ್ನಿಸಿ."),
@@ -420,6 +411,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "inStock": MessageLookupByLibrary.simpleMessage("ಉಪಲಬ್ಧವಿದೆ"),
         "incorrectPassword":
             MessageLookupByLibrary.simpleMessage("ತಪ್ಪಾದ ಪಾಸ್ವರ್ಡ್"),
+        "india": MessageLookupByLibrary.simpleMessage("ಹಿಂದಿ"),
         "indonesian": MessageLookupByLibrary.simpleMessage("ಇಂಡೋನೇಷಿಯನ್"),
         "invalidPhoneNumber":
             MessageLookupByLibrary.simpleMessage("ಅಮಾನ್ಯವಾದ ಫೋನ್ ಸಂಖ್ಯೆ"),
@@ -502,6 +494,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "nItems": m17,
         "name": MessageLookupByLibrary.simpleMessage("ಹೆಸರು"),
         "nearbyPlaces": MessageLookupByLibrary.simpleMessage("ಹತ್ತಿರದ ಸ್ಥಳಗಳು"),
+        "netherlands": MessageLookupByLibrary.simpleMessage("ಡಚ್"),
         "newPassword": MessageLookupByLibrary.simpleMessage("ಹೊಸ ಗುಪ್ತಪದ"),
         "next": MessageLookupByLibrary.simpleMessage("ಮುಂದೆ"),
         "niceName": MessageLookupByLibrary.simpleMessage("ಒಳ್ಳೆಯ ಹೆಸರು"),
@@ -644,6 +637,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "point": MessageLookupByLibrary.simpleMessage("ಪಾಯಿಂಟ್"),
         "pointRewardMessage": MessageLookupByLibrary.simpleMessage(
             "ಕಾಡಿಗೆ ನಿಮ್ಮ ಅಂಕಗಳನ್ನು ಅನ್ವಯಿಸಲು ರಿಯಾಯಿತಿ ನಿಯಮವಿದೆ"),
+        "polish": MessageLookupByLibrary.simpleMessage("ಹೊಳಪು ಕೊಡು"),
         "popular": MessageLookupByLibrary.simpleMessage("ಜನಪ್ರಿಯ"),
         "postContent": MessageLookupByLibrary.simpleMessage("ವಿಷಯ"),
         "postFail": MessageLookupByLibrary.simpleMessage(
@@ -658,6 +652,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "postTitle": MessageLookupByLibrary.simpleMessage("ಶೀರ್ಷಿಕೆ"),
         "prev": MessageLookupByLibrary.simpleMessage("ಹಿಂದಿನ"),
         "prices": MessageLookupByLibrary.simpleMessage("ಬೆಲೆಗಳು"),
+        "privacyAndTerm":
+            MessageLookupByLibrary.simpleMessage("ಗೌಪ್ಯತೆ ಮತ್ತು ನಿಯಮಗಳು"),
         "privacyPolicy": MessageLookupByLibrary.simpleMessage("ಗೌಪ್ಯತಾ ನೀತಿ"),
         "private": MessageLookupByLibrary.simpleMessage("ಖಾಸಗಿ"),
         "product": MessageLookupByLibrary.simpleMessage("ಉತ್ಪನ್ನ"),
@@ -673,6 +669,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "publish": MessageLookupByLibrary.simpleMessage("ಪ್ರಕಟಿಸಿ"),
         "pullToLoadMore":
             MessageLookupByLibrary.simpleMessage("ಹೆಚ್ಚು ಲೋಡ್ ಮಾಡಲು ಎಳೆಯಿರಿ"),
+        "qty": MessageLookupByLibrary.simpleMessage("ಪ್ರಮಾಣ"),
         "rate": MessageLookupByLibrary.simpleMessage("ರೇಟ್"),
         "rateTheApp":
             MessageLookupByLibrary.simpleMessage("ಅಪ್ಲಿಕೇಶನನ್ನು ರೇಟ್ ಮಾಡಿ"),
@@ -859,6 +856,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "subtotal": MessageLookupByLibrary.simpleMessage("ಉಪಮೊತ್ತ"),
         "tags": MessageLookupByLibrary.simpleMessage("ಆಟಗಳು"),
         "takePicture": MessageLookupByLibrary.simpleMessage("ಚಿತ್ರ ತೆಗೆಯಿರಿ"),
+        "tamil": MessageLookupByLibrary.simpleMessage("ತಮಿಲ್"),
         "tapSelectLocation": MessageLookupByLibrary.simpleMessage(
             "ಈ ಸ್ಥಳವನ್ನು ಆಯ್ಕೆ ಮಾಡಲು ಟ್ಯಾಪ್ ಮಾಡಿ"),
         "tax": MessageLookupByLibrary.simpleMessage("ಕಂದಾಯ"),
diff --git a/lib/generated/intl/messages_ko.dart b/lib/generated/intl/messages_ko.dart
index 4370f6a..c7d61fb 100644
--- a/lib/generated/intl/messages_ko.dart
+++ b/lib/generated/intl/messages_ko.dart
@@ -90,22 +90,14 @@ class MessageLookup extends MessageLookupByLibrary {
 
   final messages = _notInlinedMessages(_notInlinedMessages);
   static Map<String, Function> _notInlinedMessages(_) => <String, Function>{
-        "DateDESC": MessageLookupByLibrary.simpleMessage("내림차순 날짜"),
-        "Dutch": MessageLookupByLibrary.simpleMessage("네덜란드 사람"),
-        "Egypt": MessageLookupByLibrary.simpleMessage("이집트"),
-        "India": MessageLookupByLibrary.simpleMessage("힌디 어"),
-        "Korean": MessageLookupByLibrary.simpleMessage("한국어"),
-        "Netherlands": MessageLookupByLibrary.simpleMessage("네덜란드"),
-        "Polish": MessageLookupByLibrary.simpleMessage("광택"),
-        "PrivacyAndTerm": MessageLookupByLibrary.simpleMessage("개인 정보 보호 및 기간"),
-        "Qty": MessageLookupByLibrary.simpleMessage("수량"),
-        "Tamil": MessageLookupByLibrary.simpleMessage("타밀 사람"),
         "UserNameInCorrect":
             MessageLookupByLibrary.simpleMessage("사용자 이름 또는 비밀번호가 올바르지 않습니다."),
         "aboutUs": MessageLookupByLibrary.simpleMessage("회사 소개"),
         "account": MessageLookupByLibrary.simpleMessage("계정"),
         "accountDeleteDescription": MessageLookupByLibrary.simpleMessage(
             "계정을 삭제하면 데이터베이스에서 개인 정보가 제거됩니다. 귀하의 이메일은 영구적으로 예약되며 새 계정을 등록하는 데 동일한 이메일을 다시 사용할 수 없습니다."),
+        "accountIsPendingApproval":
+            MessageLookupByLibrary.simpleMessage("계정이 승인 대기 중입니다."),
         "accountSetup": MessageLookupByLibrary.simpleMessage("계정 설정"),
         "active": MessageLookupByLibrary.simpleMessage("유효한"),
         "addAName": MessageLookupByLibrary.simpleMessage("이름 추가"),
@@ -165,6 +157,7 @@ class MessageLookup extends MessageLookupByLibrary {
             "오디오 항목이 감지되었습니다. 오디오 플레이어에 추가 하시겠습니까?"),
         "availability": MessageLookupByLibrary.simpleMessage("유효성"),
         "availablePoints": m1,
+        "averageRating": MessageLookupByLibrary.simpleMessage("평균 평점"),
         "back": MessageLookupByLibrary.simpleMessage("뒤로"),
         "backOrder": MessageLookupByLibrary.simpleMessage("이월 주문 중"),
         "backToShop": MessageLookupByLibrary.simpleMessage("쇼핑으로 돌아 가기"),
@@ -204,10 +197,24 @@ class MessageLookup extends MessageLookupByLibrary {
         "byTag": MessageLookupByLibrary.simpleMessage("태그 별"),
         "call": MessageLookupByLibrary.simpleMessage("요구"),
         "callTo": MessageLookupByLibrary.simpleMessage("전화 걸기"),
+        "canNotCreateOrder":
+            MessageLookupByLibrary.simpleMessage("주문을 생성할 수 없습니다"),
+        "canNotCreateUser":
+            MessageLookupByLibrary.simpleMessage("사용자를 생성할 수 없습니다."),
+        "canNotGetPayments":
+            MessageLookupByLibrary.simpleMessage("결제 수단을 받을 수 없습니다"),
+        "canNotGetShipping":
+            MessageLookupByLibrary.simpleMessage("배송 방법을 얻을 수 없습니다"),
+        "canNotGetToken":
+            MessageLookupByLibrary.simpleMessage("토큰 정보를 가져올 수 없습니다."),
         "canNotLaunch": MessageLookupByLibrary.simpleMessage(
             "이 앱을 실행할 수 없습니다. config.dart의 설정이 올바른지 확인하십시오."),
         "canNotLoadThisLink":
             MessageLookupByLibrary.simpleMessage("이 링크를 로드할 수 없습니다"),
+        "canNotSaveOrder":
+            MessageLookupByLibrary.simpleMessage("웹사이트에 주문을 저장할 수 없습니다"),
+        "canNotUpdateInfo":
+            MessageLookupByLibrary.simpleMessage("사용자 정보를 업데이트할 수 없습니다."),
         "cancel": MessageLookupByLibrary.simpleMessage("취소"),
         "cantFindThisOrderId":
             MessageLookupByLibrary.simpleMessage("이 주문 ID를 찾을 수 없습니다."),
@@ -306,6 +313,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "date": MessageLookupByLibrary.simpleMessage("날짜"),
         "dateASC": MessageLookupByLibrary.simpleMessage("날짜 오름차순"),
         "dateBooking": MessageLookupByLibrary.simpleMessage("날짜 예약"),
+        "dateDESC": MessageLookupByLibrary.simpleMessage("내림차순 날짜"),
         "dateEnd": MessageLookupByLibrary.simpleMessage("날짜 종료"),
         "dateLatest": MessageLookupByLibrary.simpleMessage("날짜: 최신"),
         "dateOldest": MessageLookupByLibrary.simpleMessage("날짜: 가장 오래된"),
@@ -356,6 +364,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "edit": MessageLookupByLibrary.simpleMessage("편집하다:"),
         "editProductInfo": MessageLookupByLibrary.simpleMessage("제품 정보 편집"),
         "editWithoutColon": MessageLookupByLibrary.simpleMessage("편집하다"),
+        "egypt": MessageLookupByLibrary.simpleMessage("이집트"),
         "email": MessageLookupByLibrary.simpleMessage("이메일"),
         "emailDeleteDescription": MessageLookupByLibrary.simpleMessage(
             "계정을 삭제하면 모든 메일링 리스트에서 구독이 취소됩니다."),
@@ -370,6 +379,8 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("댓글은 비워 둘 수 없습니다."),
         "emptySearch": MessageLookupByLibrary.simpleMessage(
             "아직 항목을 검색하지 않았습니다. 지금 시작하겠습니다. 저희가 도와 드리겠습니다."),
+        "emptyShippingMsg": MessageLookupByLibrary.simpleMessage(
+            "배송 옵션이 없습니다. 주소가 올바르게 입력되었는지 확인하거나 도움이 필요한 경우 당사에 문의하십시오."),
         "emptyUsername":
             MessageLookupByLibrary.simpleMessage("사용자 이름 / 이메일이 비어 있습니다."),
         "emptyWishlistSubtitle": MessageLookupByLibrary.simpleMessage(
@@ -485,6 +496,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "imageNetwork": MessageLookupByLibrary.simpleMessage("이미지 네트워크"),
         "inStock": MessageLookupByLibrary.simpleMessage("재고"),
         "incorrectPassword": MessageLookupByLibrary.simpleMessage("잘못된 비밀번호"),
+        "india": MessageLookupByLibrary.simpleMessage("힌디 어"),
         "indonesian": MessageLookupByLibrary.simpleMessage("인도네시아 인"),
         "instantlyClose": MessageLookupByLibrary.simpleMessage("즉시 닫기"),
         "invalidPhoneNumber":
@@ -575,6 +587,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "nearbyPlaces": MessageLookupByLibrary.simpleMessage("주변 장소"),
         "needToLoginAgain":
             MessageLookupByLibrary.simpleMessage("업데이트를 적용하려면 다시 로그인해야 합니다."),
+        "netherlands": MessageLookupByLibrary.simpleMessage("네덜란드"),
         "newPassword": MessageLookupByLibrary.simpleMessage("새 비밀번호"),
         "newVariation": MessageLookupByLibrary.simpleMessage("새로운 변형"),
         "next": MessageLookupByLibrary.simpleMessage("다음 것"),
@@ -742,7 +755,9 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("할인 포인트가 성공적으로 적용되었습니다."),
         "pointRewardMessage":
             MessageLookupByLibrary.simpleMessage("장바구니에 포인트 적용시 할인 규정이 있습니다."),
+        "polish": MessageLookupByLibrary.simpleMessage("광택"),
         "popular": MessageLookupByLibrary.simpleMessage("인기 있는"),
+        "popularity": MessageLookupByLibrary.simpleMessage("인기"),
         "posAddressToolTip": MessageLookupByLibrary.simpleMessage(
             "이 주소는 로컬 장치에 저장됩니다. 사용자 주소가 아닙니다."),
         "postContent": MessageLookupByLibrary.simpleMessage("함유량"),
@@ -763,6 +778,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "printerNotFound": MessageLookupByLibrary.simpleMessage("프린터를 찾을 수 없음"),
         "printerSelection": MessageLookupByLibrary.simpleMessage("프린터 선택"),
         "printing": MessageLookupByLibrary.simpleMessage("인쇄..."),
+        "privacyAndTerm": MessageLookupByLibrary.simpleMessage("개인 정보 보호 및 기간"),
         "privacyPolicy": MessageLookupByLibrary.simpleMessage("개인 정보 정책"),
         "privacyTerms": MessageLookupByLibrary.simpleMessage("개인정보 및 약관"),
         "private": MessageLookupByLibrary.simpleMessage("은밀한"),
@@ -780,6 +796,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "products": MessageLookupByLibrary.simpleMessage("제작품"),
         "publish": MessageLookupByLibrary.simpleMessage("게시"),
         "pullToLoadMore": MessageLookupByLibrary.simpleMessage("더로드하려면 당기기"),
+        "qty": MessageLookupByLibrary.simpleMessage("수량"),
         "qtyTotal": m19,
         "rate": MessageLookupByLibrary.simpleMessage("율"),
         "rateTheApp": MessageLookupByLibrary.simpleMessage("앱 평가"),
@@ -949,6 +966,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "support": MessageLookupByLibrary.simpleMessage("지원하다"),
         "swahili": MessageLookupByLibrary.simpleMessage("스와힐리어"),
         "swedish": MessageLookupByLibrary.simpleMessage("스웨덴어"),
+        "tagNotExist": MessageLookupByLibrary.simpleMessage("이 태그는 존재하지 않습니다"),
         "tags": MessageLookupByLibrary.simpleMessage("태그"),
         "takePicture": MessageLookupByLibrary.simpleMessage("사진을 촬영"),
         "tamil": MessageLookupByLibrary.simpleMessage("타밀 사람"),
@@ -968,6 +986,10 @@ class MessageLookup extends MessageLookupByLibrary {
         "tickets": MessageLookupByLibrary.simpleMessage("티켓"),
         "time": MessageLookupByLibrary.simpleMessage("시각"),
         "title": MessageLookupByLibrary.simpleMessage("표제"),
+        "titleAToZ": MessageLookupByLibrary.simpleMessage("제목: A to Z"),
+        "titleZToA": MessageLookupByLibrary.simpleMessage("제목: Z to A"),
+        "tooManyFaildedLogin": MessageLookupByLibrary.simpleMessage(
+            "실패한 로그인 시도가 너무 많습니다. 나중에 다시 시도 해주십시오."),
         "topUp": MessageLookupByLibrary.simpleMessage("위로"),
         "topUpProductNotFound":
             MessageLookupByLibrary.simpleMessage("충전 제품을 찾을 수 없음"),
@@ -1011,6 +1033,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "useThisImage": MessageLookupByLibrary.simpleMessage("이 이미지 사용"),
         "userExists":
             MessageLookupByLibrary.simpleMessage("이 사용자 이름/이메일은 사용할 수 없습니다."),
+        "userNameInCorrect":
+            MessageLookupByLibrary.simpleMessage("사용자 이름 또는 암호가 올바르지 않습니다."),
         "username": MessageLookupByLibrary.simpleMessage("사용자 이름"),
         "usernameAndPasswordRequired":
             MessageLookupByLibrary.simpleMessage("사용자 이름과 암호가 필요합니다"),
@@ -1026,6 +1050,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "viaWallet": MessageLookupByLibrary.simpleMessage("지갑을 통해"),
         "video": MessageLookupByLibrary.simpleMessage("비디오"),
         "vietnamese": MessageLookupByLibrary.simpleMessage("베트남어"),
+        "viewOnGoogleMaps":
+            MessageLookupByLibrary.simpleMessage("Google 지도에서 보기"),
         "viewRecentTransactions":
             MessageLookupByLibrary.simpleMessage("최근 거래 보기"),
         "visible": MessageLookupByLibrary.simpleMessage("명백한"),
diff --git a/lib/generated/intl/messages_ku.dart b/lib/generated/intl/messages_ku.dart
index 3af4310..124171d 100644
--- a/lib/generated/intl/messages_ku.dart
+++ b/lib/generated/intl/messages_ku.dart
@@ -60,10 +60,6 @@ class MessageLookup extends MessageLookupByLibrary {
 
   final messages = _notInlinedMessages(_notInlinedMessages);
   static Map<String, Function> _notInlinedMessages(_) => <String, Function>{
-        "Egypt": MessageLookupByLibrary.simpleMessage("میسر"),
-        "PrivacyAndTerm":
-            MessageLookupByLibrary.simpleMessage("مەرج و یاسای بەکارهێنان"),
-        "Qty": MessageLookupByLibrary.simpleMessage("بڕ"),
         "UserNameInCorrect": MessageLookupByLibrary.simpleMessage(
             "ناوى بەکارهێنەر، ووشەى تێپەڕ هەڵەیە"),
         "aboutUs": MessageLookupByLibrary.simpleMessage("دەربارەی ئێمە"),
@@ -206,6 +202,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "editProductInfo": MessageLookupByLibrary.simpleMessage(
             "گۆڕانکارى کردن لە زانیارى بەرهەم"),
         "editWithoutColon": MessageLookupByLibrary.simpleMessage("گۆڕانکارى"),
+        "egypt": MessageLookupByLibrary.simpleMessage("میسر"),
         "email": MessageLookupByLibrary.simpleMessage("ئیمەیل"),
         "emailIsRequired":
             MessageLookupByLibrary.simpleMessage(" ئیمەیل ئادرەس داواکراوە"),
@@ -434,6 +431,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "postProduct": MessageLookupByLibrary.simpleMessage("بەرهەم پۆست بکە"),
         "prev": MessageLookupByLibrary.simpleMessage("پێشتر"),
         "prices": MessageLookupByLibrary.simpleMessage("نرخەکان"),
+        "privacyAndTerm":
+            MessageLookupByLibrary.simpleMessage("مەرج و یاسای بەکارهێنان"),
         "product": MessageLookupByLibrary.simpleMessage("بەرهەم"),
         "productAdded": MessageLookupByLibrary.simpleMessage("کاڵا زیادکرا"),
         "productName": MessageLookupByLibrary.simpleMessage("ناوی بەرهەم"),
@@ -443,6 +442,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "products": MessageLookupByLibrary.simpleMessage("بەرهەمەکان"),
         "pullToLoadMore":
             MessageLookupByLibrary.simpleMessage("ڕاکێشە بۆ بارکردنی زیاتر"),
+        "qty": MessageLookupByLibrary.simpleMessage("بڕ"),
         "rate": MessageLookupByLibrary.simpleMessage("هەڵسەنگاندن"),
         "rateTheApp":
             MessageLookupByLibrary.simpleMessage("هەڵسەنگاندنى ئەپڵیکەشن"),
diff --git a/lib/generated/intl/messages_lo.dart b/lib/generated/intl/messages_lo.dart
index 07c9f1e..192d7b8 100644
--- a/lib/generated/intl/messages_lo.dart
+++ b/lib/generated/intl/messages_lo.dart
@@ -91,23 +91,14 @@ class MessageLookup extends MessageLookupByLibrary {
 
   final messages = _notInlinedMessages(_notInlinedMessages);
   static Map<String, Function> _notInlinedMessages(_) => <String, Function>{
-        "DateDESC": MessageLookupByLibrary.simpleMessage("ວັນທີຫຼຸດລົງ"),
-        "Dutch": MessageLookupByLibrary.simpleMessage("ໂຮນລັງ"),
-        "Egypt": MessageLookupByLibrary.simpleMessage("ອີຢີບ"),
-        "India": MessageLookupByLibrary.simpleMessage("ຮິນດູ"),
-        "Korean": MessageLookupByLibrary.simpleMessage("ເກົາຫຼີ"),
-        "Netherlands": MessageLookupByLibrary.simpleMessage("ໂຮນລັງ"),
-        "Polish": MessageLookupByLibrary.simpleMessage("ໂປໂລຍ"),
-        "PrivacyAndTerm": MessageLookupByLibrary.simpleMessage(
-            "ຄວາມເປັນສ່ວນຕົວ ແລະ ກົດລະບຽບ"),
-        "Qty": MessageLookupByLibrary.simpleMessage("ຈຳນວນ"),
-        "Tamil": MessageLookupByLibrary.simpleMessage("ທະມິນ"),
         "UserNameInCorrect": MessageLookupByLibrary.simpleMessage(
             "ຊື່ຜູ້ໃຊ້ ຫຼືລະຫັດຜ່ານບໍ່ຖືກຕ້ອງ"),
         "aboutUs": MessageLookupByLibrary.simpleMessage("ກ່ຽວ​ກັບ​ພວກ​ເຮົາ"),
         "account": MessageLookupByLibrary.simpleMessage("ບັນຊີ"),
         "accountDeleteDescription": MessageLookupByLibrary.simpleMessage(
             "ການລຶບບັນຊີຂອງທ່ານເອົາຂໍ້ມູນສ່ວນຕົວອອກຈາກຖານຂໍ້ມູນຂອງພວກເຮົາ. ອີເມວຂອງທ່ານຖືກສະຫງວນໄວ້ຢ່າງຖາວອນ ແລະບໍ່ສາມາດໃຊ້ອີເມວດຽວກັນເພື່ອລົງທະບຽນບັນຊີໃໝ່ໄດ້."),
+        "accountIsPendingApproval":
+            MessageLookupByLibrary.simpleMessage("ບັນຊີແມ່ນລໍຖ້າການອະນຸມັດ."),
         "accountSetup":
             MessageLookupByLibrary.simpleMessage("ການ​ຕັ້ງ​ຄ່າ​ບັນ​ຊີ​"),
         "active": MessageLookupByLibrary.simpleMessage("ເປີດໃຊ້ງານ"),
@@ -174,6 +165,7 @@ class MessageLookup extends MessageLookupByLibrary {
             "ກວດພົບລາຍການສຽງ. ທ່ານຕ້ອງການເພີ່ມໃສ່ເຄື່ອງຫຼິ້ນສຽງບໍ?"),
         "availability": MessageLookupByLibrary.simpleMessage("ສາມາດນຳໃຊ້ໄດ້"),
         "availablePoints": m1,
+        "averageRating": MessageLookupByLibrary.simpleMessage("ຄະແນນສະເລ່ຍ"),
         "back": MessageLookupByLibrary.simpleMessage("ກັບໄປ"),
         "backOrder": MessageLookupByLibrary.simpleMessage("ສັ່ງຄືນ"),
         "backToShop": MessageLookupByLibrary.simpleMessage("ກັບໄປທີ່ຮ້ານຄ້າ"),
@@ -219,10 +211,24 @@ class MessageLookup extends MessageLookupByLibrary {
         "byTag": MessageLookupByLibrary.simpleMessage("ຕາມ Tag"),
         "call": MessageLookupByLibrary.simpleMessage("ເບີໂທ"),
         "callTo": MessageLookupByLibrary.simpleMessage("ໂທຫາ"),
+        "canNotCreateOrder":
+            MessageLookupByLibrary.simpleMessage("ບໍ່ສາມາດສ້າງຄໍາສັ່ງ"),
+        "canNotCreateUser":
+            MessageLookupByLibrary.simpleMessage("ບໍ່ສາມາດສ້າງຜູ້ໃຊ້ໄດ້."),
+        "canNotGetPayments": MessageLookupByLibrary.simpleMessage(
+            "ບໍ່ສາມາດຮັບວິທີການຈ່າຍເງິນໄດ້"),
+        "canNotGetShipping": MessageLookupByLibrary.simpleMessage(
+            "ບໍ່ສາມາດໄດ້ຮັບວິທີການຂົນສົ່ງ"),
+        "canNotGetToken": MessageLookupByLibrary.simpleMessage(
+            "ບໍ່ສາມາດຮັບຂໍ້ມູນ token ໄດ້."),
         "canNotLaunch": MessageLookupByLibrary.simpleMessage(
             "ບໍ່ສາມາດເປີດແອັບຯນີ້ໄດ້, ກະລຸນກວດການຕັ້ງຄ່າຂອງທ່ານໃນ config.dart ໃຫ້ຖືກຕ້ອງ"),
         "canNotLoadThisLink":
             MessageLookupByLibrary.simpleMessage("ບໍ່ສາມາດໂຫຼດລິ້ງນີ້ໄດ້"),
+        "canNotSaveOrder": MessageLookupByLibrary.simpleMessage(
+            "ບໍ່ສາມາດບັນທຶກຄຳສັ່ງຊື້ໃສ່ເວັບໄຊທ໌ໄດ້"),
+        "canNotUpdateInfo": MessageLookupByLibrary.simpleMessage(
+            "ບໍ່ສາມາດອັບເດດຂໍ້ມູນຜູ້ໃຊ້ໄດ້."),
         "cancel": MessageLookupByLibrary.simpleMessage("ຍົກເລີກ"),
         "cantFindThisOrderId": MessageLookupByLibrary.simpleMessage(
             "ບໍ່ສາມາດຊອກຫາ ID ສັ່ງຊື້ນີ້ໄດ້"),
@@ -336,6 +342,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "date": MessageLookupByLibrary.simpleMessage("ວັນທີ"),
         "dateASC": MessageLookupByLibrary.simpleMessage("ລຳດັບວັນທີ"),
         "dateBooking": MessageLookupByLibrary.simpleMessage("ວັນທີຈອງ"),
+        "dateDESC": MessageLookupByLibrary.simpleMessage("ວັນທີຫຼຸດລົງ"),
         "dateEnd": MessageLookupByLibrary.simpleMessage("ວັນທີສິ້ນສຸດ"),
         "dateLatest": MessageLookupByLibrary.simpleMessage("ວັນທີ: ຫຼ້າສຸດ"),
         "dateOldest":
@@ -393,6 +400,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "editProductInfo":
             MessageLookupByLibrary.simpleMessage("ແກ້ໄຂຂໍ້ມູນຜະລິດຕະພັນ"),
         "editWithoutColon": MessageLookupByLibrary.simpleMessage("ແກ້ໄຂ"),
+        "egypt": MessageLookupByLibrary.simpleMessage("ອີຢີບ"),
         "email": MessageLookupByLibrary.simpleMessage("ອີເມວ"),
         "emailDeleteDescription": MessageLookupByLibrary.simpleMessage(
             "ການລຶບບັນຊີຂອງທ່ານຈະຍົກເລີກການສະໝັກສະມາຊິກຈາກລາຍຊື່ທາງໄປສະນີທັງໝົດ."),
@@ -408,6 +416,8 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("ບໍ່ສາມາດຫວ່າງເປົ່າໄດ້"),
         "emptySearch": MessageLookupByLibrary.simpleMessage(
             "ເຈົ້າຍັງບໍ່ໄດ້ຊອກຫາລາຍການເທື່ອ. ກະລຸນາປ້ອນຂໍ້ມູນ."),
+        "emptyShippingMsg": MessageLookupByLibrary.simpleMessage(
+            "ບໍ່ມີທາງເລືອກໃນການຈັດສົ່ງ. ກະ​ລຸ​ນາ​ຮັບ​ປະ​ກັນ​ວ່າ​ທີ່​ຢູ່​ຂອງ​ທ່ານ​ໄດ້​ຖືກ​ປ້ອນ​ຖືກ​ຕ້ອງ​, ຫຼື​ຕິດ​ຕໍ່​ຫາ​ພວກ​ເຮົາ​ຖ້າ​ຫາກ​ວ່າ​ທ່ານ​ຕ້ອງ​ການ​ການ​ຊ່ວຍ​ເຫຼືອ​ໃດໆ​."),
         "emptyUsername":
             MessageLookupByLibrary.simpleMessage("ຊື່ຜູ້ໃຊ້/ອີເມວຫວ່າງເປົ່າ"),
         "emptyWishlistSubtitle": MessageLookupByLibrary.simpleMessage(
@@ -542,6 +552,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "inStock": MessageLookupByLibrary.simpleMessage("ມີໃນສາງ"),
         "incorrectPassword":
             MessageLookupByLibrary.simpleMessage("ລະຫັດຜ່ານບໍ່ຖືກຕ້ອງ"),
+        "india": MessageLookupByLibrary.simpleMessage("ຮິນດູ"),
         "indonesian": MessageLookupByLibrary.simpleMessage("ພາສາອິນໂດເນເຊຍ"),
         "instantlyClose": MessageLookupByLibrary.simpleMessage("ປິດທັນທີ"),
         "invalidPhoneNumber":
@@ -647,6 +658,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "nearbyPlaces": MessageLookupByLibrary.simpleMessage("ສະຖານທີ່ໃກ້ຄຽງ"),
         "needToLoginAgain": MessageLookupByLibrary.simpleMessage(
             "ທ່ານຕ້ອງເຂົ້າສູ່ລະບົບອີກຄັ້ງເພື່ອໃຫ້ມີຜົນການອັບເດດ"),
+        "netherlands": MessageLookupByLibrary.simpleMessage("ໂຮນລັງ"),
         "newPassword": MessageLookupByLibrary.simpleMessage("ລະຫັດຜ່ານໃໝ່"),
         "newVariation": MessageLookupByLibrary.simpleMessage("ການປ່ຽນແປງໃຫມ່"),
         "next": MessageLookupByLibrary.simpleMessage("ຕໍ່ໄປ"),
@@ -842,7 +854,9 @@ class MessageLookup extends MessageLookupByLibrary {
             "ສ່ວນຫຼຸດຖືກນຳໃຊ້ຢ່າງສຳເລັດຜົນ"),
         "pointRewardMessage": MessageLookupByLibrary.simpleMessage(
             "ກົດລະບຽບສຳລັບການນຳໃຊ້ສ່ວນຫຼຸດ"),
+        "polish": MessageLookupByLibrary.simpleMessage("ໂປໂລຍ"),
         "popular": MessageLookupByLibrary.simpleMessage("ນິຍົມ"),
+        "popularity": MessageLookupByLibrary.simpleMessage("ຄວາມນິຍົມ"),
         "posAddressToolTip": MessageLookupByLibrary.simpleMessage(
             "ທີ່ຢູ່ນີ້ຈະຖືກບັນທຶກໄວ້ໃນອຸປະກອນທ້ອງຖິ່ນຂອງທ່ານ. ມັນບໍ່ແມ່ນທີ່ຢູ່ຂອງຜູ້ໃຊ້."),
         "postContent": MessageLookupByLibrary.simpleMessage("ເນື້ອຫາ"),
@@ -870,6 +884,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "printerSelection":
             MessageLookupByLibrary.simpleMessage("ການເລືອກເຄື່ອງພິມ"),
         "printing": MessageLookupByLibrary.simpleMessage("ການພິມ..."),
+        "privacyAndTerm": MessageLookupByLibrary.simpleMessage(
+            "ຄວາມເປັນສ່ວນຕົວ ແລະ ກົດລະບຽບ"),
         "privacyPolicy":
             MessageLookupByLibrary.simpleMessage("ນະໂຍບາຍຄວາມເປັນສ່ວນຕົວ"),
         "privacyTerms":
@@ -891,6 +907,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "products": MessageLookupByLibrary.simpleMessage("ຜະລິດຕະພັນ"),
         "publish": MessageLookupByLibrary.simpleMessage("ເຜີຍແຜ່"),
         "pullToLoadMore": MessageLookupByLibrary.simpleMessage("ໂຫຼດເພີ່ມເຕີມ"),
+        "qty": MessageLookupByLibrary.simpleMessage("ຈຳນວນ"),
         "qtyTotal": m19,
         "rate": MessageLookupByLibrary.simpleMessage("ຄະແນນ"),
         "rateTheApp": MessageLookupByLibrary.simpleMessage("ໃຫ້ຄະແນນແອັບ"),
@@ -1086,6 +1103,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "support": MessageLookupByLibrary.simpleMessage("ສະ ໜັບ ສະ ໜູນ"),
         "swahili": MessageLookupByLibrary.simpleMessage("Swahili"),
         "swedish": MessageLookupByLibrary.simpleMessage("ພາສາສະວິແດນ"),
+        "tagNotExist": MessageLookupByLibrary.simpleMessage("ບໍ່ມີແທັກນີ້"),
         "tags": MessageLookupByLibrary.simpleMessage("ປ້າຍ"),
         "takePicture": MessageLookupByLibrary.simpleMessage("ຖ່າຍ​ຮູບ"),
         "tamil": MessageLookupByLibrary.simpleMessage("ທະມິນ"),
@@ -1106,6 +1124,10 @@ class MessageLookup extends MessageLookupByLibrary {
         "tickets": MessageLookupByLibrary.simpleMessage("ປີ"),
         "time": MessageLookupByLibrary.simpleMessage("ເວລາ"),
         "title": MessageLookupByLibrary.simpleMessage("ຫົວຂໍ້"),
+        "titleAToZ": MessageLookupByLibrary.simpleMessage("ຫົວຂໍ້: A ຫາ Z"),
+        "titleZToA": MessageLookupByLibrary.simpleMessage("ຊື່: Z ຫາ A"),
+        "tooManyFaildedLogin": MessageLookupByLibrary.simpleMessage(
+            "ພະຍາຍາມເຂົ້າສູ່ລະບົບລົ້ມເຫລວຫຼາຍຄັ້ງເກີນໄປ. ກະລຸນາລອງໃໝ່ໃນພາຍຫຼັງ."),
         "topUp": MessageLookupByLibrary.simpleMessage("ຕື່ມເງິນ"),
         "topUpProductNotFound":
             MessageLookupByLibrary.simpleMessage("ບໍ່ພົບຜະລິດຕະພັນການເຕີມເງິນ"),
@@ -1159,6 +1181,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "useThisImage": MessageLookupByLibrary.simpleMessage("ໃຊ້ຮູບນີ້"),
         "userExists":
             MessageLookupByLibrary.simpleMessage("ຊື່ຜູ້ໃຊ້/ອີເມວນີ້ບໍ່ມີ."),
+        "userNameInCorrect": MessageLookupByLibrary.simpleMessage(
+            "ຊື່ຜູ້ໃຊ້ ຫຼືລະຫັດຜ່ານບໍ່ຖືກຕ້ອງ."),
         "username": MessageLookupByLibrary.simpleMessage("ຊື່ຜູ້ໃຊ້"),
         "usernameAndPasswordRequired": MessageLookupByLibrary.simpleMessage(
             "ຊື່ຜູ້ໃຊ້ແລະລະຫັດຜ່ານແມ່ນຕ້ອງການ"),
@@ -1176,6 +1200,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "viaWallet": MessageLookupByLibrary.simpleMessage("ຜ່ານ wallet"),
         "video": MessageLookupByLibrary.simpleMessage("ວິດີໂອ"),
         "vietnamese": MessageLookupByLibrary.simpleMessage("ພາສາຫວຽດນາມ"),
+        "viewOnGoogleMaps":
+            MessageLookupByLibrary.simpleMessage("ເບິ່ງໃນແຜນທີ່ Google"),
         "viewRecentTransactions":
             MessageLookupByLibrary.simpleMessage("ເບິ່ງທຸລະກໍາທີ່ຜ່ານມາ"),
         "visible": MessageLookupByLibrary.simpleMessage("ສະແດງ"),
diff --git a/lib/generated/intl/messages_mr.dart b/lib/generated/intl/messages_mr.dart
index 749c4ee..e1bdbd9 100644
--- a/lib/generated/intl/messages_mr.dart
+++ b/lib/generated/intl/messages_mr.dart
@@ -74,17 +74,6 @@ class MessageLookup extends MessageLookupByLibrary {
 
   final messages = _notInlinedMessages(_notInlinedMessages);
   static Map<String, Function> _notInlinedMessages(_) => <String, Function>{
-        "DateDESC": MessageLookupByLibrary.simpleMessage("उतरण्याची तारीख"),
-        "Dutch": MessageLookupByLibrary.simpleMessage("डच"),
-        "Egypt": MessageLookupByLibrary.simpleMessage("इजिप्त"),
-        "India": MessageLookupByLibrary.simpleMessage("हिंदी"),
-        "Korean": MessageLookupByLibrary.simpleMessage("कोरियन"),
-        "Netherlands": MessageLookupByLibrary.simpleMessage("डच"),
-        "Polish": MessageLookupByLibrary.simpleMessage("पोलिश"),
-        "PrivacyAndTerm":
-            MessageLookupByLibrary.simpleMessage("गोपनीयता आणि अटी"),
-        "Qty": MessageLookupByLibrary.simpleMessage("मात्रा"),
-        "Tamil": MessageLookupByLibrary.simpleMessage("तमिळ"),
         "UserNameInCorrect": MessageLookupByLibrary.simpleMessage(
             "वापरकर्तानाव किंवा पासवर्ड चुकीचा आहे"),
         "aboutUs": MessageLookupByLibrary.simpleMessage("आमच्याबद्दल"),
@@ -261,6 +250,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "date": MessageLookupByLibrary.simpleMessage("तारीख"),
         "dateASC": MessageLookupByLibrary.simpleMessage("चढत्या तारखेला"),
         "dateBooking": MessageLookupByLibrary.simpleMessage("बुकिंगची तारीख"),
+        "dateDESC": MessageLookupByLibrary.simpleMessage("उतरण्याची तारीख"),
         "dateEnd": MessageLookupByLibrary.simpleMessage("तारीख संपली"),
         "dateStart": MessageLookupByLibrary.simpleMessage("प्रारंभ तारीख"),
         "daysAgo": m4,
@@ -294,6 +284,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "editProductInfo":
             MessageLookupByLibrary.simpleMessage("उत्पादन माहिती संपादित करा"),
         "editWithoutColon": MessageLookupByLibrary.simpleMessage("सुधारणे"),
+        "egypt": MessageLookupByLibrary.simpleMessage("इजिप्त"),
         "email": MessageLookupByLibrary.simpleMessage("ईमेल"),
         "emailDoesNotExist": MessageLookupByLibrary.simpleMessage(
             "तुम्ही प्रविष्ट केलेले ईमेल खाते अस्तित्वात नाही. कृपया पुन्हा प्रयत्न करा."),
@@ -402,6 +393,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "inStock": MessageLookupByLibrary.simpleMessage("स्टॉक मध्ये"),
         "incorrectPassword":
             MessageLookupByLibrary.simpleMessage("चुकीचा पासवर्ड"),
+        "india": MessageLookupByLibrary.simpleMessage("हिंदी"),
         "indonesian": MessageLookupByLibrary.simpleMessage("इंडोनेशियन"),
         "invalidPhoneNumber":
             MessageLookupByLibrary.simpleMessage("अवैध दूरध्वनी क्रमांक"),
@@ -483,6 +475,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "nItems": m17,
         "name": MessageLookupByLibrary.simpleMessage("नाव"),
         "nearbyPlaces": MessageLookupByLibrary.simpleMessage("जवळपासची ठिकाणे"),
+        "netherlands": MessageLookupByLibrary.simpleMessage("डच"),
         "newPassword": MessageLookupByLibrary.simpleMessage("नवीन पासवर्ड"),
         "next": MessageLookupByLibrary.simpleMessage("पुढे"),
         "niceName": MessageLookupByLibrary.simpleMessage("छान नाव"),
@@ -614,6 +607,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "point": MessageLookupByLibrary.simpleMessage("गुण"),
         "pointRewardMessage": MessageLookupByLibrary.simpleMessage(
             "कार्टमध्ये तुमचे मुद्दे लागू करण्यासाठी सवलत नियम आहे"),
+        "polish": MessageLookupByLibrary.simpleMessage("पोलिश"),
         "popular": MessageLookupByLibrary.simpleMessage("लोकप्रिय"),
         "postContent": MessageLookupByLibrary.simpleMessage("सामग्री"),
         "postFail": MessageLookupByLibrary.simpleMessage(
@@ -628,6 +622,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "postTitle": MessageLookupByLibrary.simpleMessage("शीर्षक"),
         "prev": MessageLookupByLibrary.simpleMessage("मागील"),
         "prices": MessageLookupByLibrary.simpleMessage("मेनू"),
+        "privacyAndTerm":
+            MessageLookupByLibrary.simpleMessage("गोपनीयता आणि अटी"),
         "privacyPolicy": MessageLookupByLibrary.simpleMessage("गोपनीयता धोरण"),
         "private": MessageLookupByLibrary.simpleMessage("खाजगी"),
         "product": MessageLookupByLibrary.simpleMessage(" उत्पादन"),
@@ -643,6 +639,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "publish": MessageLookupByLibrary.simpleMessage("प्रकाशित करा"),
         "pullToLoadMore":
             MessageLookupByLibrary.simpleMessage("अधिक लोड करण्यासाठी खेचा"),
+        "qty": MessageLookupByLibrary.simpleMessage("मात्रा"),
         "rate": MessageLookupByLibrary.simpleMessage("रेट"),
         "rateTheApp": MessageLookupByLibrary.simpleMessage("अॅपला रेट करा"),
         "rateThisApp": MessageLookupByLibrary.simpleMessage("अॅपला रेट करा"),
@@ -808,6 +805,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "subtotal": MessageLookupByLibrary.simpleMessage("सबटोटल"),
         "tags": MessageLookupByLibrary.simpleMessage("टॅग्ज"),
         "takePicture": MessageLookupByLibrary.simpleMessage("छायाचित्र काढा"),
+        "tamil": MessageLookupByLibrary.simpleMessage("तमिळ"),
         "tapSelectLocation": MessageLookupByLibrary.simpleMessage(
             "हे स्थान निवडण्यासाठी टॅप करा"),
         "tax": MessageLookupByLibrary.simpleMessage("कर"),
diff --git a/lib/generated/intl/messages_ms.dart b/lib/generated/intl/messages_ms.dart
index e7a3999..10ad4df 100644
--- a/lib/generated/intl/messages_ms.dart
+++ b/lib/generated/intl/messages_ms.dart
@@ -91,23 +91,14 @@ class MessageLookup extends MessageLookupByLibrary {
 
   final messages = _notInlinedMessages(_notInlinedMessages);
   static Map<String, Function> _notInlinedMessages(_) => <String, Function>{
-        "DateDESC": MessageLookupByLibrary.simpleMessage("Tarikh menurun"),
-        "Dutch": MessageLookupByLibrary.simpleMessage("Belanda"),
-        "Egypt": MessageLookupByLibrary.simpleMessage("Mesir"),
-        "India": MessageLookupByLibrary.simpleMessage("Hindi"),
-        "Korean": MessageLookupByLibrary.simpleMessage("Korea"),
-        "Netherlands": MessageLookupByLibrary.simpleMessage("Belanda"),
-        "Polish": MessageLookupByLibrary.simpleMessage("Poland"),
-        "PrivacyAndTerm":
-            MessageLookupByLibrary.simpleMessage("Privasi dan Terma"),
-        "Qty": MessageLookupByLibrary.simpleMessage("Kuantiti"),
-        "Tamil": MessageLookupByLibrary.simpleMessage("Bahasa Tamil"),
         "UserNameInCorrect": MessageLookupByLibrary.simpleMessage(
             "Nama pengguna atau kata laluan adalah salah"),
         "aboutUs": MessageLookupByLibrary.simpleMessage("Tentang kita"),
         "account": MessageLookupByLibrary.simpleMessage("Akaun"),
         "accountDeleteDescription": MessageLookupByLibrary.simpleMessage(
             "Memadam akaun anda mengalih keluar maklumat peribadi daripada pangkalan data kami. E-mel anda akan disimpan secara kekal dan e-mel yang sama tidak boleh digunakan semula untuk mendaftar akaun baharu."),
+        "accountIsPendingApproval": MessageLookupByLibrary.simpleMessage(
+            "Akaun sedang menunggu kelulusan."),
         "accountSetup":
             MessageLookupByLibrary.simpleMessage("Persediaan akaun"),
         "active": MessageLookupByLibrary.simpleMessage("Aktif"),
@@ -178,6 +169,8 @@ class MessageLookup extends MessageLookupByLibrary {
             "Item audio dikesan. Adakah anda ingin menambah pada Pemain Audio?"),
         "availability": MessageLookupByLibrary.simpleMessage("Ketersediaan"),
         "availablePoints": m1,
+        "averageRating":
+            MessageLookupByLibrary.simpleMessage("Penilaian purata"),
         "back": MessageLookupByLibrary.simpleMessage("Kembali"),
         "backOrder":
             MessageLookupByLibrary.simpleMessage("Atas pesanan belakang"),
@@ -228,10 +221,24 @@ class MessageLookup extends MessageLookupByLibrary {
         "byTag": MessageLookupByLibrary.simpleMessage("Mengikut Tag"),
         "call": MessageLookupByLibrary.simpleMessage("Panggilan"),
         "callTo": MessageLookupByLibrary.simpleMessage("Buat Panggilan Ke"),
+        "canNotCreateOrder":
+            MessageLookupByLibrary.simpleMessage("Tidak boleh membuat pesanan"),
+        "canNotCreateUser": MessageLookupByLibrary.simpleMessage(
+            "Tidak boleh mencipta pengguna."),
+        "canNotGetPayments": MessageLookupByLibrary.simpleMessage(
+            "Tidak boleh mendapatkan kaedah pembayaran"),
+        "canNotGetShipping": MessageLookupByLibrary.simpleMessage(
+            "Tidak boleh mendapatkan kaedah penghantaran"),
+        "canNotGetToken": MessageLookupByLibrary.simpleMessage(
+            "Tidak boleh mendapatkan Maklumat token."),
         "canNotLaunch": MessageLookupByLibrary.simpleMessage(
             "Tidak dapat melancarkan apl ini, pastikan tetapan anda pada config.dart adalah betul"),
         "canNotLoadThisLink": MessageLookupByLibrary.simpleMessage(
             "Tidak dapat memuatkan pautan ini"),
+        "canNotSaveOrder": MessageLookupByLibrary.simpleMessage(
+            "Tidak dapat menyimpan pesanan ke tapak web"),
+        "canNotUpdateInfo": MessageLookupByLibrary.simpleMessage(
+            "Tidak dapat mengemas kini maklumat pengguna."),
         "cancel": MessageLookupByLibrary.simpleMessage("Batalkan"),
         "cantFindThisOrderId": MessageLookupByLibrary.simpleMessage(
             "Tidak menemui ID pesanan ini"),
@@ -346,6 +353,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "date": MessageLookupByLibrary.simpleMessage("Tarikh"),
         "dateASC": MessageLookupByLibrary.simpleMessage("Tarikh menaik"),
         "dateBooking": MessageLookupByLibrary.simpleMessage("Tempahan Tarikh"),
+        "dateDESC": MessageLookupByLibrary.simpleMessage("Tarikh menurun"),
         "dateEnd": MessageLookupByLibrary.simpleMessage("Tarikh tamat"),
         "dateLatest": MessageLookupByLibrary.simpleMessage("Tarikh: Terkini"),
         "dateOldest": MessageLookupByLibrary.simpleMessage("Tarikh: Tertua"),
@@ -405,6 +413,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "editProductInfo":
             MessageLookupByLibrary.simpleMessage("Edit Maklumat Produk"),
         "editWithoutColon": MessageLookupByLibrary.simpleMessage("Edit"),
+        "egypt": MessageLookupByLibrary.simpleMessage("Mesir"),
         "email": MessageLookupByLibrary.simpleMessage("E-mel"),
         "emailDeleteDescription": MessageLookupByLibrary.simpleMessage(
             "Memadamkan akaun anda akan menyahlanggan anda daripada semua senarai mel."),
@@ -420,6 +429,8 @@ class MessageLookup extends MessageLookupByLibrary {
             "Komen anda tidak boleh kosong"),
         "emptySearch": MessageLookupByLibrary.simpleMessage(
             "Anda belum mencari item lagi. Mari mulakan sekarang - kami akan membantu anda."),
+        "emptyShippingMsg": MessageLookupByLibrary.simpleMessage(
+            "Tiada pilihan penghantaran tersedia. Sila pastikan alamat anda telah dimasukkan dengan betul, atau hubungi kami jika anda memerlukan sebarang bantuan."),
         "emptyUsername":
             MessageLookupByLibrary.simpleMessage("Nama pengguna/E-mel kosong"),
         "emptyWishlistSubtitle": MessageLookupByLibrary.simpleMessage(
@@ -556,6 +567,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "inStock": MessageLookupByLibrary.simpleMessage("Dalam stok"),
         "incorrectPassword":
             MessageLookupByLibrary.simpleMessage("kata laluan salah"),
+        "india": MessageLookupByLibrary.simpleMessage("Hindi"),
         "indonesian": MessageLookupByLibrary.simpleMessage("Bahasa Indonesia"),
         "instantlyClose":
             MessageLookupByLibrary.simpleMessage("Serta-merta tutup"),
@@ -667,6 +679,7 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("Tempat Berdekatan"),
         "needToLoginAgain": MessageLookupByLibrary.simpleMessage(
             "Anda perlu log masuk semula untuk melaksanakan kemas kini"),
+        "netherlands": MessageLookupByLibrary.simpleMessage("Belanda"),
         "newPassword":
             MessageLookupByLibrary.simpleMessage("Kata laluan baharu"),
         "newVariation": MessageLookupByLibrary.simpleMessage("Variasi baru"),
@@ -861,7 +874,9 @@ class MessageLookup extends MessageLookupByLibrary {
             "Mata diskaun berjaya digunakan"),
         "pointRewardMessage": MessageLookupByLibrary.simpleMessage(
             "Terdapat Peraturan Diskaun untuk menggunakan mata anda ke Troli"),
+        "polish": MessageLookupByLibrary.simpleMessage("Poland"),
         "popular": MessageLookupByLibrary.simpleMessage("Popular"),
+        "popularity": MessageLookupByLibrary.simpleMessage("Populariti"),
         "posAddressToolTip": MessageLookupByLibrary.simpleMessage(
             "Alamat ini akan disimpan ke peranti tempatan anda. Ia BUKAN alamat pengguna."),
         "postContent": MessageLookupByLibrary.simpleMessage("Kandungan"),
@@ -888,6 +903,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "printerSelection":
             MessageLookupByLibrary.simpleMessage("Pemilihan Pencetak"),
         "printing": MessageLookupByLibrary.simpleMessage("Mencetak..."),
+        "privacyAndTerm":
+            MessageLookupByLibrary.simpleMessage("Privasi dan Terma"),
         "privacyPolicy": MessageLookupByLibrary.simpleMessage("Dasar privasi"),
         "privacyTerms":
             MessageLookupByLibrary.simpleMessage("Privasi & Syarat"),
@@ -907,6 +924,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "publish": MessageLookupByLibrary.simpleMessage("Menerbitkan"),
         "pullToLoadMore":
             MessageLookupByLibrary.simpleMessage("Tarik untuk Muatkan lagi"),
+        "qty": MessageLookupByLibrary.simpleMessage("Kuantiti"),
         "qtyTotal": m19,
         "rate": MessageLookupByLibrary.simpleMessage("Nilaikan"),
         "rateTheApp": MessageLookupByLibrary.simpleMessage("Nilaikan apl"),
@@ -1111,6 +1129,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "support": MessageLookupByLibrary.simpleMessage("Sokongan"),
         "swahili": MessageLookupByLibrary.simpleMessage("Bahasa Swahili"),
         "swedish": MessageLookupByLibrary.simpleMessage("Sweden"),
+        "tagNotExist":
+            MessageLookupByLibrary.simpleMessage("Tag ini tidak wujud"),
         "tags": MessageLookupByLibrary.simpleMessage("Tags"),
         "takePicture": MessageLookupByLibrary.simpleMessage("Mengambil gambar"),
         "tamil": MessageLookupByLibrary.simpleMessage("Bahasa Tamil"),
@@ -1131,6 +1151,10 @@ class MessageLookup extends MessageLookupByLibrary {
         "tickets": MessageLookupByLibrary.simpleMessage("Tiket"),
         "time": MessageLookupByLibrary.simpleMessage("Masa"),
         "title": MessageLookupByLibrary.simpleMessage("Tajuk"),
+        "titleAToZ": MessageLookupByLibrary.simpleMessage("Tajuk: A hingga Z"),
+        "titleZToA": MessageLookupByLibrary.simpleMessage("Tajuk: Z hingga A"),
+        "tooManyFaildedLogin": MessageLookupByLibrary.simpleMessage(
+            "Terlalu banyak percubaan log masuk yang gagal. Sila cuba sebentar lagi."),
         "topUp": MessageLookupByLibrary.simpleMessage("Tambah nilai"),
         "topUpProductNotFound": MessageLookupByLibrary.simpleMessage(
             "Produk Tambah Nilai tidak ditemui"),
@@ -1191,6 +1215,8 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("Gunakan Imej ini"),
         "userExists": MessageLookupByLibrary.simpleMessage(
             "Nama pengguna/e-mel ini tidak tersedia."),
+        "userNameInCorrect": MessageLookupByLibrary.simpleMessage(
+            "Nama pengguna atau kata laluan adalah salah."),
         "username": MessageLookupByLibrary.simpleMessage("Nama pengguna"),
         "usernameAndPasswordRequired": MessageLookupByLibrary.simpleMessage(
             "Nama pengguna dan kata laluan diperlukan"),
@@ -1209,6 +1235,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "viaWallet": MessageLookupByLibrary.simpleMessage("Melalui dompet"),
         "video": MessageLookupByLibrary.simpleMessage("Video"),
         "vietnamese": MessageLookupByLibrary.simpleMessage("Vietnam"),
+        "viewOnGoogleMaps":
+            MessageLookupByLibrary.simpleMessage("Lihat di Peta Google"),
         "viewRecentTransactions":
             MessageLookupByLibrary.simpleMessage("Lihat transaksi terkini"),
         "visible": MessageLookupByLibrary.simpleMessage("Kelihatan"),
diff --git a/lib/generated/intl/messages_my.dart b/lib/generated/intl/messages_my.dart
index d0298f6..5bcf671 100644
--- a/lib/generated/intl/messages_my.dart
+++ b/lib/generated/intl/messages_my.dart
@@ -91,24 +91,14 @@ class MessageLookup extends MessageLookupByLibrary {
 
   final messages = _notInlinedMessages(_notInlinedMessages);
   static Map<String, Function> _notInlinedMessages(_) => <String, Function>{
-        "DateDESC":
-            MessageLookupByLibrary.simpleMessage("ကြီးစဉ်ငယ်လိုက်ရက်စွဲ "),
-        "Dutch": MessageLookupByLibrary.simpleMessage("Dutch"),
-        "Egypt": MessageLookupByLibrary.simpleMessage("Egypt"),
-        "India": MessageLookupByLibrary.simpleMessage("Hindi"),
-        "Korean": MessageLookupByLibrary.simpleMessage("Korean"),
-        "Netherlands": MessageLookupByLibrary.simpleMessage("Dutch"),
-        "Polish": MessageLookupByLibrary.simpleMessage("Polish"),
-        "PrivacyAndTerm": MessageLookupByLibrary.simpleMessage(
-            "ကိုယ်ရေးကိုယ်တာနှင့်စည်းမျဥ်းစည်းကမ်းများ"),
-        "Qty": MessageLookupByLibrary.simpleMessage("Qty"),
-        "Tamil": MessageLookupByLibrary.simpleMessage("Tamil"),
         "UserNameInCorrect": MessageLookupByLibrary.simpleMessage(
             "နာမည် (သို့မဟုတ်) စကားဝှက်မှားယွင်းနေပါသည်။"),
         "aboutUs": MessageLookupByLibrary.simpleMessage("ကျွန်ုပ်တို့အကြောင်း"),
         "account": MessageLookupByLibrary.simpleMessage("အကောင့်"),
         "accountDeleteDescription": MessageLookupByLibrary.simpleMessage(
             "သင့်အကောင့်ကို ဖျက်ခြင်းသည် ကျွန်ုပ်တို့၏ဒေတာဘေ့စ်မှ ကိုယ်ရေးကိုယ်တာအချက်အလက်များကို ဖယ်ရှားပေးပါသည်။ သင့်အီးမေးလ်ကို အပြီးအပိုင် သိမ်းထားပြီး အကောင့်အသစ်တစ်ခု မှတ်ပုံတင်ရန်အတွက် တူညီသောအီးမေးလ်ကို ပြန်လည်အသုံးမပြုနိုင်ပါ။"),
+        "accountIsPendingApproval": MessageLookupByLibrary.simpleMessage(
+            "အကောင့်သည် အတည်ပြုချက်ကို ဆိုင်းငံ့ထားသည်။"),
         "accountSetup":
             MessageLookupByLibrary.simpleMessage("အကောင့်စတင်စီစဉ်မှု"),
         "active": MessageLookupByLibrary.simpleMessage("Active"),
@@ -179,6 +169,8 @@ class MessageLookup extends MessageLookupByLibrary {
             "Audio item(s) detected. Do you want to add to Audio Player?"),
         "availability": MessageLookupByLibrary.simpleMessage("ရရှိနိုင်မှု"),
         "availablePoints": m1,
+        "averageRating":
+            MessageLookupByLibrary.simpleMessage("ပျမ်းမျှ အဆင့်သတ်မှတ်ချက်"),
         "back": MessageLookupByLibrary.simpleMessage("နောက်သို့"),
         "backOrder": MessageLookupByLibrary.simpleMessage("On backorder"),
         "backToShop":
@@ -234,10 +226,24 @@ class MessageLookup extends MessageLookupByLibrary {
         "byTag": MessageLookupByLibrary.simpleMessage("By Tag"),
         "call": MessageLookupByLibrary.simpleMessage("ခေါ်မည်"),
         "callTo": MessageLookupByLibrary.simpleMessage("Make a Call To"),
+        "canNotCreateOrder":
+            MessageLookupByLibrary.simpleMessage("အော်ဒါဖန်တီး၍မရပါ။"),
+        "canNotCreateUser":
+            MessageLookupByLibrary.simpleMessage("အသုံးပြုသူကို ဖန်တီး၍မရပါ။"),
+        "canNotGetPayments": MessageLookupByLibrary.simpleMessage(
+            "ငွေပေးချေမှုနည်းလမ်းများကို မရနိုင်ပါ။"),
+        "canNotGetShipping": MessageLookupByLibrary.simpleMessage(
+            "ပို့ဆောင်ရေးနည်းလမ်းများ မရပါ။"),
+        "canNotGetToken":
+            MessageLookupByLibrary.simpleMessage("တိုကင်အချက်အလက် မရနိုင်ပါ။"),
         "canNotLaunch": MessageLookupByLibrary.simpleMessage(
             "Cannot launch this app, make sure your settings on config.dart is correct"),
         "canNotLoadThisLink":
             MessageLookupByLibrary.simpleMessage("ဤလင့်ခ်ကို တင်၍မရပါ။"),
+        "canNotSaveOrder": MessageLookupByLibrary.simpleMessage(
+            "မှာယူမှုကို ဝဘ်ဆိုက်တွင် သိမ်းဆည်း၍မရပါ။"),
+        "canNotUpdateInfo": MessageLookupByLibrary.simpleMessage(
+            "အသုံးပြုသူအချက်အလက်ကို အပ်ဒိတ်လုပ်၍မရပါ။"),
         "cancel": MessageLookupByLibrary.simpleMessage("မလုပ်တော့ရန် (Cancel)"),
         "cantFindThisOrderId":
             MessageLookupByLibrary.simpleMessage("ဤအော်ဒါအမှတ်အားရှာမတွေ့ပါ"),
@@ -361,6 +367,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "dateASC":
             MessageLookupByLibrary.simpleMessage("ငယ်စဉ်ကြီးလိုက်ရက်စွဲ"),
         "dateBooking": MessageLookupByLibrary.simpleMessage("Booking ယူရန်"),
+        "dateDESC":
+            MessageLookupByLibrary.simpleMessage("ကြီးစဉ်ငယ်လိုက်ရက်စွဲ "),
         "dateEnd": MessageLookupByLibrary.simpleMessage("ကုန်ဆုံးရက်"),
         "dateLatest": MessageLookupByLibrary.simpleMessage("ရက်စွဲ- နောက်ဆုံး"),
         "dateOldest":
@@ -416,12 +424,13 @@ class MessageLookup extends MessageLookupByLibrary {
         "driverAssigned": MessageLookupByLibrary.simpleMessage(
             "ယာဉ်မောင်း တာဝန်ပေးအပ်ထားသည်။"),
         "duration": MessageLookupByLibrary.simpleMessage("ကြာချိန်"),
-        "dutch": MessageLookupByLibrary.simpleMessage("Dutch"),
+        "dutch": MessageLookupByLibrary.simpleMessage("dutch"),
         "earnings": MessageLookupByLibrary.simpleMessage("ဝင်ငွေများ"),
         "edit": MessageLookupByLibrary.simpleMessage("Edit: "),
         "editProductInfo":
             MessageLookupByLibrary.simpleMessage("ထုတ်ကုန်အကြောင်းပြင်ဆင်မည်"),
         "editWithoutColon": MessageLookupByLibrary.simpleMessage("Edit"),
+        "egypt": MessageLookupByLibrary.simpleMessage("egypt"),
         "email": MessageLookupByLibrary.simpleMessage("အီးမေးလ်"),
         "emailDeleteDescription": MessageLookupByLibrary.simpleMessage(
             "သင့်အကောင့်ကို ဖျက်လိုက်ခြင်းဖြင့် သင့်အား စာပို့စာရင်းများအားလုံးမှ ပယ်ဖျက်မည်ဖြစ်ပါသည်။"),
@@ -437,6 +446,8 @@ class MessageLookup extends MessageLookupByLibrary {
             "Your comment can not be empty"),
         "emptySearch": MessageLookupByLibrary.simpleMessage(
             "You haven\'t searched for items yet. Let\'s start now - we\'ll help you."),
+        "emptyShippingMsg": MessageLookupByLibrary.simpleMessage(
+            "ပို့ဆောင်ရန် ရွေးချယ်စရာများ မရှိပါ။ သင့်လိပ်စာကို မှန်ကန်စွာ ထည့်သွင်းထားကြောင်း သေချာစေပါ၊ သို့မဟုတ် သင်အကူအညီလိုအပ်ပါက ကျွန်ုပ်တို့ထံ ဆက်သွယ်ပါ။"),
         "emptyUsername": MessageLookupByLibrary.simpleMessage(
             "အသုံးပြုသူအမည်/အီးမေးလ်သည် ဗလာဖြစ်နေသည်။"),
         "emptyWishlistSubtitle": MessageLookupByLibrary.simpleMessage(
@@ -575,6 +586,7 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage(" ပစ္စည်းလက်ကျန်ရှိသည်။ "),
         "incorrectPassword":
             MessageLookupByLibrary.simpleMessage("စကားဝှက်မှားနေသည်။"),
+        "india": MessageLookupByLibrary.simpleMessage("Hindi"),
         "indonesian": MessageLookupByLibrary.simpleMessage("Indonesian"),
         "instantlyClose":
             MessageLookupByLibrary.simpleMessage("ချက်ချင်းပိတ်မည်။ "),
@@ -599,7 +611,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "kannada": MessageLookupByLibrary.simpleMessage("Kannada"),
         "keep": MessageLookupByLibrary.simpleMessage("Keep"),
         "khmer": MessageLookupByLibrary.simpleMessage("Khmer"),
-        "korean": MessageLookupByLibrary.simpleMessage("Korean"),
+        "korean": MessageLookupByLibrary.simpleMessage("korean"),
         "kurdish": MessageLookupByLibrary.simpleMessage("Kurdish"),
         "language": MessageLookupByLibrary.simpleMessage("ဘာသာစကားများ"),
         "languageSuccess": MessageLookupByLibrary.simpleMessage(
@@ -687,6 +699,7 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("အနီးအနားရှိနေရာများ"),
         "needToLoginAgain": MessageLookupByLibrary.simpleMessage(
             "အပ်ဒိတ်အကျိုးသက်ရောက်စေရန် သင် ထပ်မံဝင်ရောက်ရန် လိုအပ်ပါသည်။"),
+        "netherlands": MessageLookupByLibrary.simpleMessage("dutch"),
         "newPassword": MessageLookupByLibrary.simpleMessage("စကားဝှက်အသစ်"),
         "newVariation": MessageLookupByLibrary.simpleMessage("ဗားရှင်းအသစ်"),
         "next": MessageLookupByLibrary.simpleMessage("နောက်တစ်ခု"),
@@ -891,7 +904,9 @@ class MessageLookup extends MessageLookupByLibrary {
             "လျော့ဈေးကိုအောင်မြင်စွာတောင်းဆိုပြီးပါပြီ"),
         "pointRewardMessage": MessageLookupByLibrary.simpleMessage(
             "There is the Discount Rule for applying your points to Cart"),
+        "polish": MessageLookupByLibrary.simpleMessage("Polish"),
         "popular": MessageLookupByLibrary.simpleMessage("လူကြိုက်များသော"),
+        "popularity": MessageLookupByLibrary.simpleMessage("ကျော်ကြားမှု"),
         "posAddressToolTip": MessageLookupByLibrary.simpleMessage(
             "ဤလိပ်စာကို သင့်စက်တွင်းစက်ပစ္စည်းတွင် သိမ်းဆည်းမည်ဖြစ်သည်။ ၎င်းသည် အသုံးပြုသူလိပ်စာမဟုတ်ပါ။"),
         "postContent": MessageLookupByLibrary.simpleMessage("အကြောင်းအရာ"),
@@ -920,6 +935,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "printerSelection":
             MessageLookupByLibrary.simpleMessage("ပရင်တာ ရွေးချယ်မှု"),
         "printing": MessageLookupByLibrary.simpleMessage("ပုံနှိပ်ခြင်း..."),
+        "privacyAndTerm": MessageLookupByLibrary.simpleMessage(
+            "ကိုယ်ရေးကိုယ်တာနှင့်စည်းမျဥ်းစည်းကမ်းများ"),
         "privacyPolicy":
             MessageLookupByLibrary.simpleMessage("ကိုယ်ပိုင်လွတ်လပ်ခွင့်မူဝါဒ"),
         "privacyTerms": MessageLookupByLibrary.simpleMessage(
@@ -942,6 +959,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "publish": MessageLookupByLibrary.simpleMessage("Publish"),
         "pullToLoadMore":
             MessageLookupByLibrary.simpleMessage("Pull to Load more"),
+        "qty": MessageLookupByLibrary.simpleMessage("qty"),
         "qtyTotal": m19,
         "rate": MessageLookupByLibrary.simpleMessage("Rate"),
         "rateTheApp":
@@ -1158,6 +1176,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "support": MessageLookupByLibrary.simpleMessage("ပံ့ပိုးမှု"),
         "swahili": MessageLookupByLibrary.simpleMessage("ဆွာဟီလီ"),
         "swedish": MessageLookupByLibrary.simpleMessage("Swedish"),
+        "tagNotExist": MessageLookupByLibrary.simpleMessage("ဤ tag မရှိပါ။"),
         "tags": MessageLookupByLibrary.simpleMessage("Tags"),
         "takePicture":
             MessageLookupByLibrary.simpleMessage("ဓာတ်ပုံရိုက်ယူရန်"),
@@ -1179,6 +1198,10 @@ class MessageLookup extends MessageLookupByLibrary {
         "tickets": MessageLookupByLibrary.simpleMessage("လက်မှတ်များ"),
         "time": MessageLookupByLibrary.simpleMessage("အချိန်"),
         "title": MessageLookupByLibrary.simpleMessage("ခေါင်းစဉ်"),
+        "titleAToZ": MessageLookupByLibrary.simpleMessage("ခေါင်းစဉ်- A မှ Z"),
+        "titleZToA": MessageLookupByLibrary.simpleMessage("ခေါင်းစဉ်- Z မှ A"),
+        "tooManyFaildedLogin": MessageLookupByLibrary.simpleMessage(
+            "အကောင့်ဝင်ရန် ကြိုးပမ်းမှုများစွာ မအောင်မြင်ပါ။ နောက်မှ ထပ်စမ်းကြည့်ပါ။"),
         "topUp": MessageLookupByLibrary.simpleMessage("Top Up"),
         "topUpProductNotFound":
             MessageLookupByLibrary.simpleMessage("Top Up product not found"),
@@ -1236,6 +1259,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "useThisImage": MessageLookupByLibrary.simpleMessage("ဤပုံကိုသုံးပါ။"),
         "userExists": MessageLookupByLibrary.simpleMessage(
             "ဒီအီးမေးလ်/အသုံးပြုသူနာမည် မရှိပါ။."),
+        "userNameInCorrect": MessageLookupByLibrary.simpleMessage(
+            "အသုံးပြုသူအမည် သို့မဟုတ် စကားဝှက်သည် မမှန်ပါ။"),
         "username": MessageLookupByLibrary.simpleMessage("Username"),
         "usernameAndPasswordRequired": MessageLookupByLibrary.simpleMessage(
             "အသုံးပြုသူအမည်နှင့် စကားဝှက် လိုအပ်ပါသည်။"),
@@ -1255,6 +1280,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "viaWallet": MessageLookupByLibrary.simpleMessage("Via wallet"),
         "video": MessageLookupByLibrary.simpleMessage("ဗီဒီယို"),
         "vietnamese": MessageLookupByLibrary.simpleMessage("Vietnamese"),
+        "viewOnGoogleMaps":
+            MessageLookupByLibrary.simpleMessage("Google Maps တွင်ကြည့်ရှုပါ။"),
         "viewRecentTransactions": MessageLookupByLibrary.simpleMessage(
             "လတ်တလောငွေလွှဲပြောင်းမှုများကိုကြည့်ရန်"),
         "visible": MessageLookupByLibrary.simpleMessage("မြင်နိုင်သည်။"),
diff --git a/lib/generated/intl/messages_nl.dart b/lib/generated/intl/messages_nl.dart
index 66152b5..b35cd63 100644
--- a/lib/generated/intl/messages_nl.dart
+++ b/lib/generated/intl/messages_nl.dart
@@ -91,23 +91,14 @@ class MessageLookup extends MessageLookupByLibrary {
 
   final messages = _notInlinedMessages(_notInlinedMessages);
   static Map<String, Function> _notInlinedMessages(_) => <String, Function>{
-        "DateDESC": MessageLookupByLibrary.simpleMessage("Datum aflopend"),
-        "Dutch": MessageLookupByLibrary.simpleMessage("Nederlands"),
-        "Egypt": MessageLookupByLibrary.simpleMessage("Egypte"),
-        "India": MessageLookupByLibrary.simpleMessage("Hindi"),
-        "Korean": MessageLookupByLibrary.simpleMessage("Koreaans"),
-        "Netherlands": MessageLookupByLibrary.simpleMessage("Nederland"),
-        "Polish": MessageLookupByLibrary.simpleMessage("Pools"),
-        "PrivacyAndTerm":
-            MessageLookupByLibrary.simpleMessage("Privacy en termijn"),
-        "Qty": MessageLookupByLibrary.simpleMessage("aantal"),
-        "Tamil": MessageLookupByLibrary.simpleMessage("tamil"),
         "UserNameInCorrect": MessageLookupByLibrary.simpleMessage(
             "De gebruikersnaam of het wachtwoord is niet correct"),
         "aboutUs": MessageLookupByLibrary.simpleMessage("Over Ons"),
         "account": MessageLookupByLibrary.simpleMessage("Account"),
         "accountDeleteDescription": MessageLookupByLibrary.simpleMessage(
             "Als u uw account verwijdert, worden persoonlijke gegevens uit onze database verwijderd. Uw e-mailadres wordt permanent gereserveerd en hetzelfde e-mailadres kan niet opnieuw worden gebruikt om een nieuw account te registreren."),
+        "accountIsPendingApproval": MessageLookupByLibrary.simpleMessage(
+            "Het account wacht op goedkeuring."),
         "accountSetup":
             MessageLookupByLibrary.simpleMessage("Instellen van een account"),
         "active": MessageLookupByLibrary.simpleMessage("Actief"),
@@ -181,6 +172,8 @@ class MessageLookup extends MessageLookupByLibrary {
             "Audio-item(s) gedetecteerd. Wilt u toevoegen aan Audio Player?"),
         "availability": MessageLookupByLibrary.simpleMessage("beschikbaarheid"),
         "availablePoints": m1,
+        "averageRating":
+            MessageLookupByLibrary.simpleMessage("Gemiddelde score"),
         "back": MessageLookupByLibrary.simpleMessage("terug"),
         "backOrder": MessageLookupByLibrary.simpleMessage("Op nabestelling"),
         "backToShop": MessageLookupByLibrary.simpleMessage("Terug naar winkel"),
@@ -231,10 +224,24 @@ class MessageLookup extends MessageLookupByLibrary {
         "byTag": MessageLookupByLibrary.simpleMessage("Op tag"),
         "call": MessageLookupByLibrary.simpleMessage("telefoontje"),
         "callTo": MessageLookupByLibrary.simpleMessage("Bel naar"),
+        "canNotCreateOrder":
+            MessageLookupByLibrary.simpleMessage("Kan bestelling niet maken"),
+        "canNotCreateUser": MessageLookupByLibrary.simpleMessage(
+            "Kan de gebruiker niet aanmaken."),
+        "canNotGetPayments": MessageLookupByLibrary.simpleMessage(
+            "Kan geen betalingsmethoden krijgen"),
+        "canNotGetShipping": MessageLookupByLibrary.simpleMessage(
+            "Kan geen verzendmethoden krijgen"),
+        "canNotGetToken":
+            MessageLookupByLibrary.simpleMessage("Kan tokeninfo niet ophalen."),
         "canNotLaunch": MessageLookupByLibrary.simpleMessage(
             "Kan deze app niet starten, zorg ervoor dat je instellingen op config.dart correct zijn"),
         "canNotLoadThisLink":
             MessageLookupByLibrary.simpleMessage("Kan deze link niet laden"),
+        "canNotSaveOrder": MessageLookupByLibrary.simpleMessage(
+            "Kan de bestelling niet opslaan op de website"),
+        "canNotUpdateInfo": MessageLookupByLibrary.simpleMessage(
+            "Kan gebruikersgegevens niet bijwerken."),
         "cancel": MessageLookupByLibrary.simpleMessage("annuleren"),
         "cantFindThisOrderId": MessageLookupByLibrary.simpleMessage(
             "Kan deze bestellings-ID niet vinden"),
@@ -351,6 +358,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "date": MessageLookupByLibrary.simpleMessage("Datum"),
         "dateASC": MessageLookupByLibrary.simpleMessage("Datum oplopend"),
         "dateBooking": MessageLookupByLibrary.simpleMessage("Datum boeking"),
+        "dateDESC": MessageLookupByLibrary.simpleMessage("Datum aflopend"),
         "dateEnd": MessageLookupByLibrary.simpleMessage("Datum einde"),
         "dateLatest": MessageLookupByLibrary.simpleMessage("Datum: Laatste"),
         "dateOldest": MessageLookupByLibrary.simpleMessage("Datum: Oudste"),
@@ -408,6 +416,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "editProductInfo":
             MessageLookupByLibrary.simpleMessage("Productinfo bewerken"),
         "editWithoutColon": MessageLookupByLibrary.simpleMessage("BEWERK"),
+        "egypt": MessageLookupByLibrary.simpleMessage("Egypte"),
         "email": MessageLookupByLibrary.simpleMessage("E-mail"),
         "emailDeleteDescription": MessageLookupByLibrary.simpleMessage(
             "Als u uw account verwijdert, wordt u uitgeschreven van alle mailinglijsten."),
@@ -423,6 +432,8 @@ class MessageLookup extends MessageLookupByLibrary {
             "Uw opmerking mag niet leeg zijn"),
         "emptySearch": MessageLookupByLibrary.simpleMessage(
             "U heeft nog niet naar items gezocht. Laten we nu beginnen - we zullen u helpen."),
+        "emptyShippingMsg": MessageLookupByLibrary.simpleMessage(
+            "Er zijn geen verzendopties beschikbaar. Zorg ervoor dat uw adres correct is ingevoerd, of neem contact met ons op als u hulp nodig heeft."),
         "emptyUsername": MessageLookupByLibrary.simpleMessage(
             "Gebruikersnaam / e-mailadres is leeg"),
         "emptyWishlistSubtitle": MessageLookupByLibrary.simpleMessage(
@@ -562,6 +573,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "inStock": MessageLookupByLibrary.simpleMessage("Op voorraad"),
         "incorrectPassword":
             MessageLookupByLibrary.simpleMessage("Incorrect wachtwoord"),
+        "india": MessageLookupByLibrary.simpleMessage("Hindi"),
         "indonesian": MessageLookupByLibrary.simpleMessage("Indonesisch"),
         "instantlyClose":
             MessageLookupByLibrary.simpleMessage("Direct sluiten"),
@@ -670,6 +682,7 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("Plaatsen in de buurt"),
         "needToLoginAgain": MessageLookupByLibrary.simpleMessage(
             "U moet opnieuw inloggen om de update uit te voeren"),
+        "netherlands": MessageLookupByLibrary.simpleMessage("Nederland"),
         "newPassword": MessageLookupByLibrary.simpleMessage("nieuw paswoord"),
         "newVariation": MessageLookupByLibrary.simpleMessage("Nieuwe variatie"),
         "next": MessageLookupByLibrary.simpleMessage("volgende"),
@@ -869,7 +882,9 @@ class MessageLookup extends MessageLookupByLibrary {
             "Kortingspunt is succesvol toegepast"),
         "pointRewardMessage": MessageLookupByLibrary.simpleMessage(
             "Er is een kortingsregel voor het toepassen van uw punten op de winkelwagen"),
+        "polish": MessageLookupByLibrary.simpleMessage("Pools"),
         "popular": MessageLookupByLibrary.simpleMessage("Populair"),
+        "popularity": MessageLookupByLibrary.simpleMessage("populariteit"),
         "posAddressToolTip": MessageLookupByLibrary.simpleMessage(
             "Dit adres wordt opgeslagen op uw lokale apparaat. Het is NIET het gebruikersadres."),
         "postContent": MessageLookupByLibrary.simpleMessage("Inhoud"),
@@ -896,6 +911,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "printerSelection":
             MessageLookupByLibrary.simpleMessage("Printerselectie"),
         "printing": MessageLookupByLibrary.simpleMessage("Afdrukken ..."),
+        "privacyAndTerm":
+            MessageLookupByLibrary.simpleMessage("Privacy en termijn"),
         "privacyPolicy": MessageLookupByLibrary.simpleMessage("Privacybeleid"),
         "privacyTerms":
             MessageLookupByLibrary.simpleMessage("Privacy en voorwaarden"),
@@ -916,6 +933,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "publish": MessageLookupByLibrary.simpleMessage("Publiceren"),
         "pullToLoadMore":
             MessageLookupByLibrary.simpleMessage("Trek om meer te laden"),
+        "qty": MessageLookupByLibrary.simpleMessage("aantal"),
         "qtyTotal": m19,
         "rate": MessageLookupByLibrary.simpleMessage("tarief"),
         "rateTheApp": MessageLookupByLibrary.simpleMessage("Beoordeel de app"),
@@ -1131,6 +1149,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "support": MessageLookupByLibrary.simpleMessage("ondersteuning"),
         "swahili": MessageLookupByLibrary.simpleMessage("Swahili"),
         "swedish": MessageLookupByLibrary.simpleMessage("Zweeds"),
+        "tagNotExist":
+            MessageLookupByLibrary.simpleMessage("Deze tag bestaat niet"),
         "tags": MessageLookupByLibrary.simpleMessage("labels"),
         "takePicture": MessageLookupByLibrary.simpleMessage("Foto nemen"),
         "tamil": MessageLookupByLibrary.simpleMessage("tamil"),
@@ -1151,6 +1171,10 @@ class MessageLookup extends MessageLookupByLibrary {
         "tickets": MessageLookupByLibrary.simpleMessage("Kaartjes"),
         "time": MessageLookupByLibrary.simpleMessage("Tijd"),
         "title": MessageLookupByLibrary.simpleMessage("titel"),
+        "titleAToZ": MessageLookupByLibrary.simpleMessage("Titel: A tot Z"),
+        "titleZToA": MessageLookupByLibrary.simpleMessage("Titel: Z tot A"),
+        "tooManyFaildedLogin": MessageLookupByLibrary.simpleMessage(
+            "Te veel mislukte inlogpogingen. Probeer het later opnieuw."),
         "topUp": MessageLookupByLibrary.simpleMessage("Bijvullen"),
         "topUpProductNotFound": MessageLookupByLibrary.simpleMessage(
             "Opwaardeerproduct niet gevonden"),
@@ -1208,6 +1232,8 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("Gebruik deze afbeelding"),
         "userExists": MessageLookupByLibrary.simpleMessage(
             "Deze gebruikersnaam/e-mail is niet beschikbaar."),
+        "userNameInCorrect": MessageLookupByLibrary.simpleMessage(
+            "De gebruikersnaam of het wachtwoord is niet correct."),
         "username": MessageLookupByLibrary.simpleMessage("Gebruikersnaam"),
         "usernameAndPasswordRequired": MessageLookupByLibrary.simpleMessage(
             "Gebruikersnaam en wachtwoord zijn vereist"),
@@ -1226,6 +1252,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "viaWallet": MessageLookupByLibrary.simpleMessage("Via portemonnee"),
         "video": MessageLookupByLibrary.simpleMessage("Video"),
         "vietnamese": MessageLookupByLibrary.simpleMessage("Vietnamees"),
+        "viewOnGoogleMaps":
+            MessageLookupByLibrary.simpleMessage("Bekijk op Google Maps"),
         "viewRecentTransactions": MessageLookupByLibrary.simpleMessage(
             "Recente transacties bekijken"),
         "visible": MessageLookupByLibrary.simpleMessage("zichtbaar"),
diff --git a/lib/generated/intl/messages_pl.dart b/lib/generated/intl/messages_pl.dart
index 54adf13..4327a3c 100644
--- a/lib/generated/intl/messages_pl.dart
+++ b/lib/generated/intl/messages_pl.dart
@@ -91,23 +91,14 @@ class MessageLookup extends MessageLookupByLibrary {
 
   final messages = _notInlinedMessages(_notInlinedMessages);
   static Map<String, Function> _notInlinedMessages(_) => <String, Function>{
-        "DateDESC": MessageLookupByLibrary.simpleMessage("Data malejąco"),
-        "Dutch": MessageLookupByLibrary.simpleMessage("holenderski"),
-        "Egypt": MessageLookupByLibrary.simpleMessage("Egipt"),
-        "India": MessageLookupByLibrary.simpleMessage("hinduski"),
-        "Korean": MessageLookupByLibrary.simpleMessage("koreański"),
-        "Netherlands": MessageLookupByLibrary.simpleMessage("holenderski"),
-        "Polish": MessageLookupByLibrary.simpleMessage("Polskie"),
-        "PrivacyAndTerm": MessageLookupByLibrary.simpleMessage(
-            "Prywatność i okres obowiązywania"),
-        "Qty": MessageLookupByLibrary.simpleMessage("Ilość"),
-        "Tamil": MessageLookupByLibrary.simpleMessage("Tamil"),
         "UserNameInCorrect": MessageLookupByLibrary.simpleMessage(
             "Nazwa użytkownika lub hasło są nieprawidłowe"),
         "aboutUs": MessageLookupByLibrary.simpleMessage("O nas"),
         "account": MessageLookupByLibrary.simpleMessage("konto"),
         "accountDeleteDescription": MessageLookupByLibrary.simpleMessage(
             "Usunięcie konta powoduje usunięcie danych osobowych z naszej bazy danych. Twój adres e-mail zostanie na stałe zarezerwowany i ten sam adres e-mail nie może zostać ponownie użyty do zarejestrowania nowego konta."),
+        "accountIsPendingApproval": MessageLookupByLibrary.simpleMessage(
+            "Konto oczekuje na zatwierdzenie."),
         "accountSetup":
             MessageLookupByLibrary.simpleMessage("Konfiguracja konta"),
         "active": MessageLookupByLibrary.simpleMessage("aktywny"),
@@ -175,6 +166,7 @@ class MessageLookup extends MessageLookupByLibrary {
             "Wykryto elementy audio. Czy chcesz dodać do odtwarzacza audio?"),
         "availability": MessageLookupByLibrary.simpleMessage("Dostępność"),
         "availablePoints": m1,
+        "averageRating": MessageLookupByLibrary.simpleMessage("średnia ocena"),
         "back": MessageLookupByLibrary.simpleMessage("Z powrotem"),
         "backOrder": MessageLookupByLibrary.simpleMessage("na zamówienie"),
         "backToShop": MessageLookupByLibrary.simpleMessage("Powrót do sklepu"),
@@ -225,10 +217,24 @@ class MessageLookup extends MessageLookupByLibrary {
         "byTag": MessageLookupByLibrary.simpleMessage("Tagiem"),
         "call": MessageLookupByLibrary.simpleMessage("Połączenie"),
         "callTo": MessageLookupByLibrary.simpleMessage("Zadzwoń do"),
+        "canNotCreateOrder": MessageLookupByLibrary.simpleMessage(
+            "Nie można utworzyć zamówienia"),
+        "canNotCreateUser": MessageLookupByLibrary.simpleMessage(
+            "Nie można utworzyć użytkownika."),
+        "canNotGetPayments": MessageLookupByLibrary.simpleMessage(
+            "Nie mogę uzyskać metod płatności"),
+        "canNotGetShipping": MessageLookupByLibrary.simpleMessage(
+            "Nie można uzyskać metod wysyłki"),
+        "canNotGetToken": MessageLookupByLibrary.simpleMessage(
+            "Nie można uzyskać informacji o tokenie."),
         "canNotLaunch": MessageLookupByLibrary.simpleMessage(
             "Nie można uruchomić tej aplikacji, upewnij się, że ustawienia w config.dart są poprawne"),
         "canNotLoadThisLink": MessageLookupByLibrary.simpleMessage(
             "Nie można załadować tego linku"),
+        "canNotSaveOrder": MessageLookupByLibrary.simpleMessage(
+            "Nie mogę zapisać zamówienia na stronie"),
+        "canNotUpdateInfo": MessageLookupByLibrary.simpleMessage(
+            "Nie można zaktualizować informacji o użytkowniku."),
         "cancel": MessageLookupByLibrary.simpleMessage("Anuluj"),
         "cantFindThisOrderId": MessageLookupByLibrary.simpleMessage(
             "Nie można znaleźć tego identyfikatora zamówienia"),
@@ -343,6 +349,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "date": MessageLookupByLibrary.simpleMessage("Data"),
         "dateASC": MessageLookupByLibrary.simpleMessage("Data rosnąco"),
         "dateBooking": MessageLookupByLibrary.simpleMessage("Rezerwacja daty"),
+        "dateDESC": MessageLookupByLibrary.simpleMessage("Data malejąco"),
         "dateEnd": MessageLookupByLibrary.simpleMessage("Data zakonczenia"),
         "dateLatest": MessageLookupByLibrary.simpleMessage("Data: Najnowsze"),
         "dateOldest": MessageLookupByLibrary.simpleMessage("Data: najstarszy"),
@@ -401,6 +408,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "editProductInfo": MessageLookupByLibrary.simpleMessage(
             "Edytuj informacje o produkcie"),
         "editWithoutColon": MessageLookupByLibrary.simpleMessage("Edytować"),
+        "egypt": MessageLookupByLibrary.simpleMessage("Egipt"),
         "email": MessageLookupByLibrary.simpleMessage("E-mail"),
         "emailDeleteDescription": MessageLookupByLibrary.simpleMessage(
             "Usunięcie konta spowoduje wypisanie Cię ze wszystkich list mailingowych."),
@@ -416,6 +424,8 @@ class MessageLookup extends MessageLookupByLibrary {
             "Twój komentarz nie może być pusty"),
         "emptySearch": MessageLookupByLibrary.simpleMessage(
             "Nie szukałeś jeszcze przedmiotów. Zacznijmy teraz - pomożemy Ci."),
+        "emptyShippingMsg": MessageLookupByLibrary.simpleMessage(
+            "Brak dostępnych opcji wysyłki. Upewnij się, że Twój adres został wpisany poprawnie lub skontaktuj się z nami, jeśli potrzebujesz pomocy."),
         "emptyUsername": MessageLookupByLibrary.simpleMessage(
             "Nazwa użytkownika / e-mail jest pusty"),
         "emptyWishlistSubtitle": MessageLookupByLibrary.simpleMessage(
@@ -553,6 +563,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "inStock": MessageLookupByLibrary.simpleMessage("W magazynie"),
         "incorrectPassword":
             MessageLookupByLibrary.simpleMessage("niepoprawne hasło"),
+        "india": MessageLookupByLibrary.simpleMessage("hinduski"),
         "indonesian": MessageLookupByLibrary.simpleMessage("indonezyjski"),
         "instantlyClose":
             MessageLookupByLibrary.simpleMessage("Natychmiast blisko"),
@@ -666,6 +677,7 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("Miejsca w pobliżu"),
         "needToLoginAgain": MessageLookupByLibrary.simpleMessage(
             "Aby przeprowadzić aktualizację, musisz się ponownie zalogować"),
+        "netherlands": MessageLookupByLibrary.simpleMessage("holenderski"),
         "newPassword": MessageLookupByLibrary.simpleMessage("Nowe hasło"),
         "newVariation": MessageLookupByLibrary.simpleMessage("Nowa odmiana"),
         "next": MessageLookupByLibrary.simpleMessage("Kolejny"),
@@ -869,7 +881,9 @@ class MessageLookup extends MessageLookupByLibrary {
             "Punkt rabatowy został pomyślnie zastosowany"),
         "pointRewardMessage": MessageLookupByLibrary.simpleMessage(
             "Istnieje zasada rabatu dotycząca wykorzystania punktów do Koszyka"),
+        "polish": MessageLookupByLibrary.simpleMessage("Polskie"),
         "popular": MessageLookupByLibrary.simpleMessage("POPULARNY"),
+        "popularity": MessageLookupByLibrary.simpleMessage("popularność"),
         "posAddressToolTip": MessageLookupByLibrary.simpleMessage(
             "Ten adres zostanie zapisany na Twoim lokalnym urządzeniu. NIE jest to adres użytkownika."),
         "postContent": MessageLookupByLibrary.simpleMessage("Zawartość"),
@@ -898,6 +912,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "printerSelection":
             MessageLookupByLibrary.simpleMessage("Wybór drukarki"),
         "printing": MessageLookupByLibrary.simpleMessage("Druk..."),
+        "privacyAndTerm": MessageLookupByLibrary.simpleMessage(
+            "Prywatność i okres obowiązywania"),
         "privacyPolicy":
             MessageLookupByLibrary.simpleMessage("Polityka prywatności"),
         "privacyTerms":
@@ -919,6 +935,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "publish": MessageLookupByLibrary.simpleMessage("Publikować"),
         "pullToLoadMore": MessageLookupByLibrary.simpleMessage(
             "Pociągnij, aby załadować więcej"),
+        "qty": MessageLookupByLibrary.simpleMessage("Ilość"),
         "qtyTotal": m19,
         "rate": MessageLookupByLibrary.simpleMessage("Oceniać"),
         "rateTheApp": MessageLookupByLibrary.simpleMessage("Oceń aplikację"),
@@ -1129,6 +1146,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "support": MessageLookupByLibrary.simpleMessage("Wsparcie"),
         "swahili": MessageLookupByLibrary.simpleMessage("Suahili"),
         "swedish": MessageLookupByLibrary.simpleMessage("szwedzki"),
+        "tagNotExist":
+            MessageLookupByLibrary.simpleMessage("Ten tag nie istnieje"),
         "tags": MessageLookupByLibrary.simpleMessage("tagi"),
         "takePicture": MessageLookupByLibrary.simpleMessage("Zrób zdjęcie"),
         "tamil": MessageLookupByLibrary.simpleMessage("Tamil"),
@@ -1149,6 +1168,10 @@ class MessageLookup extends MessageLookupByLibrary {
         "tickets": MessageLookupByLibrary.simpleMessage("Bilety"),
         "time": MessageLookupByLibrary.simpleMessage("Czas"),
         "title": MessageLookupByLibrary.simpleMessage("Tytuł"),
+        "titleAToZ": MessageLookupByLibrary.simpleMessage("Tytuł: A do Z"),
+        "titleZToA": MessageLookupByLibrary.simpleMessage("Tytuł: Z do A"),
+        "tooManyFaildedLogin": MessageLookupByLibrary.simpleMessage(
+            "Zbyt wiele nieudanych prób logowania. Spróbuj ponownie później."),
         "topUp": MessageLookupByLibrary.simpleMessage("Uzupełniać"),
         "topUpProductNotFound": MessageLookupByLibrary.simpleMessage(
             "Nie znaleziono produktu doładowania"),
@@ -1209,6 +1232,8 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("Użyj tego obrazu"),
         "userExists": MessageLookupByLibrary.simpleMessage(
             "Ta nazwa użytkownika/adres e-mail jest niedostępny."),
+        "userNameInCorrect": MessageLookupByLibrary.simpleMessage(
+            "Nazwa użytkownika lub hasło są nieprawidłowe."),
         "username": MessageLookupByLibrary.simpleMessage("Nazwa użytkownika"),
         "usernameAndPasswordRequired": MessageLookupByLibrary.simpleMessage(
             "Nazwa użytkownika i hasło są wymagane"),
@@ -1228,6 +1253,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "viaWallet": MessageLookupByLibrary.simpleMessage("Przez portfel"),
         "video": MessageLookupByLibrary.simpleMessage("Wideo"),
         "vietnamese": MessageLookupByLibrary.simpleMessage("wietnamski"),
+        "viewOnGoogleMaps":
+            MessageLookupByLibrary.simpleMessage("Zobacz w Mapach Google"),
         "viewRecentTransactions":
             MessageLookupByLibrary.simpleMessage("Zobacz ostatnie transakcje"),
         "visible": MessageLookupByLibrary.simpleMessage("widoczny"),
diff --git a/lib/generated/intl/messages_pt.dart b/lib/generated/intl/messages_pt.dart
index c46cc61..41bf57d 100644
--- a/lib/generated/intl/messages_pt.dart
+++ b/lib/generated/intl/messages_pt.dart
@@ -91,23 +91,14 @@ class MessageLookup extends MessageLookupByLibrary {
 
   final messages = _notInlinedMessages(_notInlinedMessages);
   static Map<String, Function> _notInlinedMessages(_) => <String, Function>{
-        "DateDESC": MessageLookupByLibrary.simpleMessage("Data decrescente"),
-        "Dutch": MessageLookupByLibrary.simpleMessage("holandês"),
-        "Egypt": MessageLookupByLibrary.simpleMessage("Egito"),
-        "India": MessageLookupByLibrary.simpleMessage("Índia"),
-        "Korean": MessageLookupByLibrary.simpleMessage("coreano"),
-        "Netherlands": MessageLookupByLibrary.simpleMessage("Países Baixos"),
-        "Polish": MessageLookupByLibrary.simpleMessage("Polonês"),
-        "PrivacyAndTerm": MessageLookupByLibrary.simpleMessage(
-            "Política de Privacidade e Termos"),
-        "Qty": MessageLookupByLibrary.simpleMessage("Qtd"),
-        "Tamil": MessageLookupByLibrary.simpleMessage("tâmil"),
         "UserNameInCorrect": MessageLookupByLibrary.simpleMessage(
             "O nome de usuário ou senha está incorreto"),
         "aboutUs": MessageLookupByLibrary.simpleMessage("Sobre nós"),
         "account": MessageLookupByLibrary.simpleMessage("Conta"),
         "accountDeleteDescription": MessageLookupByLibrary.simpleMessage(
             "A exclusão de sua conta remove as informações pessoais de nosso banco de dados. Seu e-mail fica permanentemente reservado e o mesmo e-mail não pode ser reutilizado para registrar uma nova conta."),
+        "accountIsPendingApproval": MessageLookupByLibrary.simpleMessage(
+            "A conta está pendente de aprovação."),
         "accountSetup":
             MessageLookupByLibrary.simpleMessage("Configuração da conta"),
         "active": MessageLookupByLibrary.simpleMessage("Ativo"),
@@ -179,6 +170,8 @@ class MessageLookup extends MessageLookupByLibrary {
             "Item (ns) de áudio detectado (s). Você deseja adicionar ao reprodutor de áudio?"),
         "availability": MessageLookupByLibrary.simpleMessage("Disponibilidade"),
         "availablePoints": m1,
+        "averageRating":
+            MessageLookupByLibrary.simpleMessage("Classificação média"),
         "back": MessageLookupByLibrary.simpleMessage("de volta"),
         "backOrder": MessageLookupByLibrary.simpleMessage("Em espera"),
         "backToShop":
@@ -229,10 +222,24 @@ class MessageLookup extends MessageLookupByLibrary {
         "byTag": MessageLookupByLibrary.simpleMessage("Por Tag"),
         "call": MessageLookupByLibrary.simpleMessage("Ligar"),
         "callTo": MessageLookupByLibrary.simpleMessage("Faça uma chamada para"),
+        "canNotCreateOrder": MessageLookupByLibrary.simpleMessage(
+            "Não é possível criar o pedido"),
+        "canNotCreateUser": MessageLookupByLibrary.simpleMessage(
+            "Não é possível criar o usuário."),
+        "canNotGetPayments": MessageLookupByLibrary.simpleMessage(
+            "Não consigo obter as formas de pagamento"),
+        "canNotGetShipping": MessageLookupByLibrary.simpleMessage(
+            "Não é possível obter métodos de envio"),
+        "canNotGetToken": MessageLookupByLibrary.simpleMessage(
+            "Não é possível obter informações do token."),
         "canNotLaunch": MessageLookupByLibrary.simpleMessage(
             "Não é possível iniciar este aplicativo, verifique se as configurações em config.dart estão corretas"),
         "canNotLoadThisLink": MessageLookupByLibrary.simpleMessage(
             "Não é possível carregar este link"),
+        "canNotSaveOrder": MessageLookupByLibrary.simpleMessage(
+            "Não é possível salvar o pedido no site"),
+        "canNotUpdateInfo": MessageLookupByLibrary.simpleMessage(
+            "Não é possível atualizar as informações do usuário."),
         "cancel": MessageLookupByLibrary.simpleMessage("Cancelar"),
         "cantFindThisOrderId": MessageLookupByLibrary.simpleMessage(
             "Não consigo encontrar este ID de pedido"),
@@ -349,6 +356,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "date": MessageLookupByLibrary.simpleMessage("Data"),
         "dateASC": MessageLookupByLibrary.simpleMessage("Data crescente"),
         "dateBooking": MessageLookupByLibrary.simpleMessage("dateBooking"),
+        "dateDESC": MessageLookupByLibrary.simpleMessage("Data decrescente"),
         "dateEnd": MessageLookupByLibrary.simpleMessage("Data final"),
         "dateLatest":
             MessageLookupByLibrary.simpleMessage("Data: mais recente"),
@@ -408,6 +416,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "editProductInfo": MessageLookupByLibrary.simpleMessage(
             "Editar Informações do Produto"),
         "editWithoutColon": MessageLookupByLibrary.simpleMessage("Editar"),
+        "egypt": MessageLookupByLibrary.simpleMessage("Egito"),
         "email": MessageLookupByLibrary.simpleMessage("Email"),
         "emailDeleteDescription": MessageLookupByLibrary.simpleMessage(
             "A exclusão de sua conta cancelará sua inscrição em todas as listas de e-mail."),
@@ -423,6 +432,8 @@ class MessageLookup extends MessageLookupByLibrary {
             "Seu comentário não pode estar vazio"),
         "emptySearch": MessageLookupByLibrary.simpleMessage(
             "Você ainda não procurou por itens. Vamos começar agora - vamos ajudá-lo."),
+        "emptyShippingMsg": MessageLookupByLibrary.simpleMessage(
+            "Não há opções de envio disponíveis. Certifique-se de que seu endereço foi inserido corretamente ou entre em contato conosco se precisar de ajuda."),
         "emptyUsername": MessageLookupByLibrary.simpleMessage(
             "Nome de usuário / email vazio"),
         "emptyWishlistSubtitle": MessageLookupByLibrary.simpleMessage(
@@ -559,6 +570,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "inStock": MessageLookupByLibrary.simpleMessage("Em estoque"),
         "incorrectPassword":
             MessageLookupByLibrary.simpleMessage("Senha incorreta"),
+        "india": MessageLookupByLibrary.simpleMessage("Índia"),
         "indonesian": MessageLookupByLibrary.simpleMessage("Indonésia"),
         "instantlyClose":
             MessageLookupByLibrary.simpleMessage("Fechar instantaneamente"),
@@ -674,6 +686,7 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("Lugares proximos"),
         "needToLoginAgain": MessageLookupByLibrary.simpleMessage(
             "Você precisa fazer login novamente para efetuar a atualização"),
+        "netherlands": MessageLookupByLibrary.simpleMessage("Países Baixos"),
         "newPassword": MessageLookupByLibrary.simpleMessage("Nova senha"),
         "newVariation": MessageLookupByLibrary.simpleMessage("Nova variação"),
         "next": MessageLookupByLibrary.simpleMessage("Próximo"),
@@ -872,7 +885,9 @@ class MessageLookup extends MessageLookupByLibrary {
             "O ponto de desconto foi aplicado com sucesso"),
         "pointRewardMessage": MessageLookupByLibrary.simpleMessage(
             "There is the Discount Rule for applying your points to Cart"),
+        "polish": MessageLookupByLibrary.simpleMessage("Polonês"),
         "popular": MessageLookupByLibrary.simpleMessage("Popular"),
+        "popularity": MessageLookupByLibrary.simpleMessage("Popularidade"),
         "posAddressToolTip": MessageLookupByLibrary.simpleMessage(
             "Este endereço será salvo em seu dispositivo local. NÃO é o endereço do usuário."),
         "postContent": MessageLookupByLibrary.simpleMessage("Conteúdo"),
@@ -900,6 +915,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "printerSelection":
             MessageLookupByLibrary.simpleMessage("Seleção de impressora"),
         "printing": MessageLookupByLibrary.simpleMessage("Impressão..."),
+        "privacyAndTerm": MessageLookupByLibrary.simpleMessage(
+            "Política de Privacidade e Termos"),
         "privacyPolicy":
             MessageLookupByLibrary.simpleMessage("Política de Privacidade"),
         "privacyTerms":
@@ -922,6 +939,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "publish": MessageLookupByLibrary.simpleMessage("Publicar"),
         "pullToLoadMore": MessageLookupByLibrary.simpleMessage(
             "Atualize a tela para carregar mais"),
+        "qty": MessageLookupByLibrary.simpleMessage("Qtd"),
         "qtyTotal": m19,
         "rate": MessageLookupByLibrary.simpleMessage("Avaliar"),
         "rateTheApp":
@@ -1140,6 +1158,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "support": MessageLookupByLibrary.simpleMessage("Apoio, suporte"),
         "swahili": MessageLookupByLibrary.simpleMessage("Suaíli"),
         "swedish": MessageLookupByLibrary.simpleMessage("sueco"),
+        "tagNotExist":
+            MessageLookupByLibrary.simpleMessage("Esta etiqueta não existe"),
         "tags": MessageLookupByLibrary.simpleMessage("Etiquetas"),
         "takePicture": MessageLookupByLibrary.simpleMessage("Tire uma foto"),
         "tamil": MessageLookupByLibrary.simpleMessage("tâmil"),
@@ -1160,6 +1180,10 @@ class MessageLookup extends MessageLookupByLibrary {
         "tickets": MessageLookupByLibrary.simpleMessage("Bilhetes"),
         "time": MessageLookupByLibrary.simpleMessage("tempo"),
         "title": MessageLookupByLibrary.simpleMessage("Título"),
+        "titleAToZ": MessageLookupByLibrary.simpleMessage("Título: A a Z"),
+        "titleZToA": MessageLookupByLibrary.simpleMessage("Título: Z a A"),
+        "tooManyFaildedLogin": MessageLookupByLibrary.simpleMessage(
+            "Muitas tentativas de login com falha. Por favor, tente novamente mais tarde."),
         "topUp": MessageLookupByLibrary.simpleMessage("Completar"),
         "topUpProductNotFound": MessageLookupByLibrary.simpleMessage(
             "Produto de recarga não encontrado"),
@@ -1220,6 +1244,8 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("Usar esta imagem"),
         "userExists": MessageLookupByLibrary.simpleMessage(
             "Este nome de usuário / e-mail não está disponível."),
+        "userNameInCorrect": MessageLookupByLibrary.simpleMessage(
+            "O nome de usuário ou senha está incorreto."),
         "username": MessageLookupByLibrary.simpleMessage("Nome de usuário"),
         "usernameAndPasswordRequired": MessageLookupByLibrary.simpleMessage(
             "Nome de usuário e senha são obrigatórios"),
@@ -1238,6 +1264,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "viaWallet": MessageLookupByLibrary.simpleMessage("Via carteira"),
         "video": MessageLookupByLibrary.simpleMessage("Vídeo"),
         "vietnamese": MessageLookupByLibrary.simpleMessage("vietnamita"),
+        "viewOnGoogleMaps":
+            MessageLookupByLibrary.simpleMessage("Ver no Google Maps"),
         "viewRecentTransactions":
             MessageLookupByLibrary.simpleMessage("Ver transações recentes"),
         "visible": MessageLookupByLibrary.simpleMessage("Visível"),
diff --git a/lib/generated/intl/messages_ro.dart b/lib/generated/intl/messages_ro.dart
index bdd2cbd..d3cacea 100644
--- a/lib/generated/intl/messages_ro.dart
+++ b/lib/generated/intl/messages_ro.dart
@@ -91,23 +91,14 @@ class MessageLookup extends MessageLookupByLibrary {
 
   final messages = _notInlinedMessages(_notInlinedMessages);
   static Map<String, Function> _notInlinedMessages(_) => <String, Function>{
-        "DateDESC": MessageLookupByLibrary.simpleMessage("Data descrescătoare"),
-        "Dutch": MessageLookupByLibrary.simpleMessage("Olandeză"),
-        "Egypt": MessageLookupByLibrary.simpleMessage("Egipt"),
-        "India": MessageLookupByLibrary.simpleMessage("India"),
-        "Korean": MessageLookupByLibrary.simpleMessage("Coreeană"),
-        "Netherlands": MessageLookupByLibrary.simpleMessage("Olanda"),
-        "Polish": MessageLookupByLibrary.simpleMessage("Poloneză"),
-        "PrivacyAndTerm":
-            MessageLookupByLibrary.simpleMessage("Termeni și condiții"),
-        "Qty": MessageLookupByLibrary.simpleMessage("Cantitate"),
-        "Tamil": MessageLookupByLibrary.simpleMessage("Tamil"),
         "UserNameInCorrect": MessageLookupByLibrary.simpleMessage(
             "Numele de utilizator sau parola este incorectă"),
         "aboutUs": MessageLookupByLibrary.simpleMessage("Despre Noi"),
         "account": MessageLookupByLibrary.simpleMessage("Cont"),
         "accountDeleteDescription": MessageLookupByLibrary.simpleMessage(
             "Ștergerea contului dvs. elimină informațiile personale din baza noastră de date. E-mailul dvs. devine permanent rezervat și același e-mail nu poate fi reutilizat pentru a înregistra un cont nou."),
+        "accountIsPendingApproval": MessageLookupByLibrary.simpleMessage(
+            "Contul este în așteptarea aprobării."),
         "accountSetup":
             MessageLookupByLibrary.simpleMessage("Configurarea contului"),
         "active": MessageLookupByLibrary.simpleMessage("Activ"),
@@ -177,6 +168,7 @@ class MessageLookup extends MessageLookupByLibrary {
             "Element (e) audio detectat (e). Doriți să adăugați la Audio Player?"),
         "availability": MessageLookupByLibrary.simpleMessage("Disponibilitate"),
         "availablePoints": m1,
+        "averageRating": MessageLookupByLibrary.simpleMessage("Rata medie"),
         "back": MessageLookupByLibrary.simpleMessage("Înapoi"),
         "backOrder": MessageLookupByLibrary.simpleMessage("Descrescator"),
         "backToShop": MessageLookupByLibrary.simpleMessage("Înapoi la magazin"),
@@ -227,10 +219,24 @@ class MessageLookup extends MessageLookupByLibrary {
         "byTag": MessageLookupByLibrary.simpleMessage("Prin etichetă"),
         "call": MessageLookupByLibrary.simpleMessage("apel"),
         "callTo": MessageLookupByLibrary.simpleMessage("Faceți un apel către"),
+        "canNotCreateOrder":
+            MessageLookupByLibrary.simpleMessage("Nu se poate crea comanda"),
+        "canNotCreateUser": MessageLookupByLibrary.simpleMessage(
+            "Nu se poate crea utilizatorul."),
+        "canNotGetPayments": MessageLookupByLibrary.simpleMessage(
+            "Nu pot obține metode de plată"),
+        "canNotGetShipping": MessageLookupByLibrary.simpleMessage(
+            "Nu pot obține metode de expediere"),
+        "canNotGetToken": MessageLookupByLibrary.simpleMessage(
+            "Nu pot obține informații despre simbol."),
         "canNotLaunch": MessageLookupByLibrary.simpleMessage(
             "Nu puteți lansa această aplicație, asigurați-vă că setările dvs. de pe config.dart sunt corecte"),
         "canNotLoadThisLink": MessageLookupByLibrary.simpleMessage(
             "Nu se poate încărca acest link"),
+        "canNotSaveOrder": MessageLookupByLibrary.simpleMessage(
+            "Nu se poate salva comanda pe site"),
+        "canNotUpdateInfo": MessageLookupByLibrary.simpleMessage(
+            "Nu se pot actualiza informațiile despre utilizator."),
         "cancel": MessageLookupByLibrary.simpleMessage("Anuleaă"),
         "cantFindThisOrderId": MessageLookupByLibrary.simpleMessage(
             "Nu se găsește acest ID de comandă"),
@@ -350,6 +356,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "date": MessageLookupByLibrary.simpleMessage("Data"),
         "dateASC": MessageLookupByLibrary.simpleMessage("Data ascendentă"),
         "dateBooking": MessageLookupByLibrary.simpleMessage("dateBooking"),
+        "dateDESC": MessageLookupByLibrary.simpleMessage("Data descrescătoare"),
         "dateEnd": MessageLookupByLibrary.simpleMessage("Data de încheiere"),
         "dateLatest": MessageLookupByLibrary.simpleMessage("Recent adaugate"),
         "dateOldest": MessageLookupByLibrary.simpleMessage("Cele mai vechi"),
@@ -406,6 +413,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "editProductInfo": MessageLookupByLibrary.simpleMessage(
             "Editați informațiile despre produs"),
         "editWithoutColon": MessageLookupByLibrary.simpleMessage("Editați | ×"),
+        "egypt": MessageLookupByLibrary.simpleMessage("Egipt"),
         "email": MessageLookupByLibrary.simpleMessage("Email"),
         "emailDeleteDescription": MessageLookupByLibrary.simpleMessage(
             "Ștergerea contului vă va dezabona de la toate listele de corespondență."),
@@ -421,6 +429,8 @@ class MessageLookup extends MessageLookupByLibrary {
             "Comentariul dvs. nu poate fi gol"),
         "emptySearch": MessageLookupByLibrary.simpleMessage(
             "Nu ați căutat încă articole. Să începem acum - vă vom ajuta."),
+        "emptyShippingMsg": MessageLookupByLibrary.simpleMessage(
+            "Nu există opțiuni de livrare disponibile. Vă rugăm să vă asigurați că adresa dvs. a fost introdusă corect sau să ne contactați dacă aveți nevoie de ajutor."),
         "emptyUsername": MessageLookupByLibrary.simpleMessage(
             "Numele de utilizator / e-mailul este gol"),
         "emptyWishlistSubtitle": MessageLookupByLibrary.simpleMessage(
@@ -557,6 +567,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "inStock": MessageLookupByLibrary.simpleMessage("În Stoc"),
         "incorrectPassword":
             MessageLookupByLibrary.simpleMessage("Parola incorecta"),
+        "india": MessageLookupByLibrary.simpleMessage("india"),
         "indonesian": MessageLookupByLibrary.simpleMessage("Indoneziană"),
         "instantlyClose":
             MessageLookupByLibrary.simpleMessage("Aproape instantaneu"),
@@ -668,6 +679,7 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("Locații apropiate"),
         "needToLoginAgain": MessageLookupByLibrary.simpleMessage(
             "Trebuie să vă autentificați din nou pentru a efectua actualizarea"),
+        "netherlands": MessageLookupByLibrary.simpleMessage("Olanda"),
         "newPassword": MessageLookupByLibrary.simpleMessage("Parola Nouă"),
         "newVariation": MessageLookupByLibrary.simpleMessage("Varianta nouă"),
         "next": MessageLookupByLibrary.simpleMessage("Următorul"),
@@ -863,7 +875,9 @@ class MessageLookup extends MessageLookupByLibrary {
             "Punctul de reducere este aplicat cu succes"),
         "pointRewardMessage": MessageLookupByLibrary.simpleMessage(
             "Este regula Discount care se aplică punctelor tale din coș"),
+        "polish": MessageLookupByLibrary.simpleMessage("Poloneză"),
         "popular": MessageLookupByLibrary.simpleMessage("Popular"),
+        "popularity": MessageLookupByLibrary.simpleMessage("Popularitate"),
         "posAddressToolTip": MessageLookupByLibrary.simpleMessage(
             "Această adresă va fi salvată pe dispozitivul dvs. local. NU este adresa utilizatorului."),
         "postContent": MessageLookupByLibrary.simpleMessage("conținut"),
@@ -892,6 +906,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "printerSelection":
             MessageLookupByLibrary.simpleMessage("Selectarea imprimantei"),
         "printing": MessageLookupByLibrary.simpleMessage("Se imprimă..."),
+        "privacyAndTerm":
+            MessageLookupByLibrary.simpleMessage("Termeni și condiții"),
         "privacyPolicy": MessageLookupByLibrary.simpleMessage(
             "Politica de confidentialitate"),
         "privacyTerms":
@@ -915,6 +931,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "publish": MessageLookupByLibrary.simpleMessage("Publică"),
         "pullToLoadMore":
             MessageLookupByLibrary.simpleMessage("Trageți pentru mai mult"),
+        "qty": MessageLookupByLibrary.simpleMessage("Cantitate"),
         "qtyTotal": m19,
         "rate": MessageLookupByLibrary.simpleMessage("Evaluează"),
         "rateTheApp": MessageLookupByLibrary.simpleMessage("Voteaza Aplicația"),
@@ -1125,6 +1142,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "support": MessageLookupByLibrary.simpleMessage("A sustine"),
         "swahili": MessageLookupByLibrary.simpleMessage("Swahili"),
         "swedish": MessageLookupByLibrary.simpleMessage("Suedeză"),
+        "tagNotExist":
+            MessageLookupByLibrary.simpleMessage("Această etichetă nu există"),
         "tags": MessageLookupByLibrary.simpleMessage("Etichete"),
         "takePicture": MessageLookupByLibrary.simpleMessage("Fă o poză"),
         "tamil": MessageLookupByLibrary.simpleMessage("Tamil"),
@@ -1145,6 +1164,12 @@ class MessageLookup extends MessageLookupByLibrary {
         "tickets": MessageLookupByLibrary.simpleMessage("Bilete"),
         "time": MessageLookupByLibrary.simpleMessage("Timp"),
         "title": MessageLookupByLibrary.simpleMessage("Titlu"),
+        "titleAToZ":
+            MessageLookupByLibrary.simpleMessage("Titlu: de la A la Z"),
+        "titleZToA":
+            MessageLookupByLibrary.simpleMessage("Titlu: de la Z la A"),
+        "tooManyFaildedLogin": MessageLookupByLibrary.simpleMessage(
+            "Prea multe încercări eșuate de conectare. Vă rugăm să încercați din nou mai târziu."),
         "topUp": MessageLookupByLibrary.simpleMessage("Umple"),
         "topUpProductNotFound": MessageLookupByLibrary.simpleMessage(
             "Produsul de reîncărcare nu a fost găsit"),
@@ -1204,6 +1229,8 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("Utilizați această imagine"),
         "userExists": MessageLookupByLibrary.simpleMessage(
             "Acest nume de utilizator / e-mail nu este disponibil."),
+        "userNameInCorrect": MessageLookupByLibrary.simpleMessage(
+            "Numele de utilizator sau parola este incorecta."),
         "username": MessageLookupByLibrary.simpleMessage("Nume de utilizator"),
         "usernameAndPasswordRequired": MessageLookupByLibrary.simpleMessage(
             "Numele de utilizator și parola sunt necesare"),
@@ -1223,6 +1250,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "viaWallet": MessageLookupByLibrary.simpleMessage("Prin portofel"),
         "video": MessageLookupByLibrary.simpleMessage("Video"),
         "vietnamese": MessageLookupByLibrary.simpleMessage("Vietnameză"),
+        "viewOnGoogleMaps":
+            MessageLookupByLibrary.simpleMessage("Vizualizați pe Google Maps"),
         "viewRecentTransactions":
             MessageLookupByLibrary.simpleMessage("Vedeți tranzacțiile recente"),
         "visible": MessageLookupByLibrary.simpleMessage("vizibil"),
diff --git a/lib/generated/intl/messages_ru.dart b/lib/generated/intl/messages_ru.dart
index fd8aef3..cb0990d 100644
--- a/lib/generated/intl/messages_ru.dart
+++ b/lib/generated/intl/messages_ru.dart
@@ -92,23 +92,14 @@ class MessageLookup extends MessageLookupByLibrary {
 
   final messages = _notInlinedMessages(_notInlinedMessages);
   static Map<String, Function> _notInlinedMessages(_) => <String, Function>{
-        "DateDESC": MessageLookupByLibrary.simpleMessage("Дата по убыванию"),
-        "Dutch": MessageLookupByLibrary.simpleMessage("Голландский"),
-        "Egypt": MessageLookupByLibrary.simpleMessage("Египет"),
-        "India": MessageLookupByLibrary.simpleMessage("хинди"),
-        "Korean": MessageLookupByLibrary.simpleMessage("корейский язык"),
-        "Netherlands": MessageLookupByLibrary.simpleMessage("Нидерланды"),
-        "Polish": MessageLookupByLibrary.simpleMessage("Polish"),
-        "PrivacyAndTerm": MessageLookupByLibrary.simpleMessage(
-            "Политика конфиденциальности и условия использования"),
-        "Qty": MessageLookupByLibrary.simpleMessage("Кол-во"),
-        "Tamil": MessageLookupByLibrary.simpleMessage("тамильский"),
         "UserNameInCorrect": MessageLookupByLibrary.simpleMessage(
             "Имя пользователя или пароль неверны"),
         "aboutUs": MessageLookupByLibrary.simpleMessage("О нас"),
         "account": MessageLookupByLibrary.simpleMessage("учетная запись"),
         "accountDeleteDescription": MessageLookupByLibrary.simpleMessage(
             "Удаление вашей учетной записи удаляет личную информацию из нашей базы данных. Ваш адрес электронной почты будет зарезервирован навсегда, и его нельзя будет повторно использовать для регистрации новой учетной записи."),
+        "accountIsPendingApproval":
+            MessageLookupByLibrary.simpleMessage("Аккаунт ожидает одобрения."),
         "accountSetup":
             MessageLookupByLibrary.simpleMessage("Настройка учетной записи"),
         "active": MessageLookupByLibrary.simpleMessage("активный"),
@@ -177,6 +168,8 @@ class MessageLookup extends MessageLookupByLibrary {
             "Обнаружены аудиообъекты. Хотите добавить в аудиоплеер?"),
         "availability": MessageLookupByLibrary.simpleMessage("Доступность"),
         "availablePoints": m1,
+        "averageRating":
+            MessageLookupByLibrary.simpleMessage("средний рейтинг"),
         "back": MessageLookupByLibrary.simpleMessage("назад"),
         "backOrder": MessageLookupByLibrary.simpleMessage("Под заказ"),
         "backToShop": MessageLookupByLibrary.simpleMessage("Назад к покупкам"),
@@ -227,10 +220,24 @@ class MessageLookup extends MessageLookupByLibrary {
         "byTag": MessageLookupByLibrary.simpleMessage("По тегу"),
         "call": MessageLookupByLibrary.simpleMessage("Вызов"),
         "callTo": MessageLookupByLibrary.simpleMessage("Позвонить"),
+        "canNotCreateOrder":
+            MessageLookupByLibrary.simpleMessage("Не могу создать заказ"),
+        "canNotCreateUser": MessageLookupByLibrary.simpleMessage(
+            "Не могу создать пользователя."),
+        "canNotGetPayments": MessageLookupByLibrary.simpleMessage(
+            "Не могу получить способы оплаты"),
+        "canNotGetShipping": MessageLookupByLibrary.simpleMessage(
+            "Не могу получить способы доставки"),
+        "canNotGetToken": MessageLookupByLibrary.simpleMessage(
+            "Не удается получить информацию о токене."),
         "canNotLaunch": MessageLookupByLibrary.simpleMessage(
             "Невозможно запустить это приложение, убедитесь, что ваши настройки в config.dart верны"),
         "canNotLoadThisLink": MessageLookupByLibrary.simpleMessage(
             "Не могу загрузить эту ссылку"),
+        "canNotSaveOrder": MessageLookupByLibrary.simpleMessage(
+            "Не могу сохранить заказ на сайте"),
+        "canNotUpdateInfo": MessageLookupByLibrary.simpleMessage(
+            "Не могу обновить информацию о пользователе."),
         "cancel": MessageLookupByLibrary.simpleMessage("Отмена"),
         "cantFindThisOrderId": MessageLookupByLibrary.simpleMessage(
             "Не могу найти этот идентификатор заказа"),
@@ -352,6 +359,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "dateASC": MessageLookupByLibrary.simpleMessage("Дата по возрастанию"),
         "dateBooking":
             MessageLookupByLibrary.simpleMessage("Дата бронирования"),
+        "dateDESC": MessageLookupByLibrary.simpleMessage("Дата по убыванию"),
         "dateEnd": MessageLookupByLibrary.simpleMessage("дата окончания"),
         "dateLatest": MessageLookupByLibrary.simpleMessage("Дата: Последняя"),
         "dateOldest": MessageLookupByLibrary.simpleMessage("Дата: Старейший"),
@@ -411,6 +419,7 @@ class MessageLookup extends MessageLookupByLibrary {
             "Редактировать информацию о продукте"),
         "editWithoutColon":
             MessageLookupByLibrary.simpleMessage("редактировать"),
+        "egypt": MessageLookupByLibrary.simpleMessage("Египет"),
         "email":
             MessageLookupByLibrary.simpleMessage("Адрес электронной почты"),
         "emailDeleteDescription": MessageLookupByLibrary.simpleMessage(
@@ -427,6 +436,8 @@ class MessageLookup extends MessageLookupByLibrary {
             "Ваш комментарий не может быть пустым"),
         "emptySearch": MessageLookupByLibrary.simpleMessage(
             "Вы еще не искали товары. Начнем сейчас - мы вам поможем."),
+        "emptyShippingMsg": MessageLookupByLibrary.simpleMessage(
+            "Вариантов доставки нет. Пожалуйста, убедитесь, что ваш адрес был введен правильно, или свяжитесь с нами, если вам нужна помощь."),
         "emptyUsername": MessageLookupByLibrary.simpleMessage(
             "Поле Имя пользователя / адрес электронной почты пусто"),
         "emptyWishlistSubtitle": MessageLookupByLibrary.simpleMessage(
@@ -567,6 +578,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "inStock": MessageLookupByLibrary.simpleMessage("В наличии"),
         "incorrectPassword":
             MessageLookupByLibrary.simpleMessage("Неверный пароль"),
+        "india": MessageLookupByLibrary.simpleMessage("хинди"),
         "indonesian": MessageLookupByLibrary.simpleMessage("Индонезийский"),
         "instantlyClose":
             MessageLookupByLibrary.simpleMessage("Мгновенно закрыть"),
@@ -675,6 +687,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "nearbyPlaces": MessageLookupByLibrary.simpleMessage("Ближайшие места"),
         "needToLoginAgain": MessageLookupByLibrary.simpleMessage(
             "Вам нужно снова войти в систему, чтобы выполнить обновление"),
+        "netherlands": MessageLookupByLibrary.simpleMessage("Нидерланды"),
         "newPassword": MessageLookupByLibrary.simpleMessage("Новый пароль"),
         "newVariation": MessageLookupByLibrary.simpleMessage("Новая вариация"),
         "next": MessageLookupByLibrary.simpleMessage("Следующий"),
@@ -866,7 +879,9 @@ class MessageLookup extends MessageLookupByLibrary {
             "Бонусный балл успешно применен"),
         "pointRewardMessage": MessageLookupByLibrary.simpleMessage(
             "При добавлении баллов в корзину действует правило скидки."),
+        "polish": MessageLookupByLibrary.simpleMessage("Polish"),
         "popular": MessageLookupByLibrary.simpleMessage("Популярный"),
+        "popularity": MessageLookupByLibrary.simpleMessage("популярность"),
         "posAddressToolTip": MessageLookupByLibrary.simpleMessage(
             "Этот адрес будет сохранен на вашем локальном устройстве. Это НЕ адрес пользователя."),
         "postContent": MessageLookupByLibrary.simpleMessage("содержание"),
@@ -897,6 +912,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "printerSelection":
             MessageLookupByLibrary.simpleMessage("Выбор принтера"),
         "printing": MessageLookupByLibrary.simpleMessage("Печать ..."),
+        "privacyAndTerm": MessageLookupByLibrary.simpleMessage(
+            "Политика конфиденциальности и условия использования"),
         "privacyPolicy":
             MessageLookupByLibrary.simpleMessage("Политика конфиденциальности"),
         "privacyTerms":
@@ -917,6 +934,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "publish": MessageLookupByLibrary.simpleMessage("Публиковать"),
         "pullToLoadMore":
             MessageLookupByLibrary.simpleMessage("Потяните для загрузки"),
+        "qty": MessageLookupByLibrary.simpleMessage("Кол-во"),
         "qtyTotal": m19,
         "rate": MessageLookupByLibrary.simpleMessage("Оценить"),
         "rateTheApp":
@@ -1128,6 +1146,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "support": MessageLookupByLibrary.simpleMessage("служба поддержки"),
         "swahili": MessageLookupByLibrary.simpleMessage("суахили"),
         "swedish": MessageLookupByLibrary.simpleMessage("шведский"),
+        "tagNotExist":
+            MessageLookupByLibrary.simpleMessage("Этот тег не существует"),
         "tags": MessageLookupByLibrary.simpleMessage("Отметки"),
         "takePicture":
             MessageLookupByLibrary.simpleMessage("Сделать фотографию"),
@@ -1149,6 +1169,12 @@ class MessageLookup extends MessageLookupByLibrary {
         "tickets": MessageLookupByLibrary.simpleMessage("Билеты"),
         "time": MessageLookupByLibrary.simpleMessage("время"),
         "title": MessageLookupByLibrary.simpleMessage("заглавие"),
+        "titleAToZ":
+            MessageLookupByLibrary.simpleMessage("Название: От А до Я"),
+        "titleZToA":
+            MessageLookupByLibrary.simpleMessage("Название: От Я до А"),
+        "tooManyFaildedLogin": MessageLookupByLibrary.simpleMessage(
+            "Слишком много неудачных попыток входа. Пожалуйста, попробуйте позже."),
         "topUp": MessageLookupByLibrary.simpleMessage("Пополнить"),
         "topUpProductNotFound":
             MessageLookupByLibrary.simpleMessage("Товар пополнения не найден"),
@@ -1207,6 +1233,8 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("Используйте это изображение"),
         "userExists": MessageLookupByLibrary.simpleMessage(
             "Это имя пользователя / адрес электронной почты недоступен."),
+        "userNameInCorrect": MessageLookupByLibrary.simpleMessage(
+            "Имя пользователя или пароль неверны."),
         "username": MessageLookupByLibrary.simpleMessage("Имя пользователя"),
         "usernameAndPasswordRequired": MessageLookupByLibrary.simpleMessage(
             "Имя пользователя и пароль обязательны"),
@@ -1226,6 +1254,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "viaWallet": MessageLookupByLibrary.simpleMessage("Через кошелек"),
         "video": MessageLookupByLibrary.simpleMessage("Видео"),
         "vietnamese": MessageLookupByLibrary.simpleMessage("Вьетнам"),
+        "viewOnGoogleMaps":
+            MessageLookupByLibrary.simpleMessage("Посмотреть на Google Картах"),
         "viewRecentTransactions": MessageLookupByLibrary.simpleMessage(
             "Посмотреть последние транзакции"),
         "visible": MessageLookupByLibrary.simpleMessage("видимый"),
diff --git a/lib/generated/intl/messages_sk.dart b/lib/generated/intl/messages_sk.dart
index 067aa32..ebc7bf9 100644
--- a/lib/generated/intl/messages_sk.dart
+++ b/lib/generated/intl/messages_sk.dart
@@ -91,23 +91,14 @@ class MessageLookup extends MessageLookupByLibrary {
 
   final messages = _notInlinedMessages(_notInlinedMessages);
   static Map<String, Function> _notInlinedMessages(_) => <String, Function>{
-        "DateDESC": MessageLookupByLibrary.simpleMessage("Dátum zostupne"),
-        "Dutch": MessageLookupByLibrary.simpleMessage("holandský"),
-        "Egypt": MessageLookupByLibrary.simpleMessage("egypt"),
-        "India": MessageLookupByLibrary.simpleMessage("hindčina"),
-        "Korean": MessageLookupByLibrary.simpleMessage("kórejský"),
-        "Netherlands": MessageLookupByLibrary.simpleMessage("holandský"),
-        "Polish": MessageLookupByLibrary.simpleMessage("poľský"),
-        "PrivacyAndTerm": MessageLookupByLibrary.simpleMessage(
-            "Osob. údaje a obch. podmienky"),
-        "Qty": MessageLookupByLibrary.simpleMessage("Množstvo"),
-        "Tamil": MessageLookupByLibrary.simpleMessage("tamil"),
         "UserNameInCorrect": MessageLookupByLibrary.simpleMessage(
             "Používateľské meno alebo heslo je nesprávne"),
         "aboutUs": MessageLookupByLibrary.simpleMessage("O nás"),
         "account": MessageLookupByLibrary.simpleMessage("účet"),
         "accountDeleteDescription": MessageLookupByLibrary.simpleMessage(
             "Vymazaním svojho účtu odstránite osobné údaje z našej databázy. Váš e-mail sa stáva trvalo rezervovaným a rovnaký e-mail nie je možné znova použiť na registráciu nového účtu."),
+        "accountIsPendingApproval":
+            MessageLookupByLibrary.simpleMessage("Účet čaká na schválenie."),
         "accountSetup": MessageLookupByLibrary.simpleMessage("Nastavenie účtu"),
         "active": MessageLookupByLibrary.simpleMessage("aktívny"),
         "addAName": MessageLookupByLibrary.simpleMessage("Pridať meno"),
@@ -175,6 +166,8 @@ class MessageLookup extends MessageLookupByLibrary {
             "Rozpoznaná zvuková položka. Chcete pridať do prehrávača zvuku?"),
         "availability": MessageLookupByLibrary.simpleMessage("Dostupnosť"),
         "availablePoints": m1,
+        "averageRating":
+            MessageLookupByLibrary.simpleMessage("Priemerné hodnotenie"),
         "back": MessageLookupByLibrary.simpleMessage("Späť"),
         "backOrder": MessageLookupByLibrary.simpleMessage("Predobjednávka"),
         "backToShop": MessageLookupByLibrary.simpleMessage("SPÄŤ DO OBCHODU"),
@@ -225,10 +218,24 @@ class MessageLookup extends MessageLookupByLibrary {
         "byTag": MessageLookupByLibrary.simpleMessage("Podľa značky"),
         "call": MessageLookupByLibrary.simpleMessage("Volať"),
         "callTo": MessageLookupByLibrary.simpleMessage("Zavolajte na"),
+        "canNotCreateOrder": MessageLookupByLibrary.simpleMessage(
+            "Nie je možné vytvoriť objednávku"),
+        "canNotCreateUser": MessageLookupByLibrary.simpleMessage(
+            "Nie je možné vytvoriť používateľa."),
+        "canNotGetPayments": MessageLookupByLibrary.simpleMessage(
+            "Nie je možné získať spôsoby platby"),
+        "canNotGetShipping": MessageLookupByLibrary.simpleMessage(
+            "Nie je možné získať spôsoby dopravy"),
+        "canNotGetToken": MessageLookupByLibrary.simpleMessage(
+            "Nie je možné získať informácie o tokene."),
         "canNotLaunch": MessageLookupByLibrary.simpleMessage(
             "Táto aplikácia sa nedá spustiť, uistite sa, že sú vaše nastavenia na config.dart správne"),
         "canNotLoadThisLink":
             MessageLookupByLibrary.simpleMessage("Tento odkaz sa nedá načítať"),
+        "canNotSaveOrder": MessageLookupByLibrary.simpleMessage(
+            "Objednávku nie je možné uložiť na web"),
+        "canNotUpdateInfo": MessageLookupByLibrary.simpleMessage(
+            "Nie je možné aktualizovať informácie o používateľovi."),
         "cancel": MessageLookupByLibrary.simpleMessage("Zrušiť"),
         "cantFindThisOrderId": MessageLookupByLibrary.simpleMessage(
             "Toto ID objednávky sa nepodarilo nájsť"),
@@ -352,6 +359,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "dateASC": MessageLookupByLibrary.simpleMessage("Dátum vzostupne"),
         "dateBooking":
             MessageLookupByLibrary.simpleMessage("Termín rezervácie"),
+        "dateDESC": MessageLookupByLibrary.simpleMessage("Dátum zostupne"),
         "dateEnd": MessageLookupByLibrary.simpleMessage("Konečný dátum"),
         "dateLatest": MessageLookupByLibrary.simpleMessage("Dátum: Najnovšie"),
         "dateOldest": MessageLookupByLibrary.simpleMessage("Dátum: najstarší"),
@@ -409,6 +417,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "editProductInfo": MessageLookupByLibrary.simpleMessage(
             "Upraviť informácie o produkte"),
         "editWithoutColon": MessageLookupByLibrary.simpleMessage("Editovať"),
+        "egypt": MessageLookupByLibrary.simpleMessage("egypt"),
         "email": MessageLookupByLibrary.simpleMessage("E-mail"),
         "emailDeleteDescription": MessageLookupByLibrary.simpleMessage(
             "Odstránením účtu sa odhlásite zo všetkých zoznamov adries."),
@@ -424,6 +433,8 @@ class MessageLookup extends MessageLookupByLibrary {
             "Váš komentár nemôže byť prázdny"),
         "emptySearch": MessageLookupByLibrary.simpleMessage(
             "Zatiaľ ste nehľadali položky. Začnime teraz – pomôžeme vám."),
+        "emptyShippingMsg": MessageLookupByLibrary.simpleMessage(
+            "Nie sú k dispozícii žiadne možnosti dopravy. Uistite sa, že vaša adresa bola zadaná správne, alebo nás kontaktujte, ak potrebujete pomoc."),
         "emptyUsername": MessageLookupByLibrary.simpleMessage(
             "Používateľské meno/e-mail je prázdne"),
         "emptyWishlistSubtitle": MessageLookupByLibrary.simpleMessage(
@@ -558,6 +569,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "inStock": MessageLookupByLibrary.simpleMessage("Na sklade"),
         "incorrectPassword":
             MessageLookupByLibrary.simpleMessage("Nesprávne heslo"),
+        "india": MessageLookupByLibrary.simpleMessage("hindčina"),
         "indonesian": MessageLookupByLibrary.simpleMessage("indonézsky"),
         "instantlyClose":
             MessageLookupByLibrary.simpleMessage("Okamžité zatvorenie"),
@@ -667,6 +679,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "nearbyPlaces": MessageLookupByLibrary.simpleMessage("Miesta v okolí"),
         "needToLoginAgain": MessageLookupByLibrary.simpleMessage(
             "Na vykonanie aktualizácie sa musíte znova prihlásiť"),
+        "netherlands": MessageLookupByLibrary.simpleMessage("holandský"),
         "newPassword": MessageLookupByLibrary.simpleMessage("Nové heslo"),
         "newVariation": MessageLookupByLibrary.simpleMessage("Nová variácia"),
         "next": MessageLookupByLibrary.simpleMessage("Ďalšie"),
@@ -861,7 +874,9 @@ class MessageLookup extends MessageLookupByLibrary {
             "Zľava za body bola úspešne uplatnená"),
         "pointRewardMessage": MessageLookupByLibrary.simpleMessage(
             "Existuje pravidlo zliav pre uplatnenie vašich bodov do košíka"),
+        "polish": MessageLookupByLibrary.simpleMessage("poľský"),
         "popular": MessageLookupByLibrary.simpleMessage("Populárne"),
+        "popularity": MessageLookupByLibrary.simpleMessage("Popularita"),
         "posAddressToolTip": MessageLookupByLibrary.simpleMessage(
             "Táto adresa sa uloží do vášho lokálneho zariadenia. NIE JE to adresa užívateľa."),
         "postContent": MessageLookupByLibrary.simpleMessage("Obsah"),
@@ -889,6 +904,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "printerSelection":
             MessageLookupByLibrary.simpleMessage("Výber tlačiarne"),
         "printing": MessageLookupByLibrary.simpleMessage("Tlačí sa..."),
+        "privacyAndTerm": MessageLookupByLibrary.simpleMessage(
+            "Osob. údaje a obch. podmienky"),
         "privacyPolicy": MessageLookupByLibrary.simpleMessage(
             "Zásady ochrany osobných údajov"),
         "privacyTerms": MessageLookupByLibrary.simpleMessage(
@@ -910,6 +927,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "publish": MessageLookupByLibrary.simpleMessage("Publikovať"),
         "pullToLoadMore":
             MessageLookupByLibrary.simpleMessage("Potiahnutím načítajte viac"),
+        "qty": MessageLookupByLibrary.simpleMessage("Množstvo"),
         "qtyTotal": m19,
         "rate": MessageLookupByLibrary.simpleMessage("Hodnotenie"),
         "rateTheApp":
@@ -1122,6 +1140,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "support": MessageLookupByLibrary.simpleMessage("podpora"),
         "swahili": MessageLookupByLibrary.simpleMessage("swahilčina"),
         "swedish": MessageLookupByLibrary.simpleMessage("švédsky"),
+        "tagNotExist":
+            MessageLookupByLibrary.simpleMessage("Táto značka neexistuje"),
         "tags": MessageLookupByLibrary.simpleMessage("Tagy"),
         "takePicture": MessageLookupByLibrary.simpleMessage("Odfotiť"),
         "tamil": MessageLookupByLibrary.simpleMessage("tamil"),
@@ -1142,6 +1162,10 @@ class MessageLookup extends MessageLookupByLibrary {
         "tickets": MessageLookupByLibrary.simpleMessage("Vstupenky"),
         "time": MessageLookupByLibrary.simpleMessage("čas"),
         "title": MessageLookupByLibrary.simpleMessage("Nadpis"),
+        "titleAToZ": MessageLookupByLibrary.simpleMessage("Názov: A až Z"),
+        "titleZToA": MessageLookupByLibrary.simpleMessage("Názov: Z po A"),
+        "tooManyFaildedLogin": MessageLookupByLibrary.simpleMessage(
+            "Príliš veľa neúspešných pokusov o prihlásenie. Skúste neskôr prosím."),
         "topUp": MessageLookupByLibrary.simpleMessage("Topujte"),
         "topUpProductNotFound": MessageLookupByLibrary.simpleMessage(
             "Produkt na doplnenie sa nenašiel"),
@@ -1200,6 +1224,8 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("Použite tento obrázok"),
         "userExists": MessageLookupByLibrary.simpleMessage(
             "Toto používateľské meno/e-mail nie je k dispozícii."),
+        "userNameInCorrect": MessageLookupByLibrary.simpleMessage(
+            "Používateľské meno alebo heslo je nesprávne."),
         "username": MessageLookupByLibrary.simpleMessage("Používateľské meno"),
         "usernameAndPasswordRequired": MessageLookupByLibrary.simpleMessage(
             "Vyžaduje sa používateľské meno a heslo"),
@@ -1218,6 +1244,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "viaWallet": MessageLookupByLibrary.simpleMessage("Cez peňaženku"),
         "video": MessageLookupByLibrary.simpleMessage("Video"),
         "vietnamese": MessageLookupByLibrary.simpleMessage("vietnamský"),
+        "viewOnGoogleMaps":
+            MessageLookupByLibrary.simpleMessage("Zobraziť na Google Maps"),
         "viewRecentTransactions": MessageLookupByLibrary.simpleMessage(
             "Pozrite si posledné transakcie"),
         "visible": MessageLookupByLibrary.simpleMessage("Viditeľné"),
diff --git a/lib/generated/intl/messages_sq.dart b/lib/generated/intl/messages_sq.dart
index ce282e6..a2bbde7 100644
--- a/lib/generated/intl/messages_sq.dart
+++ b/lib/generated/intl/messages_sq.dart
@@ -91,23 +91,14 @@ class MessageLookup extends MessageLookupByLibrary {
 
   final messages = _notInlinedMessages(_notInlinedMessages);
   static Map<String, Function> _notInlinedMessages(_) => <String, Function>{
-        "DateDESC": MessageLookupByLibrary.simpleMessage("Data në zbritje"),
-        "Dutch": MessageLookupByLibrary.simpleMessage("holandez"),
-        "Egypt": MessageLookupByLibrary.simpleMessage("Egjipti"),
-        "India": MessageLookupByLibrary.simpleMessage("Hindi"),
-        "Korean": MessageLookupByLibrary.simpleMessage("korean"),
-        "Netherlands": MessageLookupByLibrary.simpleMessage("holandez"),
-        "Polish": MessageLookupByLibrary.simpleMessage("polonisht"),
-        "PrivacyAndTerm":
-            MessageLookupByLibrary.simpleMessage("Privatësia dhe afati"),
-        "Qty": MessageLookupByLibrary.simpleMessage("Qty"),
-        "Tamil": MessageLookupByLibrary.simpleMessage("tamil"),
         "UserNameInCorrect": MessageLookupByLibrary.simpleMessage(
             "Emri i përdoruesit ose fjalëkalimi është i pasaktë"),
         "aboutUs": MessageLookupByLibrary.simpleMessage("rreth nesh"),
         "account": MessageLookupByLibrary.simpleMessage("llogari"),
         "accountDeleteDescription": MessageLookupByLibrary.simpleMessage(
             "Fshirja e llogarisë suaj heq informacionin personal nga databaza jonë. Email-i juaj bëhet i rezervuar përgjithmonë dhe i njëjti email nuk mund të ripërdoret për të regjistruar një llogari të re."),
+        "accountIsPendingApproval": MessageLookupByLibrary.simpleMessage(
+            "Llogaria është në pritje të miratimit."),
         "accountSetup":
             MessageLookupByLibrary.simpleMessage("Konfigurimi i llogarisë"),
         "active": MessageLookupByLibrary.simpleMessage("aktiv"),
@@ -178,6 +169,8 @@ class MessageLookup extends MessageLookupByLibrary {
             "Artikujt audio u zbuluan. Dëshiron të shtosh te Audio Player?"),
         "availability": MessageLookupByLibrary.simpleMessage("Disponueshmëria"),
         "availablePoints": m1,
+        "averageRating":
+            MessageLookupByLibrary.simpleMessage("Vleresim mesatar"),
         "back": MessageLookupByLibrary.simpleMessage("prapa"),
         "backOrder": MessageLookupByLibrary.simpleMessage("Me porosi"),
         "backToShop": MessageLookupByLibrary.simpleMessage("Kthehu te Dyqani"),
@@ -229,10 +222,24 @@ class MessageLookup extends MessageLookupByLibrary {
         "call": MessageLookupByLibrary.simpleMessage("thirrje"),
         "callTo":
             MessageLookupByLibrary.simpleMessage("Bëj një telefonatë për"),
+        "canNotCreateOrder":
+            MessageLookupByLibrary.simpleMessage("Nuk mund të krijohet rend"),
+        "canNotCreateUser": MessageLookupByLibrary.simpleMessage(
+            "Përdoruesi nuk mund të krijohet."),
+        "canNotGetPayments": MessageLookupByLibrary.simpleMessage(
+            "Nuk mund të merren mënyrat e pagesës"),
+        "canNotGetShipping": MessageLookupByLibrary.simpleMessage(
+            "Nuk mund të merren metodat e transportit"),
+        "canNotGetToken": MessageLookupByLibrary.simpleMessage(
+            "Nuk mund të merret informacioni i shenjës."),
         "canNotLaunch": MessageLookupByLibrary.simpleMessage(
             "Ky aplikacion nuk mund të hapet, sigurohuni që cilësimet tuaja në config.dart të jenë të sakta"),
         "canNotLoadThisLink": MessageLookupByLibrary.simpleMessage(
             "Kjo lidhje nuk mund të ngarkohet"),
+        "canNotSaveOrder": MessageLookupByLibrary.simpleMessage(
+            "Porosia nuk mund të ruhet në faqen e internetit"),
+        "canNotUpdateInfo": MessageLookupByLibrary.simpleMessage(
+            "Informacioni i përdoruesit nuk mund të përditësohet."),
         "cancel": MessageLookupByLibrary.simpleMessage("anuloj"),
         "cantFindThisOrderId": MessageLookupByLibrary.simpleMessage(
             "ID-ja e porosisë nuk mund të gjendet"),
@@ -353,6 +360,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "dateASC": MessageLookupByLibrary.simpleMessage("Data në rritje"),
         "dateBooking":
             MessageLookupByLibrary.simpleMessage("Rezervimi i datës"),
+        "dateDESC": MessageLookupByLibrary.simpleMessage("Data në zbritje"),
         "dateEnd": MessageLookupByLibrary.simpleMessage("Data Fund"),
         "dateLatest": MessageLookupByLibrary.simpleMessage("Data: E fundit"),
         "dateOldest": MessageLookupByLibrary.simpleMessage("Data: Më e vjetra"),
@@ -412,6 +420,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "editProductInfo": MessageLookupByLibrary.simpleMessage(
             "Redakto informacionin e produktit"),
         "editWithoutColon": MessageLookupByLibrary.simpleMessage("redaktoj"),
+        "egypt": MessageLookupByLibrary.simpleMessage("Egjipti"),
         "email": MessageLookupByLibrary.simpleMessage("Email"),
         "emailDeleteDescription": MessageLookupByLibrary.simpleMessage(
             "Fshirja e llogarisë suaj do t\'ju çregjistrojë nga të gjitha listat e postimeve."),
@@ -427,6 +436,8 @@ class MessageLookup extends MessageLookupByLibrary {
             "Komenti juaj nuk mund të jetë bosh"),
         "emptySearch": MessageLookupByLibrary.simpleMessage(
             "Nuk keni kërkuar ende për artikuj. Le të fillojmë tani - ne do t\'ju ndihmojmë."),
+        "emptyShippingMsg": MessageLookupByLibrary.simpleMessage(
+            "Nuk ka opsione transporti në dispozicion. Ju lutemi sigurohuni që adresa juaj të jetë futur saktë ose na kontaktoni nëse keni nevojë për ndihmë."),
         "emptyUsername": MessageLookupByLibrary.simpleMessage(
             "Emri i përdoruesit/Email-i është bosh"),
         "emptyWishlistSubtitle": MessageLookupByLibrary.simpleMessage(
@@ -563,6 +574,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "inStock": MessageLookupByLibrary.simpleMessage("Në magazinë"),
         "incorrectPassword":
             MessageLookupByLibrary.simpleMessage("Fjalëkalim i pasaktë"),
+        "india": MessageLookupByLibrary.simpleMessage("Hindi"),
         "indonesian": MessageLookupByLibrary.simpleMessage("indonezian"),
         "instantlyClose":
             MessageLookupByLibrary.simpleMessage("Mbylle menjëherë"),
@@ -674,6 +686,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "nearbyPlaces": MessageLookupByLibrary.simpleMessage("Vendet e afërta"),
         "needToLoginAgain": MessageLookupByLibrary.simpleMessage(
             "Duhet të identifikohesh sërish për të realizuar përditësimin"),
+        "netherlands": MessageLookupByLibrary.simpleMessage("holandez"),
         "newPassword": MessageLookupByLibrary.simpleMessage("Fjalëkalim i ri"),
         "newVariation": MessageLookupByLibrary.simpleMessage("Variacion i ri"),
         "next": MessageLookupByLibrary.simpleMessage("tjetër"),
@@ -872,7 +885,9 @@ class MessageLookup extends MessageLookupByLibrary {
             "Pika e zbritjes është aplikuar me sukses"),
         "pointRewardMessage": MessageLookupByLibrary.simpleMessage(
             "Ekziston Rregulli i Zbritjes për aplikimin e pikëve tuaja në Shportë"),
+        "polish": MessageLookupByLibrary.simpleMessage("polonisht"),
         "popular": MessageLookupByLibrary.simpleMessage("Popullore"),
+        "popularity": MessageLookupByLibrary.simpleMessage("Popullariteti"),
         "posAddressToolTip": MessageLookupByLibrary.simpleMessage(
             "Kjo adresë do të ruhet në pajisjen tuaj lokale. NUK është adresa e përdoruesit."),
         "postContent": MessageLookupByLibrary.simpleMessage("përmbajtje"),
@@ -900,6 +915,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "printerSelection":
             MessageLookupByLibrary.simpleMessage("Zgjedhja e printerit"),
         "printing": MessageLookupByLibrary.simpleMessage("Po printon..."),
+        "privacyAndTerm":
+            MessageLookupByLibrary.simpleMessage("Privatësia dhe afati"),
         "privacyPolicy":
             MessageLookupByLibrary.simpleMessage("Politika e privatësisë"),
         "privacyTerms":
@@ -921,6 +938,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "publish": MessageLookupByLibrary.simpleMessage("publikoj"),
         "pullToLoadMore": MessageLookupByLibrary.simpleMessage(
             "Tërhiqe për të ngarkuar më shumë"),
+        "qty": MessageLookupByLibrary.simpleMessage("qty"),
         "qtyTotal": m19,
         "rate": MessageLookupByLibrary.simpleMessage("Vlerësoni"),
         "rateTheApp":
@@ -1139,6 +1157,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "support": MessageLookupByLibrary.simpleMessage("mbështetje"),
         "swahili": MessageLookupByLibrary.simpleMessage("Swahili"),
         "swedish": MessageLookupByLibrary.simpleMessage("suedez"),
+        "tagNotExist":
+            MessageLookupByLibrary.simpleMessage("Kjo etiketë nuk ekziston"),
         "tags": MessageLookupByLibrary.simpleMessage("Etiketat"),
         "takePicture": MessageLookupByLibrary.simpleMessage("Bëj foto"),
         "tamil": MessageLookupByLibrary.simpleMessage("tamil"),
@@ -1159,6 +1179,11 @@ class MessageLookup extends MessageLookupByLibrary {
         "tickets": MessageLookupByLibrary.simpleMessage("Biletat"),
         "time": MessageLookupByLibrary.simpleMessage("kohë"),
         "title": MessageLookupByLibrary.simpleMessage("titull"),
+        "titleAToZ":
+            MessageLookupByLibrary.simpleMessage("Titulli: A deri në Z"),
+        "titleZToA": MessageLookupByLibrary.simpleMessage("Titulli: Z në A"),
+        "tooManyFaildedLogin": MessageLookupByLibrary.simpleMessage(
+            "Shumë përpjekje të dështuara për hyrje. Ju lutemi provoni përsëri më vonë."),
         "topUp": MessageLookupByLibrary.simpleMessage("Mbushje"),
         "topUpProductNotFound":
             MessageLookupByLibrary.simpleMessage("Produkti Top Up nuk u gjet"),
@@ -1219,6 +1244,8 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("Përdorni këtë imazh"),
         "userExists": MessageLookupByLibrary.simpleMessage(
             "Ky emër përdoruesi/email nuk është i disponueshëm."),
+        "userNameInCorrect": MessageLookupByLibrary.simpleMessage(
+            "Emri i përdoruesit ose fjalëkalimi është i pasaktë."),
         "username": MessageLookupByLibrary.simpleMessage("Emri i përdoruesit"),
         "usernameAndPasswordRequired": MessageLookupByLibrary.simpleMessage(
             "Kërkohet emri i përdoruesit dhe fjalëkalimi"),
@@ -1239,6 +1266,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "viaWallet": MessageLookupByLibrary.simpleMessage("Përmes portofolit"),
         "video": MessageLookupByLibrary.simpleMessage("video"),
         "vietnamese": MessageLookupByLibrary.simpleMessage("vietnamisht"),
+        "viewOnGoogleMaps":
+            MessageLookupByLibrary.simpleMessage("Shikoni në Google Maps"),
         "viewRecentTransactions": MessageLookupByLibrary.simpleMessage(
             "Shikoni transaksionet e fundit"),
         "visible": MessageLookupByLibrary.simpleMessage("E dukshme"),
diff --git a/lib/generated/intl/messages_sr.dart b/lib/generated/intl/messages_sr.dart
index afb112e..dea5bd5 100644
--- a/lib/generated/intl/messages_sr.dart
+++ b/lib/generated/intl/messages_sr.dart
@@ -91,23 +91,14 @@ class MessageLookup extends MessageLookupByLibrary {
 
   final messages = _notInlinedMessages(_notInlinedMessages);
   static Map<String, Function> _notInlinedMessages(_) => <String, Function>{
-        "DateDESC": MessageLookupByLibrary.simpleMessage("Datum opadajući"),
-        "Dutch": MessageLookupByLibrary.simpleMessage("Холандски"),
-        "Egypt": MessageLookupByLibrary.simpleMessage("Египат"),
-        "India": MessageLookupByLibrary.simpleMessage("Индија"),
-        "Korean": MessageLookupByLibrary.simpleMessage("корејски"),
-        "Netherlands": MessageLookupByLibrary.simpleMessage("Холандија"),
-        "Polish": MessageLookupByLibrary.simpleMessage("Пољски"),
-        "PrivacyAndTerm":
-            MessageLookupByLibrary.simpleMessage(" Заштита података и услови "),
-        "Qty": MessageLookupByLibrary.simpleMessage("износ"),
-        "Tamil": MessageLookupByLibrary.simpleMessage("Tamilski"),
         "UserNameInCorrect": MessageLookupByLibrary.simpleMessage(
             "Корисничко име или лозинка нетачни"),
         "aboutUs": MessageLookupByLibrary.simpleMessage("O нама"),
         "account": MessageLookupByLibrary.simpleMessage("račun"),
         "accountDeleteDescription": MessageLookupByLibrary.simpleMessage(
             "Brisanjem vašeg naloga uklanjate lične podatke iz naše baze podataka. Vaša e-pošta postaje trajno rezervirana i ista e-pošta se ne može ponovo koristiti za registraciju novog naloga."),
+        "accountIsPendingApproval":
+            MessageLookupByLibrary.simpleMessage("Račun čeka odobrenje."),
         "accountSetup":
             MessageLookupByLibrary.simpleMessage("Podešavanje računa"),
         "active": MessageLookupByLibrary.simpleMessage("aktivan"),
@@ -175,6 +166,7 @@ class MessageLookup extends MessageLookupByLibrary {
             "Otkrivene su audio stavke. Želite li dodati Audio Player?"),
         "availability": MessageLookupByLibrary.simpleMessage("Доступност"),
         "availablePoints": m1,
+        "averageRating": MessageLookupByLibrary.simpleMessage("Просечна оцена"),
         "back": MessageLookupByLibrary.simpleMessage("Назад"),
         "backOrder":
             MessageLookupByLibrary.simpleMessage("Ако постоји заостатак"),
@@ -227,10 +219,24 @@ class MessageLookup extends MessageLookupByLibrary {
         "byTag": MessageLookupByLibrary.simpleMessage("Дању"),
         "call": MessageLookupByLibrary.simpleMessage("Pozovite"),
         "callTo": MessageLookupByLibrary.simpleMessage("Pozovite"),
+        "canNotCreateOrder":
+            MessageLookupByLibrary.simpleMessage("Ne mogu kreirati red"),
+        "canNotCreateUser":
+            MessageLookupByLibrary.simpleMessage("Ne mogu kreirati korisnika."),
+        "canNotGetPayments": MessageLookupByLibrary.simpleMessage(
+            "Ne mogu dobiti načine plaćanja"),
+        "canNotGetShipping": MessageLookupByLibrary.simpleMessage(
+            "Ne mogu dobiti metode dostave"),
+        "canNotGetToken": MessageLookupByLibrary.simpleMessage(
+            "Ne mogu dobiti informacije o tokenu."),
         "canNotLaunch": MessageLookupByLibrary.simpleMessage(
             "Није могуће покренути ову апликацију. Уверите се да су ваша подешавања у цонфиг.дарт тачна"),
         "canNotLoadThisLink": MessageLookupByLibrary.simpleMessage(
             "Nije moguće učitati ovu vezu"),
+        "canNotSaveOrder": MessageLookupByLibrary.simpleMessage(
+            "Nije moguće sačuvati narudžbu na web stranici"),
+        "canNotUpdateInfo": MessageLookupByLibrary.simpleMessage(
+            "Nije moguće ažurirati podatke o korisniku."),
         "cancel": MessageLookupByLibrary.simpleMessage("отказати"),
         "cantFindThisOrderId": MessageLookupByLibrary.simpleMessage(
             "Овај број поруџбине није могуће пронаћи"),
@@ -350,6 +356,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "date": MessageLookupByLibrary.simpleMessage("датум"),
         "dateASC": MessageLookupByLibrary.simpleMessage("Datum raste"),
         "dateBooking": MessageLookupByLibrary.simpleMessage("Датум поруџбине"),
+        "dateDESC": MessageLookupByLibrary.simpleMessage("Datum opadajući"),
         "dateEnd": MessageLookupByLibrary.simpleMessage("Крајњи датум"),
         "dateLatest": MessageLookupByLibrary.simpleMessage("Datum: Najnovije"),
         "dateOldest": MessageLookupByLibrary.simpleMessage("Datum: Najstariji"),
@@ -406,6 +413,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "editProductInfo": MessageLookupByLibrary.simpleMessage(
             "Измените информације о производу"),
         "editWithoutColon": MessageLookupByLibrary.simpleMessage("Uredi"),
+        "egypt": MessageLookupByLibrary.simpleMessage("Египат"),
         "email": MessageLookupByLibrary.simpleMessage("Е-маил"),
         "emailDeleteDescription": MessageLookupByLibrary.simpleMessage(
             "Brisanjem vašeg naloga otkazat ćete se sa svih mailing lista."),
@@ -421,6 +429,8 @@ class MessageLookup extends MessageLookupByLibrary {
             "Vaš komentar ne može biti prazan"),
         "emptySearch": MessageLookupByLibrary.simpleMessage(
             "Još niste tražili stavke. Počnimo sada - pomoći ćemo vam."),
+        "emptyShippingMsg": MessageLookupByLibrary.simpleMessage(
+            "Nema dostupnih opcija dostave. Provjerite je li vaša adresa ispravno unesena ili nas kontaktirajte ako vam je potrebna pomoć."),
         "emptyUsername": MessageLookupByLibrary.simpleMessage(
             "корисничко име / е-маил је празан"),
         "emptyWishlistSubtitle": MessageLookupByLibrary.simpleMessage(
@@ -552,6 +562,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "inStock": MessageLookupByLibrary.simpleMessage("на лагеру"),
         "incorrectPassword":
             MessageLookupByLibrary.simpleMessage("Netačna lozinka"),
+        "india": MessageLookupByLibrary.simpleMessage("Индија"),
         "indonesian": MessageLookupByLibrary.simpleMessage("Индонежански"),
         "instantlyClose": MessageLookupByLibrary.simpleMessage("Odmah blizu"),
         "invalidPhoneNumber":
@@ -662,6 +673,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "nearbyPlaces": MessageLookupByLibrary.simpleMessage("Близу мене"),
         "needToLoginAgain": MessageLookupByLibrary.simpleMessage(
             "Morate se ponovo prijaviti da biste izvršili ažuriranje"),
+        "netherlands": MessageLookupByLibrary.simpleMessage("Холандија"),
         "newPassword": MessageLookupByLibrary.simpleMessage("Нова лозинка"),
         "newVariation": MessageLookupByLibrary.simpleMessage("Nova varijacija"),
         "next": MessageLookupByLibrary.simpleMessage("даље"),
@@ -856,7 +868,9 @@ class MessageLookup extends MessageLookupByLibrary {
             "Popust se uspješno primjenjuje"),
         "pointRewardMessage": MessageLookupByLibrary.simpleMessage(
             "Доступан је ваучер за вашу корпу"),
+        "polish": MessageLookupByLibrary.simpleMessage("Пољски"),
         "popular": MessageLookupByLibrary.simpleMessage("Popularno"),
+        "popularity": MessageLookupByLibrary.simpleMessage("Popularnost"),
         "posAddressToolTip": MessageLookupByLibrary.simpleMessage(
             "Ova adresa će biti sačuvana na vašem lokalnom uređaju. To NIJE korisnička adresa."),
         "postContent": MessageLookupByLibrary.simpleMessage("Sadržaj"),
@@ -885,6 +899,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "printerSelection":
             MessageLookupByLibrary.simpleMessage("Odabir štampača"),
         "printing": MessageLookupByLibrary.simpleMessage("Štampanje..."),
+        "privacyAndTerm":
+            MessageLookupByLibrary.simpleMessage(" Заштита података и услови "),
         "privacyPolicy":
             MessageLookupByLibrary.simpleMessage("Politika privatnosti"),
         "privacyTerms":
@@ -906,6 +922,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "publish": MessageLookupByLibrary.simpleMessage("Objavite"),
         "pullToLoadMore": MessageLookupByLibrary.simpleMessage(
             "Превуците нагоре да бисте видели више"),
+        "qty": MessageLookupByLibrary.simpleMessage("износ"),
         "qtyTotal": m19,
         "rate": MessageLookupByLibrary.simpleMessage("Оцените"),
         "rateTheApp":
@@ -1124,6 +1141,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "support": MessageLookupByLibrary.simpleMessage("Podrška"),
         "swahili": MessageLookupByLibrary.simpleMessage("Svahili"),
         "swedish": MessageLookupByLibrary.simpleMessage("Švedski"),
+        "tagNotExist":
+            MessageLookupByLibrary.simpleMessage("Ova oznaka ne postoji"),
         "tags": MessageLookupByLibrary.simpleMessage("Ознаке"),
         "takePicture": MessageLookupByLibrary.simpleMessage("Сликати"),
         "tamil": MessageLookupByLibrary.simpleMessage("Tamilski"),
@@ -1144,6 +1163,10 @@ class MessageLookup extends MessageLookupByLibrary {
         "tickets": MessageLookupByLibrary.simpleMessage("Карте"),
         "time": MessageLookupByLibrary.simpleMessage("Vreme"),
         "title": MessageLookupByLibrary.simpleMessage("Naslov"),
+        "titleAToZ": MessageLookupByLibrary.simpleMessage("Наслов: А до З"),
+        "titleZToA": MessageLookupByLibrary.simpleMessage("Наслов: З до А"),
+        "tooManyFaildedLogin": MessageLookupByLibrary.simpleMessage(
+            "Превише неуспешних покушаја пријаве. Покушајте поново касније."),
         "topUp": MessageLookupByLibrary.simpleMessage("Top Up"),
         "topUpProductNotFound": MessageLookupByLibrary.simpleMessage(
             "Nadopuni proizvod nije pronađen"),
@@ -1204,6 +1227,8 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("Koristite ovu sliku"),
         "userExists": MessageLookupByLibrary.simpleMessage(
             "Ovo korisničko ime/e -adresa nije dostupno."),
+        "userNameInCorrect": MessageLookupByLibrary.simpleMessage(
+            "Korisničko ime ili lozinka su netačni."),
         "username": MessageLookupByLibrary.simpleMessage("Корисничко име"),
         "usernameAndPasswordRequired": MessageLookupByLibrary.simpleMessage(
             "Korisničko ime i lozinka su obavezni"),
@@ -1223,6 +1248,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "viaWallet": MessageLookupByLibrary.simpleMessage("Preko novčanika"),
         "video": MessageLookupByLibrary.simpleMessage("Видео"),
         "vietnamese": MessageLookupByLibrary.simpleMessage("Вијетнамски"),
+        "viewOnGoogleMaps":
+            MessageLookupByLibrary.simpleMessage("Погледајте на Гоогле мапама"),
         "viewRecentTransactions": MessageLookupByLibrary.simpleMessage(
             "Pogledajte nedavne transakcije"),
         "visible": MessageLookupByLibrary.simpleMessage("Vidljivo"),
diff --git a/lib/generated/intl/messages_sv.dart b/lib/generated/intl/messages_sv.dart
index a1740a4..0523133 100644
--- a/lib/generated/intl/messages_sv.dart
+++ b/lib/generated/intl/messages_sv.dart
@@ -91,23 +91,14 @@ class MessageLookup extends MessageLookupByLibrary {
 
   final messages = _notInlinedMessages(_notInlinedMessages);
   static Map<String, Function> _notInlinedMessages(_) => <String, Function>{
-        "DateDESC": MessageLookupByLibrary.simpleMessage("Datum fallande"),
-        "Dutch": MessageLookupByLibrary.simpleMessage("holländska"),
-        "Egypt": MessageLookupByLibrary.simpleMessage("Egypten"),
-        "India": MessageLookupByLibrary.simpleMessage("hindi"),
-        "Korean": MessageLookupByLibrary.simpleMessage("korean"),
-        "Netherlands": MessageLookupByLibrary.simpleMessage("holländska"),
-        "Polish": MessageLookupByLibrary.simpleMessage("putsa"),
-        "PrivacyAndTerm":
-            MessageLookupByLibrary.simpleMessage("SEKRETESS OCH VILLKOR"),
-        "Qty": MessageLookupByLibrary.simpleMessage("st"),
-        "Tamil": MessageLookupByLibrary.simpleMessage("tamil"),
         "UserNameInCorrect": MessageLookupByLibrary.simpleMessage(
             "Användarnamnet eller lösenordet är felaktigt"),
         "aboutUs": MessageLookupByLibrary.simpleMessage("om oss"),
         "account": MessageLookupByLibrary.simpleMessage("Konto"),
         "accountDeleteDescription": MessageLookupByLibrary.simpleMessage(
             "Att ta bort ditt konto tar bort personlig information från vår databas. Din e-post blir permanent reserverad och samma e-post kan inte återanvändas för att registrera ett nytt konto."),
+        "accountIsPendingApproval": MessageLookupByLibrary.simpleMessage(
+            "Kontot väntar på godkännande."),
         "accountSetup":
             MessageLookupByLibrary.simpleMessage("Kontoinställning"),
         "active": MessageLookupByLibrary.simpleMessage("Aktiva"),
@@ -179,6 +170,8 @@ class MessageLookup extends MessageLookupByLibrary {
             "Ljudobjekt upptäcktes. Vill du lägga till i Audio Player?"),
         "availability": MessageLookupByLibrary.simpleMessage("Tillgänglighet"),
         "availablePoints": m1,
+        "averageRating":
+            MessageLookupByLibrary.simpleMessage("Genomsnittligt betyg"),
         "back": MessageLookupByLibrary.simpleMessage("Tillbaka"),
         "backOrder": MessageLookupByLibrary.simpleMessage("På Rest"),
         "backToShop":
@@ -228,10 +221,24 @@ class MessageLookup extends MessageLookupByLibrary {
         "byTag": MessageLookupByLibrary.simpleMessage("Av Tag"),
         "call": MessageLookupByLibrary.simpleMessage("Ring upp"),
         "callTo": MessageLookupByLibrary.simpleMessage("Ring ett samtal till"),
+        "canNotCreateOrder":
+            MessageLookupByLibrary.simpleMessage("Kan inte skapa beställning"),
+        "canNotCreateUser":
+            MessageLookupByLibrary.simpleMessage("Kan inte skapa användaren."),
+        "canNotGetPayments": MessageLookupByLibrary.simpleMessage(
+            "Kan inte få betalningsmetoder"),
+        "canNotGetShipping":
+            MessageLookupByLibrary.simpleMessage("Kan inte få leveransmetoder"),
+        "canNotGetToken": MessageLookupByLibrary.simpleMessage(
+            "Kan inte få information om token."),
         "canNotLaunch": MessageLookupByLibrary.simpleMessage(
             "Det går inte att starta den här appen, se till att dina inställningar på config.dart är korrekta"),
         "canNotLoadThisLink":
             MessageLookupByLibrary.simpleMessage("Kan inte ladda denna länk"),
+        "canNotSaveOrder": MessageLookupByLibrary.simpleMessage(
+            "Det går inte att spara beställningen på webbplatsen"),
+        "canNotUpdateInfo": MessageLookupByLibrary.simpleMessage(
+            "Kan inte uppdatera användarinformation."),
         "cancel": MessageLookupByLibrary.simpleMessage("Annullera"),
         "cantFindThisOrderId": MessageLookupByLibrary.simpleMessage(
             "Det här beställnings-ID: t hittades inte"),
@@ -344,6 +351,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "date": MessageLookupByLibrary.simpleMessage("Datum"),
         "dateASC": MessageLookupByLibrary.simpleMessage("Datum stigande"),
         "dateBooking": MessageLookupByLibrary.simpleMessage("Datumbokning"),
+        "dateDESC": MessageLookupByLibrary.simpleMessage("Datum fallande"),
         "dateEnd": MessageLookupByLibrary.simpleMessage("Datum slut"),
         "dateLatest": MessageLookupByLibrary.simpleMessage("Datum: Senaste"),
         "dateOldest": MessageLookupByLibrary.simpleMessage("Datum: Äldst"),
@@ -400,6 +408,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "editProductInfo":
             MessageLookupByLibrary.simpleMessage("Redigera produktinformation"),
         "editWithoutColon": MessageLookupByLibrary.simpleMessage("Redigera"),
+        "egypt": MessageLookupByLibrary.simpleMessage("Egypten"),
         "email": MessageLookupByLibrary.simpleMessage("E-post"),
         "emailDeleteDescription": MessageLookupByLibrary.simpleMessage(
             "Om du tar bort ditt konto avregistreras du från alla e-postlistor."),
@@ -415,6 +424,8 @@ class MessageLookup extends MessageLookupByLibrary {
             "Din kommentar får inte vara tom"),
         "emptySearch": MessageLookupByLibrary.simpleMessage(
             "Du har inte sökt efter objekt än. Låt oss börja nu - vi hjälper dig."),
+        "emptyShippingMsg": MessageLookupByLibrary.simpleMessage(
+            "Det finns inga tillgängliga fraktalternativ. Se till att din adress har angetts korrekt, eller kontakta oss om du behöver hjälp."),
         "emptyUsername": MessageLookupByLibrary.simpleMessage(
             "Användarnamn / e-post är tomt"),
         "emptyWishlistSubtitle": MessageLookupByLibrary.simpleMessage(
@@ -548,6 +559,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "inStock": MessageLookupByLibrary.simpleMessage("I Lager"),
         "incorrectPassword":
             MessageLookupByLibrary.simpleMessage("Fel lösenord"),
+        "india": MessageLookupByLibrary.simpleMessage("hindi"),
         "indonesian": MessageLookupByLibrary.simpleMessage("indonesisk"),
         "instantlyClose":
             MessageLookupByLibrary.simpleMessage("Omedelbart nära"),
@@ -657,6 +669,7 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("Närliggande platser"),
         "needToLoginAgain": MessageLookupByLibrary.simpleMessage(
             "Du måste logga in igen för att genomföra uppdateringen"),
+        "netherlands": MessageLookupByLibrary.simpleMessage("holländska"),
         "newPassword": MessageLookupByLibrary.simpleMessage("nytt lösenord"),
         "newVariation": MessageLookupByLibrary.simpleMessage("Ny variant"),
         "next": MessageLookupByLibrary.simpleMessage("Nästa"),
@@ -852,7 +865,9 @@ class MessageLookup extends MessageLookupByLibrary {
             "Rabattpunkten har tillämpats"),
         "pointRewardMessage": MessageLookupByLibrary.simpleMessage(
             "Det finns rabatteregeln för att tillämpa dina poäng på kundvagnen"),
+        "polish": MessageLookupByLibrary.simpleMessage("putsa"),
         "popular": MessageLookupByLibrary.simpleMessage("populär"),
+        "popularity": MessageLookupByLibrary.simpleMessage("popularitet"),
         "posAddressToolTip": MessageLookupByLibrary.simpleMessage(
             "Den här adressen kommer att sparas på din lokala enhet. Det är INTE användaradressen."),
         "postContent": MessageLookupByLibrary.simpleMessage("Innehåll"),
@@ -879,6 +894,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "printerSelection":
             MessageLookupByLibrary.simpleMessage("Val av skrivare"),
         "printing": MessageLookupByLibrary.simpleMessage("Utskrift..."),
+        "privacyAndTerm":
+            MessageLookupByLibrary.simpleMessage("SEKRETESS OCH VILLKOR"),
         "privacyPolicy":
             MessageLookupByLibrary.simpleMessage("Integritetspolicy"),
         "privacyTerms":
@@ -900,6 +917,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "publish": MessageLookupByLibrary.simpleMessage("Publicera"),
         "pullToLoadMore":
             MessageLookupByLibrary.simpleMessage("Dra för att ladda mer"),
+        "qty": MessageLookupByLibrary.simpleMessage("st"),
         "qtyTotal": m19,
         "rate": MessageLookupByLibrary.simpleMessage("Betygsätta"),
         "rateTheApp": MessageLookupByLibrary.simpleMessage("Betygsätt appen"),
@@ -1100,6 +1118,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "support": MessageLookupByLibrary.simpleMessage("Stöd"),
         "swahili": MessageLookupByLibrary.simpleMessage("Swahili"),
         "swedish": MessageLookupByLibrary.simpleMessage("Svenska"),
+        "tagNotExist":
+            MessageLookupByLibrary.simpleMessage("Den här taggen finns inte"),
         "tags": MessageLookupByLibrary.simpleMessage("Tags"),
         "takePicture": MessageLookupByLibrary.simpleMessage("Ta bild"),
         "tamil": MessageLookupByLibrary.simpleMessage("tamil"),
@@ -1120,6 +1140,10 @@ class MessageLookup extends MessageLookupByLibrary {
         "tickets": MessageLookupByLibrary.simpleMessage("biljetter"),
         "time": MessageLookupByLibrary.simpleMessage("Tid"),
         "title": MessageLookupByLibrary.simpleMessage("Titel"),
+        "titleAToZ": MessageLookupByLibrary.simpleMessage("Titel: A till Ö"),
+        "titleZToA": MessageLookupByLibrary.simpleMessage("Titel: Ö till A"),
+        "tooManyFaildedLogin": MessageLookupByLibrary.simpleMessage(
+            "För många misslyckade inloggningsförsök. Vänligen försök igen senare."),
         "topUp": MessageLookupByLibrary.simpleMessage("Fyll på"),
         "topUpProductNotFound": MessageLookupByLibrary.simpleMessage(
             "Påfyllningsprodukt hittades inte"),
@@ -1179,6 +1203,8 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("Använd denna bild"),
         "userExists": MessageLookupByLibrary.simpleMessage(
             "Det här användarnamnet/e -postmeddelandet är inte tillgängligt."),
+        "userNameInCorrect": MessageLookupByLibrary.simpleMessage(
+            "Användarnamnet eller lösenordet är felaktigt."),
         "username": MessageLookupByLibrary.simpleMessage("Användarnamn"),
         "usernameAndPasswordRequired": MessageLookupByLibrary.simpleMessage(
             "Användarnamn och lösenord krävs"),
@@ -1198,6 +1224,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "viaWallet": MessageLookupByLibrary.simpleMessage("Via plånbok"),
         "video": MessageLookupByLibrary.simpleMessage("Video"),
         "vietnamese": MessageLookupByLibrary.simpleMessage("vietnames"),
+        "viewOnGoogleMaps":
+            MessageLookupByLibrary.simpleMessage("Visa på Google Maps"),
         "viewRecentTransactions":
             MessageLookupByLibrary.simpleMessage("Visa senaste transaktioner"),
         "visible": MessageLookupByLibrary.simpleMessage("Synlig"),
diff --git a/lib/generated/intl/messages_sw.dart b/lib/generated/intl/messages_sw.dart
index 8ba5787..f3deea1 100644
--- a/lib/generated/intl/messages_sw.dart
+++ b/lib/generated/intl/messages_sw.dart
@@ -91,23 +91,14 @@ class MessageLookup extends MessageLookupByLibrary {
 
   final messages = _notInlinedMessages(_notInlinedMessages);
   static Map<String, Function> _notInlinedMessages(_) => <String, Function>{
-        "DateDESC": MessageLookupByLibrary.simpleMessage("Tarehe ya kushuka"),
-        "Dutch": MessageLookupByLibrary.simpleMessage("Kiholanzi"),
-        "Egypt": MessageLookupByLibrary.simpleMessage("Misri"),
-        "India": MessageLookupByLibrary.simpleMessage("Kihindi"),
-        "Korean": MessageLookupByLibrary.simpleMessage("Kikorea"),
-        "Netherlands": MessageLookupByLibrary.simpleMessage("Kiholanzi"),
-        "Polish": MessageLookupByLibrary.simpleMessage("Kipolishi"),
-        "PrivacyAndTerm":
-            MessageLookupByLibrary.simpleMessage("Faragha na Vigezo"),
-        "Qty": MessageLookupByLibrary.simpleMessage("Kiasi"),
-        "Tamil": MessageLookupByLibrary.simpleMessage("Kitamil"),
         "UserNameInCorrect": MessageLookupByLibrary.simpleMessage(
             "Jina la mtumiaji au nenosiri si sahihi"),
         "aboutUs": MessageLookupByLibrary.simpleMessage("Kuhusu sisi"),
         "account": MessageLookupByLibrary.simpleMessage("Akaunti"),
         "accountDeleteDescription": MessageLookupByLibrary.simpleMessage(
             "Kufuta akaunti yako huondoa taarifa za kibinafsi kutoka kwa hifadhidata yetu. Barua pepe yako itahifadhiwa kabisa na barua pepe ile ile haiwezi kutumika tena kusajili akaunti mpya."),
+        "accountIsPendingApproval": MessageLookupByLibrary.simpleMessage(
+            "Akaunti inasubiri kuidhinishwa."),
         "accountSetup": MessageLookupByLibrary.simpleMessage("Unda akaunti"),
         "active": MessageLookupByLibrary.simpleMessage("Inayotumika"),
         "addAName": MessageLookupByLibrary.simpleMessage("Ongeza jina"),
@@ -174,6 +165,8 @@ class MessageLookup extends MessageLookupByLibrary {
             "Kipengee cha sauti kimetambuliwa. Je, ungependa kuongeza kwenye Kicheza Sauti?"),
         "availability": MessageLookupByLibrary.simpleMessage("Upatikanaji"),
         "availablePoints": m1,
+        "averageRating":
+            MessageLookupByLibrary.simpleMessage("Ukadiriaji Wastani"),
         "back": MessageLookupByLibrary.simpleMessage("Rudi"),
         "backOrder": MessageLookupByLibrary.simpleMessage("Kwa agizo la nyuma"),
         "backToShop": MessageLookupByLibrary.simpleMessage("Rudi kwenye Duka"),
@@ -225,10 +218,24 @@ class MessageLookup extends MessageLookupByLibrary {
         "byTag": MessageLookupByLibrary.simpleMessage("Kwa Tag"),
         "call": MessageLookupByLibrary.simpleMessage("Paga"),
         "callTo": MessageLookupByLibrary.simpleMessage("Piga Simu Kwa"),
+        "canNotCreateOrder":
+            MessageLookupByLibrary.simpleMessage("Haiwezi kuunda mpangilio"),
+        "canNotCreateUser":
+            MessageLookupByLibrary.simpleMessage("Haiwezi kuunda mtumiaji."),
+        "canNotGetPayments": MessageLookupByLibrary.simpleMessage(
+            "Haiwezi kupata njia za malipo"),
+        "canNotGetShipping": MessageLookupByLibrary.simpleMessage(
+            "Haiwezi kupata njia za usafirishaji"),
+        "canNotGetToken": MessageLookupByLibrary.simpleMessage(
+            "Haiwezi kupata Maelezo ya ishara."),
         "canNotLaunch": MessageLookupByLibrary.simpleMessage(
             "Haiwezi kuzindua programu hii, hakikisha kwamba mipangilio yako kwenye config.dart ni sahihi"),
         "canNotLoadThisLink":
             MessageLookupByLibrary.simpleMessage("Haiwezi kupakia kiungo hiki"),
+        "canNotSaveOrder": MessageLookupByLibrary.simpleMessage(
+            "Haiwezi kuhifadhi agizo kwenye tovuti"),
+        "canNotUpdateInfo": MessageLookupByLibrary.simpleMessage(
+            "Haiwezi kusasisha maelezo ya mtumiaji."),
         "cancel": MessageLookupByLibrary.simpleMessage("Ghairi"),
         "cantFindThisOrderId": MessageLookupByLibrary.simpleMessage(
             "Imeshindwa kupata kitambulisho hiki cha agizo"),
@@ -347,6 +354,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "date": MessageLookupByLibrary.simpleMessage("Tarehe"),
         "dateASC": MessageLookupByLibrary.simpleMessage("Tarehe kwa kupanda"),
         "dateBooking": MessageLookupByLibrary.simpleMessage("Kuhifadhi Tarehe"),
+        "dateDESC": MessageLookupByLibrary.simpleMessage("Tarehe ya kushuka"),
         "dateEnd": MessageLookupByLibrary.simpleMessage("Tarehe ya mwisho"),
         "dateLatest": MessageLookupByLibrary.simpleMessage("Tarehe: Karibuni"),
         "dateOldest":
@@ -408,6 +416,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "editProductInfo":
             MessageLookupByLibrary.simpleMessage("Hariri Maelezo ya Bidhaa"),
         "editWithoutColon": MessageLookupByLibrary.simpleMessage("Hariri"),
+        "egypt": MessageLookupByLibrary.simpleMessage("Misri"),
         "email": MessageLookupByLibrary.simpleMessage("Barua pepe"),
         "emailDeleteDescription": MessageLookupByLibrary.simpleMessage(
             "Kufuta akaunti yako kutakuondoa kwenye orodha zote za wanaopokea barua pepe."),
@@ -423,6 +432,8 @@ class MessageLookup extends MessageLookupByLibrary {
             "Maoni yako hayawezi kuwa tupu"),
         "emptySearch": MessageLookupByLibrary.simpleMessage(
             "Bado hujatafuta vipengee. Wacha tuanze sasa - tutakusaidia."),
+        "emptyShippingMsg": MessageLookupByLibrary.simpleMessage(
+            "Hakuna chaguo za usafirishaji zinazopatikana. Tafadhali hakikisha kwamba anwani yako imeingizwa ipasavyo, au wasiliana nasi ikiwa unahitaji usaidizi wowote."),
         "emptyUsername": MessageLookupByLibrary.simpleMessage(
             "Jina la mtumiaji/Barua pepe ni tupu"),
         "emptyWishlistSubtitle": MessageLookupByLibrary.simpleMessage(
@@ -559,6 +570,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "inStock": MessageLookupByLibrary.simpleMessage("Ipo kwenye hisa"),
         "incorrectPassword":
             MessageLookupByLibrary.simpleMessage("Nenosiri lisilo sahihi"),
+        "india": MessageLookupByLibrary.simpleMessage("Kihindi"),
         "indonesian": MessageLookupByLibrary.simpleMessage("Kiindonesia"),
         "instantlyClose":
             MessageLookupByLibrary.simpleMessage("Karibu mara moja"),
@@ -670,6 +682,7 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("Maeneo ya Karibu"),
         "needToLoginAgain": MessageLookupByLibrary.simpleMessage(
             "Unahitaji kuingia tena ili kutekeleza sasisho"),
+        "netherlands": MessageLookupByLibrary.simpleMessage("Kiholanzi"),
         "newPassword": MessageLookupByLibrary.simpleMessage("Nenosiri mpya"),
         "newVariation": MessageLookupByLibrary.simpleMessage("Tofauti mpya"),
         "next": MessageLookupByLibrary.simpleMessage("Ifuatayo"),
@@ -870,7 +883,9 @@ class MessageLookup extends MessageLookupByLibrary {
             "Pointi ya punguzo imetekelezwa kwa mafanikio"),
         "pointRewardMessage": MessageLookupByLibrary.simpleMessage(
             "Kuna Kanuni ya Punguzo la kutumia pointi zako kwenye Cart"),
+        "polish": MessageLookupByLibrary.simpleMessage("Kipolishi"),
         "popular": MessageLookupByLibrary.simpleMessage("Maarufu"),
+        "popularity": MessageLookupByLibrary.simpleMessage("Umaarufu"),
         "posAddressToolTip": MessageLookupByLibrary.simpleMessage(
             "Anwani hii itahifadhiwa kwenye kifaa chako cha karibu. SI anwani ya mtumiaji."),
         "postContent": MessageLookupByLibrary.simpleMessage("Yaliyomo"),
@@ -900,6 +915,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "printerSelection":
             MessageLookupByLibrary.simpleMessage("Uteuzi wa Printa"),
         "printing": MessageLookupByLibrary.simpleMessage("Inachapisha..."),
+        "privacyAndTerm":
+            MessageLookupByLibrary.simpleMessage("Faragha na Vigezo"),
         "privacyPolicy":
             MessageLookupByLibrary.simpleMessage("Sera ya faragha"),
         "privacyTerms":
@@ -922,6 +939,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "publish": MessageLookupByLibrary.simpleMessage("Kuchapisha"),
         "pullToLoadMore":
             MessageLookupByLibrary.simpleMessage("Vuta ili Kupakia zaidi"),
+        "qty": MessageLookupByLibrary.simpleMessage("Kiasi"),
         "qtyTotal": m19,
         "rate": MessageLookupByLibrary.simpleMessage("Kiwango"),
         "rateTheApp": MessageLookupByLibrary.simpleMessage("Kadiria programu"),
@@ -1126,6 +1144,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "support": MessageLookupByLibrary.simpleMessage("Kusaidia"),
         "swahili": MessageLookupByLibrary.simpleMessage("Kiswahili"),
         "swedish": MessageLookupByLibrary.simpleMessage("Kiswidi"),
+        "tagNotExist": MessageLookupByLibrary.simpleMessage("Lebo hii haipo"),
         "tags": MessageLookupByLibrary.simpleMessage("Lebo"),
         "takePicture": MessageLookupByLibrary.simpleMessage("Kuchukua picha"),
         "tamil": MessageLookupByLibrary.simpleMessage("Kitamil"),
@@ -1146,6 +1165,10 @@ class MessageLookup extends MessageLookupByLibrary {
         "tickets": MessageLookupByLibrary.simpleMessage("Tiketi"),
         "time": MessageLookupByLibrary.simpleMessage("wakati"),
         "title": MessageLookupByLibrary.simpleMessage("Kichwa"),
+        "titleAToZ": MessageLookupByLibrary.simpleMessage("Kichwa: A hadi Z"),
+        "titleZToA": MessageLookupByLibrary.simpleMessage("Kichwa: Z hadi A"),
+        "tooManyFaildedLogin": MessageLookupByLibrary.simpleMessage(
+            "Majaribio mengi sana ya kuingia yameshindwa. Tafadhali jaribu tena baadae."),
         "topUp": MessageLookupByLibrary.simpleMessage("ongeza juu"),
         "topUpProductNotFound": MessageLookupByLibrary.simpleMessage(
             "Bidhaa ya Kuongeza Juu haijapatikana"),
@@ -1201,6 +1224,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "useThisImage": MessageLookupByLibrary.simpleMessage("Tumia Picha hii"),
         "userExists": MessageLookupByLibrary.simpleMessage(
             "Jina hili la mtumiaji/barua pepe haipatikani."),
+        "userNameInCorrect": MessageLookupByLibrary.simpleMessage(
+            "Jina la mtumiaji au nenosiri si sahihi."),
         "username": MessageLookupByLibrary.simpleMessage("Jina la mtumiaji"),
         "usernameAndPasswordRequired": MessageLookupByLibrary.simpleMessage(
             "Jina la mtumiaji na nenosiri zinahitajika"),
@@ -1220,6 +1245,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "viaWallet": MessageLookupByLibrary.simpleMessage("Kupitia pochi"),
         "video": MessageLookupByLibrary.simpleMessage("Video"),
         "vietnamese": MessageLookupByLibrary.simpleMessage("Kivietinamu"),
+        "viewOnGoogleMaps": MessageLookupByLibrary.simpleMessage(
+            "Tazama kwenye Ramani za Google"),
         "viewRecentTransactions": MessageLookupByLibrary.simpleMessage(
             "Tazama shughuli za hivi majuzi"),
         "visible": MessageLookupByLibrary.simpleMessage("Inaonekana"),
diff --git a/lib/generated/intl/messages_ta.dart b/lib/generated/intl/messages_ta.dart
index 3688f75..4c54130 100644
--- a/lib/generated/intl/messages_ta.dart
+++ b/lib/generated/intl/messages_ta.dart
@@ -91,17 +91,6 @@ class MessageLookup extends MessageLookupByLibrary {
 
   final messages = _notInlinedMessages(_notInlinedMessages);
   static Map<String, Function> _notInlinedMessages(_) => <String, Function>{
-        "DateDESC": MessageLookupByLibrary.simpleMessage("இறங்கும் தேதி"),
-        "Dutch": MessageLookupByLibrary.simpleMessage("டச்சு"),
-        "Egypt": MessageLookupByLibrary.simpleMessage("எகிப்து"),
-        "India": MessageLookupByLibrary.simpleMessage("ஹிந்தி "),
-        "Korean": MessageLookupByLibrary.simpleMessage("கொறியன்"),
-        "Netherlands": MessageLookupByLibrary.simpleMessage("நெதர்லாந்து"),
-        "Polish": MessageLookupByLibrary.simpleMessage("பொலிஷ்"),
-        "PrivacyAndTerm":
-            MessageLookupByLibrary.simpleMessage("தனியுரிமையும் விதிமுறையும் "),
-        "Qty": MessageLookupByLibrary.simpleMessage("அளவு  "),
-        "Tamil": MessageLookupByLibrary.simpleMessage("தமிழ்"),
         "UserNameInCorrect": MessageLookupByLibrary.simpleMessage(
             "பாவனையாளர் பெயர் அல்லது பாஸ்வேர்ட் பிழையானது"),
         "aboutUs":
@@ -109,6 +98,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "account": MessageLookupByLibrary.simpleMessage("கணக்கு"),
         "accountDeleteDescription": MessageLookupByLibrary.simpleMessage(
             "உங்கள் கணக்கை நீக்குவது எங்கள் தரவுத்தளத்திலிருந்து தனிப்பட்ட தகவல்களை நீக்குகிறது. உங்கள் மின்னஞ்சல் நிரந்தரமாக முன்பதிவு செய்யப்பட்டு, அதே மின்னஞ்சலை புதிய கணக்கைப் பதிவு செய்ய மீண்டும் பயன்படுத்த முடியாது."),
+        "accountIsPendingApproval": MessageLookupByLibrary.simpleMessage(
+            "கணக்கு ஒப்புதலுக்காக நிலுவையில் உள்ளது."),
         "accountSetup": MessageLookupByLibrary.simpleMessage("கணக்கு அமைவு"),
         "active": MessageLookupByLibrary.simpleMessage("செயலில் உள்ளது"),
         "addAName": MessageLookupByLibrary.simpleMessage("பெயரைச்  சேர்க்க"),
@@ -183,6 +174,8 @@ class MessageLookup extends MessageLookupByLibrary {
             "ஆடியோ உருப்படி(கள்) கண்டறியப்பட்டது. ஆடியோ பிளேயரில் சேர்க்க விரும்புகிறீர்களா?"),
         "availability": MessageLookupByLibrary.simpleMessage("இருப்பவை"),
         "availablePoints": m1,
+        "averageRating":
+            MessageLookupByLibrary.simpleMessage("சராசரி மதிப்பீடு"),
         "back": MessageLookupByLibrary.simpleMessage("பின்னால்"),
         "backOrder": MessageLookupByLibrary.simpleMessage("ஒன் பேக் ஓடர் "),
         "backToShop": MessageLookupByLibrary.simpleMessage(
@@ -238,10 +231,24 @@ class MessageLookup extends MessageLookupByLibrary {
         "byTag": MessageLookupByLibrary.simpleMessage("டாக் மூலம்"),
         "call": MessageLookupByLibrary.simpleMessage("அழைப்பு"),
         "callTo": MessageLookupByLibrary.simpleMessage("ஒரு கால் செய்யுங்கள்"),
+        "canNotCreateOrder":
+            MessageLookupByLibrary.simpleMessage("ஒழுங்கை உருவாக்க முடியாது"),
+        "canNotCreateUser":
+            MessageLookupByLibrary.simpleMessage("பயனரை உருவாக்க முடியாது."),
+        "canNotGetPayments": MessageLookupByLibrary.simpleMessage(
+            "கட்டண முறைகளைப் பெற முடியாது"),
+        "canNotGetShipping": MessageLookupByLibrary.simpleMessage(
+            "கப்பல் முறைகளைப் பெற முடியாது"),
+        "canNotGetToken": MessageLookupByLibrary.simpleMessage(
+            "டோக்கன் தகவலைப் பெற முடியவில்லை."),
         "canNotLaunch":
             MessageLookupByLibrary.simpleMessage("பயன்பாட்டைத தொடரமுடியவில்லை"),
         "canNotLoadThisLink": MessageLookupByLibrary.simpleMessage(
             "இந்த இணைப்பை ஏற்ற முடியவில்லை"),
+        "canNotSaveOrder": MessageLookupByLibrary.simpleMessage(
+            "ஆர்டரை இணையதளத்தில் சேமிக்க முடியவில்லை"),
+        "canNotUpdateInfo": MessageLookupByLibrary.simpleMessage(
+            "பயனர் தகவலைப் புதுப்பிக்க முடியாது."),
         "cancel": MessageLookupByLibrary.simpleMessage("ரத்து செய்"),
         "cantFindThisOrderId": MessageLookupByLibrary.simpleMessage(
             "இந்த ஓடர் ஐடியை கண்டுபிடிக்க முடியவில்லை"),
@@ -367,6 +374,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "date": MessageLookupByLibrary.simpleMessage("திகதி"),
         "dateASC": MessageLookupByLibrary.simpleMessage("ஏறும் தேதி"),
         "dateBooking": MessageLookupByLibrary.simpleMessage("திகதி முன்பதிவு"),
+        "dateDESC": MessageLookupByLibrary.simpleMessage("இறங்கும் தேதி"),
         "dateEnd": MessageLookupByLibrary.simpleMessage("முடிவுத் திகதி"),
         "dateLatest": MessageLookupByLibrary.simpleMessage("தேதி: சமீபத்தியது"),
         "dateOldest": MessageLookupByLibrary.simpleMessage("தேதி: பழமையானது"),
@@ -424,6 +432,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "editProductInfo": MessageLookupByLibrary.simpleMessage(
             "பொருள் தகவல்களைத் தொகுத்தமைக்க"),
         "editWithoutColon": MessageLookupByLibrary.simpleMessage("தொகுக்க"),
+        "egypt": MessageLookupByLibrary.simpleMessage("எகிப்து"),
         "email": MessageLookupByLibrary.simpleMessage("மின்னஞ்சல்"),
         "emailDeleteDescription": MessageLookupByLibrary.simpleMessage(
             "உங்கள் கணக்கை நீக்குவது அனைத்து அஞ்சல் பட்டியல்களிலிருந்தும் நீங்கள் குழுவிலகிவிடும்."),
@@ -439,6 +448,8 @@ class MessageLookup extends MessageLookupByLibrary {
             "உங்கள் கருத்து காலியாக இருக்க முடியாது"),
         "emptySearch": MessageLookupByLibrary.simpleMessage(
             "நீங்கள் இன்னும் உருப்படிகளைத் தேடவில்லை. இப்போது தொடங்குவோம் - நாங்கள் உங்களுக்கு உதவுவோம்."),
+        "emptyShippingMsg": MessageLookupByLibrary.simpleMessage(
+            "ஷிப்பிங் விருப்பங்கள் எதுவும் இல்லை. உங்கள் முகவரி சரியாக உள்ளிடப்பட்டுள்ளதா என்பதை உறுதிப்படுத்தவும் அல்லது ஏதேனும் உதவி தேவைப்பட்டால் எங்களை தொடர்பு கொள்ளவும்."),
         "emptyUsername": MessageLookupByLibrary.simpleMessage(
             "பாவனையாளர் பெயர்  காலியாக உள்ளது"),
         "emptyWishlistSubtitle":
@@ -576,6 +587,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "inStock": MessageLookupByLibrary.simpleMessage("ஸ்டோகில் உள்ளது"),
         "incorrectPassword":
             MessageLookupByLibrary.simpleMessage("தவறான கடவுச்சொல்"),
+        "india": MessageLookupByLibrary.simpleMessage("ஹிந்தி "),
         "indonesian": MessageLookupByLibrary.simpleMessage("இந்தோனேஷியா"),
         "instantlyClose": MessageLookupByLibrary.simpleMessage("உடனடியாக மூடு"),
         "invalidPhoneNumber":
@@ -688,6 +700,7 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("அருகாமையிலுள்ள இடங்கள்"),
         "needToLoginAgain": MessageLookupByLibrary.simpleMessage(
             "புதுப்பிப்பை செயல்படுத்த நீங்கள் மீண்டும் உள்நுழைய வேண்டும்"),
+        "netherlands": MessageLookupByLibrary.simpleMessage("நெதர்லாந்து"),
         "newPassword": MessageLookupByLibrary.simpleMessage("புதிய பாஸ்வேர்ட்"),
         "newVariation": MessageLookupByLibrary.simpleMessage("புதிய மாறுபாடு"),
         "next": MessageLookupByLibrary.simpleMessage("அடுத்தது"),
@@ -891,7 +904,9 @@ class MessageLookup extends MessageLookupByLibrary {
             "தள்ளுபடி புள்ளி வெற்றிகரமாக பயன்படுத்தப்பட்டது"),
         "pointRewardMessage": MessageLookupByLibrary.simpleMessage(
             "உங்கள் கார்டில் வோலட் பணத்தை பயன்படுத்தி கழிவைப் பெற்றிடுங்கள்"),
+        "polish": MessageLookupByLibrary.simpleMessage("பொலிஷ்"),
         "popular": MessageLookupByLibrary.simpleMessage("பிரபலமானது"),
+        "popularity": MessageLookupByLibrary.simpleMessage("பிரபலம்"),
         "posAddressToolTip": MessageLookupByLibrary.simpleMessage(
             "இந்த முகவரி உங்கள் உள்ளூர் சாதனத்தில் சேமிக்கப்படும். இது பயனர் முகவரி அல்ல."),
         "postContent": MessageLookupByLibrary.simpleMessage("உள்ளடக்கம்"),
@@ -919,6 +934,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "printerSelection":
             MessageLookupByLibrary.simpleMessage("அச்சுப்பொறி தேர்வு"),
         "printing": MessageLookupByLibrary.simpleMessage("அச்சிடுகிறது..."),
+        "privacyAndTerm":
+            MessageLookupByLibrary.simpleMessage("தனியுரிமையும் விதிமுறையும் "),
         "privacyPolicy":
             MessageLookupByLibrary.simpleMessage("தனியுரிமைக் கொள்கை"),
         "privacyTerms":
@@ -941,6 +958,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "publish": MessageLookupByLibrary.simpleMessage("வெளியீடு"),
         "pullToLoadMore":
             MessageLookupByLibrary.simpleMessage("மேலும் பார்க்க தள்ளவும்"),
+        "qty": MessageLookupByLibrary.simpleMessage("அளவு  "),
         "qtyTotal": m19,
         "rate": MessageLookupByLibrary.simpleMessage("ரேட்"),
         "rateTheApp": MessageLookupByLibrary.simpleMessage("அப்பை ரேட் செய்ய"),
@@ -1162,6 +1180,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "support": MessageLookupByLibrary.simpleMessage("ஆதரவு"),
         "swahili": MessageLookupByLibrary.simpleMessage("சுவாஹிலி"),
         "swedish": MessageLookupByLibrary.simpleMessage("ஸ்வீடிஷ்"),
+        "tagNotExist":
+            MessageLookupByLibrary.simpleMessage("இந்த குறிச்சொல் இல்லை"),
         "tags": MessageLookupByLibrary.simpleMessage("டாக்"),
         "takePicture": MessageLookupByLibrary.simpleMessage("படத்தை எடுக்க"),
         "tamil": MessageLookupByLibrary.simpleMessage("தமிழ்"),
@@ -1182,6 +1202,11 @@ class MessageLookup extends MessageLookupByLibrary {
         "tickets": MessageLookupByLibrary.simpleMessage("டிக்கெட்ஸ்"),
         "time": MessageLookupByLibrary.simpleMessage("நேரம்"),
         "title": MessageLookupByLibrary.simpleMessage("தலைப்பு"),
+        "titleAToZ":
+            MessageLookupByLibrary.simpleMessage("தலைப்பு: A முதல் Z வரை"),
+        "titleZToA": MessageLookupByLibrary.simpleMessage("தலைப்பு: Z முதல் A"),
+        "tooManyFaildedLogin": MessageLookupByLibrary.simpleMessage(
+            "பல உள்நுழைவு முயற்சிகள் தோல்வியடைந்தன. பிறகு முயற்சிக்கவும்."),
         "topUp": MessageLookupByLibrary.simpleMessage("டாப் அப்"),
         "topUpProductNotFound": MessageLookupByLibrary.simpleMessage(
             "டாப் அப் தயாரிப்பு கிடைக்கவில்லை"),
@@ -1245,6 +1270,8 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("இந்த படத்தை பயன்படுத்தவும்"),
         "userExists": MessageLookupByLibrary.simpleMessage(
             "இந்த பயனர்பெயர்/மின்னஞ்சல் கிடைக்கவில்லை."),
+        "userNameInCorrect": MessageLookupByLibrary.simpleMessage(
+            "பயனர்பெயர் அல்லது கடவுச்சொல் தவறானது."),
         "username": MessageLookupByLibrary.simpleMessage("பாவனையாளர் பெயர்"),
         "usernameAndPasswordRequired": MessageLookupByLibrary.simpleMessage(
             "பயனர்பெயர் மற்றும் கடவுச்சொல் தேவை"),
@@ -1265,6 +1292,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "viaWallet": MessageLookupByLibrary.simpleMessage("பணப்பை வழியாக"),
         "video": MessageLookupByLibrary.simpleMessage("காணொளி"),
         "vietnamese": MessageLookupByLibrary.simpleMessage("வியட்னாமிஸ்"),
+        "viewOnGoogleMaps":
+            MessageLookupByLibrary.simpleMessage("கூகுள் மேப்ஸில் பார்க்கவும்"),
         "viewRecentTransactions": MessageLookupByLibrary.simpleMessage(
             "சமீபத்திய பரிவர்த்தனைகளைக் காண்க"),
         "visible": MessageLookupByLibrary.simpleMessage("பார்க்கக்கூடியவை"),
diff --git a/lib/generated/intl/messages_th.dart b/lib/generated/intl/messages_th.dart
index 375fbcc..3b71b7b 100644
--- a/lib/generated/intl/messages_th.dart
+++ b/lib/generated/intl/messages_th.dart
@@ -91,23 +91,14 @@ class MessageLookup extends MessageLookupByLibrary {
 
   final messages = _notInlinedMessages(_notInlinedMessages);
   static Map<String, Function> _notInlinedMessages(_) => <String, Function>{
-        "DateDESC": MessageLookupByLibrary.simpleMessage("วันที่จากมากไปน้อย"),
-        "Dutch": MessageLookupByLibrary.simpleMessage("ดัตช์"),
-        "Egypt": MessageLookupByLibrary.simpleMessage("อียิปต์"),
-        "India": MessageLookupByLibrary.simpleMessage("ภาษาฮินดี"),
-        "Korean": MessageLookupByLibrary.simpleMessage("เกาหลี"),
-        "Netherlands": MessageLookupByLibrary.simpleMessage("เนเธอร์แลนด์"),
-        "Polish": MessageLookupByLibrary.simpleMessage("ขัด"),
-        "PrivacyAndTerm":
-            MessageLookupByLibrary.simpleMessage("ความเป็นส่วนตัวและข้อกำหนด"),
-        "Qty": MessageLookupByLibrary.simpleMessage("จำนวน"),
-        "Tamil": MessageLookupByLibrary.simpleMessage("มิลักขะ"),
         "UserNameInCorrect": MessageLookupByLibrary.simpleMessage(
             "ชื่อผู้ใช้หรือรหัสผ่านไม่ถูกต้อง"),
         "aboutUs": MessageLookupByLibrary.simpleMessage("เกี่ยวกับเรา"),
         "account": MessageLookupByLibrary.simpleMessage("บัญชี"),
         "accountDeleteDescription": MessageLookupByLibrary.simpleMessage(
             "การลบบัญชีของคุณจะนำข้อมูลส่วนบุคคลออกจากฐานข้อมูลของเรา อีเมลของคุณจะถูกสงวนไว้อย่างถาวรและไม่สามารถใช้อีเมลเดิมซ้ำเพื่อลงทะเบียนบัญชีใหม่ได้"),
+        "accountIsPendingApproval": MessageLookupByLibrary.simpleMessage(
+            "บัญชีอยู่ระหว่างรอการอนุมัติ"),
         "accountSetup": MessageLookupByLibrary.simpleMessage("การตั้งค่าบัญชี"),
         "active": MessageLookupByLibrary.simpleMessage("active"),
         "addAName": MessageLookupByLibrary.simpleMessage("เพิ่มชื่อ"),
@@ -172,6 +163,7 @@ class MessageLookup extends MessageLookupByLibrary {
             "ตรวจพบรายการเสียง คุณต้องการเพิ่มเครื่องเล่นเสียงหรือไม่?"),
         "availability": MessageLookupByLibrary.simpleMessage("สถานะ"),
         "availablePoints": m1,
+        "averageRating": MessageLookupByLibrary.simpleMessage("คะแนนเฉลี่ย"),
         "back": MessageLookupByLibrary.simpleMessage("กลับ"),
         "backOrder": MessageLookupByLibrary.simpleMessage("ใน backorder"),
         "backToShop": MessageLookupByLibrary.simpleMessage("กลับไปที่ร้านค้า"),
@@ -222,10 +214,24 @@ class MessageLookup extends MessageLookupByLibrary {
         "byTag": MessageLookupByLibrary.simpleMessage("By Tag"),
         "call": MessageLookupByLibrary.simpleMessage("โทร"),
         "callTo": MessageLookupByLibrary.simpleMessage("โทรไปที่"),
+        "canNotCreateOrder":
+            MessageLookupByLibrary.simpleMessage("สร้างคำสั่งซื้อไม่ได้"),
+        "canNotCreateUser":
+            MessageLookupByLibrary.simpleMessage("ไม่สามารถสร้างผู้ใช้ได้"),
+        "canNotGetPayments": MessageLookupByLibrary.simpleMessage(
+            "ไม่สามารถรับวิธีการชำระเงินได้"),
+        "canNotGetShipping": MessageLookupByLibrary.simpleMessage(
+            "ไม่สามารถรับวิธีการจัดส่งได้"),
+        "canNotGetToken":
+            MessageLookupByLibrary.simpleMessage("ไม่สามารถรับข้อมูลโทเค็นได้"),
         "canNotLaunch": MessageLookupByLibrary.simpleMessage(
             "ไม่สามารถเปิดแอพนี้ตรวจสอบให้แน่ใจว่าการตั้งค่าของคุณบน config.dart ถูกต้อง"),
         "canNotLoadThisLink":
             MessageLookupByLibrary.simpleMessage("โหลดลิงค์นี้ไม่ได้"),
+        "canNotSaveOrder": MessageLookupByLibrary.simpleMessage(
+            "บันทึกคำสั่งซื้อลงเว็บไซต์ไม่ได้"),
+        "canNotUpdateInfo":
+            MessageLookupByLibrary.simpleMessage("ไม่สามารถอัปเดตข้อมูลผู้ใช้"),
         "cancel": MessageLookupByLibrary.simpleMessage("ยกเลิก"),
         "cantFindThisOrderId":
             MessageLookupByLibrary.simpleMessage("ไม่พบรหัสคำสั่งซื้อนี้"),
@@ -342,6 +348,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "date": MessageLookupByLibrary.simpleMessage("วันที่"),
         "dateASC": MessageLookupByLibrary.simpleMessage("วันที่ขึ้น"),
         "dateBooking": MessageLookupByLibrary.simpleMessage("การจองวันที่"),
+        "dateDESC": MessageLookupByLibrary.simpleMessage("วันที่จากมากไปน้อย"),
         "dateEnd": MessageLookupByLibrary.simpleMessage("Date End"),
         "dateLatest": MessageLookupByLibrary.simpleMessage("วันที่: ล่าสุด"),
         "dateOldest":
@@ -397,6 +404,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "editProductInfo":
             MessageLookupByLibrary.simpleMessage("แก้ไขข้อมูลผลิตภัณฑ์"),
         "editWithoutColon": MessageLookupByLibrary.simpleMessage("แก้ไข"),
+        "egypt": MessageLookupByLibrary.simpleMessage("อียิปต์"),
         "email": MessageLookupByLibrary.simpleMessage("อีเมล"),
         "emailDeleteDescription": MessageLookupByLibrary.simpleMessage(
             "การลบบัญชีของคุณจะเป็นการยกเลิกการสมัครจากรายชื่อส่งเมลทั้งหมด"),
@@ -412,6 +420,8 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("ไม่มีความคิดเห็น"),
         "emptySearch": MessageLookupByLibrary.simpleMessage(
             "คุณยังไม่ได้ค้นหารายการ มาเริ่มกันเลย - เราจะช่วยคุณ"),
+        "emptyShippingMsg": MessageLookupByLibrary.simpleMessage(
+            "ไม่มีตัวเลือกการจัดส่งที่ใช้ได้ โปรดตรวจสอบให้แน่ใจว่าได้ป้อนที่อยู่ของคุณอย่างถูกต้อง หรือติดต่อเรา หากคุณต้องการความช่วยเหลือ"),
         "emptyUsername":
             MessageLookupByLibrary.simpleMessage("ไม่มีชื่อผู้ใช้"),
         "emptyWishlistSubtitle": MessageLookupByLibrary.simpleMessage(
@@ -543,6 +553,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "inStock": MessageLookupByLibrary.simpleMessage("มีสินค้า"),
         "incorrectPassword":
             MessageLookupByLibrary.simpleMessage("รหัสผ่านผิดพลาด"),
+        "india": MessageLookupByLibrary.simpleMessage("ภาษาฮินดี"),
         "indonesian": MessageLookupByLibrary.simpleMessage("ชาวอินโดนีเซีย"),
         "instantlyClose": MessageLookupByLibrary.simpleMessage("ปิดทันที"),
         "invalidPhoneNumber":
@@ -652,6 +663,7 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("ตำแหน่งที่ใกล้เคียง"),
         "needToLoginAgain": MessageLookupByLibrary.simpleMessage(
             "คุณต้องเข้าสู่ระบบอีกครั้งเพื่อให้มีผลการอัพเดท"),
+        "netherlands": MessageLookupByLibrary.simpleMessage("เนเธอร์แลนด์"),
         "newPassword": MessageLookupByLibrary.simpleMessage("รหัสผ่านใหม่"),
         "newVariation": MessageLookupByLibrary.simpleMessage("รูปแบบใหม่"),
         "next": MessageLookupByLibrary.simpleMessage("ถัดไป"),
@@ -847,7 +859,9 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("ใช้คะแนนส่วนลดสำเร็จแล้ว"),
         "pointRewardMessage": MessageLookupByLibrary.simpleMessage(
             "There is the Discount Rule for applying your points to Cart"),
+        "polish": MessageLookupByLibrary.simpleMessage("ขัด"),
         "popular": MessageLookupByLibrary.simpleMessage("เป็นที่นิยม"),
+        "popularity": MessageLookupByLibrary.simpleMessage("ความนิยม"),
         "posAddressToolTip": MessageLookupByLibrary.simpleMessage(
             "ที่อยู่นี้จะถูกบันทึกไว้ในอุปกรณ์ของคุณ ไม่ใช่ที่อยู่ของผู้ใช้"),
         "postContent": MessageLookupByLibrary.simpleMessage("เนื้อหา"),
@@ -875,6 +889,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "printerSelection":
             MessageLookupByLibrary.simpleMessage("การเลือกเครื่องพิมพ์"),
         "printing": MessageLookupByLibrary.simpleMessage("พิมพ์..."),
+        "privacyAndTerm":
+            MessageLookupByLibrary.simpleMessage("ความเป็นส่วนตัวและข้อกำหนด"),
         "privacyPolicy":
             MessageLookupByLibrary.simpleMessage("นโยบายความเป็นส่วนตัว"),
         "privacyTerms":
@@ -895,6 +911,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "publish": MessageLookupByLibrary.simpleMessage("ประกาศ"),
         "pullToLoadMore":
             MessageLookupByLibrary.simpleMessage("ดึงเพื่อโหลดเพิ่มเติม"),
+        "qty": MessageLookupByLibrary.simpleMessage("จำนวน"),
         "qtyTotal": m19,
         "rate": MessageLookupByLibrary.simpleMessage("อัตรา"),
         "rateTheApp": MessageLookupByLibrary.simpleMessage("ให้คะแนนแอ็พ"),
@@ -1092,6 +1109,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "support": MessageLookupByLibrary.simpleMessage("สนับสนุน"),
         "swahili": MessageLookupByLibrary.simpleMessage("ภาษาสวาฮิลี"),
         "swedish": MessageLookupByLibrary.simpleMessage("สวีเดน"),
+        "tagNotExist": MessageLookupByLibrary.simpleMessage("ไม่มีแท็กนี้"),
         "tags": MessageLookupByLibrary.simpleMessage("แท็ก"),
         "takePicture": MessageLookupByLibrary.simpleMessage("ถ่ายภาพ"),
         "tamil": MessageLookupByLibrary.simpleMessage("มิลักขะ"),
@@ -1112,6 +1130,12 @@ class MessageLookup extends MessageLookupByLibrary {
         "tickets": MessageLookupByLibrary.simpleMessage("Tickets"),
         "time": MessageLookupByLibrary.simpleMessage("เวลา"),
         "title": MessageLookupByLibrary.simpleMessage("หัวข้อ"),
+        "titleAToZ":
+            MessageLookupByLibrary.simpleMessage("ชื่อเรื่อง: A ถึง Z"),
+        "titleZToA":
+            MessageLookupByLibrary.simpleMessage("ชื่อเรื่อง: Z ถึง A"),
+        "tooManyFaildedLogin": MessageLookupByLibrary.simpleMessage(
+            "มีการพยายามเข้าสู่ระบบที่ล้มเหลวหลายครั้งเกินไป โปรดลองอีกครั้งในภายหลัง."),
         "topUp": MessageLookupByLibrary.simpleMessage("เติม"),
         "topUpProductNotFound":
             MessageLookupByLibrary.simpleMessage("ไม่พบสินค้าเติมเงิน"),
@@ -1165,6 +1189,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "useThisImage": MessageLookupByLibrary.simpleMessage("ใช้ภาพนี้"),
         "userExists": MessageLookupByLibrary.simpleMessage(
             "ชื่อผู้ใช้/อีเมลนี้ไม่สามารถใช้ได้"),
+        "userNameInCorrect": MessageLookupByLibrary.simpleMessage(
+            "ชื่อผู้ใช้หรือรหัสผ่านไม่ถูกต้อง"),
         "username": MessageLookupByLibrary.simpleMessage("ชื่อผู้ใช้"),
         "usernameAndPasswordRequired": MessageLookupByLibrary.simpleMessage(
             "ต้องระบุชื่อผู้ใช้และรหัสผ่าน"),
@@ -1183,6 +1209,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "viaWallet": MessageLookupByLibrary.simpleMessage("ผ่านกระเป๋าสตางค์"),
         "video": MessageLookupByLibrary.simpleMessage("วิดีโอ"),
         "vietnamese": MessageLookupByLibrary.simpleMessage("เวียดนาม"),
+        "viewOnGoogleMaps":
+            MessageLookupByLibrary.simpleMessage("ดูบน Google Maps"),
         "viewRecentTransactions":
             MessageLookupByLibrary.simpleMessage("ดูธุรกรรมล่าสุด"),
         "visible": MessageLookupByLibrary.simpleMessage("มองเห็นได้"),
diff --git a/lib/generated/intl/messages_ti.dart b/lib/generated/intl/messages_ti.dart
index c4524fc..6fdd4b2 100644
--- a/lib/generated/intl/messages_ti.dart
+++ b/lib/generated/intl/messages_ti.dart
@@ -85,16 +85,6 @@ class MessageLookup extends MessageLookupByLibrary {
 
   final messages = _notInlinedMessages(_notInlinedMessages);
   static Map<String, Function> _notInlinedMessages(_) => <String, Function>{
-        "DateDESC": MessageLookupByLibrary.simpleMessage("ምውራድ ዕለት"),
-        "Dutch": MessageLookupByLibrary.simpleMessage("ዶትች"),
-        "Egypt": MessageLookupByLibrary.simpleMessage("ግብጺ"),
-        "India": MessageLookupByLibrary.simpleMessage("ሂንዲ"),
-        "Korean": MessageLookupByLibrary.simpleMessage("ኮርያን"),
-        "Netherlands": MessageLookupByLibrary.simpleMessage("ዳትች"),
-        "Polish": MessageLookupByLibrary.simpleMessage("ፖልሽ"),
-        "PrivacyAndTerm": MessageLookupByLibrary.simpleMessage("ብሕታዊን ውዕላትን"),
-        "Qty": MessageLookupByLibrary.simpleMessage("ብዝሒ"),
-        "Tamil": MessageLookupByLibrary.simpleMessage("ታሚል"),
         "UserNameInCorrect":
             MessageLookupByLibrary.simpleMessage(" ስም ተጠቃሚ ወይ ፓስዎርድ ጌጋ እዩ"),
         "aboutUs": MessageLookupByLibrary.simpleMessage("ብዛዕባና"),
@@ -304,6 +294,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "date": MessageLookupByLibrary.simpleMessage("ዕለት"),
         "dateASC": MessageLookupByLibrary.simpleMessage("ምድያብ ዕለት "),
         "dateBooking": MessageLookupByLibrary.simpleMessage("ዕለት ምዕዳግ"),
+        "dateDESC": MessageLookupByLibrary.simpleMessage("ምውራድ ዕለት"),
         "dateEnd": MessageLookupByLibrary.simpleMessage("መወዳእታ ዕለት"),
         "dateLatest": MessageLookupByLibrary.simpleMessage("ዕለት፦ እዋናዊ"),
         "dateOldest": MessageLookupByLibrary.simpleMessage("ዕለት፦ ጥንታዊ"),
@@ -355,6 +346,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "editProductInfo":
             MessageLookupByLibrary.simpleMessage(" ሓበሬታ ፍርያት ኣረምቲ"),
         "editWithoutColon": MessageLookupByLibrary.simpleMessage("ኣረምቲ"),
+        "egypt": MessageLookupByLibrary.simpleMessage("ግብጺ"),
         "email": MessageLookupByLibrary.simpleMessage("ኢ-መይል"),
         "emailDeleteDescription": MessageLookupByLibrary.simpleMessage(
             "ኣካውንትኻ ምስ እትድምስስ ካብ ኵሉ ዝርዝር ደብዳበታት ሓበሬታት ኣይክትኣቱን ኢኻ።"),
@@ -485,6 +477,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "inStock": MessageLookupByLibrary.simpleMessage("ኣብ ዕዳጋ"),
         "incorrectPassword":
             MessageLookupByLibrary.simpleMessage("ዘይቁኑዕ ፓስዎርድ"),
+        "india": MessageLookupByLibrary.simpleMessage("ሂንዲ"),
         "indonesian": MessageLookupByLibrary.simpleMessage("ኢንዶኖዥያ"),
         "instantlyClose": MessageLookupByLibrary.simpleMessage("ብኡንብኡ ዕጸዎ"),
         "invalidPhoneNumber":
@@ -579,6 +572,7 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("ኣብ ጥቓና ዚርከብ ቦታታት"),
         "needToLoginAgain": MessageLookupByLibrary.simpleMessage(
             "እዋናዊ ሓበሬታ ንምርካብ እንደገና ኽትኣቱ ኣሎካ"),
+        "netherlands": MessageLookupByLibrary.simpleMessage("ዳትች"),
         "newPassword": MessageLookupByLibrary.simpleMessage("ሓድሽ ፓስዎርድ"),
         "newVariation": MessageLookupByLibrary.simpleMessage("ሓድሽ ለውጢ"),
         "next": MessageLookupByLibrary.simpleMessage("ቀጺሉ"),
@@ -754,6 +748,7 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("ነጥቢ ቅናስ ዋጋ ብዓወት ተዓይሉ"),
         "pointRewardMessage": MessageLookupByLibrary.simpleMessage(
             "ነጥብታትካ ኣብ ካርት ከተውዕሎ ዚግብኣካ ናይ ሙግዳል ዋጋ ሕጊ ኣሎ"),
+        "polish": MessageLookupByLibrary.simpleMessage("ፖልሽ"),
         "popular": MessageLookupByLibrary.simpleMessage("ህቡብ"),
         "posAddressToolTip": MessageLookupByLibrary.simpleMessage(
             "እዚ ኣድራሻ እዚ ኣብቲ ኸባቢ ኣብ ዚርከብ ኤለክትሮኒካዊ መሳርሒ ክዕቀብ እዩ። ኣድራሻ እቲ ተጠቃሚ ግን ኣይኰነን ።"),
@@ -778,6 +773,7 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("ሓታሚት ኣይተረኽበትን"),
         "printerSelection": MessageLookupByLibrary.simpleMessage("ምርጫ ሓታሚት"),
         "printing": MessageLookupByLibrary.simpleMessage("ሕትመት..."),
+        "privacyAndTerm": MessageLookupByLibrary.simpleMessage("ብሕታዊን ውዕላትን"),
         "privacyPolicy": MessageLookupByLibrary.simpleMessage("ፖሊሲ ውልቃዊ ጕዳያት"),
         "privacyTerms": MessageLookupByLibrary.simpleMessage(""),
         "private": MessageLookupByLibrary.simpleMessage("ብሕታዊ"),
@@ -795,6 +791,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "products": MessageLookupByLibrary.simpleMessage("ፍርያት"),
         "publish": MessageLookupByLibrary.simpleMessage("ሕትመት"),
         "pullToLoadMore": MessageLookupByLibrary.simpleMessage("ዝያዳ ንምጽዓን ወስኽ"),
+        "qty": MessageLookupByLibrary.simpleMessage("ብዝሒ"),
         "qtyTotal": m19,
         "rate": MessageLookupByLibrary.simpleMessage("ገምጋም"),
         "rateTheApp":
diff --git a/lib/generated/intl/messages_tr.dart b/lib/generated/intl/messages_tr.dart
index 466732d..3fbb58c 100644
--- a/lib/generated/intl/messages_tr.dart
+++ b/lib/generated/intl/messages_tr.dart
@@ -90,29 +90,19 @@ class MessageLookup extends MessageLookupByLibrary {
 
   final messages = _notInlinedMessages(_notInlinedMessages);
   static Map<String, Function> _notInlinedMessages(_) => <String, Function>{
-        "DateDESC": MessageLookupByLibrary.simpleMessage("Tarih azalan"),
-        "Dutch": MessageLookupByLibrary.simpleMessage("Flemenkçe"),
-        "Egypt": MessageLookupByLibrary.simpleMessage("Mısır"),
-        "India": MessageLookupByLibrary.simpleMessage("Hintçe"),
-        "Korean": MessageLookupByLibrary.simpleMessage("Koreli"),
-        "Netherlands": MessageLookupByLibrary.simpleMessage("Hollanda"),
-        "Polish": MessageLookupByLibrary.simpleMessage("Lehçe"),
-        "PrivacyAndTerm":
-            MessageLookupByLibrary.simpleMessage("Gizlilik Ve Koşul Poliçesi"),
-        "Qty": MessageLookupByLibrary.simpleMessage("Adet"),
-        "Tamil": MessageLookupByLibrary.simpleMessage("Tamilce"),
         "UserNameInCorrect": MessageLookupByLibrary.simpleMessage(
             "Kullanıcı adı veya şifre yanlış"),
         "aboutUs": MessageLookupByLibrary.simpleMessage("Hakkımızda"),
         "account": MessageLookupByLibrary.simpleMessage("hesap"),
         "accountDeleteDescription": MessageLookupByLibrary.simpleMessage(
             "Hesabınızı silmek, kişisel bilgileri veritabanımızdan kaldırır. E-postanız kalıcı olarak rezerve edilir ve aynı e-posta yeni bir hesap açmak için yeniden kullanılamaz."),
+        "accountIsPendingApproval":
+            MessageLookupByLibrary.simpleMessage("Hesap onay bekliyor."),
         "accountSetup": MessageLookupByLibrary.simpleMessage("Hesap kurulumu"),
         "active": MessageLookupByLibrary.simpleMessage("Aktif"),
         "addAName": MessageLookupByLibrary.simpleMessage("Bir isim ekleyin"),
         "addANewPost": MessageLookupByLibrary.simpleMessage("Yeni Mesaj Ekle"),
-        "addASlug":
-            MessageLookupByLibrary.simpleMessage("Sümüklü böcek ekleyin"),
+        "addASlug": MessageLookupByLibrary.simpleMessage("Kısa ad ekleyin"),
         "addAnAttr":
             MessageLookupByLibrary.simpleMessage("Bir öznitelik ekleyin"),
         "addListing": MessageLookupByLibrary.simpleMessage("İlan Ekle"),
@@ -174,6 +164,7 @@ class MessageLookup extends MessageLookupByLibrary {
             "Ses öğeleri algılandı. Audio Player\'a eklemek istiyor musunuz?"),
         "availability": MessageLookupByLibrary.simpleMessage("Stok Durumu"),
         "availablePoints": m1,
+        "averageRating": MessageLookupByLibrary.simpleMessage("Ortalama puanı"),
         "back": MessageLookupByLibrary.simpleMessage("Geri"),
         "backOrder": MessageLookupByLibrary.simpleMessage("Ön siparişte"),
         "backToShop": MessageLookupByLibrary.simpleMessage("Mağazaya geri dön"),
@@ -181,7 +172,7 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("Cüzdan\'a Geri Dön"),
         "bagsCollections":
             MessageLookupByLibrary.simpleMessage("Çanta Koleksiyonları"),
-        "balance": MessageLookupByLibrary.simpleMessage("denge"),
+        "balance": MessageLookupByLibrary.simpleMessage("Bakiye"),
         "bannerListType":
             MessageLookupByLibrary.simpleMessage("Banner Listesi Türü"),
         "bannerType": MessageLookupByLibrary.simpleMessage("Banner Tipi"),
@@ -223,10 +214,24 @@ class MessageLookup extends MessageLookupByLibrary {
         "byTag": MessageLookupByLibrary.simpleMessage("Etikete göre"),
         "call": MessageLookupByLibrary.simpleMessage("Telefon etmek"),
         "callTo": MessageLookupByLibrary.simpleMessage("Çağrı Yap"),
+        "canNotCreateOrder":
+            MessageLookupByLibrary.simpleMessage("Sipariş oluşturulamıyor"),
+        "canNotCreateUser":
+            MessageLookupByLibrary.simpleMessage("Kullanıcı oluşturulamıyor."),
+        "canNotGetPayments":
+            MessageLookupByLibrary.simpleMessage("Ödeme yöntemleri alınamıyor"),
+        "canNotGetShipping": MessageLookupByLibrary.simpleMessage(
+            "Nakliye yöntemleri alınamıyor"),
+        "canNotGetToken": MessageLookupByLibrary.simpleMessage(
+            "Belirteç Bilgisi alınamıyor."),
         "canNotLaunch": MessageLookupByLibrary.simpleMessage(
             "Uygulama başlatılamadı. Lütfen mağaza ile iletişime geçin."),
         "canNotLoadThisLink":
             MessageLookupByLibrary.simpleMessage("Bu bağlantı yüklenemiyor"),
+        "canNotSaveOrder": MessageLookupByLibrary.simpleMessage(
+            "Sipariş web sitesine kaydedilemiyor"),
+        "canNotUpdateInfo": MessageLookupByLibrary.simpleMessage(
+            "Kullanıcı bilgileri güncellenemiyor."),
         "cancel": MessageLookupByLibrary.simpleMessage("İptal"),
         "cantFindThisOrderId": MessageLookupByLibrary.simpleMessage(
             "Bu sipariş kimliğini bulamıyorum"),
@@ -239,7 +244,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "cash": MessageLookupByLibrary.simpleMessage("Nakit"),
         "categories": MessageLookupByLibrary.simpleMessage("Kategoriler"),
         "category": MessageLookupByLibrary.simpleMessage("Kategori"),
-        "change": MessageLookupByLibrary.simpleMessage("Değişiklik"),
+        "change": MessageLookupByLibrary.simpleMessage("Değiştir"),
         "changePrinter":
             MessageLookupByLibrary.simpleMessage("Yazıcıyı Değiştir"),
         "changedCurrencyTo": m3,
@@ -254,7 +259,7 @@ class MessageLookup extends MessageLookupByLibrary {
             "Mağaza Sahibi ile Sohbet Edin"),
         "checkConfirmLink": MessageLookupByLibrary.simpleMessage(
             "Onay için E Posta adresini kontrol et"),
-        "checking": MessageLookupByLibrary.simpleMessage("kontrol etme..."),
+        "checking": MessageLookupByLibrary.simpleMessage("kontrol ediliyor..."),
         "checkout": MessageLookupByLibrary.simpleMessage("Ödeme"),
         "chinese": MessageLookupByLibrary.simpleMessage("Çince"),
         "chineseSimplified":
@@ -343,6 +348,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "date": MessageLookupByLibrary.simpleMessage("Tarih"),
         "dateASC": MessageLookupByLibrary.simpleMessage("Artan tarih"),
         "dateBooking": MessageLookupByLibrary.simpleMessage("Rezervasyon yap"),
+        "dateDESC": MessageLookupByLibrary.simpleMessage("Tarih azalan"),
         "dateEnd": MessageLookupByLibrary.simpleMessage("Tarih Bitiş"),
         "dateLatest": MessageLookupByLibrary.simpleMessage("Tarih: En son"),
         "dateOldest": MessageLookupByLibrary.simpleMessage("Tarih: En eski"),
@@ -398,6 +404,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "editProductInfo":
             MessageLookupByLibrary.simpleMessage("Ürün Bilgilerini Düzenle"),
         "editWithoutColon": MessageLookupByLibrary.simpleMessage("Düzenle"),
+        "egypt": MessageLookupByLibrary.simpleMessage("Mısır"),
         "email": MessageLookupByLibrary.simpleMessage("E-Posta"),
         "emailDeleteDescription": MessageLookupByLibrary.simpleMessage(
             "Hesabınızı silmek, tüm posta listelerinden çıkmanıza neden olacaktır."),
@@ -413,6 +420,8 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("Yorumunuz boş olamaz"),
         "emptySearch": MessageLookupByLibrary.simpleMessage(
             "Henüz öğe aramadınız. Şimdi başlayalım - size yardım edeceğiz."),
+        "emptyShippingMsg": MessageLookupByLibrary.simpleMessage(
+            "Gönderim seçeneği bulunmamaktadır. Lütfen adresinizin doğru girildiğinden emin olun veya herhangi bir yardıma ihtiyacınız olursa bizimle iletişime geçin."),
         "emptyUsername":
             MessageLookupByLibrary.simpleMessage("E-Posta adresi geçersiz"),
         "emptyWishlistSubtitle": MessageLookupByLibrary.simpleMessage(
@@ -500,7 +509,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "generatingLink":
             MessageLookupByLibrary.simpleMessage("Bağlantı oluşturuluyor..."),
         "german": MessageLookupByLibrary.simpleMessage("Almanca"),
-        "getNotification": MessageLookupByLibrary.simpleMessage("Bildirim al"),
+        "getNotification":
+            MessageLookupByLibrary.simpleMessage("Bildirimleri al"),
         "getNotified": MessageLookupByLibrary.simpleMessage("Haberdar ol!"),
         "getPasswordLink":
             MessageLookupByLibrary.simpleMessage("Şifre bağlantısı oluştur"),
@@ -544,6 +554,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "inStock": MessageLookupByLibrary.simpleMessage("Stokta var"),
         "incorrectPassword":
             MessageLookupByLibrary.simpleMessage("yanlış parola"),
+        "india": MessageLookupByLibrary.simpleMessage("Hintçe"),
         "indonesian": MessageLookupByLibrary.simpleMessage("Endonezce"),
         "instantlyClose": MessageLookupByLibrary.simpleMessage("anında kapat"),
         "invalidPhoneNumber":
@@ -560,7 +571,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "itemTotal": MessageLookupByLibrary.simpleMessage("Öğe toplamı:"),
         "items": MessageLookupByLibrary.simpleMessage("Ürünler"),
         "itsOrdered":
-            MessageLookupByLibrary.simpleMessage("Siparişiniz edildi!"),
+            MessageLookupByLibrary.simpleMessage("Siparişiniz verildi!"),
         "iwantToCreateAccount": MessageLookupByLibrary.simpleMessage(
             "Gizlilik Poliçesini Onaylıyorum"),
         "japanese": MessageLookupByLibrary.simpleMessage("Japonca"),
@@ -651,6 +662,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "nearbyPlaces": MessageLookupByLibrary.simpleMessage("Yakın adresler"),
         "needToLoginAgain": MessageLookupByLibrary.simpleMessage(
             "Güncellemeyi gerçekleştirmek için tekrar giriş yapmanız gerekiyor"),
+        "netherlands": MessageLookupByLibrary.simpleMessage("Hollanda"),
         "newPassword": MessageLookupByLibrary.simpleMessage("Yeni Şifre"),
         "newVariation": MessageLookupByLibrary.simpleMessage("Yeni varyasyon"),
         "next": MessageLookupByLibrary.simpleMessage("Sıradaki"),
@@ -723,7 +735,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "orderNotes": MessageLookupByLibrary.simpleMessage("Sipariş Notları"),
         "orderNumber": MessageLookupByLibrary.simpleMessage("Sipariş numarası"),
         "orderStatusCanceledReversal":
-            MessageLookupByLibrary.simpleMessage("iptal edilen prova"),
+            MessageLookupByLibrary.simpleMessage("iptal edilen sipariş"),
         "orderStatusCancelled":
             MessageLookupByLibrary.simpleMessage("İptal Edildi"),
         "orderStatusChargeBack":
@@ -747,11 +759,12 @@ class MessageLookup extends MessageLookupByLibrary {
         "orderStatusReversed": MessageLookupByLibrary.simpleMessage("ters"),
         "orderStatusShipped":
             MessageLookupByLibrary.simpleMessage("Gönderilen"),
-        "orderStatusVoided": MessageLookupByLibrary.simpleMessage("işeme"),
+        "orderStatusVoided":
+            MessageLookupByLibrary.simpleMessage("Sipariş Durumu İptal Edildi"),
         "orderSuccessMsg1": MessageLookupByLibrary.simpleMessage(
             "Teslimat durumu özelliğimizi kullanarak siparişinizin durumunu kontrol edebilirsiniz. Siparişinizin ayrıntılarını ve ilerlemesini takip etmek için bir bağlantı içeren bir sipariş onay e-postası alacaksınız."),
         "orderSuccessMsg2": MessageLookupByLibrary.simpleMessage(
-            "Daha önce tanımlanan e-posta ve şifreyi kullanarak hesabınıza giriş yapabilirsiniz. Hesap bölümğnden bilgilerinizi güncelleyebilir, geçmiş siparişlerinizi görüntüleyebilirsiniz."),
+            "Daha önce tanımlanan e-posta ve şifreyi kullanarak hesabınıza giriş yapabilirsiniz. Hesap bölümünden bilgilerinizi güncelleyebilir, geçmiş siparişlerinizi görüntüleyebilirsiniz."),
         "orderSuccessTitle1": MessageLookupByLibrary.simpleMessage(
             "Siparişinizi başarıyla verdiniz"),
         "orderSuccessTitle2": MessageLookupByLibrary.simpleMessage("Hesabınız"),
@@ -843,7 +856,9 @@ class MessageLookup extends MessageLookupByLibrary {
             "İndirim puanı başarıyla uygulandı"),
         "pointRewardMessage": MessageLookupByLibrary.simpleMessage(
             "There is the Discount Rule for applying your points to Cart"),
+        "polish": MessageLookupByLibrary.simpleMessage("Lehçe"),
         "popular": MessageLookupByLibrary.simpleMessage("popüler"),
+        "popularity": MessageLookupByLibrary.simpleMessage("Popülerlik"),
         "posAddressToolTip": MessageLookupByLibrary.simpleMessage(
             "Bu adres yerel cihazınıza kaydedilecektir. Kullanıcı adresi DEĞİLDİR."),
         "postContent": MessageLookupByLibrary.simpleMessage("içerik"),
@@ -858,10 +873,9 @@ class MessageLookup extends MessageLookupByLibrary {
         "postTitle": MessageLookupByLibrary.simpleMessage("Başlık"),
         "prepaid": MessageLookupByLibrary.simpleMessage("ön ödemeli"),
         "prev": MessageLookupByLibrary.simpleMessage("Önceki"),
-        "priceHighToLow":
-            MessageLookupByLibrary.simpleMessage("Fiyat pahalıdan ucuza"),
+        "priceHighToLow": MessageLookupByLibrary.simpleMessage("Fiyat düşen"),
         "priceLowToHigh":
-            MessageLookupByLibrary.simpleMessage("Fiyat: Düşükten Yükseğe"),
+            MessageLookupByLibrary.simpleMessage("Fiyat yükselen"),
         "prices": MessageLookupByLibrary.simpleMessage("Menüler"),
         "printReceipt":
             MessageLookupByLibrary.simpleMessage("Makbuzu yazdırın"),
@@ -871,6 +885,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "printerSelection":
             MessageLookupByLibrary.simpleMessage("Yazıcı Seçimi"),
         "printing": MessageLookupByLibrary.simpleMessage("Baskı..."),
+        "privacyAndTerm":
+            MessageLookupByLibrary.simpleMessage("Gizlilik Ve Koşul Poliçesi"),
         "privacyPolicy":
             MessageLookupByLibrary.simpleMessage("Gizlilik Politikası"),
         "privacyTerms":
@@ -891,7 +907,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "products": MessageLookupByLibrary.simpleMessage("Ürünler"),
         "publish": MessageLookupByLibrary.simpleMessage("Yayınla"),
         "pullToLoadMore": MessageLookupByLibrary.simpleMessage(
-            "Daha fazla yüklemek için çekin"),
+            "Daha fazla yüklemek için kaydırın"),
+        "qty": MessageLookupByLibrary.simpleMessage("Adet"),
         "qtyTotal": m19,
         "rate": MessageLookupByLibrary.simpleMessage("Oyla"),
         "rateTheApp": MessageLookupByLibrary.simpleMessage("Uygulamayı oyla"),
@@ -915,8 +932,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "refresh": MessageLookupByLibrary.simpleMessage("Refresh"),
         "refundOrderFailed": MessageLookupByLibrary.simpleMessage(
             "Sipariş için geri ödeme talebi başarısız oldu"),
-        "refundOrderSuccess": MessageLookupByLibrary.simpleMessage(
-            "Siparişiniz için başarıyla geri ödeme talep edin!"),
+        "refundOrderSuccess":
+            MessageLookupByLibrary.simpleMessage("Geri ödeme isteği başarılı!"),
         "refundRequest": MessageLookupByLibrary.simpleMessage("iptal Talebi"),
         "refundRequested":
             MessageLookupByLibrary.simpleMessage("geri ödeme talep edildi"),
@@ -1019,7 +1036,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "shopOrders":
             MessageLookupByLibrary.simpleMessage("Mağaza Siparişleri"),
         "shopPhone": MessageLookupByLibrary.simpleMessage("Telefon satın al"),
-        "shopSlug": MessageLookupByLibrary.simpleMessage("Dükkan sümüklüböcek"),
+        "shopSlug": MessageLookupByLibrary.simpleMessage("Dükkan kısa adı"),
         "shoppingCartItems": m22,
         "shortDescription":
             MessageLookupByLibrary.simpleMessage("Kısa Açıklama"),
@@ -1047,7 +1064,7 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("Keşfetmeye Başlayın"),
         "startShopping":
             MessageLookupByLibrary.simpleMessage("Alışverişe başla"),
-        "state": MessageLookupByLibrary.simpleMessage("Belirtmek, bildirmek"),
+        "state": MessageLookupByLibrary.simpleMessage("durum"),
         "stateIsRequired":
             MessageLookupByLibrary.simpleMessage("ilçe alanı zorunludur"),
         "stateProvince": MessageLookupByLibrary.simpleMessage("il"),
@@ -1094,6 +1111,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "support": MessageLookupByLibrary.simpleMessage("Destek"),
         "swahili": MessageLookupByLibrary.simpleMessage("Svahili"),
         "swedish": MessageLookupByLibrary.simpleMessage("İsveççe"),
+        "tagNotExist":
+            MessageLookupByLibrary.simpleMessage("Bu etiket mevcut değil"),
         "tags": MessageLookupByLibrary.simpleMessage("Etiketler"),
         "takePicture": MessageLookupByLibrary.simpleMessage("Fotoğraf çek"),
         "tamil": MessageLookupByLibrary.simpleMessage("Tamilce"),
@@ -1114,6 +1133,12 @@ class MessageLookup extends MessageLookupByLibrary {
         "tickets": MessageLookupByLibrary.simpleMessage("Biletler"),
         "time": MessageLookupByLibrary.simpleMessage("zaman"),
         "title": MessageLookupByLibrary.simpleMessage("Başlık"),
+        "titleAToZ":
+            MessageLookupByLibrary.simpleMessage("Başlık: A\'dan Z\'ye"),
+        "titleZToA":
+            MessageLookupByLibrary.simpleMessage("Başlık: Z\'den A\'ya"),
+        "tooManyFaildedLogin": MessageLookupByLibrary.simpleMessage(
+            "Çok fazla başarısız oturum açma girişimi. Lütfen daha sonra tekrar deneyiniz."),
         "topUp": MessageLookupByLibrary.simpleMessage("Tamamla"),
         "topUpProductNotFound":
             MessageLookupByLibrary.simpleMessage("Doldurma ürünü bulunamadı"),
@@ -1159,7 +1184,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "updateStatus":
             MessageLookupByLibrary.simpleMessage("Güncelleme durumu"),
         "updateSuccess":
-            MessageLookupByLibrary.simpleMessage("Başarıyla güncelleme!"),
+            MessageLookupByLibrary.simpleMessage("Başarıyla güncellendi!"),
         "updateUserInfor":
             MessageLookupByLibrary.simpleMessage("Bilgileri Güncelle"),
         "uploadFile": MessageLookupByLibrary.simpleMessage("Dosya yükleme"),
@@ -1170,6 +1195,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "useThisImage": MessageLookupByLibrary.simpleMessage("Bu Resmi Kullan"),
         "userExists": MessageLookupByLibrary.simpleMessage(
             "Bu kullanıcı adı/e-posta mevcut değil."),
+        "userNameInCorrect": MessageLookupByLibrary.simpleMessage(
+            "Kullanıcı adı veya şifre yanlış."),
         "username": MessageLookupByLibrary.simpleMessage("E-Posta"),
         "usernameAndPasswordRequired": MessageLookupByLibrary.simpleMessage(
             "Kullanıcı adı ve şifre gerekli"),
@@ -1187,6 +1214,8 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("Cüzdan aracılığıyla"),
         "video": MessageLookupByLibrary.simpleMessage("Video"),
         "vietnamese": MessageLookupByLibrary.simpleMessage("Vietnam"),
+        "viewOnGoogleMaps": MessageLookupByLibrary.simpleMessage(
+            "Google Haritalar\'da Görüntüle"),
         "viewRecentTransactions":
             MessageLookupByLibrary.simpleMessage("Son işlemleri görüntüle"),
         "visible": MessageLookupByLibrary.simpleMessage("Gözle görülür"),
diff --git a/lib/generated/intl/messages_uk.dart b/lib/generated/intl/messages_uk.dart
index 344b6cb..56bdeb3 100644
--- a/lib/generated/intl/messages_uk.dart
+++ b/lib/generated/intl/messages_uk.dart
@@ -91,23 +91,14 @@ class MessageLookup extends MessageLookupByLibrary {
 
   final messages = _notInlinedMessages(_notInlinedMessages);
   static Map<String, Function> _notInlinedMessages(_) => <String, Function>{
-        "DateDESC": MessageLookupByLibrary.simpleMessage("Дата спадання"),
-        "Dutch": MessageLookupByLibrary.simpleMessage("Голландська"),
-        "Egypt": MessageLookupByLibrary.simpleMessage("Єгипет"),
-        "India": MessageLookupByLibrary.simpleMessage("Хінді"),
-        "Korean": MessageLookupByLibrary.simpleMessage("Корейська"),
-        "Netherlands": MessageLookupByLibrary.simpleMessage("Голландська"),
-        "Polish": MessageLookupByLibrary.simpleMessage("Польська"),
-        "PrivacyAndTerm":
-            MessageLookupByLibrary.simpleMessage("Конфіденційність та термін"),
-        "Qty": MessageLookupByLibrary.simpleMessage("Кількість"),
-        "Tamil": MessageLookupByLibrary.simpleMessage("Таміл"),
         "UserNameInCorrect": MessageLookupByLibrary.simpleMessage(
             "Ім\'я користувача чи пароль неправильні"),
         "aboutUs": MessageLookupByLibrary.simpleMessage("Про нас"),
         "account": MessageLookupByLibrary.simpleMessage("Рахунок"),
         "accountDeleteDescription": MessageLookupByLibrary.simpleMessage(
             "Видалення вашого облікового запису видаляє особисту інформацію з нашої бази даних. Ваша електронна адреса зарезервована назавжди, і ту саму електронну адресу не можна використовувати повторно для реєстрації нового облікового запису."),
+        "accountIsPendingApproval": MessageLookupByLibrary.simpleMessage(
+            "Обліковий запис очікує на затвердження."),
         "accountSetup": MessageLookupByLibrary.simpleMessage(
             "Налаштування облікового запису"),
         "active": MessageLookupByLibrary.simpleMessage("Активний"),
@@ -177,6 +168,8 @@ class MessageLookup extends MessageLookupByLibrary {
             "Виявлено аудіозапис (и). Ви хочете додати до аудіоплеєра?"),
         "availability": MessageLookupByLibrary.simpleMessage("доступність"),
         "availablePoints": m1,
+        "averageRating":
+            MessageLookupByLibrary.simpleMessage("Середній рейтинг"),
         "back": MessageLookupByLibrary.simpleMessage("назад"),
         "backOrder":
             MessageLookupByLibrary.simpleMessage("На зворотне замовлення"),
@@ -227,10 +220,24 @@ class MessageLookup extends MessageLookupByLibrary {
         "byTag": MessageLookupByLibrary.simpleMessage("За тегом"),
         "call": MessageLookupByLibrary.simpleMessage("Телефонуйте"),
         "callTo": MessageLookupByLibrary.simpleMessage("Зателефонуйте"),
+        "canNotCreateOrder":
+            MessageLookupByLibrary.simpleMessage("Неможливо створити порядок"),
+        "canNotCreateUser": MessageLookupByLibrary.simpleMessage(
+            "Неможливо створити користувача."),
+        "canNotGetPayments": MessageLookupByLibrary.simpleMessage(
+            "Неможливо отримати способи оплати"),
+        "canNotGetShipping": MessageLookupByLibrary.simpleMessage(
+            "Неможливо отримати способи доставки"),
+        "canNotGetToken": MessageLookupByLibrary.simpleMessage(
+            "Не вдається отримати інформацію про маркер."),
         "canNotLaunch": MessageLookupByLibrary.simpleMessage(
             "Не вдається запустити цю програму, переконайтеся, що ваші налаштування на config.dart правильні"),
         "canNotLoadThisLink": MessageLookupByLibrary.simpleMessage(
             "Не вдається завантажити це посилання"),
+        "canNotSaveOrder": MessageLookupByLibrary.simpleMessage(
+            "Не вдається зберегти замовлення на сайті"),
+        "canNotUpdateInfo": MessageLookupByLibrary.simpleMessage(
+            "Неможливо оновити інформацію користувача."),
         "cancel": MessageLookupByLibrary.simpleMessage("Скасувати"),
         "cantFindThisOrderId": MessageLookupByLibrary.simpleMessage(
             "Не вдається знайти цей ідентифікатор замовлення"),
@@ -351,6 +358,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "date": MessageLookupByLibrary.simpleMessage("Дата"),
         "dateASC": MessageLookupByLibrary.simpleMessage("Дата за зростанням"),
         "dateBooking": MessageLookupByLibrary.simpleMessage("Дата бронювання"),
+        "dateDESC": MessageLookupByLibrary.simpleMessage("Дата спадання"),
         "dateEnd": MessageLookupByLibrary.simpleMessage("Дата закінчення"),
         "dateLatest": MessageLookupByLibrary.simpleMessage("Дата: остання"),
         "dateOldest": MessageLookupByLibrary.simpleMessage("Дата: найстарший"),
@@ -409,6 +417,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "editProductInfo": MessageLookupByLibrary.simpleMessage(
             "Редагувати інформацію про товар"),
         "editWithoutColon": MessageLookupByLibrary.simpleMessage("редагувати"),
+        "egypt": MessageLookupByLibrary.simpleMessage("Єгипет"),
         "email": MessageLookupByLibrary.simpleMessage("Електронна пошта"),
         "emailDeleteDescription": MessageLookupByLibrary.simpleMessage(
             "Видалення облікового запису призведе до скасування підписки на всі списки розсилки."),
@@ -424,6 +433,8 @@ class MessageLookup extends MessageLookupByLibrary {
             "Ваш коментар не може бути порожнім"),
         "emptySearch": MessageLookupByLibrary.simpleMessage(
             "Ви ще не шукали елементи. Почнемо зараз - ми допоможемо вам."),
+        "emptyShippingMsg": MessageLookupByLibrary.simpleMessage(
+            "Варіантів доставки немає. Переконайтеся, що вашу адресу введено правильно, або зв’яжіться з нами, якщо вам потрібна допомога."),
         "emptyUsername": MessageLookupByLibrary.simpleMessage(
             "Ім\'я користувача / електронна адреса порожнє"),
         "emptyWishlistSubtitle": MessageLookupByLibrary.simpleMessage(
@@ -563,6 +574,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "inStock": MessageLookupByLibrary.simpleMessage("В наявності"),
         "incorrectPassword":
             MessageLookupByLibrary.simpleMessage("Невірний пароль"),
+        "india": MessageLookupByLibrary.simpleMessage("Хінді"),
         "indonesian": MessageLookupByLibrary.simpleMessage("Індонезійська"),
         "instantlyClose":
             MessageLookupByLibrary.simpleMessage("Миттєво близько"),
@@ -673,6 +685,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "nearbyPlaces": MessageLookupByLibrary.simpleMessage("Місця поблизу"),
         "needToLoginAgain": MessageLookupByLibrary.simpleMessage(
             "Вам потрібно ввійти знову, щоб здійснити оновлення"),
+        "netherlands": MessageLookupByLibrary.simpleMessage("Голландська"),
         "newPassword": MessageLookupByLibrary.simpleMessage("Новий пароль"),
         "newVariation": MessageLookupByLibrary.simpleMessage("Нова варіація"),
         "next": MessageLookupByLibrary.simpleMessage("далі"),
@@ -872,7 +885,9 @@ class MessageLookup extends MessageLookupByLibrary {
             "Пункт знижки успішно застосовано"),
         "pointRewardMessage": MessageLookupByLibrary.simpleMessage(
             "Існує правило знижки для застосування ваших балів до Кошика"),
+        "polish": MessageLookupByLibrary.simpleMessage("Польська"),
         "popular": MessageLookupByLibrary.simpleMessage("Популярні"),
+        "popularity": MessageLookupByLibrary.simpleMessage("Популярність"),
         "posAddressToolTip": MessageLookupByLibrary.simpleMessage(
             "Ця адреса буде збережена на вашому локальному пристрої. Це НЕ адреса користувача."),
         "postContent": MessageLookupByLibrary.simpleMessage("зміст"),
@@ -902,6 +917,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "printerSelection":
             MessageLookupByLibrary.simpleMessage("Вибір принтера"),
         "printing": MessageLookupByLibrary.simpleMessage("Друк ..."),
+        "privacyAndTerm":
+            MessageLookupByLibrary.simpleMessage("Конфіденційність та термін"),
         "privacyPolicy":
             MessageLookupByLibrary.simpleMessage("Політика конфіденційності"),
         "privacyTerms":
@@ -922,6 +939,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "publish": MessageLookupByLibrary.simpleMessage("Опублікувати"),
         "pullToLoadMore": MessageLookupByLibrary.simpleMessage(
             "Потягніть, щоб завантажити більше"),
+        "qty": MessageLookupByLibrary.simpleMessage("Кількість"),
         "qtyTotal": m19,
         "rate": MessageLookupByLibrary.simpleMessage("Оцінити"),
         "rateTheApp": MessageLookupByLibrary.simpleMessage("Оцініть додаток"),
@@ -1139,6 +1157,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "support": MessageLookupByLibrary.simpleMessage("Підтримка"),
         "swahili": MessageLookupByLibrary.simpleMessage("Суахілі"),
         "swedish": MessageLookupByLibrary.simpleMessage("Шведська"),
+        "tagNotExist": MessageLookupByLibrary.simpleMessage("Цей тег не існує"),
         "tags": MessageLookupByLibrary.simpleMessage("Теги"),
         "takePicture": MessageLookupByLibrary.simpleMessage("Сфотографувати"),
         "tamil": MessageLookupByLibrary.simpleMessage("Таміл"),
@@ -1159,6 +1178,10 @@ class MessageLookup extends MessageLookupByLibrary {
         "tickets": MessageLookupByLibrary.simpleMessage("Квитки"),
         "time": MessageLookupByLibrary.simpleMessage("Час"),
         "title": MessageLookupByLibrary.simpleMessage("назва"),
+        "titleAToZ": MessageLookupByLibrary.simpleMessage("Назва: від А до Я"),
+        "titleZToA": MessageLookupByLibrary.simpleMessage("Назва: Я до А"),
+        "tooManyFaildedLogin": MessageLookupByLibrary.simpleMessage(
+            "Забагато невдалих спроб входу. Будь-ласка спробуйте пізніше."),
         "topUp": MessageLookupByLibrary.simpleMessage("Поповнити"),
         "topUpProductNotFound": MessageLookupByLibrary.simpleMessage(
             "Поповнення продукту не знайдено"),
@@ -1219,6 +1242,8 @@ class MessageLookup extends MessageLookupByLibrary {
             "Використовуйте це зображення"),
         "userExists": MessageLookupByLibrary.simpleMessage(
             "Це ім’я користувача/електронна адреса недоступні."),
+        "userNameInCorrect": MessageLookupByLibrary.simpleMessage(
+            "Ім\'я користувача або пароль неправильні."),
         "username": MessageLookupByLibrary.simpleMessage("Ім\'я користувача"),
         "usernameAndPasswordRequired": MessageLookupByLibrary.simpleMessage(
             "Ім\'я користувача та пароль необхідні"),
@@ -1238,6 +1263,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "viaWallet": MessageLookupByLibrary.simpleMessage("Через гаманець"),
         "video": MessageLookupByLibrary.simpleMessage("Відео"),
         "vietnamese": MessageLookupByLibrary.simpleMessage("В’єтнамці"),
+        "viewOnGoogleMaps":
+            MessageLookupByLibrary.simpleMessage("Переглянути на Google Maps"),
         "viewRecentTransactions": MessageLookupByLibrary.simpleMessage(
             "Перегляд останніх транзакцій"),
         "visible": MessageLookupByLibrary.simpleMessage("Видно"),
diff --git a/lib/generated/intl/messages_ur.dart b/lib/generated/intl/messages_ur.dart
index c9a62ac..3d88d7f 100644
--- a/lib/generated/intl/messages_ur.dart
+++ b/lib/generated/intl/messages_ur.dart
@@ -91,23 +91,14 @@ class MessageLookup extends MessageLookupByLibrary {
 
   final messages = _notInlinedMessages(_notInlinedMessages);
   static Map<String, Function> _notInlinedMessages(_) => <String, Function>{
-        "DateDESC": MessageLookupByLibrary.simpleMessage("نزول کی تاریخ"),
-        "Dutch": MessageLookupByLibrary.simpleMessage("ڈچ"),
-        "Egypt": MessageLookupByLibrary.simpleMessage("مصر"),
-        "India": MessageLookupByLibrary.simpleMessage("ہندی"),
-        "Korean": MessageLookupByLibrary.simpleMessage("کورین"),
-        "Netherlands": MessageLookupByLibrary.simpleMessage("ڈچ"),
-        "Polish": MessageLookupByLibrary.simpleMessage("پولش"),
-        "PrivacyAndTerm":
-            MessageLookupByLibrary.simpleMessage("رازداری اور اصطلاح"),
-        "Qty": MessageLookupByLibrary.simpleMessage("مقدار"),
-        "Tamil": MessageLookupByLibrary.simpleMessage("تمل"),
         "UserNameInCorrect":
             MessageLookupByLibrary.simpleMessage("صارف نام یا پاس ورڈ غلط ہے۔"),
         "aboutUs": MessageLookupByLibrary.simpleMessage("ہمارے بارے میں"),
         "account": MessageLookupByLibrary.simpleMessage("اکاؤنٹ"),
         "accountDeleteDescription": MessageLookupByLibrary.simpleMessage(
             "آپ کا اکاؤنٹ حذف کرنا ہمارے ڈیٹا بیس سے ذاتی معلومات کو ہٹا دیتا ہے۔"),
+        "accountIsPendingApproval": MessageLookupByLibrary.simpleMessage(
+            "اکاؤنٹ کی منظوری زیر التواء ہے۔"),
         "accountSetup": MessageLookupByLibrary.simpleMessage("اکاؤنٹ سیٹ اپ"),
         "active": MessageLookupByLibrary.simpleMessage("فعال"),
         "addAName": MessageLookupByLibrary.simpleMessage("ایک نام شامل کریں۔"),
@@ -177,6 +168,7 @@ class MessageLookup extends MessageLookupByLibrary {
             "آڈیو آئٹمز کا پتہ چلا۔ کیا آپ آڈیو پلیئر میں شامل کرنا چاہتے ہیں؟"),
         "availability": MessageLookupByLibrary.simpleMessage("دستیابی"),
         "availablePoints": m1,
+        "averageRating": MessageLookupByLibrary.simpleMessage("اوسط درجہ بندی"),
         "back": MessageLookupByLibrary.simpleMessage("پیچھے"),
         "backOrder": MessageLookupByLibrary.simpleMessage("بیک آرڈر پر"),
         "backToShop": MessageLookupByLibrary.simpleMessage("واپس دکان پر"),
@@ -223,10 +215,24 @@ class MessageLookup extends MessageLookupByLibrary {
         "byTag": MessageLookupByLibrary.simpleMessage("بذریعہ ٹیگ"),
         "call": MessageLookupByLibrary.simpleMessage("کال کریں"),
         "callTo": MessageLookupByLibrary.simpleMessage("کو کال کریں۔"),
+        "canNotCreateOrder":
+            MessageLookupByLibrary.simpleMessage("آرڈر نہیں بنا سکتے"),
+        "canNotCreateUser":
+            MessageLookupByLibrary.simpleMessage("صارف نہیں بنا سکتا۔"),
+        "canNotGetPayments": MessageLookupByLibrary.simpleMessage(
+            "ادائیگی کے طریقے حاصل نہیں کر سکتے"),
+        "canNotGetShipping":
+            MessageLookupByLibrary.simpleMessage("شپنگ کے طریقے نہیں مل سکتے"),
+        "canNotGetToken": MessageLookupByLibrary.simpleMessage(
+            "ٹوکن کی معلومات حاصل نہیں کر سکتے۔"),
         "canNotLaunch": MessageLookupByLibrary.simpleMessage(
             "اس ایپ کو لانچ نہیں کیا جا سکتا، یقینی بنائیں کہ config.dart پر آپ کی ترتیبات درست ہیں۔"),
         "canNotLoadThisLink": MessageLookupByLibrary.simpleMessage(
             "اس لنک کو لوڈ نہیں کیا جا سکتا"),
+        "canNotSaveOrder": MessageLookupByLibrary.simpleMessage(
+            "آرڈر کو ویب سائٹ پر محفوظ نہیں کیا جا سکتا"),
+        "canNotUpdateInfo": MessageLookupByLibrary.simpleMessage(
+            "صارف کی معلومات کو اپ ڈیٹ نہیں کر سکتے۔"),
         "cancel": MessageLookupByLibrary.simpleMessage("منسوخ کریں"),
         "cantFindThisOrderId":
             MessageLookupByLibrary.simpleMessage("یہ آرڈر ID نہیں مل سکا"),
@@ -342,6 +348,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "date": MessageLookupByLibrary.simpleMessage("تاریخ"),
         "dateASC": MessageLookupByLibrary.simpleMessage("تاریخ چڑھتی ہے۔"),
         "dateBooking": MessageLookupByLibrary.simpleMessage("تاریخ بکنگ"),
+        "dateDESC": MessageLookupByLibrary.simpleMessage("نزول کی تاریخ"),
         "dateEnd": MessageLookupByLibrary.simpleMessage("تاریخ اختتام"),
         "dateLatest": MessageLookupByLibrary.simpleMessage("تاریخ: تازہ ترین"),
         "dateOldest": MessageLookupByLibrary.simpleMessage("تاریخ: قدیم ترین"),
@@ -398,6 +405,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "editProductInfo": MessageLookupByLibrary.simpleMessage(
             "پروڈکٹ کی معلومات میں ترمیم کریں۔"),
         "editWithoutColon": MessageLookupByLibrary.simpleMessage("ترمیم"),
+        "egypt": MessageLookupByLibrary.simpleMessage("مصر"),
         "email": MessageLookupByLibrary.simpleMessage("ای میل"),
         "emailDeleteDescription": MessageLookupByLibrary.simpleMessage(
             "آپ کا اکاؤنٹ حذف کرنے سے آپ تمام میلنگ لسٹوں سے رکنیت ختم کر دیں گے۔"),
@@ -413,6 +421,8 @@ class MessageLookup extends MessageLookupByLibrary {
             "آپ کا تبصرہ خالی نہیں ہو سکتا"),
         "emptySearch": MessageLookupByLibrary.simpleMessage(
             "آپ نے ابھی تک آئٹمز تلاش نہیں کیے ہیں۔ آئیے اب شروع کریں - ہم آپ کی مدد کریں گے۔"),
+        "emptyShippingMsg": MessageLookupByLibrary.simpleMessage(
+            "شپنگ کے کوئی اختیارات دستیاب نہیں ہیں۔ براہ کرم یقینی بنائیں کہ آپ کا پتہ درست طریقے سے درج کیا گیا ہے، یا اگر آپ کو کسی مدد کی ضرورت ہو تو ہم سے رابطہ کریں۔"),
         "emptyUsername":
             MessageLookupByLibrary.simpleMessage("صارف نام/ای میل خالی ہے۔"),
         "emptyWishlistSubtitle": MessageLookupByLibrary.simpleMessage(
@@ -546,6 +556,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "inStock": MessageLookupByLibrary.simpleMessage("اسٹاک میں"),
         "incorrectPassword":
             MessageLookupByLibrary.simpleMessage("غلط پاس ورڈ"),
+        "india": MessageLookupByLibrary.simpleMessage("ہندی"),
         "indonesian": MessageLookupByLibrary.simpleMessage("انڈونیشی"),
         "instantlyClose":
             MessageLookupByLibrary.simpleMessage("فوری طور پر بند"),
@@ -655,6 +666,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "nearbyPlaces": MessageLookupByLibrary.simpleMessage("قریبی مقامات"),
         "needToLoginAgain": MessageLookupByLibrary.simpleMessage(
             "اپ ڈیٹ کو متاثر کرنے کے لیے آپ کو دوبارہ لاگ ان کرنے کی ضرورت ہے۔"),
+        "netherlands": MessageLookupByLibrary.simpleMessage("ڈچ"),
         "newPassword": MessageLookupByLibrary.simpleMessage("نیا پاس ورڈ"),
         "newVariation": MessageLookupByLibrary.simpleMessage("نیا تغیر"),
         "next": MessageLookupByLibrary.simpleMessage("اگلے"),
@@ -847,7 +859,9 @@ class MessageLookup extends MessageLookupByLibrary {
             "ڈسکاؤنٹ پوائنٹ کامیابی کے ساتھ لاگو ہو گیا ہے۔"),
         "pointRewardMessage": MessageLookupByLibrary.simpleMessage(
             "آپ کے پوائنٹس کو کارٹ پر لاگو کرنے کے لیے رعایت کا اصول ہے۔"),
+        "polish": MessageLookupByLibrary.simpleMessage("پولش"),
         "popular": MessageLookupByLibrary.simpleMessage("مقبول"),
+        "popularity": MessageLookupByLibrary.simpleMessage("مقبولیت"),
         "posAddressToolTip": MessageLookupByLibrary.simpleMessage(
             "یہ پتہ آپ کے مقامی ڈیوائس میں محفوظ ہو جائے گا۔ یہ صارف کا پتہ نہیں ہے۔"),
         "postContent": MessageLookupByLibrary.simpleMessage("مواد"),
@@ -874,6 +888,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "printerSelection":
             MessageLookupByLibrary.simpleMessage("پرنٹر کا انتخاب"),
         "printing": MessageLookupByLibrary.simpleMessage("پرنٹنگ..."),
+        "privacyAndTerm":
+            MessageLookupByLibrary.simpleMessage("رازداری اور اصطلاح"),
         "privacyPolicy":
             MessageLookupByLibrary.simpleMessage("رازداری کی پالیسی"),
         "privacyTerms":
@@ -896,6 +912,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "publish": MessageLookupByLibrary.simpleMessage("شائع کریں"),
         "pullToLoadMore": MessageLookupByLibrary.simpleMessage(
             "مزید لوڈ کرنے کے لیے کھینچیں۔"),
+        "qty": MessageLookupByLibrary.simpleMessage("مقدار"),
         "qtyTotal": m19,
         "rate": MessageLookupByLibrary.simpleMessage("شرح"),
         "rateTheApp":
@@ -1103,6 +1120,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "support": MessageLookupByLibrary.simpleMessage("مدد کریں"),
         "swahili": MessageLookupByLibrary.simpleMessage("سواحلی"),
         "swedish": MessageLookupByLibrary.simpleMessage("سویڈش"),
+        "tagNotExist":
+            MessageLookupByLibrary.simpleMessage("یہ ٹیگ موجود نہیں ہے۔"),
         "tags": MessageLookupByLibrary.simpleMessage("ٹیگز"),
         "takePicture": MessageLookupByLibrary.simpleMessage("تصویر لے"),
         "tamil": MessageLookupByLibrary.simpleMessage("تمل"),
@@ -1123,6 +1142,10 @@ class MessageLookup extends MessageLookupByLibrary {
         "tickets": MessageLookupByLibrary.simpleMessage("ٹکٹ"),
         "time": MessageLookupByLibrary.simpleMessage("وقت"),
         "title": MessageLookupByLibrary.simpleMessage("عنوان"),
+        "titleAToZ": MessageLookupByLibrary.simpleMessage("عنوان: اے سے زیڈ"),
+        "titleZToA": MessageLookupByLibrary.simpleMessage("عنوان: Z سے A"),
+        "tooManyFaildedLogin": MessageLookupByLibrary.simpleMessage(
+            "لاگ ان کی بہت ساری ناکام کوششیں براہ کرم کچھ دیر بعد کوشش کریں."),
         "topUp": MessageLookupByLibrary.simpleMessage("ٹاپ اپ"),
         "topUpProductNotFound":
             MessageLookupByLibrary.simpleMessage("ٹاپ اپ پروڈکٹ نہیں ملا"),
@@ -1178,6 +1201,8 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("اس تصویر کو استعمال کریں۔"),
         "userExists": MessageLookupByLibrary.simpleMessage(
             "یہ صارف نام/ای میل دستیاب نہیں ہے۔"),
+        "userNameInCorrect":
+            MessageLookupByLibrary.simpleMessage("صارف نام یا پاس ورڈ غلط ہے۔"),
         "username": MessageLookupByLibrary.simpleMessage("صارف نام"),
         "usernameAndPasswordRequired": MessageLookupByLibrary.simpleMessage(
             "صارف نام اور پاس ورڈ درکار ہے۔"),
@@ -1195,6 +1220,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "viaWallet": MessageLookupByLibrary.simpleMessage("بٹوے کے ذریعے"),
         "video": MessageLookupByLibrary.simpleMessage("ویڈیو"),
         "vietnamese": MessageLookupByLibrary.simpleMessage("ویتنامی"),
+        "viewOnGoogleMaps":
+            MessageLookupByLibrary.simpleMessage("گوگل میپس پر دیکھیں"),
         "viewRecentTransactions":
             MessageLookupByLibrary.simpleMessage("حالیہ لین دین دیکھیں"),
         "visible": MessageLookupByLibrary.simpleMessage("نظر آنے والا"),
diff --git a/lib/generated/intl/messages_uz.dart b/lib/generated/intl/messages_uz.dart
index 11a59b3..d731c3c 100644
--- a/lib/generated/intl/messages_uz.dart
+++ b/lib/generated/intl/messages_uz.dart
@@ -91,23 +91,14 @@ class MessageLookup extends MessageLookupByLibrary {
 
   final messages = _notInlinedMessages(_notInlinedMessages);
   static Map<String, Function> _notInlinedMessages(_) => <String, Function>{
-        "DateDESC": MessageLookupByLibrary.simpleMessage("Sana tushmoqda"),
-        "Dutch": MessageLookupByLibrary.simpleMessage("Golland"),
-        "Egypt": MessageLookupByLibrary.simpleMessage("Misr"),
-        "India": MessageLookupByLibrary.simpleMessage("Hindcha"),
-        "Korean": MessageLookupByLibrary.simpleMessage("Koreys"),
-        "Netherlands": MessageLookupByLibrary.simpleMessage("Golland"),
-        "Polish": MessageLookupByLibrary.simpleMessage("Polyakcha"),
-        "PrivacyAndTerm":
-            MessageLookupByLibrary.simpleMessage("Maxfiylik va muddat"),
-        "Qty": MessageLookupByLibrary.simpleMessage("qty"),
-        "Tamil": MessageLookupByLibrary.simpleMessage("Tamil tili"),
         "UserNameInCorrect": MessageLookupByLibrary.simpleMessage(
             "Foydalanuvchi nomi yoki parol noto\'g\'ri"),
         "aboutUs": MessageLookupByLibrary.simpleMessage("Biz haqimizda"),
         "account": MessageLookupByLibrary.simpleMessage("Hisob"),
         "accountDeleteDescription": MessageLookupByLibrary.simpleMessage(
             "Hisobingizni o\'chirish shaxsiy ma\'lumotlar bazamizdan o\'chiriladi. Sizning e-pochtangiz doimiy zahiraga olinadi va yangi hisob qaydnomasini ro\'yxatdan o\'tkazish uchun xuddi shu elektron pochtadan qayta foydalanish mumkin emas."),
+        "accountIsPendingApproval": MessageLookupByLibrary.simpleMessage(
+            "Hisob tasdiqlanishi kutilmoqda."),
         "accountSetup": MessageLookupByLibrary.simpleMessage("Hisobni sozlash"),
         "active": MessageLookupByLibrary.simpleMessage("Faol"),
         "addAName": MessageLookupByLibrary.simpleMessage("Ism qo\'shing"),
@@ -181,6 +172,8 @@ class MessageLookup extends MessageLookupByLibrary {
             "Audio element (lar) aniqlandi. Audio pleerga qo\'shmoqchimisiz?"),
         "availability": MessageLookupByLibrary.simpleMessage("Mavjudligi"),
         "availablePoints": m1,
+        "averageRating":
+            MessageLookupByLibrary.simpleMessage("O\'rtacha reyting"),
         "back": MessageLookupByLibrary.simpleMessage("Orqaga"),
         "backOrder":
             MessageLookupByLibrary.simpleMessage("Orqa buyurtma bo\'yicha"),
@@ -235,10 +228,24 @@ class MessageLookup extends MessageLookupByLibrary {
         "byTag": MessageLookupByLibrary.simpleMessage("Tag bo\'yicha"),
         "call": MessageLookupByLibrary.simpleMessage("Qo\'ng\'iroq qiling"),
         "callTo": MessageLookupByLibrary.simpleMessage("Qo\'ng\'iroq qiling"),
+        "canNotCreateOrder":
+            MessageLookupByLibrary.simpleMessage("Buyurtma yaratib bo\'lmaydi"),
+        "canNotCreateUser": MessageLookupByLibrary.simpleMessage(
+            "Foydalanuvchi yaratib bo‘lmadi."),
+        "canNotGetPayments": MessageLookupByLibrary.simpleMessage(
+            "Toʻlov usullarini olish imkonsiz"),
+        "canNotGetShipping": MessageLookupByLibrary.simpleMessage(
+            "Yuk tashish usullarini olish mumkin emas"),
+        "canNotGetToken": MessageLookupByLibrary.simpleMessage(
+            "Token maʼlumotlarini olish imkonsiz."),
         "canNotLaunch": MessageLookupByLibrary.simpleMessage(
             "Bu ilovani ishga tushirib bo\'lmadi, config.dart sozlamalari to\'g\'riligiga ishonch hosil qiling"),
         "canNotLoadThisLink":
             MessageLookupByLibrary.simpleMessage("Bu havolani yuklab boʻlmadi"),
+        "canNotSaveOrder": MessageLookupByLibrary.simpleMessage(
+            "Buyurtmani veb-saytga saqlab bo\'lmadi"),
+        "canNotUpdateInfo": MessageLookupByLibrary.simpleMessage(
+            "Foydalanuvchi maʼlumotlarini yangilab boʻlmadi."),
         "cancel": MessageLookupByLibrary.simpleMessage("Bekor qilish"),
         "cantFindThisOrderId": MessageLookupByLibrary.simpleMessage(
             "Bu buyurtma identifikatori topilmadi"),
@@ -358,6 +365,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "date": MessageLookupByLibrary.simpleMessage("Sana"),
         "dateASC": MessageLookupByLibrary.simpleMessage("Ko\'tarilish sanasi"),
         "dateBooking": MessageLookupByLibrary.simpleMessage("Sana band qilish"),
+        "dateDESC": MessageLookupByLibrary.simpleMessage("Sana tushmoqda"),
         "dateEnd": MessageLookupByLibrary.simpleMessage("Tugash sanasi"),
         "dateLatest": MessageLookupByLibrary.simpleMessage("Sana: Oxirgi"),
         "dateOldest": MessageLookupByLibrary.simpleMessage("Sana: eng qadimgi"),
@@ -421,6 +429,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "editProductInfo": MessageLookupByLibrary.simpleMessage(
             "Mahsulot ma\'lumotlarini tahrirlash"),
         "editWithoutColon": MessageLookupByLibrary.simpleMessage("Tahrirlash"),
+        "egypt": MessageLookupByLibrary.simpleMessage("Misr"),
         "email": MessageLookupByLibrary.simpleMessage("Elektron pochta"),
         "emailDeleteDescription": MessageLookupByLibrary.simpleMessage(
             "Hisobingizni o\'chirish sizni barcha pochta ro\'yxatlaridan olib tashlaydi."),
@@ -436,6 +445,8 @@ class MessageLookup extends MessageLookupByLibrary {
             "Fikringiz bo\'sh bo\'lishi mumkin emas"),
         "emptySearch": MessageLookupByLibrary.simpleMessage(
             "Siz hali biror narsani qidirmadingiz. Endi boshlaylik - biz sizga yordam beramiz."),
+        "emptyShippingMsg": MessageLookupByLibrary.simpleMessage(
+            "Yuk tashish imkoniyatlari mavjud emas. Iltimos, manzilingiz to\'g\'ri kiritilganligiga ishonch hosil qiling yoki sizga yordam kerak bo\'lsa, biz bilan bog\'laning."),
         "emptyUsername": MessageLookupByLibrary.simpleMessage(
             "Foydalanuvchi nomi/elektron pochta manzili bo\'sh"),
         "emptyWishlistSubtitle": MessageLookupByLibrary.simpleMessage(
@@ -577,6 +588,7 @@ class MessageLookup extends MessageLookupByLibrary {
             "Omborda mavjud; sotuvda mavjud"),
         "incorrectPassword":
             MessageLookupByLibrary.simpleMessage("Noto\'g\'ri parol"),
+        "india": MessageLookupByLibrary.simpleMessage("Hindcha"),
         "indonesian": MessageLookupByLibrary.simpleMessage("Indoneziyalik"),
         "instantlyClose":
             MessageLookupByLibrary.simpleMessage("Bir zumda yopish"),
@@ -690,6 +702,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "nearbyPlaces": MessageLookupByLibrary.simpleMessage("Yaqin joylar"),
         "needToLoginAgain": MessageLookupByLibrary.simpleMessage(
             "Yangilanishni amalga oshirish uchun yana tizimga kirishingiz kerak"),
+        "netherlands": MessageLookupByLibrary.simpleMessage("Golland"),
         "newPassword": MessageLookupByLibrary.simpleMessage("Yangi Parol"),
         "newVariation":
             MessageLookupByLibrary.simpleMessage("Yangi variatsiya"),
@@ -896,7 +909,9 @@ class MessageLookup extends MessageLookupByLibrary {
             "Chegirma nuqtasi muvaffaqiyatli qo\'llanildi"),
         "pointRewardMessage": MessageLookupByLibrary.simpleMessage(
             "Ballaringizni savatga qo\'llashda chegirma qoidasi mavjud"),
+        "polish": MessageLookupByLibrary.simpleMessage("Polyakcha"),
         "popular": MessageLookupByLibrary.simpleMessage("Ommabop"),
+        "popularity": MessageLookupByLibrary.simpleMessage("Mashhurlik"),
         "posAddressToolTip": MessageLookupByLibrary.simpleMessage(
             "Bu manzil mahalliy qurilmangizga saqlanadi. Bu foydalanuvchi manzili EMAS."),
         "postContent": MessageLookupByLibrary.simpleMessage("Tarkibi"),
@@ -926,6 +941,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "printerSelection":
             MessageLookupByLibrary.simpleMessage("Printerni tanlash"),
         "printing": MessageLookupByLibrary.simpleMessage("Chop etilmoqda..."),
+        "privacyAndTerm":
+            MessageLookupByLibrary.simpleMessage("Maxfiylik va muddat"),
         "privacyPolicy":
             MessageLookupByLibrary.simpleMessage("Maxfiylik siyosati"),
         "privacyTerms":
@@ -948,6 +965,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "publish": MessageLookupByLibrary.simpleMessage("Joylashtirish"),
         "pullToLoadMore": MessageLookupByLibrary.simpleMessage(
             "Ko\'proq yuklash uchun torting"),
+        "qty": MessageLookupByLibrary.simpleMessage("qty"),
         "qtyTotal": m19,
         "rate": MessageLookupByLibrary.simpleMessage("Tezlik"),
         "rateTheApp": MessageLookupByLibrary.simpleMessage("Ilovani baholang"),
@@ -1171,6 +1189,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "support": MessageLookupByLibrary.simpleMessage("Qo\'llab-quvvatlash"),
         "swahili": MessageLookupByLibrary.simpleMessage("Suaxili"),
         "swedish": MessageLookupByLibrary.simpleMessage("Shved"),
+        "tagNotExist":
+            MessageLookupByLibrary.simpleMessage("Bu teg mavjud emas"),
         "tags": MessageLookupByLibrary.simpleMessage("Teglar"),
         "takePicture": MessageLookupByLibrary.simpleMessage("Rasmga olish"),
         "tamil": MessageLookupByLibrary.simpleMessage("Tamil tili"),
@@ -1191,6 +1211,12 @@ class MessageLookup extends MessageLookupByLibrary {
         "tickets": MessageLookupByLibrary.simpleMessage("Chiptalar"),
         "time": MessageLookupByLibrary.simpleMessage("Vaqt"),
         "title": MessageLookupByLibrary.simpleMessage("Sarlavha"),
+        "titleAToZ":
+            MessageLookupByLibrary.simpleMessage("Sarlavha: A dan Z gacha"),
+        "titleZToA":
+            MessageLookupByLibrary.simpleMessage("Sarlavha: Z dan A gacha"),
+        "tooManyFaildedLogin": MessageLookupByLibrary.simpleMessage(
+            "Kirish uchun juda koʻp muvaffaqiyatsiz urinishlar. Iltimos keyinroq qayta urinib ko\'ring."),
         "topUp": MessageLookupByLibrary.simpleMessage("To\'ldirish"),
         "topUpProductNotFound": MessageLookupByLibrary.simpleMessage(
             "Toʻldirish mahsuloti topilmadi"),
@@ -1251,6 +1277,8 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("Ushbu rasmdan foydalaning"),
         "userExists": MessageLookupByLibrary.simpleMessage(
             "Bu foydalanuvchi nomi/elektron pochta manzili mavjud emas."),
+        "userNameInCorrect": MessageLookupByLibrary.simpleMessage(
+            "Foydalanuvchi nomi yoki parol noto\'g\'ri."),
         "username": MessageLookupByLibrary.simpleMessage("Foydalanuvchi nomi"),
         "usernameAndPasswordRequired": MessageLookupByLibrary.simpleMessage(
             "Foydalanuvchi nomi va parol talab qilinadi"),
@@ -1269,6 +1297,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "viaWallet": MessageLookupByLibrary.simpleMessage("Hamyon orqali"),
         "video": MessageLookupByLibrary.simpleMessage("Video"),
         "vietnamese": MessageLookupByLibrary.simpleMessage("Vetnamcha"),
+        "viewOnGoogleMaps":
+            MessageLookupByLibrary.simpleMessage("Google Xaritalarda ko\'rish"),
         "viewRecentTransactions": MessageLookupByLibrary.simpleMessage(
             "Oxirgi tranzaktsiyalarni ko\'ring"),
         "visible": MessageLookupByLibrary.simpleMessage("Ko\'rinadigan"),
diff --git a/lib/generated/intl/messages_vi.dart b/lib/generated/intl/messages_vi.dart
index 8f08f40..f664975 100644
--- a/lib/generated/intl/messages_vi.dart
+++ b/lib/generated/intl/messages_vi.dart
@@ -91,23 +91,14 @@ class MessageLookup extends MessageLookupByLibrary {
 
   final messages = _notInlinedMessages(_notInlinedMessages);
   static Map<String, Function> _notInlinedMessages(_) => <String, Function>{
-        "DateDESC": MessageLookupByLibrary.simpleMessage("Ngày giảm dần"),
-        "Dutch": MessageLookupByLibrary.simpleMessage("Hà Lan"),
-        "Egypt": MessageLookupByLibrary.simpleMessage("Ai Cập"),
-        "India": MessageLookupByLibrary.simpleMessage("Tiếng Hindi"),
-        "Korean": MessageLookupByLibrary.simpleMessage("Hàn Quốc"),
-        "Netherlands": MessageLookupByLibrary.simpleMessage("nước Hà Lan"),
-        "Polish": MessageLookupByLibrary.simpleMessage("Tiếng Ba Lan"),
-        "PrivacyAndTerm": MessageLookupByLibrary.simpleMessage(
-            "Quyền riêng tư và Điều khoản"),
-        "Qty": MessageLookupByLibrary.simpleMessage("SỐ LƯỢNG"),
-        "Tamil": MessageLookupByLibrary.simpleMessage("Tiếng Tamil"),
         "UserNameInCorrect": MessageLookupByLibrary.simpleMessage(
             "Tên người dùng hoặc mật khẩu không chính xác"),
         "aboutUs": MessageLookupByLibrary.simpleMessage("Về chúng tôi"),
         "account": MessageLookupByLibrary.simpleMessage("Tài khoản"),
         "accountDeleteDescription": MessageLookupByLibrary.simpleMessage(
             "Xóa tài khoản của bạn sẽ xóa thông tin cá nhân khỏi cơ sở dữ liệu của chúng tôi. Email của bạn sẽ được bảo lưu vĩnh viễn và không thể sử dụng lại email đó để đăng ký tài khoản mới."),
+        "accountIsPendingApproval": MessageLookupByLibrary.simpleMessage(
+            "Tài khoản đang chờ phê duyệt."),
         "accountSetup":
             MessageLookupByLibrary.simpleMessage("Thiết lập tài khoản"),
         "active": MessageLookupByLibrary.simpleMessage("Hoạt động"),
@@ -176,6 +167,8 @@ class MessageLookup extends MessageLookupByLibrary {
             "Đã phát hiện (các) mục âm thanh. Bạn có muốn thêm vào Trình phát âm thanh không?"),
         "availability": MessageLookupByLibrary.simpleMessage("Sẵn có"),
         "availablePoints": m1,
+        "averageRating":
+            MessageLookupByLibrary.simpleMessage("Xếp hạng trung bình"),
         "back": MessageLookupByLibrary.simpleMessage("Trở lại"),
         "backOrder": MessageLookupByLibrary.simpleMessage("Đặt hàng trước"),
         "backToShop": MessageLookupByLibrary.simpleMessage("Quay lại cửa hàng"),
@@ -225,10 +218,24 @@ class MessageLookup extends MessageLookupByLibrary {
         "byTag": MessageLookupByLibrary.simpleMessage("Theo thẻ"),
         "call": MessageLookupByLibrary.simpleMessage("gởi"),
         "callTo": MessageLookupByLibrary.simpleMessage("Gọi điện đến"),
+        "canNotCreateOrder":
+            MessageLookupByLibrary.simpleMessage("Không thể tạo đơn hàng"),
+        "canNotCreateUser":
+            MessageLookupByLibrary.simpleMessage("Không thể tạo người dùng."),
+        "canNotGetPayments": MessageLookupByLibrary.simpleMessage(
+            "Không thể nhận phương thức thanh toán"),
+        "canNotGetShipping": MessageLookupByLibrary.simpleMessage(
+            "Không thể nhận phương thức vận chuyển"),
+        "canNotGetToken": MessageLookupByLibrary.simpleMessage(
+            "Không thể nhận thông tin mã thông báo."),
         "canNotLaunch": MessageLookupByLibrary.simpleMessage(
             "Cannot launch this app, make sure your settings on config.dart is correct"),
         "canNotLoadThisLink":
             MessageLookupByLibrary.simpleMessage("Không thể tải liên kết này"),
+        "canNotSaveOrder": MessageLookupByLibrary.simpleMessage(
+            "Không thể lưu đơn đặt hàng vào trang web"),
+        "canNotUpdateInfo": MessageLookupByLibrary.simpleMessage(
+            "Không thể cập nhật thông tin người dùng."),
         "cancel": MessageLookupByLibrary.simpleMessage("Hủy"),
         "cantFindThisOrderId": MessageLookupByLibrary.simpleMessage(
             "Không thể tìm thấy ID đơn đặt hàng này"),
@@ -348,6 +355,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "date": MessageLookupByLibrary.simpleMessage("Ngày"),
         "dateASC": MessageLookupByLibrary.simpleMessage("Ngày tăng dần"),
         "dateBooking": MessageLookupByLibrary.simpleMessage("dateBooking"),
+        "dateDESC": MessageLookupByLibrary.simpleMessage("Ngày giảm dần"),
         "dateEnd": MessageLookupByLibrary.simpleMessage("Ngày kết thúc"),
         "dateLatest": MessageLookupByLibrary.simpleMessage("Ngày: Mới nhất"),
         "dateOldest": MessageLookupByLibrary.simpleMessage("Ngày: Cũ nhất"),
@@ -404,6 +412,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "editProductInfo": MessageLookupByLibrary.simpleMessage(
             "Chỉnh sửa thông tin sản phẩm"),
         "editWithoutColon": MessageLookupByLibrary.simpleMessage("chỉnh sửa"),
+        "egypt": MessageLookupByLibrary.simpleMessage("Ai Cập"),
         "email": MessageLookupByLibrary.simpleMessage("Email"),
         "emailDeleteDescription": MessageLookupByLibrary.simpleMessage(
             "Xóa tài khoản của bạn sẽ xóa bạn khỏi danh sách gửi thư."),
@@ -419,6 +428,8 @@ class MessageLookup extends MessageLookupByLibrary {
             "Nhận xét của bạn không được để trống"),
         "emptySearch": MessageLookupByLibrary.simpleMessage(
             "Bạn vẫn chưa tìm kiếm các mục. Hãy bắt đầu ngay bây giờ - chúng tôi sẽ giúp bạn."),
+        "emptyShippingMsg": MessageLookupByLibrary.simpleMessage(
+            "Không có tùy chọn vận chuyển có sẵn. Vui lòng đảm bảo rằng địa chỉ của bạn đã được nhập chính xác, hoặc liên hệ với chúng tôi nếu bạn cần bất kỳ trợ giúp nào."),
         "emptyUsername":
             MessageLookupByLibrary.simpleMessage("Username/Email is empty"),
         "emptyWishlistSubtitle": MessageLookupByLibrary.simpleMessage(
@@ -555,6 +566,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "inStock": MessageLookupByLibrary.simpleMessage("Còn Hàng"),
         "incorrectPassword":
             MessageLookupByLibrary.simpleMessage("Mật khẩu không đúng"),
+        "india": MessageLookupByLibrary.simpleMessage("Tiếng Hindi"),
         "indonesian": MessageLookupByLibrary.simpleMessage("Indonesiana"),
         "instantlyClose":
             MessageLookupByLibrary.simpleMessage("Đóng ngay lập tức"),
@@ -666,6 +678,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "nearbyPlaces": MessageLookupByLibrary.simpleMessage("Nearby Places"),
         "needToLoginAgain": MessageLookupByLibrary.simpleMessage(
             "Bạn cần đăng nhập lại để cập nhật có hiệu lực"),
+        "netherlands": MessageLookupByLibrary.simpleMessage("nước Hà Lan"),
         "newPassword": MessageLookupByLibrary.simpleMessage("Mật khẩu mới"),
         "newVariation": MessageLookupByLibrary.simpleMessage("Biến thể mới"),
         "next": MessageLookupByLibrary.simpleMessage("Tiếp theo"),
@@ -864,7 +877,9 @@ class MessageLookup extends MessageLookupByLibrary {
             "Điểm chiết khấu được áp dụng thành công"),
         "pointRewardMessage": MessageLookupByLibrary.simpleMessage(
             "There is the Discount Rule for applying your points to Cart"),
+        "polish": MessageLookupByLibrary.simpleMessage("Tiếng Ba Lan"),
         "popular": MessageLookupByLibrary.simpleMessage("Phổ biến"),
+        "popularity": MessageLookupByLibrary.simpleMessage("Phổ biến"),
         "posAddressToolTip": MessageLookupByLibrary.simpleMessage(
             "Địa chỉ này sẽ được lưu vào thiết bị cục bộ của bạn. Nó KHÔNG phải là địa chỉ người dùng."),
         "postContent": MessageLookupByLibrary.simpleMessage("Nội dung"),
@@ -892,6 +907,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "printerSelection":
             MessageLookupByLibrary.simpleMessage("Lựa chọn máy in"),
         "printing": MessageLookupByLibrary.simpleMessage("Đang in ..."),
+        "privacyAndTerm": MessageLookupByLibrary.simpleMessage(
+            "Quyền riêng tư và Điều khoản"),
         "privacyPolicy":
             MessageLookupByLibrary.simpleMessage("Chính sách bảo mật"),
         "privacyTerms":
@@ -914,6 +931,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "publish": MessageLookupByLibrary.simpleMessage("Công bố"),
         "pullToLoadMore":
             MessageLookupByLibrary.simpleMessage("Kéo để tải thêm"),
+        "qty": MessageLookupByLibrary.simpleMessage("SỐ LƯỢNG"),
         "qtyTotal": m19,
         "rate": MessageLookupByLibrary.simpleMessage("Rate"),
         "rateTheApp": MessageLookupByLibrary.simpleMessage("Đánh giá ứng dụng"),
@@ -1123,6 +1141,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "support": MessageLookupByLibrary.simpleMessage("Ủng hộ"),
         "swahili": MessageLookupByLibrary.simpleMessage("Tiếng Swords"),
         "swedish": MessageLookupByLibrary.simpleMessage("Thụy Điển"),
+        "tagNotExist":
+            MessageLookupByLibrary.simpleMessage("Thẻ này không tồn tại"),
         "tags": MessageLookupByLibrary.simpleMessage("Nhãn"),
         "takePicture": MessageLookupByLibrary.simpleMessage("Chụp ảnh"),
         "tamil": MessageLookupByLibrary.simpleMessage("Tiếng Tamil"),
@@ -1143,6 +1163,10 @@ class MessageLookup extends MessageLookupByLibrary {
         "tickets": MessageLookupByLibrary.simpleMessage("Về"),
         "time": MessageLookupByLibrary.simpleMessage("Thời gian"),
         "title": MessageLookupByLibrary.simpleMessage("Chức vụ"),
+        "titleAToZ": MessageLookupByLibrary.simpleMessage("Tiêu đề: A đến Z"),
+        "titleZToA": MessageLookupByLibrary.simpleMessage("Tiêu đề: Z đến A"),
+        "tooManyFaildedLogin": MessageLookupByLibrary.simpleMessage(
+            "Quá nhiều lần đăng nhập không thành công. Vui lòng thử lại sau."),
         "topUp": MessageLookupByLibrary.simpleMessage("Nạp tiền"),
         "topUpProductNotFound": MessageLookupByLibrary.simpleMessage(
             "Không tìm thấy sản phẩm nạp tiền"),
@@ -1201,6 +1225,8 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("Sử dụng hình ảnh này"),
         "userExists": MessageLookupByLibrary.simpleMessage(
             "Tên người dùng / email này không có sẵn."),
+        "userNameInCorrect": MessageLookupByLibrary.simpleMessage(
+            "Tên người dùng hoặc mật khẩu không chính xác."),
         "username": MessageLookupByLibrary.simpleMessage("Username"),
         "usernameAndPasswordRequired": MessageLookupByLibrary.simpleMessage(
             "Tên người dùng và mật khẩu là bắt buộc"),
@@ -1219,6 +1245,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "viaWallet": MessageLookupByLibrary.simpleMessage("Qua ví"),
         "video": MessageLookupByLibrary.simpleMessage("Video"),
         "vietnamese": MessageLookupByLibrary.simpleMessage("tiếng việt"),
+        "viewOnGoogleMaps":
+            MessageLookupByLibrary.simpleMessage("Xem trên Google Maps"),
         "viewRecentTransactions":
             MessageLookupByLibrary.simpleMessage("Xem các giao dịch gần đây"),
         "visible": MessageLookupByLibrary.simpleMessage("Có thể nhìn thấy"),
diff --git a/lib/generated/intl/messages_zh.dart b/lib/generated/intl/messages_zh.dart
index 1dcb21c..cd6961b 100644
--- a/lib/generated/intl/messages_zh.dart
+++ b/lib/generated/intl/messages_zh.dart
@@ -89,21 +89,13 @@ class MessageLookup extends MessageLookupByLibrary {
 
   final messages = _notInlinedMessages(_notInlinedMessages);
   static Map<String, Function> _notInlinedMessages(_) => <String, Function>{
-        "DateDESC": MessageLookupByLibrary.simpleMessage("日期降序"),
-        "Dutch": MessageLookupByLibrary.simpleMessage("荷兰人"),
-        "Egypt": MessageLookupByLibrary.simpleMessage("埃及"),
-        "India": MessageLookupByLibrary.simpleMessage("印地语"),
-        "Korean": MessageLookupByLibrary.simpleMessage("朝鲜的"),
-        "Netherlands": MessageLookupByLibrary.simpleMessage("荷兰"),
-        "Polish": MessageLookupByLibrary.simpleMessage("波兰语"),
-        "PrivacyAndTerm": MessageLookupByLibrary.simpleMessage("隐私权和条款"),
-        "Qty": MessageLookupByLibrary.simpleMessage("数量"),
-        "Tamil": MessageLookupByLibrary.simpleMessage("泰米尔语"),
         "UserNameInCorrect": MessageLookupByLibrary.simpleMessage("用户名或密码不正确"),
         "aboutUs": MessageLookupByLibrary.simpleMessage("關於我們"),
         "account": MessageLookupByLibrary.simpleMessage("帐户"),
         "accountDeleteDescription": MessageLookupByLibrary.simpleMessage(
             "删除您的帐户会从我们的数据库中删除个人信息。您的电子邮件将被永久保留，并且不能重复使用同一电子邮件注册新帐户。"),
+        "accountIsPendingApproval":
+            MessageLookupByLibrary.simpleMessage("该帐户正在等待批准。"),
         "accountSetup": MessageLookupByLibrary.simpleMessage("帐户设置"),
         "active": MessageLookupByLibrary.simpleMessage("活性"),
         "addAName": MessageLookupByLibrary.simpleMessage("添加名称"),
@@ -158,6 +150,7 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("检测到音频项目。您想添加到音频播放器吗？"),
         "availability": MessageLookupByLibrary.simpleMessage("可用性"),
         "availablePoints": m1,
+        "averageRating": MessageLookupByLibrary.simpleMessage("平均评分"),
         "back": MessageLookupByLibrary.simpleMessage("背部"),
         "backOrder": MessageLookupByLibrary.simpleMessage("在缺货"),
         "backToShop": MessageLookupByLibrary.simpleMessage("回到商店"),
@@ -194,9 +187,16 @@ class MessageLookup extends MessageLookupByLibrary {
         "byTag": MessageLookupByLibrary.simpleMessage("按标签"),
         "call": MessageLookupByLibrary.simpleMessage("呼叫"),
         "callTo": MessageLookupByLibrary.simpleMessage("打电话给"),
+        "canNotCreateOrder": MessageLookupByLibrary.simpleMessage("无法创建订单"),
+        "canNotCreateUser": MessageLookupByLibrary.simpleMessage("无法创建用户。"),
+        "canNotGetPayments": MessageLookupByLibrary.simpleMessage("无法获取付款方式"),
+        "canNotGetShipping": MessageLookupByLibrary.simpleMessage("无法获取送货方式"),
+        "canNotGetToken": MessageLookupByLibrary.simpleMessage("无法获取令牌信息。"),
         "canNotLaunch": MessageLookupByLibrary.simpleMessage(
             "无法启动此应用，请确保您在config.dart上的设置正确"),
         "canNotLoadThisLink": MessageLookupByLibrary.simpleMessage("无法加载此链接"),
+        "canNotSaveOrder": MessageLookupByLibrary.simpleMessage("无法将订单保存到网站"),
+        "canNotUpdateInfo": MessageLookupByLibrary.simpleMessage("无法更新用户信息。"),
         "cancel": MessageLookupByLibrary.simpleMessage("取消"),
         "cantFindThisOrderId": MessageLookupByLibrary.simpleMessage("找不到此订单ID"),
         "cantPickDateInThePast":
@@ -291,6 +291,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "date": MessageLookupByLibrary.simpleMessage("日期"),
         "dateASC": MessageLookupByLibrary.simpleMessage("日期升序"),
         "dateBooking": MessageLookupByLibrary.simpleMessage("日期预订"),
+        "dateDESC": MessageLookupByLibrary.simpleMessage("日期降序"),
         "dateEnd": MessageLookupByLibrary.simpleMessage("日期结束"),
         "dateLatest": MessageLookupByLibrary.simpleMessage("日期：最新"),
         "dateOldest": MessageLookupByLibrary.simpleMessage("日期：最老的"),
@@ -338,6 +339,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "edit": MessageLookupByLibrary.simpleMessage("编辑："),
         "editProductInfo": MessageLookupByLibrary.simpleMessage("编辑产品信息"),
         "editWithoutColon": MessageLookupByLibrary.simpleMessage("编辑"),
+        "egypt": MessageLookupByLibrary.simpleMessage("埃及"),
         "email": MessageLookupByLibrary.simpleMessage("电子邮件"),
         "emailDeleteDescription":
             MessageLookupByLibrary.simpleMessage("删除您的帐户将取消您从所有邮件列表中的订阅。"),
@@ -350,6 +352,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "emptyComment": MessageLookupByLibrary.simpleMessage("您的评论不能为空"),
         "emptySearch":
             MessageLookupByLibrary.simpleMessage("您尚未搜索商品。现在开始-我们会为您提供帮助。"),
+        "emptyShippingMsg": MessageLookupByLibrary.simpleMessage(
+            "没有可用的运输选项。请确保您的地址输入正确，如果您需要任何帮助，请与我们联系。"),
         "emptyUsername": MessageLookupByLibrary.simpleMessage("用戶名/电子邮件为空"),
         "emptyWishlistSubtitle":
             MessageLookupByLibrary.simpleMessage("轻按产品旁边的任何一个即可收藏。我们将在这里为您保存！"),
@@ -453,6 +457,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "imageNetwork": MessageLookupByLibrary.simpleMessage("影像网络"),
         "inStock": MessageLookupByLibrary.simpleMessage("有现货"),
         "incorrectPassword": MessageLookupByLibrary.simpleMessage("密码错误"),
+        "india": MessageLookupByLibrary.simpleMessage("印地语"),
         "indonesian": MessageLookupByLibrary.simpleMessage("印度尼西亚"),
         "instantlyClose": MessageLookupByLibrary.simpleMessage("立即关闭"),
         "invalidPhoneNumber": MessageLookupByLibrary.simpleMessage("无效的电话号码"),
@@ -533,6 +538,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "name": MessageLookupByLibrary.simpleMessage("名称"),
         "nearbyPlaces": MessageLookupByLibrary.simpleMessage("附近地点"),
         "needToLoginAgain": MessageLookupByLibrary.simpleMessage("您需要重新登录才能生效"),
+        "netherlands": MessageLookupByLibrary.simpleMessage("荷兰"),
         "newPassword": MessageLookupByLibrary.simpleMessage("新密码"),
         "newVariation": MessageLookupByLibrary.simpleMessage("新变化"),
         "next": MessageLookupByLibrary.simpleMessage("下一個"),
@@ -685,7 +691,9 @@ class MessageLookup extends MessageLookupByLibrary {
         "pointMsgSuccess": MessageLookupByLibrary.simpleMessage("折扣点申请成功"),
         "pointRewardMessage":
             MessageLookupByLibrary.simpleMessage("有将您的积分应用到购物车的折扣规则"),
+        "polish": MessageLookupByLibrary.simpleMessage("波兰语"),
         "popular": MessageLookupByLibrary.simpleMessage("流行"),
+        "popularity": MessageLookupByLibrary.simpleMessage("人气度"),
         "posAddressToolTip":
             MessageLookupByLibrary.simpleMessage("此地址将保存到您的本地设备。它不是用户地址。"),
         "postContent": MessageLookupByLibrary.simpleMessage("内容"),
@@ -705,6 +713,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "printerNotFound": MessageLookupByLibrary.simpleMessage("未找到打印机"),
         "printerSelection": MessageLookupByLibrary.simpleMessage("打印机选择"),
         "printing": MessageLookupByLibrary.simpleMessage("印刷..."),
+        "privacyAndTerm": MessageLookupByLibrary.simpleMessage("隐私权和条款"),
         "privacyPolicy": MessageLookupByLibrary.simpleMessage("隐私政策"),
         "privacyTerms": MessageLookupByLibrary.simpleMessage("隐私权与条款"),
         "private": MessageLookupByLibrary.simpleMessage("私人的"),
@@ -722,6 +731,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "products": MessageLookupByLibrary.simpleMessage("产品"),
         "publish": MessageLookupByLibrary.simpleMessage("发布"),
         "pullToLoadMore": MessageLookupByLibrary.simpleMessage("拉动加载更多"),
+        "qty": MessageLookupByLibrary.simpleMessage("数量"),
         "qtyTotal": m19,
         "rate": MessageLookupByLibrary.simpleMessage("评分"),
         "rateTheApp": MessageLookupByLibrary.simpleMessage("评价应用程序"),
@@ -879,6 +889,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "support": MessageLookupByLibrary.simpleMessage("支持"),
         "swahili": MessageLookupByLibrary.simpleMessage("斯瓦希里语"),
         "swedish": MessageLookupByLibrary.simpleMessage("瑞典"),
+        "tagNotExist": MessageLookupByLibrary.simpleMessage("此标签不存在"),
         "tags": MessageLookupByLibrary.simpleMessage("标签"),
         "takePicture": MessageLookupByLibrary.simpleMessage("拍照片"),
         "tamil": MessageLookupByLibrary.simpleMessage("泰米尔语"),
@@ -896,6 +907,10 @@ class MessageLookup extends MessageLookupByLibrary {
         "tickets": MessageLookupByLibrary.simpleMessage("门票"),
         "time": MessageLookupByLibrary.simpleMessage("时间"),
         "title": MessageLookupByLibrary.simpleMessage("标题"),
+        "titleAToZ": MessageLookupByLibrary.simpleMessage("标题：A到Z"),
+        "titleZToA": MessageLookupByLibrary.simpleMessage("标题：Z到A"),
+        "tooManyFaildedLogin":
+            MessageLookupByLibrary.simpleMessage("登录尝试失败次数过多。请稍后再试。"),
         "topUp": MessageLookupByLibrary.simpleMessage("充值"),
         "topUpProductNotFound": MessageLookupByLibrary.simpleMessage("未找到充值产品"),
         "total": MessageLookupByLibrary.simpleMessage("总"),
@@ -935,6 +950,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "useNow": MessageLookupByLibrary.simpleMessage("现在使用"),
         "useThisImage": MessageLookupByLibrary.simpleMessage("使用此图像"),
         "userExists": MessageLookupByLibrary.simpleMessage("此用户名/电子邮件不可用。"),
+        "userNameInCorrect": MessageLookupByLibrary.simpleMessage("用户名或密码不正确。"),
         "username": MessageLookupByLibrary.simpleMessage("用户名"),
         "usernameAndPasswordRequired":
             MessageLookupByLibrary.simpleMessage("用户名和密码为必填项"),
@@ -950,6 +966,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "viaWallet": MessageLookupByLibrary.simpleMessage("通过钱包"),
         "video": MessageLookupByLibrary.simpleMessage("视频"),
         "vietnamese": MessageLookupByLibrary.simpleMessage("越南"),
+        "viewOnGoogleMaps": MessageLookupByLibrary.simpleMessage("在谷歌地图上查看"),
         "viewRecentTransactions":
             MessageLookupByLibrary.simpleMessage("查看最近的交易"),
         "visible": MessageLookupByLibrary.simpleMessage("可见"),
diff --git a/lib/generated/intl/messages_zh_CN.dart b/lib/generated/intl/messages_zh_CN.dart
index f7296fb..96d8b0a 100644
--- a/lib/generated/intl/messages_zh_CN.dart
+++ b/lib/generated/intl/messages_zh_CN.dart
@@ -89,21 +89,13 @@ class MessageLookup extends MessageLookupByLibrary {
 
   final messages = _notInlinedMessages(_notInlinedMessages);
   static Map<String, Function> _notInlinedMessages(_) => <String, Function>{
-        "DateDESC": MessageLookupByLibrary.simpleMessage("日期降序"),
-        "Dutch": MessageLookupByLibrary.simpleMessage("荷兰"),
-        "Egypt": MessageLookupByLibrary.simpleMessage("埃及"),
-        "India": MessageLookupByLibrary.simpleMessage("印度"),
-        "Korean": MessageLookupByLibrary.simpleMessage("朝鲜"),
-        "Netherlands": MessageLookupByLibrary.simpleMessage("荷兰"),
-        "Polish": MessageLookupByLibrary.simpleMessage("波兰语"),
-        "PrivacyAndTerm": MessageLookupByLibrary.simpleMessage("隐私和条款"),
-        "Qty": MessageLookupByLibrary.simpleMessage("QTY"),
-        "Tamil": MessageLookupByLibrary.simpleMessage("泰米尔语"),
         "UserNameInCorrect": MessageLookupByLibrary.simpleMessage("用户名或密码不正确"),
         "aboutUs": MessageLookupByLibrary.simpleMessage("关于我们"),
         "account": MessageLookupByLibrary.simpleMessage("帐户"),
         "accountDeleteDescription": MessageLookupByLibrary.simpleMessage(
             "删除您的帐户会从我们的数据库中删除个人信息。您的电子邮件将被永久保留，并且不能重复使用同一电子邮件注册新帐户。"),
+        "accountIsPendingApproval":
+            MessageLookupByLibrary.simpleMessage("该帐户正在等待批准。"),
         "accountSetup": MessageLookupByLibrary.simpleMessage("账户设置"),
         "active": MessageLookupByLibrary.simpleMessage("启用"),
         "addAName": MessageLookupByLibrary.simpleMessage("新增名称"),
@@ -158,6 +150,7 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("检测到音频项目。您想新增到音频播放器吗？"),
         "availability": MessageLookupByLibrary.simpleMessage("可用性"),
         "availablePoints": m1,
+        "averageRating": MessageLookupByLibrary.simpleMessage("平均评分"),
         "back": MessageLookupByLibrary.simpleMessage("返回"),
         "backOrder": MessageLookupByLibrary.simpleMessage("延期交货"),
         "backToShop": MessageLookupByLibrary.simpleMessage("返回商店"),
@@ -195,9 +188,16 @@ class MessageLookup extends MessageLookupByLibrary {
         "byTag": MessageLookupByLibrary.simpleMessage("按标签"),
         "call": MessageLookupByLibrary.simpleMessage("致电"),
         "callTo": MessageLookupByLibrary.simpleMessage("打电话给"),
+        "canNotCreateOrder": MessageLookupByLibrary.simpleMessage("无法创建订单"),
+        "canNotCreateUser": MessageLookupByLibrary.simpleMessage("无法创建用户。"),
+        "canNotGetPayments": MessageLookupByLibrary.simpleMessage("无法获取付款方式"),
+        "canNotGetShipping": MessageLookupByLibrary.simpleMessage("无法获取送货方式"),
+        "canNotGetToken": MessageLookupByLibrary.simpleMessage("无法获取令牌信息。"),
         "canNotLaunch": MessageLookupByLibrary.simpleMessage(
             "无法启动此应用，请确保您在 config.dart 上的设置正确"),
         "canNotLoadThisLink": MessageLookupByLibrary.simpleMessage("无法加载此链接"),
+        "canNotSaveOrder": MessageLookupByLibrary.simpleMessage("无法将订单保存到网站"),
+        "canNotUpdateInfo": MessageLookupByLibrary.simpleMessage("无法更新用户信息。"),
         "cancel": MessageLookupByLibrary.simpleMessage("取消"),
         "cantFindThisOrderId":
             MessageLookupByLibrary.simpleMessage("找不到此订单 ID"),
@@ -293,6 +293,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "date": MessageLookupByLibrary.simpleMessage("日期"),
         "dateASC": MessageLookupByLibrary.simpleMessage("日期升序"),
         "dateBooking": MessageLookupByLibrary.simpleMessage("预订日期"),
+        "dateDESC": MessageLookupByLibrary.simpleMessage("日期降序"),
         "dateEnd": MessageLookupByLibrary.simpleMessage("结束日期"),
         "dateLatest": MessageLookupByLibrary.simpleMessage("日期：最新"),
         "dateOldest": MessageLookupByLibrary.simpleMessage("日期：最老的"),
@@ -340,6 +341,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "edit": MessageLookupByLibrary.simpleMessage("编辑："),
         "editProductInfo": MessageLookupByLibrary.simpleMessage("编辑商品信息"),
         "editWithoutColon": MessageLookupByLibrary.simpleMessage("编辑"),
+        "egypt": MessageLookupByLibrary.simpleMessage("埃及"),
         "email": MessageLookupByLibrary.simpleMessage("电子邮件"),
         "emailDeleteDescription":
             MessageLookupByLibrary.simpleMessage("删除您的帐户将取消您从所有邮件列表中的订阅。"),
@@ -352,6 +354,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "emptyComment": MessageLookupByLibrary.simpleMessage("您的评论不能为空白"),
         "emptySearch":
             MessageLookupByLibrary.simpleMessage("您还没有搜索项目。让我们现在开始 - 我们会帮助您。"),
+        "emptyShippingMsg": MessageLookupByLibrary.simpleMessage(
+            "没有可用的运输选项。请确保您的地址输入正确，如果您需要任何帮助，请与我们联系。"),
         "emptyUsername": MessageLookupByLibrary.simpleMessage("用户名/电子邮件为空白"),
         "emptyWishlistSubtitle":
             MessageLookupByLibrary.simpleMessage("点击要收藏的商品旁边的心形。我们会在这里为您保存它们！"),
@@ -454,6 +458,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "imageNetwork": MessageLookupByLibrary.simpleMessage("影像网络"),
         "inStock": MessageLookupByLibrary.simpleMessage("现货"),
         "incorrectPassword": MessageLookupByLibrary.simpleMessage("密码错误"),
+        "india": MessageLookupByLibrary.simpleMessage("印度"),
         "indonesian": MessageLookupByLibrary.simpleMessage("印度尼西亚"),
         "instantlyClose": MessageLookupByLibrary.simpleMessage("立即关闭"),
         "invalidPhoneNumber": MessageLookupByLibrary.simpleMessage("无效的电话号码"),
@@ -534,6 +539,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "name": MessageLookupByLibrary.simpleMessage("名称"),
         "nearbyPlaces": MessageLookupByLibrary.simpleMessage("附近地点"),
         "needToLoginAgain": MessageLookupByLibrary.simpleMessage("您需要重新登录才能生效"),
+        "netherlands": MessageLookupByLibrary.simpleMessage("荷兰"),
         "newPassword": MessageLookupByLibrary.simpleMessage("新密码"),
         "newVariation": MessageLookupByLibrary.simpleMessage("新变化"),
         "next": MessageLookupByLibrary.simpleMessage("下一个"),
@@ -684,7 +690,9 @@ class MessageLookup extends MessageLookupByLibrary {
         "pointMsgSuccess": MessageLookupByLibrary.simpleMessage("折扣积分申请成功"),
         "pointRewardMessage":
             MessageLookupByLibrary.simpleMessage("将您的积分应用到购物车的折扣规则"),
+        "polish": MessageLookupByLibrary.simpleMessage("波兰语"),
         "popular": MessageLookupByLibrary.simpleMessage("受欢迎"),
+        "popularity": MessageLookupByLibrary.simpleMessage("人气度"),
         "posAddressToolTip":
             MessageLookupByLibrary.simpleMessage("此地址将保存到您的本地设备。它不是用户地址。"),
         "postContent": MessageLookupByLibrary.simpleMessage("内容"),
@@ -704,6 +712,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "printerNotFound": MessageLookupByLibrary.simpleMessage("找不到打印机"),
         "printerSelection": MessageLookupByLibrary.simpleMessage("选择打印机"),
         "printing": MessageLookupByLibrary.simpleMessage("打印中..."),
+        "privacyAndTerm": MessageLookupByLibrary.simpleMessage("隐私和条款"),
         "privacyPolicy": MessageLookupByLibrary.simpleMessage("隐私政策"),
         "privacyTerms": MessageLookupByLibrary.simpleMessage("隐私权与条款"),
         "private": MessageLookupByLibrary.simpleMessage("私人"),
@@ -721,6 +730,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "products": MessageLookupByLibrary.simpleMessage("商品"),
         "publish": MessageLookupByLibrary.simpleMessage("发布"),
         "pullToLoadMore": MessageLookupByLibrary.simpleMessage("拉动以加载更多"),
+        "qty": MessageLookupByLibrary.simpleMessage("QTY"),
         "qtyTotal": m19,
         "rate": MessageLookupByLibrary.simpleMessage("评分"),
         "rateTheApp": MessageLookupByLibrary.simpleMessage("给应用评分"),
@@ -879,6 +889,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "support": MessageLookupByLibrary.simpleMessage("支持"),
         "swahili": MessageLookupByLibrary.simpleMessage("斯瓦希里语"),
         "swedish": MessageLookupByLibrary.simpleMessage("瑞典"),
+        "tagNotExist": MessageLookupByLibrary.simpleMessage("此标签不存在"),
         "tags": MessageLookupByLibrary.simpleMessage("标签"),
         "takePicture": MessageLookupByLibrary.simpleMessage("拍照片"),
         "tamil": MessageLookupByLibrary.simpleMessage("泰米尔语"),
@@ -896,6 +907,10 @@ class MessageLookup extends MessageLookupByLibrary {
         "tickets": MessageLookupByLibrary.simpleMessage("门票"),
         "time": MessageLookupByLibrary.simpleMessage("时间"),
         "title": MessageLookupByLibrary.simpleMessage("标题"),
+        "titleAToZ": MessageLookupByLibrary.simpleMessage("标题：A到Z"),
+        "titleZToA": MessageLookupByLibrary.simpleMessage("标题：Z到A"),
+        "tooManyFaildedLogin":
+            MessageLookupByLibrary.simpleMessage("登录尝试失败次数过多。请稍后再试。"),
         "topUp": MessageLookupByLibrary.simpleMessage("充值"),
         "topUpProductNotFound": MessageLookupByLibrary.simpleMessage("未找到充值商品"),
         "total": MessageLookupByLibrary.simpleMessage("总计"),
@@ -935,6 +950,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "useNow": MessageLookupByLibrary.simpleMessage("立即使用"),
         "useThisImage": MessageLookupByLibrary.simpleMessage("使用此图像"),
         "userExists": MessageLookupByLibrary.simpleMessage("此用户名/电子邮件已存在。"),
+        "userNameInCorrect": MessageLookupByLibrary.simpleMessage("用户名或密码不正确。"),
         "username": MessageLookupByLibrary.simpleMessage("用户名"),
         "usernameAndPasswordRequired":
             MessageLookupByLibrary.simpleMessage("需要用户名和密码"),
@@ -950,6 +966,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "viaWallet": MessageLookupByLibrary.simpleMessage("通过钱包"),
         "video": MessageLookupByLibrary.simpleMessage("影片"),
         "vietnamese": MessageLookupByLibrary.simpleMessage("越南"),
+        "viewOnGoogleMaps": MessageLookupByLibrary.simpleMessage("在谷歌地图上查看"),
         "viewRecentTransactions":
             MessageLookupByLibrary.simpleMessage("查看最近的交易"),
         "visible": MessageLookupByLibrary.simpleMessage("可见"),
diff --git a/lib/generated/intl/messages_zh_TW.dart b/lib/generated/intl/messages_zh_TW.dart
index 8060c00..9a94072 100644
--- a/lib/generated/intl/messages_zh_TW.dart
+++ b/lib/generated/intl/messages_zh_TW.dart
@@ -89,21 +89,13 @@ class MessageLookup extends MessageLookupByLibrary {
 
   final messages = _notInlinedMessages(_notInlinedMessages);
   static Map<String, Function> _notInlinedMessages(_) => <String, Function>{
-        "DateDESC": MessageLookupByLibrary.simpleMessage("日期降冪"),
-        "Dutch": MessageLookupByLibrary.simpleMessage("荷蘭"),
-        "Egypt": MessageLookupByLibrary.simpleMessage("埃及"),
-        "India": MessageLookupByLibrary.simpleMessage("印度"),
-        "Korean": MessageLookupByLibrary.simpleMessage("朝鮮"),
-        "Netherlands": MessageLookupByLibrary.simpleMessage("荷蘭"),
-        "Polish": MessageLookupByLibrary.simpleMessage("波蘭語"),
-        "PrivacyAndTerm": MessageLookupByLibrary.simpleMessage("隱私和條款"),
-        "Qty": MessageLookupByLibrary.simpleMessage("QTY"),
-        "Tamil": MessageLookupByLibrary.simpleMessage("泰米爾語"),
         "UserNameInCorrect": MessageLookupByLibrary.simpleMessage("用戶名或密碼不正確"),
         "aboutUs": MessageLookupByLibrary.simpleMessage("關於我們"),
         "account": MessageLookupByLibrary.simpleMessage("帳戶"),
         "accountDeleteDescription": MessageLookupByLibrary.simpleMessage(
             "刪除您的帳戶會從我們的數據庫中刪除個人信息。您的電子郵件將被永久保留，並且不能重複使用同一電子郵件註冊新帳戶。"),
+        "accountIsPendingApproval":
+            MessageLookupByLibrary.simpleMessage("該帳戶正在等待批准。"),
         "accountSetup": MessageLookupByLibrary.simpleMessage("帳戶設置"),
         "active": MessageLookupByLibrary.simpleMessage("啟用"),
         "addAName": MessageLookupByLibrary.simpleMessage("新增名稱"),
@@ -158,6 +150,7 @@ class MessageLookup extends MessageLookupByLibrary {
             MessageLookupByLibrary.simpleMessage("檢測到音頻項目。您想新增到音頻播放機嗎？"),
         "availability": MessageLookupByLibrary.simpleMessage("可用性"),
         "availablePoints": m1,
+        "averageRating": MessageLookupByLibrary.simpleMessage("平均評分"),
         "back": MessageLookupByLibrary.simpleMessage("返回"),
         "backOrder": MessageLookupByLibrary.simpleMessage("延期交貨"),
         "backToShop": MessageLookupByLibrary.simpleMessage("返回商店"),
@@ -195,9 +188,16 @@ class MessageLookup extends MessageLookupByLibrary {
         "byTag": MessageLookupByLibrary.simpleMessage("按標籤"),
         "call": MessageLookupByLibrary.simpleMessage("致電"),
         "callTo": MessageLookupByLibrary.simpleMessage("打電話給"),
+        "canNotCreateOrder": MessageLookupByLibrary.simpleMessage("無法創建訂單"),
+        "canNotCreateUser": MessageLookupByLibrary.simpleMessage("無法創建用戶。"),
+        "canNotGetPayments": MessageLookupByLibrary.simpleMessage("無法獲取付款方式"),
+        "canNotGetShipping": MessageLookupByLibrary.simpleMessage("無法獲取送貨方式"),
+        "canNotGetToken": MessageLookupByLibrary.simpleMessage("無法獲取令牌信息。"),
         "canNotLaunch": MessageLookupByLibrary.simpleMessage(
             "無法啟動此應用，請確保您在 config.dart 上的設置正確"),
         "canNotLoadThisLink": MessageLookupByLibrary.simpleMessage("無法加載此鏈接"),
+        "canNotSaveOrder": MessageLookupByLibrary.simpleMessage("無法將訂單保存到網站"),
+        "canNotUpdateInfo": MessageLookupByLibrary.simpleMessage("無法更新用戶信息。"),
         "cancel": MessageLookupByLibrary.simpleMessage("取消"),
         "cantFindThisOrderId":
             MessageLookupByLibrary.simpleMessage("找不到此訂單 ID"),
@@ -293,6 +293,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "date": MessageLookupByLibrary.simpleMessage("日期"),
         "dateASC": MessageLookupByLibrary.simpleMessage("日期昇冪"),
         "dateBooking": MessageLookupByLibrary.simpleMessage("預訂日期"),
+        "dateDESC": MessageLookupByLibrary.simpleMessage("日期降冪"),
         "dateEnd": MessageLookupByLibrary.simpleMessage("結束日期"),
         "dateLatest": MessageLookupByLibrary.simpleMessage("日期：最新"),
         "dateOldest": MessageLookupByLibrary.simpleMessage("日期：最老的"),
@@ -340,6 +341,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "edit": MessageLookupByLibrary.simpleMessage("編輯："),
         "editProductInfo": MessageLookupByLibrary.simpleMessage("編輯商品資訊"),
         "editWithoutColon": MessageLookupByLibrary.simpleMessage("編輯"),
+        "egypt": MessageLookupByLibrary.simpleMessage("埃及"),
         "email": MessageLookupByLibrary.simpleMessage("電子郵件"),
         "emailDeleteDescription":
             MessageLookupByLibrary.simpleMessage("刪除您的帳戶將取消您從所有郵件列表中的訂閱。"),
@@ -352,6 +354,8 @@ class MessageLookup extends MessageLookupByLibrary {
         "emptyComment": MessageLookupByLibrary.simpleMessage("您的評論不能為空白"),
         "emptySearch":
             MessageLookupByLibrary.simpleMessage("您還沒有搜索項目。讓我們現在開始 - 我們會幫助您。"),
+        "emptyShippingMsg": MessageLookupByLibrary.simpleMessage(
+            "沒有可用的運輸選項。請確保您的地址輸入正確，如果您需要任何幫助，請與我們聯繫。"),
         "emptyUsername": MessageLookupByLibrary.simpleMessage("用戶名/電子郵件為空白"),
         "emptyWishlistSubtitle":
             MessageLookupByLibrary.simpleMessage("點擊要收藏的商品旁邊的心形。我們會在這裡為您保存它們！"),
@@ -454,6 +458,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "imageNetwork": MessageLookupByLibrary.simpleMessage("影像網絡"),
         "inStock": MessageLookupByLibrary.simpleMessage("現貨"),
         "incorrectPassword": MessageLookupByLibrary.simpleMessage("密碼錯誤"),
+        "india": MessageLookupByLibrary.simpleMessage("印度"),
         "indonesian": MessageLookupByLibrary.simpleMessage("印度尼西亞"),
         "instantlyClose": MessageLookupByLibrary.simpleMessage("立即關閉"),
         "invalidPhoneNumber": MessageLookupByLibrary.simpleMessage("無效的電話號碼"),
@@ -534,6 +539,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "name": MessageLookupByLibrary.simpleMessage("名稱"),
         "nearbyPlaces": MessageLookupByLibrary.simpleMessage("附近地點"),
         "needToLoginAgain": MessageLookupByLibrary.simpleMessage("您需要重新登錄才能生效"),
+        "netherlands": MessageLookupByLibrary.simpleMessage("荷蘭"),
         "newPassword": MessageLookupByLibrary.simpleMessage("新密碼"),
         "newVariation": MessageLookupByLibrary.simpleMessage("新變化"),
         "next": MessageLookupByLibrary.simpleMessage("下一個"),
@@ -684,7 +690,9 @@ class MessageLookup extends MessageLookupByLibrary {
         "pointMsgSuccess": MessageLookupByLibrary.simpleMessage("折扣積分申請成功"),
         "pointRewardMessage":
             MessageLookupByLibrary.simpleMessage("將您的積分應用到購物車的折扣規則"),
+        "polish": MessageLookupByLibrary.simpleMessage("波蘭語"),
         "popular": MessageLookupByLibrary.simpleMessage("受歡迎"),
+        "popularity": MessageLookupByLibrary.simpleMessage("人氣"),
         "posAddressToolTip":
             MessageLookupByLibrary.simpleMessage("此位址將保存到您的本地設備。它不是用戶地址。"),
         "postContent": MessageLookupByLibrary.simpleMessage("內容"),
@@ -704,6 +712,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "printerNotFound": MessageLookupByLibrary.simpleMessage("找不到列印機"),
         "printerSelection": MessageLookupByLibrary.simpleMessage("選擇列印機"),
         "printing": MessageLookupByLibrary.simpleMessage("列印中..."),
+        "privacyAndTerm": MessageLookupByLibrary.simpleMessage("隱私和條款"),
         "privacyPolicy": MessageLookupByLibrary.simpleMessage("隱私政策"),
         "privacyTerms": MessageLookupByLibrary.simpleMessage("隱私權與條款"),
         "private": MessageLookupByLibrary.simpleMessage("私人"),
@@ -721,6 +730,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "products": MessageLookupByLibrary.simpleMessage("商品"),
         "publish": MessageLookupByLibrary.simpleMessage("發佈"),
         "pullToLoadMore": MessageLookupByLibrary.simpleMessage("拉動以加載更多"),
+        "qty": MessageLookupByLibrary.simpleMessage("QTY"),
         "qtyTotal": m19,
         "rate": MessageLookupByLibrary.simpleMessage("評分"),
         "rateTheApp": MessageLookupByLibrary.simpleMessage("給應用評分"),
@@ -879,6 +889,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "support": MessageLookupByLibrary.simpleMessage("支持"),
         "swahili": MessageLookupByLibrary.simpleMessage("斯瓦希裡語"),
         "swedish": MessageLookupByLibrary.simpleMessage("瑞典"),
+        "tagNotExist": MessageLookupByLibrary.simpleMessage("此標籤不存在"),
         "tags": MessageLookupByLibrary.simpleMessage("標籤"),
         "takePicture": MessageLookupByLibrary.simpleMessage("拍照片"),
         "tamil": MessageLookupByLibrary.simpleMessage("泰米爾語"),
@@ -896,6 +907,10 @@ class MessageLookup extends MessageLookupByLibrary {
         "tickets": MessageLookupByLibrary.simpleMessage("門票"),
         "time": MessageLookupByLibrary.simpleMessage("時間"),
         "title": MessageLookupByLibrary.simpleMessage("標題"),
+        "titleAToZ": MessageLookupByLibrary.simpleMessage("標題：A到Z"),
+        "titleZToA": MessageLookupByLibrary.simpleMessage("標題：Z到A"),
+        "tooManyFaildedLogin":
+            MessageLookupByLibrary.simpleMessage("登錄嘗試失敗次數過多。請稍後再試。"),
         "topUp": MessageLookupByLibrary.simpleMessage("充值"),
         "topUpProductNotFound": MessageLookupByLibrary.simpleMessage("未找到充值商品"),
         "total": MessageLookupByLibrary.simpleMessage("總計"),
@@ -935,6 +950,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "useNow": MessageLookupByLibrary.simpleMessage("立即使用"),
         "useThisImage": MessageLookupByLibrary.simpleMessage("使用此圖像"),
         "userExists": MessageLookupByLibrary.simpleMessage("此用戶名/電子郵件已存在。"),
+        "userNameInCorrect": MessageLookupByLibrary.simpleMessage("用戶名或密碼不正確。"),
         "username": MessageLookupByLibrary.simpleMessage("用戶名"),
         "usernameAndPasswordRequired":
             MessageLookupByLibrary.simpleMessage("需要用戶名和密碼"),
@@ -950,6 +966,7 @@ class MessageLookup extends MessageLookupByLibrary {
         "viaWallet": MessageLookupByLibrary.simpleMessage("通過錢包"),
         "video": MessageLookupByLibrary.simpleMessage("影片"),
         "vietnamese": MessageLookupByLibrary.simpleMessage("越南"),
+        "viewOnGoogleMaps": MessageLookupByLibrary.simpleMessage("在谷歌地圖上查看"),
         "viewRecentTransactions":
             MessageLookupByLibrary.simpleMessage("查看最近的交易"),
         "visible": MessageLookupByLibrary.simpleMessage("可見"),
diff --git a/lib/generated/l10n.dart b/lib/generated/l10n.dart
index c076e01..d5cb21d 100644
--- a/lib/generated/l10n.dart
+++ b/lib/generated/l10n.dart
@@ -1831,10 +1831,10 @@ class S {
   }
 
   /// `Privacy and Term`
-  String get PrivacyAndTerm {
+  String get privacyAndTerm {
     return Intl.message(
       'Privacy and Term',
-      name: 'PrivacyAndTerm',
+      name: 'privacyAndTerm',
       desc: '',
       args: [],
     );
@@ -3590,41 +3590,21 @@ class S {
     );
   }
 
-  /// `Dutch`
-  String get Netherlands {
+  /// `dutch`
+  String get netherlands {
     return Intl.message(
-      'Dutch',
-      name: 'Netherlands',
-      desc: '',
-      args: [],
-    );
-  }
-
-  /// `Korean`
-  String get Korean {
-    return Intl.message(
-      'Korean',
-      name: 'Korean',
+      'dutch',
+      name: 'netherlands',
       desc: '',
       args: [],
     );
   }
 
   /// `Hindi`
-  String get India {
+  String get india {
     return Intl.message(
       'Hindi',
-      name: 'India',
-      desc: '',
-      args: [],
-    );
-  }
-
-  /// `Dutch`
-  String get Dutch {
-    return Intl.message(
-      'Dutch',
-      name: 'Dutch',
+      name: 'india',
       desc: '',
       args: [],
     );
@@ -3731,10 +3711,10 @@ class S {
   }
 
   /// `Egypt`
-  String get Egypt {
+  String get egypt {
     return Intl.message(
       'Egypt',
-      name: 'Egypt',
+      name: 'egypt',
       desc: '',
       args: [],
     );
@@ -3750,11 +3730,11 @@ class S {
     );
   }
 
-  /// `Qty`
-  String get Qty {
+  /// `qty`
+  String get qty {
     return Intl.message(
-      'Qty',
-      name: 'Qty',
+      'qty',
+      name: 'qty',
       desc: '',
       args: [],
     );
@@ -4661,10 +4641,10 @@ class S {
   }
 
   /// `Polish`
-  String get Polish {
+  String get polish {
     return Intl.message(
       'Polish',
-      name: 'Polish',
+      name: 'polish',
       desc: '',
       args: [],
     );
@@ -5700,20 +5680,20 @@ class S {
     );
   }
 
-  /// `Korean`
+  /// `korean`
   String get korean {
     return Intl.message(
-      'Korean',
+      'korean',
       name: 'korean',
       desc: '',
       args: [],
     );
   }
 
-  /// `Dutch`
+  /// `dutch`
   String get dutch {
     return Intl.message(
-      'Dutch',
+      'dutch',
       name: 'dutch',
       desc: '',
       args: [],
@@ -5751,10 +5731,10 @@ class S {
   }
 
   /// `Date descending`
-  String get DateDESC {
+  String get dateDESC {
     return Intl.message(
       'Date descending',
-      name: 'DateDESC',
+      name: 'dateDESC',
       desc: '',
       args: [],
     );
@@ -6200,16 +6180,6 @@ class S {
     );
   }
 
-  /// `Tamil`
-  String get Tamil {
-    return Intl.message(
-      'Tamil',
-      name: 'Tamil',
-      desc: '',
-      args: [],
-    );
-  }
-
   /// `Customer note`
   String get customerNote {
     return Intl.message(
@@ -8299,6 +8269,196 @@ class S {
       args: [],
     );
   }
+
+  /// `There are no shipping options available. Please ensure that your address has been entered correctly, or contact us if you need any help.`
+  String get emptyShippingMsg {
+    return Intl.message(
+      'There are no shipping options available. Please ensure that your address has been entered correctly, or contact us if you need any help.',
+      name: 'emptyShippingMsg',
+      desc: '',
+      args: [],
+    );
+  }
+
+  /// `Can not update user info.`
+  String get canNotUpdateInfo {
+    return Intl.message(
+      'Can not update user info.',
+      name: 'canNotUpdateInfo',
+      desc: '',
+      args: [],
+    );
+  }
+
+  /// `Can not create the user.`
+  String get canNotCreateUser {
+    return Intl.message(
+      'Can not create the user.',
+      name: 'canNotCreateUser',
+      desc: '',
+      args: [],
+    );
+  }
+
+  /// `The account is pending approval.`
+  String get accountIsPendingApproval {
+    return Intl.message(
+      'The account is pending approval.',
+      name: 'accountIsPendingApproval',
+      desc: '',
+      args: [],
+    );
+  }
+
+  /// `The username or password is incorrect.`
+  String get userNameInCorrect {
+    return Intl.message(
+      'The username or password is incorrect.',
+      name: 'userNameInCorrect',
+      desc: '',
+      args: [],
+    );
+  }
+
+  /// `Can't save the order to website`
+  String get canNotSaveOrder {
+    return Intl.message(
+      'Can\'t save the order to website',
+      name: 'canNotSaveOrder',
+      desc: '',
+      args: [],
+    );
+  }
+
+  /// `This tag does not exist`
+  String get tagNotExist {
+    return Intl.message(
+      'This tag does not exist',
+      name: 'tagNotExist',
+      desc: '',
+      args: [],
+    );
+  }
+
+  /// `Can not get token Info.`
+  String get canNotGetToken {
+    return Intl.message(
+      'Can not get token Info.',
+      name: 'canNotGetToken',
+      desc: '',
+      args: [],
+    );
+  }
+
+  /// `Can not get shipping methods`
+  String get canNotGetShipping {
+    return Intl.message(
+      'Can not get shipping methods',
+      name: 'canNotGetShipping',
+      desc: '',
+      args: [],
+    );
+  }
+
+  /// `Can not get payment methods`
+  String get canNotGetPayments {
+    return Intl.message(
+      'Can not get payment methods',
+      name: 'canNotGetPayments',
+      desc: '',
+      args: [],
+    );
+  }
+
+  /// `Can not create order`
+  String get canNotCreateOrder {
+    return Intl.message(
+      'Can not create order',
+      name: 'canNotCreateOrder',
+      desc: '',
+      args: [],
+    );
+  }
+
+  /// `Title: A to Z`
+  String get titleAToZ {
+    return Intl.message(
+      'Title: A to Z',
+      name: 'titleAToZ',
+      desc: '',
+      args: [],
+    );
+  }
+
+  /// `Title: Z to A`
+  String get titleZToA {
+    return Intl.message(
+      'Title: Z to A',
+      name: 'titleZToA',
+      desc: '',
+      args: [],
+    );
+  }
+
+  /// `Popularity`
+  String get popularity {
+    return Intl.message(
+      'Popularity',
+      name: 'popularity',
+      desc: '',
+      args: [],
+    );
+  }
+
+  /// `Average Rating`
+  String get averageRating {
+    return Intl.message(
+      'Average Rating',
+      name: 'averageRating',
+      desc: '',
+      args: [],
+    );
+  }
+
+  /// `Too many failed login attempts. Please try again later.`
+  String get tooManyFaildedLogin {
+    return Intl.message(
+      'Too many failed login attempts. Please try again later.',
+      name: 'tooManyFaildedLogin',
+      desc: '',
+      args: [],
+    );
+  }
+
+  /// `View on Google Maps`
+  String get viewOnGoogleMaps {
+    return Intl.message(
+      'View on Google Maps',
+      name: 'viewOnGoogleMaps',
+      desc: '',
+      args: [],
+    );
+  }
+
+  /// `The SMS code has expired. Please re-send the verification code to try again.`
+  String get smsCodeExpired {
+    return Intl.message(
+      'The SMS code has expired. Please re-send the verification code to try again.',
+      name: 'smsCodeExpired',
+      desc: '',
+      args: [],
+    );
+  }
+
+  /// `You need to login to checkout`
+  String get youNeedToLoginCheckout {
+    return Intl.message(
+      'You need to login to checkout',
+      name: 'youNeedToLoginCheckout',
+      desc: '',
+      args: [],
+    );
+  }
 }
 
 class AppLocalizationDelegate extends LocalizationsDelegate<S> {
@@ -8308,6 +8468,7 @@ class AppLocalizationDelegate extends LocalizationsDelegate<S> {
     return const <Locale>[
       Locale.fromSubtags(languageCode: 'en'),
       Locale.fromSubtags(languageCode: 'ar'),
+      Locale.fromSubtags(languageCode: 'az'),
       Locale.fromSubtags(languageCode: 'bn'),
       Locale.fromSubtags(languageCode: 'bs'),
       Locale.fromSubtags(languageCode: 'cs'),
diff --git a/lib/l10n/intl_ar.arb b/lib/l10n/intl_ar.arb
index f9a9a03..c96a94d 100644
--- a/lib/l10n/intl_ar.arb
+++ b/lib/l10n/intl_ar.arb
@@ -193,7 +193,7 @@
 	"japanese": "اليابانية",
 	"languageSuccess": "تم تحديث اللغة بنجاح",
 	"agreeWithPrivacy": "شروط وأحكام الخصوصية",
-	"PrivacyAndTerm": "شروط وأحكام الخصوصية",
+	"privacyAndTerm": "شروط وأحكام الخصوصية",
 	"iAgree": "أنا موافق على ",
 	"currentPassword": "كلمة المرور الحالية",
 	"newPassword": "كلمة المرور الجديدة",
@@ -350,11 +350,11 @@
 	"tickets": "تذاكر",
 	"waitingForConfirmation": "في انتظار تأكيد الحجز",
 	"yourBookingDetail": "تفاصيل الحجز الخاص بك",
-	"Egypt": "مصر",
-	"India": "الهند",
-	"Korean": "الكورية",
-	"Netherlands": "هولندا",
-	"Dutch": "الهولندية",
+	"egypt": "مصر",
+	"india": "الهند",
+	"korean": "الكورية",
+	"netherlands": "هولندا",
+	"dutch": "الهولندية",
 	"continues": "متابعة",
 	"refunds": "المبالغ المستردة",
 	"UserNameInCorrect": " خطأ في اسم المستخدم أو كلمة المرور",
@@ -366,7 +366,7 @@
 	"saveForLater": "حفظ لوقت لاحق",
 	"useNow": "استخدمه الآن",
 	"validUntilDate": "صالح حتى تاريخ: {date}",
-	"Qty": "الكمية",
+	"qty": "الكمية",
 	"createdOn": "تم إنشاؤها في:",
 	"itemTotal": "إجمالي المنتجات",
 	"orderId": "رقم التعريف الخاص بالطلبية:",
@@ -436,7 +436,7 @@
 	"uploadFile": "رفع ملف",
 	"uploading": "جاري التحميل",
 	"serbian": "الصربية",
-	"Polish": "البولندية",
+	"polish": "البولندية",
 	"persian": "الفارسية",
 	"kurdish": "الكردية",
 	"active": "نشطة",
@@ -533,7 +533,7 @@
 	"shipped": "تم شحن الطلبية",
 	"storeInformation": "معلومات المتجر",
 	"updatePassword": "تحديث كلمة المرور",
-	"DateDESC": "التاريخ تنازليا",
+	"dateDESC": "التاريخ تنازليا",
 	"addANewPost": "أضف منشور جديد",
 	"addNewBlog": "أضف مدونة جديدة",
 	"addNewPost": "إنشاء منشور جديد",
@@ -543,12 +543,10 @@
 	"createNewPostSuccessfully": "تم حفظ المنشور الخاص بك بنجاح كمسودة. بإمكانك إلقاء نظرة على موقع المسؤول الخاص بك",
 	"createPost": "إنشاء منشور",
 	"dateASC": "التاريخ تصاعدياً",
-	"dutch": "الهولندية",
 	"emptyComment": "لا يمكنك إضافة تعليقاً فارغاً",
 	"emptySearch": "لم تقم بالبحث عن أي عناصر حتى الآن. لتبدأ الآن - سنساعدك",
 	"hindi": "الهندية",
 	"imageFeature": "خاصية الصورة",
-	"korean": "الكورية",
 	"loginToComment": "الرجاء تسجيل الدخول للتعليق",
 	"momentAgo": "منذ لحظات",
 	"monthsAgo": " منذ {month} شهر/أشهر",
@@ -612,7 +610,6 @@
 	"greaterDistance": ">{total} كيلومتر",
 	"addToCartMaximum": "تم تجاوز الكمية القصوى لسلة التسوق",
 	"playAll": "تشغيل الكل",
-	"Tamil": "التاميلية",
 	"customerNote": "ملاحظات العملاء",
 	"stop": "إيقاف",
 	"cantPickDateInThePast": "لا يمكنك إدخال التاريخ في الماضي",
@@ -824,5 +821,22 @@
 	"driverAssigned": "سائق معين",
 	"enterYourPhone": "أدخل رقم هاتفك للبدء.",
 	"otpVerification": "التحقق من OTP",
-	"weSentAnOTPTo": "تم إرسال رمز المصادقة إلى"
+	"weSentAnOTPTo": "تم إرسال رمز المصادقة إلى",
+	"accountIsPendingApproval": "الحساب في انتظار الموافقة.",
+	"canNotCreateOrder": "لا يمكن إنشاء النظام",
+	"canNotCreateUser": "لا يمكن إنشاء المستخدم.",
+	"canNotGetPayments": "لا يمكن الحصول على طرق الدفع",
+	"canNotGetShipping": "لا يمكن الحصول على طرق الشحن",
+	"canNotGetToken": "لا يمكن الحصول على معلومات رمزية.",
+	"canNotSaveOrder": "لا يمكن حفظ الطلب في الموقع",
+	"canNotUpdateInfo": "لا يمكن تحديث معلومات المستخدم.",
+	"emptyShippingMsg": "لا توجد خيارات الشحن المتاحة. يرجى التأكد من إدخال عنوانك بشكل صحيح ، أو الاتصال بنا إذا كنت بحاجة إلى أي مساعدة.",
+	"tagNotExist": "هذه العلامة غير موجودة",
+	"userNameInCorrect": "خطأ في اسم المستخدم أو كلمة السر.",
+	"averageRating": "متوسط تقييم",
+	"popularity": "شعبية",
+	"titleAToZ": "العنوان: من الألف إلى الياء",
+	"titleZToA": "العنوان: من ي إلى أ",
+	"viewOnGoogleMaps": "عرض على خرائط جوجل",
+	"tooManyFaildedLogin": "عدد كبير جدًا من محاولات تسجيل الدخول الفاشلة. الرجاء معاودة المحاولة في وقت لاحق."
 }
diff --git a/lib/l10n/intl_az.arb b/lib/l10n/intl_az.arb
new file mode 100644
index 0000000..73a5c33
--- /dev/null
+++ b/lib/l10n/intl_az.arb
@@ -0,0 +1,842 @@
+{
+	"@@locale": "az",
+	"seeAll": "Hamısını göstər",
+	"featureProducts": "Seçilmişlər",
+	"bagsCollections": "Dişli Alətlər",
+	"womanCollections": "Qadınlar",
+	"manCollections": "Kişilər",
+	"buyNow": "AL",
+	"products": "Məhsullar",
+	"addToCart": "Səbətə Əlavə Et ",
+	"description": "Məlumat",
+	"readReviews": "Rəylər",
+	"additionalInformation": "Əlavə Məlumat",
+	"noReviews": "Rəy mövcud deyil",
+	"productAdded": "Məhsul əlavə edildi",
+	"youMightAlsoLike": "Diqqətinizi Çəkənlər",
+	"selectTheSize": "Ölçünü seçin",
+	"selectTheColor": "Rəngi seçin",
+	"selectTheQuantity": "Miqdarı seçin",
+	"size": "Ölçü",
+	"color": "Rəng",
+	"myCart": "Səbət",
+	"saveToWishList": "Sev",
+	"share": "Paylaş",
+	"cancel": "İmtina",
+	"checkout": "Ödəmə",
+	"clearCart": "Səbəti Təmizlə",
+	"myWishList": "Sevdiklərim",
+	"yourBagIsEmpty": "Səbətiniz boşdur",
+	"startShopping": "AVM-YƏ GERİ DÖNÜN",
+	"noFavoritesYet": "Sevdiyiniz məhsullar siyahınız boşdur.",
+	"searchForItems": "Minlərlə məhsul arasında tap..",
+	"shipping": "Çatdırılma",
+	"review": "Göstər",
+	"payment": "Ödəmə",
+	"firstName": "Ad",
+	"lastName": "Soyad",
+	"city": "Şəhər",
+	"stateProvince": "Bölgə/Səmt/Rayon",
+	"zipCode": "Poçt kodu",
+	"country": "Ölkə",
+	"phoneNumber": "Nömrə",
+	"email": "Email",
+	"streetName": "Ünvan",
+	"shippingMethod": "Çatdırılma Üsulu",
+	"continueToShipping": "Çatdırılma",
+	"continueToReview": "Göstər",
+	"continueToPayment": "Ödə",
+	"goBackToAddress": "Ünvana dön",
+	"goBackToShipping": "Çatdırılmaya dön",
+	"goBackToReview": "Göstərə dön",
+	"address": "Ünvan",
+	"shippingAddress": "Çatdırılma Ünvanı",
+	"orderDetail": "SİFARİŞİNİZ",
+	"subtotal": "Toplam",
+	"total": "Yekun",
+	"paymentMethods": "Ödəmə Üsulu",
+	"chooseYourPaymentMethod": "Ödəmə üsulunuzu seçin",
+	"placeMyOrder": "SİFARİŞİ TAMAMLA",
+	"itsOrdered": "Təşəkkürlər!",
+	"orderNo": "Sifariş №",
+	"showAllMyOrdered": "Sifarişlərimi Göstər",
+	"backToShop": "AVM-YƏ GERİ DÖNÜN",
+	"firstNameIsRequired": "Ad sətrini boş qoymayın",
+	"lastNameIsRequired": "Soyad sətrini boş qoymayın",
+	"streetIsRequired": "Ünvan sətrini boş qoymayın",
+	"cityIsRequired": "Şəhər sətrini boş qoymayın",
+	"stateIsRequired": "Bölgə/Səmt/Rayon sətrini boş qoymayın",
+	"countryIsRequired": "Ölkə sətrini boş qoymayın",
+	"phoneIsRequired": "Telefon sətrini boş qoymayın",
+	"emailIsRequired": "Email sətrini boş qoymayın",
+	"zipCodeIsRequired": "Poçt kodu sətrini boş qoymayın",
+	"noOrders": "Sifariş Yoxdur",
+	"orderDate": "Sifariş tarixi",
+	"status": "Vəziyyət",
+	"paymentMethod": "Ödəmə Üsulu",
+	"orderHistory": "Sifariş Tarixçəsi",
+	"refundRequest": "Qaytarma Tələbi",
+	"recentSearches": "Tarixçə",
+	"recents": "Hazırki",
+	"byPrice": "Qiymətə Görə",
+	"byCategory": "Kateqoriyaya Görə",
+	"noInternetConnection": "İnternet Bağlantınız Kəsildi",
+	"connect": "Qoşul",
+	"settings": "Parametrlər",
+	"generalSetting": "Ümumi Parametrlər",
+	"getNotification": "Bildiriş al",
+	"listMessages": "Gələn Bildirişlər",
+	"language": "Dillər",
+	"darkTheme": "Gecə Modu",
+	"rateTheApp": "Tətbiqə Rəy Ver",
+	"logout": "Çıx",
+	"login": "Daxil ol",
+	"items": "Məhsullar",
+	"cart": "Səbət",
+	"shop": "Mağaza",
+	"search": "Tap",
+	"blog": "Bloq",
+	"apply": "Təsdiqlə",
+	"reset": "Sıfırla",
+	"signInWithEmail": "Email ilə daxil ol ",
+	"dontHaveAccount": "Hesabınız yoxdur?",
+	"signup": "Qeydiyyat",
+	"welcome": "Xoş Gəldiniz",
+	"close": "Bağla",
+	"or": "YAXUD",
+	"pleaseInput": "Lütfən bütün sətrləri doldurun",
+	"searchingAddress": "Ünvanı Tap",
+	"outOfStock": "Bitmişdir",
+	"unavailable": "Mövcud deyil",
+	"category": "Kateqoriya",
+	"noProduct": "Məhsul yoxdur",
+	"weFoundProducts": "{length} məhsul tapıldı",
+	"clear": "Təmizlə",
+	"video": "Video",
+	"recentView": "Son Baxdıqlarınız",
+	"inStock": "Satışda",
+	"trackingNumberIs": "İzləmə ",
+	"availability": "Mövcudluğu",
+	"trackingPage": "İzləmə Səhifəsi",
+	"myPoints": "Xallarım",
+	"youHavePoints": "$point xalınız var",
+	"events": "Tədbirlər",
+	"date": "Tarix",
+	"point": "Xal",
+	"orderNotes": "Sifariş Qeydləri",
+	"ratingFirst": "Şərh yazmazdan əvvəl rəy verin",
+	"commentFirst": "Şərhinizi qeyd edin",
+	"writeComment": "Şərhiniz",
+	"loading": "Yüklənir...",
+	"productRating": "Rəyiniz",
+	"layout": "Düzən",
+	"selectAddress": "Ünvanı Seçin",
+	"saveAddress": "Yadda Saxla",
+	"searchInput": "Axtarışa mətninizi yazın",
+	"totalTax": "Vergi",
+	"invalidSMSCode": "Keçərsiz SMS doğrulama kodu",
+	"sendSMSCode": "Kodu əldə et",
+	"verifySMSCode": "Doğrula",
+	"showGallery": "Qalereyanı Göstər",
+	"discount": "Endirim",
+	"username": "İstifadəçi adı",
+	"password": "Şifrə",
+	"enterYourEmail": "Emailinizi qeyd edin",
+	"enterYourPassword": "Şifrənizi qeyd edin",
+	"iwantToCreateAccount": "Məxfilik Siyasətini oxudum və qəbul edirəm",
+	"loginToYourAccount": "Hesabınıza daxil olun",
+	"createAnAccount": "Hesab Yarat",
+	"couponCode": "Kupon kodu",
+	"remove": "Sil",
+	"couponMsgSuccess": "Təbriklər! Kupon kodu uğurla qəbul edildi",
+	"saveAddressSuccess": "Ünvanınız cihazınıza qeyd olunub",
+	"yourNote": "Qeydiniz",
+	"writeYourNote": "Qeyd əlavə edin",
+	"orderSuccessTitle1": "Təşəkkür edirik. Sifarişiniz qəbul edildi.",
+	"orderSuccessMsg1": "Çatdırılmanın Vəziyyəti xüsusiyyətimizdən istifadə edərək sifarişinizin vəziyyətini yoxlaya bilərsiniz. Sizə sifarişinizin təfərrüatları və gedişatını izləmək üçün içində keçid olan sifarişin təsdiqlənməsi emaili göndərəcəyik.",
+	"orderSuccessTitle2": "Hesabım",
+	"orderSuccessMsg2": "Daha əvvəl müəyyən etdiyiniz email və şifrədən istifadə edərək hesabınıza daxil ola bilərsiniz. Hesab Panelindən son Sifarişlərinizi görə, Çatdırılma və Faktura Ünvanlarınızı redaktə edə və Şifrəniz ilə Hesab Parametrlərini düzəldə, yaxud dəyişə bilərsiniz. Bunlardan əlavə, daha çoxu üçün aşağıdakı başlıqlar köməkçiniz olacaqdır.",
+	"signIn": "Daxil ol",
+	"signUp": "Qeydiyyat",
+	"next": "Növbəti",
+	"done": "Tamam",
+	"currencies": "Valyutalar",
+	"sale": "Endirim {percent}%",
+	"updateUserInfor": "Məlumatları Yenilə",
+	"update": "Yenilə",
+	"aboutUs": "Haqqımızda",
+	"support": "Dəstək",
+	"displayName": "Ad - Soyad",
+	"niceName": "Email",
+	"english": "English",
+	"vietnamese": "Vietnamese",
+	"arabic": "Arabic",
+	"spanish": "Spanish",
+	"chinese": "Chinese",
+	"japanese": "Japanese",
+	"languageSuccess": "Yeni dil uğurla tətbiq edildi",
+	"agreeWithPrivacy": "Məxfilik Siyasəti",
+	"iAgree": "Oxudum, təsdiq edirəm",
+	"categories": "Kateqoriyalar",
+	"stores": "Mağazalar",
+	"visitStore": "eMağazam",
+	"salePrice": "Endirimli qiymət",
+	"regularPrice": "Qiymət",
+	"imageGallery": "Qalereya",
+	"addingYourImage": "Şəkil əlavəsi",
+	"postProduct": "Tamamla",
+	"createProduct": "Yenisini Yarat",
+	"waitForLoad": "Şəklin yüklənməsini gözləyirik",
+	"waitForPost": "Məhsulun göndərilməsini gözləyirik",
+	"productName": "Məhsulun adı",
+	"productType": "Məhsulun Növü",
+	"conversations": "Söhbət",
+	"myProducts": "Məhsullar",
+	"myProductsEmpty": "Hələ heç bir məhsul yaratmamısınız. Birini yarada bilərsiniz.",
+	"product": "Məhsul",
+	"contact": "Əlaqə",
+	"currentPassword": "Hazırki Şifrə",
+	"newPassword": "Yeni Şifrə",
+	"addToCartSucessfully": "Səbətinizə əlavə edildi",
+	"pullToLoadMore": "Daha çox yükləmək üçün dartın",
+	"loadFail": "Yükləmə uğursuz oldu!",
+	"releaseToLoadMore": "Daha çox yükləmək üçün buraxın",
+	"noData": "Yalnız bu qədər məlumat tapıldı",
+	"all": "Hamısı",
+	"filter": "Süzgəc",
+	"tags": "Etiket",
+	"attributes": "Atribut",
+	"resetPassword": "Şifrə Sıfırlama",
+	"resetYourPassword": "Şifrəni Sıfırla",
+	"yourUsernameEmail": "İstifadəçi adı və ya Email",
+	"getPasswordLink": "Şifrə keçidini əldə et",
+	"checkConfirmLink": "Şifrə keçidi üçün emailinizi yoxlayın",
+	"emptyUsername": "İstifadəçi adı/Email boşdur",
+	"romanian": "Romanian",
+	"turkish": "Türkçe",
+	"italian": "Italian",
+	"indonesian": "Indonesian",
+	"german": "German",
+	"couponInvalid": "Kupon kodunuz yanlışdır",
+	"featured": "Seçilmiş",
+	"onSale": "Endirimdə",
+	"pleaseCheckInternet": "İnternet bağlantınızı yoxlayın!",
+	"canNotLaunch": "Bu proqramı işə salmaq mümkün deyil, config.dart-da parametrlərinizin düzgün olduğundan əmin olun",
+	"message": "Mesaj",
+	"billingAddress": "Ünvan",
+	"no": "Xeyr",
+	"yes": "Bəli",
+	"areYouSure": "Əminsiniz?",
+	"doYouWantToExitApp": "Tətbiqi bağlamaq istəyirsiniz?",
+	"shoppingCartItems": "Səbətdə {totalCartQuantity} məhsul var",
+	"orderStatusOnHold": "Gözləmədə",
+	"orderStatusPendingPayment": "Ödəniş Gözləyir",
+	"orderStatusFailed": "Uğursuz",
+	"orderStatusProcessing": "İşlənir",
+	"orderStatusPending": "Gözləyir",
+	"orderStatusCompleted": "Tamamlandı",
+	"orderStatusCancelled": "İmtina edildi",
+	"orderStatusRefunded": "Qaytarıldı",
+	"pleaseFillCode": "Kodunuzu yazın.",
+	"warning": "Xəbərdarlıq: {message}",
+	"nItems": "{itemCount} məhsul",
+	"dataEmpty": "Məlumat Yoxdur",
+	"yourAddressExistYourLocal": "Ünvan cihazınızda zatən mövcuddur.",
+	"ok": "Tamam",
+	"yourAddressHasBeenSaved": "Ünvan cihazınızda yadda saxlanıldı.",
+	"undo": "Geri",
+	"thisPlatformNotSupportWebview": "Bu platforma web brauzeri dəstəkləmir.",
+	"noBackHistoryItem": "Keçmişdə məlumat olmayıb.",
+	"noForwardHistoryItem": "Gələcək məlumatlar mövcud deyil.",
+	"dateBooking": "Rezervasiya et",
+	"duration": "Müddət",
+	"addedSuccessfully": "Uğurla əlavə edildi.",
+	"notFound": "Tapılmadı",
+	"error": "Xəta: {message}",
+	"goBackHomePage": "Ana Səhifəyə dön",
+	"noBlog": "Məqalə mövcud deyil.",
+	"prev": "Öncəki",
+	"skip": "Atla",
+	"download": "Endir",
+	"downloadApp": "Mobil Tətbiqi Endir",
+	"daysAgo": "{day} gün öncə",
+	"hoursAgo": "{hour} saat öncə",
+	"minutesAgo": "{minute} dəqiqə öncə",
+	"secondsAgo": "{second} saniyə öncə",
+	"rateThisApp": "Tətbiqə Rəy Ver",
+	"UserNameInCorrect": "İstifadəçi adı və ya parol səhvdir",
+	"account": "Hesab",
+	"accountDeleteDescription": "Hesabınızın silinməsi şəxsi məlumatları verilənlər bazamızdan silir.",
+	"accountIsPendingApproval": "Hesab təsdiqlənməyi gözləyir.",
+	"accountSetup": "Hesabın qurulması",
+	"active": "Aktivdir",
+	"addAName": "Ad əlavə edin",
+	"addANewPost": "Yeni Yazı əlavə edin",
+	"addASlug": "Bir şlak əlavə edin",
+	"addAnAttr": "Atribut əlavə edin",
+	"addListing": "Siyahı əlavə edin",
+	"addNew": "Yenisini əlavə edin",
+	"addNewBlog": "Yeni Bloq əlavə edin",
+	"addNewPost": "Yeni Yazı Yaradın",
+	"addProduct": "Məhsul əlavə edin",
+	"addToCartMaximum": "Maksimum miqdar keçildi",
+	"addToOrder": "Sifarişə əlavə edin",
+	"added": "Əlavə edilib",
+	"additionalServices": "Əlavə xidmətlər",
+	"adults": "Böyüklər",
+	"afternoon": "Günorta",
+	"agree": "Razılaşmaq",
+	"albanian": "Alban",
+	"allBrands": "Bütün Brendlər",
+	"allDeliveryOrders": "Bütün sifarişlər",
+	"allOrders": "Son Satışlar",
+	"allProducts": "Bütün məhsullar",
+	"allow": "İcazə verin",
+	"allowCameraAccess": "Kameraya giriş icazəsi verilsin?",
+	"almostSoldOut": "Demək olar ki, satılıb",
+	"amount": "Məbləğ",
+	"anyAttr": "İstənilən {attribute}",
+	"appearance": "Görünüş",
+	"approve": "Təsdiqləyin",
+	"approved": "Təsdiq edildi",
+	"areYouSureDeleteAccount": "Hesabınızı siləcəyinizə əminsiniz?",
+	"assigned": "Təyin edilmişdir",
+	"atLeastThreeCharacters": "Ən azı 3 simvol...",
+	"attributeAlreadyExists": "Atribut artıq mövcuddur",
+	"audioDetected": "Audio element(lər) aşkar edildi. Audio Pleyerə əlavə etmək istəyirsiniz?",
+	"availablePoints": "Əlçatan xallarınız: {point}",
+	"averageRating": "Orta reytinq",
+	"back": "Geri",
+	"backOrder": "Arxa sifarişlə",
+	"backToWallet": "Pulqabı səhifəsinə qayıt",
+	"balance": "Balans",
+	"bannerListType": "Banner Siyahı Növü",
+	"bannerType": "Banner növü",
+	"bannerYoutubeURL": "Banner Youtube URL",
+	"basicInformation": "Əsas məlumat",
+	"bengali": "benqal dili",
+	"bleHasNotBeenEnabled": "Bluetooth aktivləşdirilməyib",
+	"bleState": "Bluetooth Adapteri: {state}",
+	"booked": "Artıq rezervasiya olunub",
+	"booking": "Rezervasyon",
+	"bookingCancelled": "Rezervasiya Ləğv et",
+	"bookingConfirm": "Təsdiq edildi",
+	"bookingError": "Səhv bir şey var. Zəhmət olmasa bir az sonra yenə cəhd edin.",
+	"bookingHistory": "Rezervasyon Tarixçəsi",
+	"bookingNow": "İndi sifariş et",
+	"bookingSuccess": "Uğurla rezervasiya edildi",
+	"bookingSummary": "Rezervasiya xülasəsi",
+	"bookingUnavailable": "Rezervasyon mümkün deyil",
+	"bosnian": "Bosniya",
+	"brand": "Brend",
+	"brazil": "Portuqal",
+	"burmese": "Birma",
+	"bySignup": "Qeydiyyatdan keçməklə siz bizimlə razılaşırsınız",
+	"byTag": "Tag tərəfindən",
+	"call": "Zəng edin",
+	"callTo": "Zəng et",
+	"canNotCreateOrder": "Sifariş yaratmaq mümkün deyil",
+	"canNotCreateUser": "İstifadəçi yaratmaq mümkün deyil.",
+	"canNotGetPayments": "Ödəniş üsullarını əldə etmək mümkün deyil",
+	"canNotGetShipping": "Göndərmə üsullarını əldə etmək mümkün deyil",
+	"canNotGetToken": "Token məlumatını əldə etmək mümkün deyil.",
+	"canNotLoadThisLink": "Bu linki yükləmək mümkün deyil",
+	"canNotSaveOrder": "Sifarişi vebsaytda saxlamaq mümkün deyil",
+	"canNotUpdateInfo": "İstifadəçi məlumatını yeniləmək mümkün deyil.",
+	"cantFindThisOrderId": "Bu sifariş ID-sini tapmaq mümkün deyil",
+	"cantPickDateInThePast": "Keçmiş tarixə icazə verilmir",
+	"cardHolder": "Kart Sahibi",
+	"cardNumber": "Kartı nömrəsi",
+	"cartDiscount": "Səbət endirimi",
+	"cash": "Nağd pul",
+	"change": "Dəyiş",
+	"changePrinter": "Printeri dəyişdirin",
+	"changedCurrencyTo": "Valyuta {currency}olaraq dəyişdirildi",
+	"chat": "Çat",
+	"chatListScreen": "Mesajlar",
+	"chatViaFacebook": "Facebook Messenger vasitəsilə söhbət edin",
+	"chatViaWhatApp": "WhatsApp vasitəsilə söhbət edin",
+	"chatWithStoreOwner": "Mağaza sahibi ilə söhbət edin",
+	"checking": "Yoxlama...",
+	"chineseSimplified": "Çin (Sadələşdirilmiş)",
+	"chineseTraditional": "Çin (Ənənəvi)",
+	"chooseCategory": "Kateqoriya seçin",
+	"chooseFromGallery": "Qalereyadan seçin",
+	"chooseFromServer": "Serverdən seçin",
+	"choosePlan": "Plan seçin",
+	"chooseStaff": "Heyət seçin",
+	"chooseType": "Növü seçin",
+	"closeNow": "İndi bağlıdır",
+	"codExtraFee": "COD Əlavə haqqı",
+	"comment": "Şərh",
+	"commentSuccessfully": "Şərh yazıldı, lütfən, şərhiniz təsdiqlənənə qədər gözləyin",
+	"complete": "Tamam",
+	"confirm": "Təsdiq edin",
+	"confirmAccountDeletion": "Hesabın Silinməsini təsdiqləyin",
+	"confirmClearCartWhenTopUp": "Səbət doldurulduqda təmizlənəcək.",
+	"confirmClearTheCart": "Səbəti təmizləmək istədiyinizə əminsiniz?",
+	"confirmDeleteItem": "Bu elementi silmək istədiyinizə əminsiniz?",
+	"content": "Məzmun",
+	"continues": "Davam edin",
+	"couponHasBeenSavedSuccessfully": "Kupon uğurla yadda saxlanıldı.",
+	"createNewPostSuccessfully": "Postunuz qaralama olaraq uğurla yaradıldı. Zəhmət olmasa admin saytınıza nəzər salın.",
+	"createPost": "Post yaradın",
+	"createVariants": "Bütün variantları yaradın",
+	"createdOn": "Yaradılma tarixi:",
+	"currentlyWeOnlyHave": "Hazırda yalnız bizdə",
+	"customerDetail": "Müştəri təfərrüatı",
+	"customerNote": "Müştəri qeydi",
+	"cvv": "CVV",
+	"czech": "Çex",
+	"danish": "Danimarkalı",
+	"dashboard": "İdarə paneli",
+	"dateASC": "Artan tarix",
+	"dateDESC": "Azalan tarix",
+	"dateEnd": "Bitmə tarixi",
+	"dateLatest": "Tarix: Ən son",
+	"dateOldest": "Tarix: Ən köhnə",
+	"dateStart": "Başlama tarixi",
+	"dateTime": "Tarix vaxt",
+	"dateWiseClose": "Müdrik yaxın tarix",
+	"debit": "Debet",
+	"decline": "Rədd olun",
+	"delete": "Sil",
+	"deleteAccount": "Hesabı silin",
+	"deleteAccountMsg": "Hesabınızı silmək istədiyinizə əminsiniz? Hesabın silinməsinin necə təsir edəcəyini oxuyun.",
+	"deleteAccountSuccess": "Hesab uğurla silindi. Sessiyanızın vaxtı keçib.",
+	"deleteAll": "Hamısını silin",
+	"delivered": "Çatdırılmış",
+	"deliveredTo": "-a çatdırılır",
+	"deliveryBoy": "Çatdırılma Oğlan:",
+	"deliveryDate": "Çatdırılma tarixi",
+	"deliveryDetails": "Çatdırılma təfərrüatları",
+	"deliveryManagement": "Çatdırılma",
+	"deliveryNotificationError": "Məlumat yoxdur.\nBu sifariş silindi.",
+	"didntReceiveCode": "Kodu almadınız?",
+	"direction": "İstiqamət",
+	"disablePurchase": "Alışı deaktiv edin",
+	"distance": "~{total} km",
+	"doNotAnyTransactions": "Hələ heç bir əməliyyatınız yoxdur",
+	"doYouWantToLogout": "Çıxmaq istəyirsiniz?",
+	"draft": "Qaralama",
+	"driverAssigned": "Sürücü təyin edildi",
+	"dutch": "Holland",
+	"earnings": "Qazanclar",
+	"edit": "Redaktə edin:",
+	"editProductInfo": "Məhsul məlumatını redaktə edin",
+	"editWithoutColon": "Redaktə edin",
+	"egypt": "Misir",
+	"emailDeleteDescription": "Hesabınızın silinməsi sizi bütün poçt siyahılarından çıxaracaq.",
+	"emailDoesNotExist": "Daxil etdiyiniz e-poçt hesabı mövcud deyil. Zəhmət olmasa bir daha cəhd edin.",
+	"emailSubscription": "E-poçt Abunəliyi",
+	"emptyCartSubtitle": "Deyəsən çantaya hələ heç bir əşya əlavə etməmisiniz. Onu doldurmaq üçün alış-verişə başlayın.",
+	"emptyComment": "Şərhiniz boş ola bilməz",
+	"emptySearch": "Siz hələ elementləri axtarmamısınız. İndi başlayaq - sizə kömək edəcəyik.",
+	"emptyShippingMsg": "Çatdırılma variantları mövcud deyil. Ünvanınızın düzgün daxil edildiyinə əmin olun və ya hər hansı yardıma ehtiyacınız olarsa, bizimlə əlaqə saxlayın.",
+	"emptyWishlistSubtitle": "Sevimlilər üçün məhsulun yanında istənilən ürəyin üzərinə toxunun. Onları sizin üçün burada saxlayacağıq!",
+	"enableVacationMode": "Tətil rejimini aktivləşdirin",
+	"endDateCantBeAfterFirstDate": "Zəhmət olmasa ilk tarixdən sonra bir tarix seçin",
+	"endsIn": " {timeLeft}tarixində bitir",
+	"enterCaptcha": "Təsdiq etmək üçün {captcha} daxil edin:",
+	"enterSendedCode": "Göndərilən kodu daxil edin",
+	"enterYourEmailOrUsername": "E-poçt və ya istifadəçi adınızı daxil edin",
+	"enterYourFirstName": "Adınızı daxil edin",
+	"enterYourLastName": "Soyadınızı daxil edin",
+	"enterYourMobile": "Zəhmət olmasa mobil nömrənizi daxil edin",
+	"enterYourPhone": "Başlamaq üçün telefon nömrənizi daxil edin.",
+	"enterYourPhoneNumber": "Telefon nömrənizi daxil edin",
+	"errorAmountTransfer": "Daxil edilmiş məbləğ cari pul kisəsi məbləğindən çoxdur. Zəhmət olmasa bir daha cəhd edin!",
+	"errorEmailFormat": "Etibarlı e-poçt ünvanı daxil edin.",
+	"errorPasswordFormat": "Ən azı 8 simvoldan ibarət parol daxil edin",
+	"evening": "Axşam",
+	"expectedDeliveryDate": "Gözlənilən Çatdırılma Tarixi",
+	"expired": "Müddəti bitmişdir",
+	"expiredDate": "İstifadə müddəti bitmiş tarix",
+	"expiredDateHint": "MM/YY",
+	"expiringInTime": " {time}tarixində başa çatır",
+	"external": "Xarici",
+	"extraServices": "Əlavə xidmətlər",
+	"failToAssign": "İstifadəçi təyin etmək alınmadı",
+	"failedToGenerateLink": "Link yaratmaq alınmadı",
+	"failedToLoadImage": "Şəkli yükləmək alınmadı",
+	"favorite": "Sevimli",
+	"features": "Xüsusiyyətləri",
+	"fileIsTooBig": "Fayl çox böyükdür. Zəhmət olmasa daha kiçik fayl seçin!",
+	"fileUploadFailed": "Fayl yükləmə uğursuz oldu!",
+	"files": "Fayllar",
+	"finishSetup": "Quraşdırmanı tamamlayın",
+	"finnish": "Fin",
+	"firstComment": "Bu yazıya ilk şərh yazan siz olun!",
+	"firstRenewal": "İlk Yeniləmə",
+	"fixedCartDiscount": "Sabit Səbətə Endirim",
+	"fixedProductDiscount": "Sabit məhsul endirimi",
+	"forThisProduct": "bu məhsul üçün",
+	"freeOfCharge": "Pulsuz",
+	"french": "Fransız dili",
+	"from": "From",
+	"fullName": "Tam adı",
+	"gallery": "Qalereya",
+	"generatingLink": "Link yaradılır...",
+	"getNotified": "Xəbərdar olun!",
+	"getStarted": "Başlamaq",
+	"goBack": "Qeri gayıt",
+	"greaterDistance": ">{total} km",
+	"greek": "Yunan",
+	"grossSales": "Ümumi satış",
+	"grouped": "Qruplaşdırılmış",
+	"guests": "Qonaqlar",
+	"hasBeenDeleted": "silinmişdir",
+	"hebrew": "İbrani",
+	"hideAbout": "Haqqında gizlət",
+	"hideAddress": "Ünvanı gizlədin",
+	"hideEmail": "E-poçtu gizlədin",
+	"hideMap": "Xəritəni gizlədin",
+	"hidePhone": "Telefonu gizlədin",
+	"hidePolicy": "Siyasəti gizlədin",
+	"hindi": "Hindi",
+	"history": "Tarix",
+	"historyTransaction": "Tarix",
+	"home": "Ev",
+	"hour": "saat",
+	"hungarian": "Macar",
+	"hungary": "Macar",
+	"imIn": "Mən içindəyəm",
+	"imageFeature": "Şəkil Xüsusiyyəti",
+	"imageNetwork": "Şəkil Şəbəkəsi",
+	"incorrectPassword": "Şifrə səhvdir",
+	"india": "Hindi",
+	"instantlyClose": "Dərhal yaxın",
+	"invalidPhoneNumber": "Yanlış Telefon Nömrəsi",
+	"invalidYearOfBirth": "Yanlış Doğum İli",
+	"invoice": "Faktura",
+	"isEverythingSet": "Hər şey hazırdır...?",
+	"item": "ƏMLAK",
+	"itemTotal": "Ümumi maddə:",
+	"kannada": "Kannada",
+	"keep": "Saxla",
+	"khmer": "Khmer",
+	"korean": "Koreyalı",
+	"kurdish": "Kürd",
+	"lao": "Lao",
+	"lastTransactions": "Son əməliyyatlar",
+	"latestProducts": "Ən Son Məhsullar",
+	"lightTheme": "Yüngül Mövzu",
+	"link": "Bağlantı",
+	"listBannerType": "Siyahı Banner Növü",
+	"listBannerVideo": "Banner Video Siyahı",
+	"loadingLink": "Link yüklənir...",
+	"location": "Yer",
+	"loginCanceled": "Giriş ləğv edilir",
+	"loginErrorServiceProvider": "Data sorğusu zamanı tətbiqdə problem var, problemləri həll etmək üçün admin ilə əlaqə saxlayın: {message}",
+	"loginFailed": "Giriş uğursuz oldu!",
+	"loginInvalid": "Bu proqramdan istifadə etməyə icazəniz yoxdur.",
+	"loginSuccess": "Uğurla daxil olun!",
+	"loginToComment": "Şərh yazmaq üçün daxil olun",
+	"loginToContinue": "Davam etmək üçün daxil olun",
+	"malay": "Malay",
+	"manageStock": "Səhmləri idarə edin",
+	"map": "Xəritə",
+	"marathi": "Marathi",
+	"markAsRead": "Oxunmuş kimi qeyd edin",
+	"markAsShipped": "Göndərilən kimi qeyd edin",
+	"markAsUnread": "Oxunmamış kimi qeyd edin",
+	"maximumFileSizeMb": "Maksimum fayl ölçüsü: {size} MB",
+	"maybeLater": "Bəlkə sonra",
+	"messageTo": "Mesaj göndər",
+	"minimumQuantityIs": "Minimum miqdardır",
+	"mobileVerification": "Mobil Doğrulama",
+	"momentAgo": "bir an əvvəl",
+	"monthsAgo": "{month} ay əvvəl",
+	"more": "...daha çox",
+	"moreFromStore": " {store}saytından daha çox",
+	"moreInformation": "Ətraflı Məlumat",
+	"morning": "Şəhər",
+	"mustSelectOneItem": "1 element seçilməlidir",
+	"myWallet": "Mənim portmanatım",
+	"name": "Adı",
+	"nearbyPlaces": "Yaxınlıqdakı Yerlər",
+	"needToLoginAgain": "Yeniləmənin qüvvəyə minməsi üçün yenidən daxil olmalısınız",
+	"netherlands": "Holland",
+	"newVariation": "Yeni variasiya",
+	"noCameraPermissionIsGranted": "Kamera icazəsi verilmir. Lütfən, bunu cihazınızın Parametrlərində verin.",
+	"noFileToDownload": "Yükləmək üçün fayl yoxdur.",
+	"noListingNearby": "Yaxınlıqda siyahı yoxdur!",
+	"noPost": "Təəssüf ki, bu səhifə artıq mövcud deyil!",
+	"noPrinters": "Printer yoxdur",
+	"noResultFound": "Heç bir nəticə tapılmadı",
+	"noSlotAvailable": "Slot yoxdur",
+	"noThanks": "Xeyr, təşəkkürlər",
+	"none": "Heç biri",
+	"note": "Sifariş Qeydi",
+	"noteMessage": "Qeyd",
+	"noteTransfer": "Qeyd (isteğe bağlı)",
+	"notice": "Xəbərdarlıq",
+	"notifications": "Bildirişlər",
+	"notifyLatestOffer": "Ən son təklifləri və məhsulun mövcudluğunu bildirin",
+	"ofThisProduct": "bu məhsulun",
+	"on": "Yandırın",
+	"onVacation": "Tətildə",
+	"online": "Onlayn",
+	"openMap": "Xəritə",
+	"openNow": "İndi açın",
+	"options": "Seçimlər",
+	"optionsTotal": "Cəmi seçimlər: {price}",
+	"orLoginWith": "və ya ilə daxil olun",
+	"orderConfirmation": "Sifarişin təsdiqi",
+	"orderConfirmationMsg": "Sifariş yaratmağa əminsiniz?",
+	"orderId": "Sifariş ID:",
+	"orderIdWithoutColon": "Sifariş ID",
+	"orderNumber": "Sifariş nömrəsi",
+	"orderStatusCanceledReversal": "Ləğv edildi",
+	"orderStatusChargeBack": "Geri doldurun",
+	"orderStatusDenied": "Rədd edildi",
+	"orderStatusExpired": "Müddəti bitmişdir",
+	"orderStatusProcessed": "Emal edilib",
+	"orderStatusReversed": "Ters çevrildi",
+	"orderStatusShipped": "Göndərilib",
+	"orderStatusVoided": "Ləğv edildi",
+	"orderSummary": "Sifariş Xülasə",
+	"orderTotal": "Sifariş Cəmi",
+	"orders": "Sifarişlər",
+	"otpVerification": "OTP Doğrulaması",
+	"pageView": "Səhifə Görünüşü",
+	"paid": "Ödənilmişdir",
+	"paidStatus": "Ödənişli status",
+	"pasteYourImageUrl": "Şəkil url-ni yapışdırın",
+	"payByWallet": "Pul kisəsi ilə ödəyin",
+	"payNow": "İndi ödə",
+	"paymentSuccessful": "Ödəniş uğurlu oldu",
+	"pending": "gözləyən",
+	"persian": "Fars",
+	"phone": "Telefon",
+	"phoneEmpty": "Telefon boşdur",
+	"phoneHintFormat": "Format: +84123456789",
+	"phoneNumberVerification": "Telefon nömrəsinin yoxlanılması",
+	"pickADate": "Tarix və Saat seçin",
+	"playAll": "Hamısını Oyna",
+	"pleaseAddPrice": "Zəhmət olmasa qiymət əlavə edin",
+	"pleaseAgreeTerms": "Şərtlərimizlə razılaşın",
+	"pleaseAllowAccessCameraGallery": "Kamera və qalereyaya girişə icazə verin",
+	"pleaseChooseCategory": "Zəhmət olmasa kateqoriya seçin",
+	"pleaseEnterProductName": "Zəhmət olmasa məhsulun adını daxil edin",
+	"pleaseInputFillAllFields": "Zəhmət olmasa bütün sahələri doldurun",
+	"pleaseSelectADate": "Zəhmət olmasa rezervasiya tarixi seçin",
+	"pleaseSelectALocation": "Lütfən, yer seçin",
+	"pleaseSelectAllAttributes": "Zəhmət olmasa məhsulun hər bir atributu üçün bir seçim seçin",
+	"pleaseSelectAttr": "Hər bir aktiv atribut üçün ən azı 1 seçim seçin",
+	"pleaseSelectImages": "Zəhmət olmasa şəkilləri seçin",
+	"pleaseSelectRequiredOptions": "Zəhmət olmasa tələb olunan variantları seçin!",
+	"pleaseSignInBeforeUploading": "Hər hansı fayl yükləməzdən əvvəl hesabınıza daxil olun.",
+	"pleasefillUpAllCellsProperly": "*Lütfən, bütün xanaları düzgün doldurun",
+	"pointMsgConfigNotFound": "Serverdə endirim nöqtəsi konfiqurasiyası tapılmadı",
+	"pointMsgEnter": "Zəhmət olmasa endirim nöqtəsini daxil edin",
+	"pointMsgMaximumDiscountPoint": "Maksimum endirim nöqtəsi",
+	"pointMsgNotEnough": "Kifayət qədər endirim nöqtəniz yoxdur. Sizin ümumi endirim nöqtənizdir",
+	"pointMsgOverMaximumDiscountPoint": "Maksimum endirim nöqtəsinə çatdınız",
+	"pointMsgOverTotalBill": "Ümumi endirim dəyəri faktura cəmindən çoxdur",
+	"pointMsgRemove": "Endirim nöqtəsi silinir",
+	"pointMsgSuccess": "Endirim nöqtəsi uğurla tətbiq olundu",
+	"pointRewardMessage": "Ballarınızı Səbətə tətbiq etmək üçün Endirim Qaydası var",
+	"polish": "Polyak",
+	"popular": "Məşhur",
+	"popularity": "Populyarlıq",
+	"posAddressToolTip": "Bu ünvan yerli cihazınızda yadda saxlanılacaq. Bu istifadəçi ünvanı DEYİL.",
+	"postContent": "Məzmun",
+	"postFail": "Postunuzu yaratmaq mümkün olmadı",
+	"postImageFeature": "Şəkil Xüsusiyyəti",
+	"postManagement": "Post İdarəetmə",
+	"postSuccessfully": "Postunuz uğurla yaradıldı",
+	"postTitle": "Başlıq",
+	"prepaid": "Əvvəlcədən ödənilmiş",
+	"priceHighToLow": "Qiymət: Yüksəkdən Aşağıya",
+	"priceLowToHigh": "Qiymət: Aşağıdan Yüksəkə",
+	"prices": "Menyular",
+	"printReceipt": "Qəbzi çap edin",
+	"printer": "Printer",
+	"printerNotFound": "Printer tapılmadı",
+	"printerSelection": "Printer seçimi",
+	"printing": "Çap edilir...",
+	"privacyAndTerm": "Məxfilik və Müddət",
+	"privacyPolicy": "Gizlilik Siyasəti",
+	"privacyTerms": "Məxfilik və Şərtlər",
+	"private": "Şəxsi",
+	"productCreateReview": "Məhsulunuz nəzərdən keçirildikdən sonra görünəcək.",
+	"productNeedAtLeastOneVariation": "Məhsul növü dəyişəninə ən azı bir variant lazımdır",
+	"productNeedNameAndPrice": "Sadə məhsul növü ad və normal qiymət tələb edir",
+	"publish": "Dərc et",
+	"qty": "Qty",
+	"qtyTotal": "Miqdar: {total}",
+	"rate": "Dərəcəsi",
+	"rateThisAppDescription": "Bu proqramı bəyənirsinizsə, onu nəzərdən keçirmək üçün bir az vaxtınızı ayırın!\nBu, həqiqətən bizə kömək edir və bir dəqiqədən çox vaxtınızı almamalıdır.",
+	"rating": "Reytinq",
+	"reOrder": "Yenidən sifariş edin",
+	"receivedMoney": "Alınan pul",
+	"receiver": "Qəbuledici",
+	"recommended": "Tövsiyə",
+	"recurringTotals": "Təkrarlanan Cəmilər",
+	"refresh": "təzələmək",
+	"refundOrderFailed": "Sifariş üçün pulun geri qaytarılması sorğusu uğursuz oldu",
+	"refundOrderSuccess": "Sifarişinizin geri qaytarılmasını tələb edin!",
+	"refundRequested": "Pulun qaytarılması tələb olunur",
+	"refunds": "Geri qaytarmalar",
+	"registerAsVendor": "Satıcı istifadəçisi kimi qeydiyyatdan keçin",
+	"registerFailed": "Qeydiyyat uğursuz oldu",
+	"registerSuccess": "Uğurla qeydiyyatdan keçin",
+	"relatedLayoutTitle": "Sevə biləcəyiniz Şeylər",
+	"removeFromWishList": "İstək siyahısından silin",
+	"requestBooking": "Rezervasyon tələb edin",
+	"requestTooMany": "Qısa müddətdə çoxlu kod tələb etmisiniz. Zəhmət olmasa bir az sonra yenə cəhd edin.",
+	"resend": " YENİDƏN GÖNDƏRMƏK",
+	"results": "Nəticələr",
+	"reviewApproval": "Təsdiqi nəzərdən keçirin",
+	"reviewPendingApproval": "Rəyiniz göndərildi və təsdiqini gözləyir!",
+	"reviewSent": "Rəyiniz göndərildi!",
+	"reviews": "Rəylər",
+	"russian": "Rus",
+	"save": "Yadda saxla",
+	"saveForLater": "Sonra üçün saxlamaq",
+	"scannerCannotScan": "Bu elementi skan etmək mümkün deyil",
+	"scannerLoginFirst": "Sifarişi skan etmək üçün əvvəlcə daxil olmalısınız",
+	"scannerOrderAvailable": "Bu sifariş hesabınız üçün əlçatan deyil",
+	"searchByName": "Adla Axtar...",
+	"searchOrderId": "Sifariş ID ilə axtar...",
+	"searchPlace": "Yer axtar",
+	"seeOrder": "Sifarişə baxın",
+	"seeReviews": "Rəylərə baxın",
+	"select": "Seçin",
+	"selectAll": "Hamısını seç",
+	"selectDates": "Tarixləri seçin",
+	"selectFileCancelled": "Ləğv edilən faylı seçin!",
+	"selectImage": "Şəkli seçin",
+	"selectNone": "Heç birini seçin",
+	"selectPrinter": "Printer seçin",
+	"selectThePoint": "Nöqtə seçin",
+	"send": "Göndər",
+	"sendBack": "Geri göndərmək",
+	"serbian": "Serb",
+	"setAnAddressInSettingPage": "Zəhmət olmasa parametrlər səhifəsində ünvan təyin edin",
+	"shipped": "Göndərilib",
+	"shopEmail": "Mağaza e-poçtu",
+	"shopName": "Mağaza adı",
+	"shopOrders": "Mağaza Sifarişləri",
+	"shopPhone": "Mağaza telefonu",
+	"shopSlug": "Mağaza şlak",
+	"shortDescription": "Qısa Təsvir",
+	"showDetails": "Detalları göstərin",
+	"simple": "Sadə",
+	"sku": "sku",
+	"slovak": "Slovak",
+	"sold": "Satıldı: {numberOfUnitsSold}",
+	"soldBy": "tərəfindən satılır",
+	"somethingWrong": "Nəsə xəta baş verdi. Zəhmət olmasa bir az sonra yenə cəhd edin.",
+	"sortBy": "Sırala",
+	"startExploring": "Kəşf etməyə başlayın",
+	"state": "dövlət",
+	"stock": "Səhm",
+	"stockQuantity": "Stok Miqdarı",
+	"stop": "Dayan",
+	"store": "Mağaza",
+	"storeAddress": "Mağaza ünvanı",
+	"storeBanner": "Banner",
+	"storeBrand": "Mağaza Brend",
+	"storeClosed": "Mağaza indi bağlıdır",
+	"storeEmail": "Mağaza e-poçtu",
+	"storeInformation": "Mağaza Məlumatı",
+	"storeListBanner": "Mağaza Siyahısı Banneri",
+	"storeLocation": "Mağaza Yeri",
+	"storeLogo": "Mağaza Loqosu",
+	"storeMobileBanner": "Mağaza Mobil Banner",
+	"storeSettings": "Mağaza Parametrləri",
+	"storeSliderBanner": "Slayd bannerini saxla",
+	"storeStaticBanner": "Statik Banner Saxlayın",
+	"storeVacation": "Mağaza tətili",
+	"street": "Küçə",
+	"street2": "Küçə 2",
+	"streetNameApartment": "Mənzil",
+	"streetNameBlock": "blok",
+	"submit": "təqdim",
+	"submitYourPost": "Postunuzu Göndərin",
+	"swahili": "Suahilicə",
+	"swedish": "İsveçcə",
+	"tagNotExist": "Bu etiket mövcud deyil",
+	"takePicture": "Şəkil çəkmək",
+	"tamil": "Tamil",
+	"tapSelectLocation": "Bu yeri seçmək üçün toxunun",
+	"tax": "Vergi",
+	"thailand": "Tayland",
+	"theFieldIsRequired": " {fieldName} sahəsi tələb olunur",
+	"thisDateIsNotAvailable": "Bu tarix mövcud deyil",
+	"thisFeatureDoesNotSupportTheCurrentLanguage": "Bu funksiya cari dili dəstəkləmir",
+	"thisProductNotSupport": "Bu məhsul dəstəklənmir",
+	"tickets": "Biletlər",
+	"time": "Vaxt",
+	"title": "Başlıq",
+	"titleAToZ": "Başlıq: A-dan Z-yə",
+	"titleZToA": "Başlıq: Z-dən A",
+	"tooManyFaildedLogin": "Həddindən artıq uğursuz giriş cəhdi. Zəhmət olmasa bir az sonra yenə cəhd edin.",
+	"topUp": "Yuxarı",
+	"topUpProductNotFound": "Yükləmə məhsulu tapılmadı",
+	"totalCartValue": "Sifarişin ümumi dəyəri ən azı olmalıdır",
+	"totalProducts": "{total} məhsul",
+	"transactionCancelled": "Əməliyyat ləğv edildi",
+	"transactionDetail": "Əməliyyat təfərrüatı",
+	"transactionFee": "Əməliyyat haqqı",
+	"transactionResult": "Əməliyyat Nəticəsi",
+	"transfer": "Transfer",
+	"transferConfirm": "Transferin təsdiqi",
+	"transferErrorMessage": "Siz bu istifadəçiyə köçürə bilməzsiniz",
+	"transferFailed": "Transfer alınmadı",
+	"transferSuccess": "Transfer uğuru",
+	"turnOnBle": "Bluetooth-u yandırın",
+	"typeYourMessage": "Mesajınızı bura yazın...",
+	"ukrainian": "Ukraynalı",
+	"unpaid": "ÖDƏNİŞSİZ",
+	"updateFailed": "Yeniləmə uğursuz oldu!",
+	"updateInfo": "Məlumatı yeniləyin",
+	"updatePassword": "Şifrəni yeniləyin",
+	"updateStatus": "Statusu yenilə",
+	"updateSuccess": "Uğurla yeniləyin!",
+	"uploadFile": "Fayl yükləyin",
+	"uploadProduct": "Məhsulu yükləyin",
+	"uploading": "Yüklənir",
+	"url": "URL",
+	"useNow": "İndi istifadə edin",
+	"useThisImage": "Bu Şəkildən istifadə edin",
+	"userExists": "Bu istifadəçi adı/e-poçt mövcud deyil.",
+	"userNameInCorrect": "İstifadəçi adı və ya parol səhvdir.",
+	"usernameAndPasswordRequired": "İstifadəçi adı və parol tələb olunur",
+	"vacationMessage": "Tətil Mesajı",
+	"vacationType": "Tətil növü",
+	"validUntilDate": " {date}tarixinə qədər etibarlıdır",
+	"variable": "Dəyişən",
+	"variation": "Variasiya",
+	"vendorAdmin": "Satıcı Admin",
+	"vendorInfo": "Satıcı məlumatı",
+	"verificationCode": "Doğrulama kodu (6 rəqəmli)",
+	"viaWallet": "Cüzdan vasitəsilə",
+	"viewOnGoogleMaps": "Google Xəritədə baxın",
+	"viewRecentTransactions": "Son əməliyyatlara baxın",
+	"visible": "Görünən",
+	"waitingForConfirmation": "Təsdiq gözlənilir",
+	"walletBalance": "Pul kisəsi balansı",
+	"walletName": "Pulqabı adı",
+	"warningCurrencyMessageForWallet": "Hazırda seçilmiş valyuta Pulqabı funksiyası üçün əlçatan deyil, lütfən, onu {default_currency}ilə dəyişin",
+	"weFoundBlogs": "Bloq(lar)ı Tapdıq",
+	"weNeedCameraAccessTo": "QR kodunu və ya ştrix kodunu skan etmək üçün bizə kamera girişi lazımdır.",
+	"weSentAnOTPTo": "Doğrulama kodu göndərildi",
+	"weWillSendYouNotification": "Yeni məhsullar və ya təkliflər mövcud olduqda sizə bildirişlər göndərəcəyik. Siz həmişə parametrlərdə onu söndürə bilərsiniz.",
+	"webView": "Veb Görünüşü",
+	"week": "Həftə {week}",
+	"yearsAgo": "{year} il əvvəl",
+	"youCanOnlyOrderSingleStore": "Yalnız bir mağazadan ala bilərsiniz.",
+	"youCanOnlyPurchase": "Yalnız satın ala bilərsiniz",
+	"youHaveAssignedToOrder": "Siz №{total}sifarişi təyin etdiniz",
+	"youHaveBeenSaveAddressYourLocal": "Yerli faylınızda ünvanı uğurlu saxladınız!",
+	"youNotBeAsked": "Bitirdikdən sonra növbəti dəfə sizdən soruşulmayacaq",
+	"yourApplicationIsUnderReview": "Müraciətiniz nəzərdən keçirilir.",
+	"yourBookingDetail": "Rezervasyon təfərrüatınız",
+	"yourEarningsThisMonth": "Bu ay qazancınız",
+	"yourOrderHasBeenAdded": "Sifarişiniz əlavə edildi",
+	"yourOrders": "Sifarişləriniz",
+	"yourProductIsUnderReview": "Məhsulunuz nəzərdən keçirilir"
+}
diff --git a/lib/l10n/intl_bn.arb b/lib/l10n/intl_bn.arb
index 963fcc2..8900100 100644
--- a/lib/l10n/intl_bn.arb
+++ b/lib/l10n/intl_bn.arb
@@ -1,13 +1,13 @@
 {
 	"@@locale": "bn",
-	"Dutch": "ডাচ",
-	"Egypt": "মিশর",
-	"India": "হিন্দি",
-	"Korean": "কোরিয়ান",
-	"Netherlands": "ডাচ",
-	"Polish": "পোলিশ",
-	"PrivacyAndTerm": "গোপনীয়তা এবং মেয়াদ",
-	"Qty": "পরিমাণ",
+	"dutch": "ডাচ",
+	"egypt": "মিশর",
+	"india": "হিন্দি",
+	"korean": "কোরিয়ান",
+	"netherlands": "ডাচ",
+	"polish": "পোলিশ",
+	"privacyAndTerm": "গোপনীয়তা এবং মেয়াদ",
+	"qty": "পরিমাণ",
 	"UserNameInCorrect": "ব্যবহারকারী নাম বা পাসওয়ার্ড ভুল",
 	"aboutUs": "আমাদের সম্পর্কে",
 	"active": "সক্রিয়",
@@ -533,7 +533,7 @@
 	"shipped": "শিপড",
 	"storeInformation": "দোকানের তথ্য",
 	"updatePassword": "পাসওয়ার্ড আপডেট করুন",
-	"DateDESC": "তারিখ অবতরণ",
+	"dateDESC": "তারিখ অবতরণ",
 	"addANewPost": "একটি নতুন পোস্ট যুক্ত করুন",
 	"addNewBlog": "নতুন ব্লগ যুক্ত করুন",
 	"addNewPost": "নতুন পোস্ট তৈরি করুন",
@@ -543,12 +543,10 @@
 	"createNewPostSuccessfully": "আপনার পোস্টটি সফলভাবে একটি খসড়া হিসাবে তৈরি করা হয়েছে। আপনার প্রশাসক সাইটে একবার দেখুন।",
 	"createPost": "পোস্ট তৈরি করুন",
 	"dateASC": "আরোহণের তারিখ",
-	"dutch": "ডাচ",
 	"emptyComment": "আপনার মন্তব্য খালি থাকতে পারে না",
 	"emptySearch": "আপনি এখনও আইটেম অনুসন্ধান করেন নি। এখনই শুরু করা যাক - আমরা আপনাকে সহায়তা করব।",
 	"hindi": "হিন্দি",
 	"imageFeature": "চিত্র বৈশিষ্ট্য",
-	"korean": "কোরিয়ান",
 	"loginToComment": "মন্তব্য করতে লগ ইন করুন",
 	"momentAgo": "এক মুহূর্ত আগে",
 	"monthsAgo": "{month} মাস আগে",
@@ -612,7 +610,6 @@
 	"greaterDistance": ">{total} কিমি",
 	"addToCartMaximum": "সর্বোচ্চ পরিমাণ অতিক্রম করা হয়েছে",
 	"playAll": "সব খেলা",
-	"Tamil": "তামিল",
 	"customerNote": "গ্রাহক নোট",
 	"stop": "স্টপ",
 	"cantPickDateInThePast": "অতীতে তারিখ অনুমোদিত নয়",
@@ -824,5 +821,22 @@
 	"driverAssigned": "ড্রাইভার নিয়োগ করা হয়েছে",
 	"enterYourPhone": "আপনার ফোন নম্বর লিখুন শুরু করতে।",
 	"otpVerification": "OTP যাচাইকরণ",
-	"weSentAnOTPTo": "একটি প্রমাণীকরণ কোড পাঠানো হয়েছে"
+	"weSentAnOTPTo": "একটি প্রমাণীকরণ কোড পাঠানো হয়েছে",
+	"accountIsPendingApproval": "অ্যাকাউন্ট অনুমোদন মুলতুবি আছে.",
+	"canNotCreateOrder": "অর্ডার তৈরি করতে পারে না",
+	"canNotCreateUser": "ব্যবহারকারী তৈরি করতে পারবেন না।",
+	"canNotGetPayments": "পেমেন্ট পদ্ধতি পেতে পারেন না",
+	"canNotGetShipping": "শিপিং পদ্ধতি পেতে পারেন না",
+	"canNotGetToken": "টোকেন তথ্য পেতে পারেন না.",
+	"canNotSaveOrder": "ওয়েবসাইটে অর্ডার সংরক্ষণ করতে পারবেন না",
+	"canNotUpdateInfo": "ব্যবহারকারীর তথ্য আপডেট করা যাবে না।",
+	"emptyShippingMsg": "কোন শিপিং বিকল্প উপলব্ধ আছে. অনুগ্রহ করে নিশ্চিত করুন যে আপনার ঠিকানা সঠিকভাবে প্রবেশ করানো হয়েছে, অথবা আপনার কোন সাহায্যের প্রয়োজন হলে আমাদের সাথে যোগাযোগ করুন।",
+	"tagNotExist": "এই ট্যাগ বিদ্যমান নেই",
+	"userNameInCorrect": "ব্যবহারকারী নাম বা পাসওয়ার্ড ভুল।",
+	"averageRating": "গড় রেটিং",
+	"popularity": "জনপ্রিয়তা",
+	"titleAToZ": "শিরোনাম: এ থেকে জেড",
+	"titleZToA": "শিরোনাম: জেড থেকে এ",
+	"viewOnGoogleMaps": "গুগল ম্যাপে দেখুন",
+	"tooManyFaildedLogin": "অনেকগুলি ব্যর্থ লগইন প্রচেষ্টা৷ অনুগ্রহ করে একটু পরে আবার চেষ্টা করুন."
 }
diff --git a/lib/l10n/intl_bs.arb b/lib/l10n/intl_bs.arb
index 5f978b3..ceea338 100644
--- a/lib/l10n/intl_bs.arb
+++ b/lib/l10n/intl_bs.arb
@@ -176,7 +176,7 @@
 	"japanese": "Japanski",
 	"languageSuccess": "Jezik je uspješno ažuriran",
 	"agreeWithPrivacy": "privatnost i uslove korišćenja",
-	"PrivacyAndTerm": "Privatnost i uslove korišćenja",
+	"privacyAndTerm": "Privatnost i uslove korišćenja",
 	"iAgree": "Slažem se sa",
 	"categories": "Kategorije",
 	"stores": "Prodavnice",
@@ -351,10 +351,10 @@
 	"thailand": "Thai",
 	"hungarian": "Mađarski",
 	"vendorInfo": "Podaci o dobavljaču",
-	"Netherlands": "Dutch",
-	"Korean": "Korean",
-	"India": "Hindi",
-	"Dutch": "Dutch",
+	"netherlands": "dutch",
+	"korean": "korean",
+	"india": "Hindi",
+	"dutch": "dutch",
 	"useNow": "Koristi sada",
 	"expired": "Isteklo",
 	"validUntilDate": "Validno do {date}",
@@ -365,9 +365,9 @@
 	"saveForLater": "Sačuvaj za kasnije",
 	"refunds": "Povrat novca",
 	"continues": "Nastavi",
-	"Egypt": "Egypt",
+	"egypt": "egypt",
 	"UserNameInCorrect": "Korisničko ime ili lozinka su netačni",
-	"Qty": "Kol.",
+	"qty": "Kol.",
 	"itemTotal": "Proizvoda ukupno: ",
 	"createdOn": "Kreirano: ",
 	"orderId": "Broj narudžbe: ",
@@ -458,7 +458,7 @@
 	"confirmClearTheCart": "Jeste li sigurni da želite očistiti košaricu?",
 	"keep": "Zadrži",
 	"serbian": "Srbski",
-	"Polish": "Poljski",
+	"polish": "Poljski",
 	"persian": "Perzijski",
 	"kurdish": "Kurdish",
 	"pleaseSignInBeforeUploading": "Molimo prijavite se na svoj račun prije postavljanja bilo kojeg fajla.",
@@ -562,12 +562,10 @@
 	"createPost": "Kreiraj objavu",
 	"emptyComment": "Vaš komentar ne može biti prazan",
 	"hindi": "Hindi",
-	"korean": "Korean",
-	"dutch": "Dutch",
 	"relatedLayoutTitle": "Stvari koje biste mogli voljeti",
 	"audioDetected": "Otkrivena je audio stavka. Želite li dodati u Audio Player?",
 	"dateASC": "Datum uzlazno",
-	"DateDESC": "Datum silazno",
+	"dateDESC": "Datum silazno",
 	"seeOrder": "Pogledajte narudžbu",
 	"openMap": "Mapa",
 	"allDeliveryOrders": "Sve narudžbe",
@@ -612,7 +610,6 @@
 	"greaterDistance": ">{total} km",
 	"addToCartMaximum": "Maksimalna količina je prekoračena",
 	"playAll": "Pusti sve",
-	"Tamil": "Tamil",
 	"customerNote": "Napomena kupca",
 	"stop": "Stop",
 	"youCanOnlyOrderSingleStore": "Možete kupiti samo u jednoj prodavnici.",
diff --git a/lib/l10n/intl_cs.arb b/lib/l10n/intl_cs.arb
index 6fd012a..3d33f08 100644
--- a/lib/l10n/intl_cs.arb
+++ b/lib/l10n/intl_cs.arb
@@ -1,15 +1,15 @@
 {
 	"@@locale": "cs",
-	"DateDESC": "Datum sestupně",
-	"Dutch": "holandský",
-	"Egypt": "Egypt",
-	"India": "hindština",
-	"Korean": "korejština",
-	"Netherlands": "holandský",
-	"Polish": "polština",
-	"PrivacyAndTerm": "Ochrana soukromí a podmínky",
-	"Qty": "Ks",
-	"Tamil": "Tamil",
+	"dateDESC": "Datum sestupně",
+	"dutch": "holandský",
+	"egypt": "egypt",
+	"india": "hindština",
+	"korean": "korejština",
+	"netherlands": "holandský",
+	"polish": "polština",
+	"privacyAndTerm": "Ochrana soukromí a podmínky",
+	"qty": "Ks",
+	"tamil": "Tamil",
 	"UserNameInCorrect": "Uživatelské jméno nebo heslo je nesprávné",
 	"aboutUs": "O nás",
 	"accountSetup": "Nastavení účtu",
@@ -167,7 +167,6 @@
 	"download": "Stažení",
 	"draft": "Návrh",
 	"duration": "Doba trvání",
-	"dutch": "holandský",
 	"earnings": "Zisk",
 	"edit": "Upravit:",
 	"editProductInfo": "Upravit informace o produktu",
@@ -260,7 +259,6 @@
 	"iwantToCreateAccount": "Chci si vytvořit účet",
 	"japanese": "japonský",
 	"keep": "Držet",
-	"korean": "korejština",
 	"kurdish": "kurdština",
 	"language": "Jazyky",
 	"languageSuccess": "Jazyk byl úspěšně aktualizován",
@@ -694,7 +692,6 @@
 	"finnish": "Finština",
 	"greek": "řecký",
 	"swedish": "švédský",
-	"tamil": "Tamil",
 	"khmer": "Khmer",
 	"expectedDeliveryDate": "očekávané datum doručení",
 	"pleaseSelectADate": "Vyberte prosím datum rezervace",
@@ -824,5 +821,22 @@
 	"driverAssigned": "Řidič přidělen",
 	"enterYourPhone": "Začněte zadáním svého telefonního čísla.",
 	"otpVerification": "OTP ověření",
-	"weSentAnOTPTo": "Ověřovací kód byl odeslán na adresu"
+	"weSentAnOTPTo": "Ověřovací kód byl odeslán na adresu",
+	"accountIsPendingApproval": "Účet čeká na schválení.",
+	"canNotCreateOrder": "Nelze vytvořit objednávku",
+	"canNotCreateUser": "Nelze vytvořit uživatele.",
+	"canNotGetPayments": "Nelze získat platební metody",
+	"canNotGetShipping": "Nelze získat způsoby dopravy",
+	"canNotGetToken": "Nelze získat informace o tokenu.",
+	"canNotSaveOrder": "Objednávku nelze uložit na web",
+	"canNotUpdateInfo": "Nelze aktualizovat informace o uživateli.",
+	"emptyShippingMsg": "Nejsou k dispozici žádné možnosti dopravy. Ujistěte se, že byla vaše adresa zadána správně, nebo nás kontaktujte, pokud potřebujete pomoc.",
+	"tagNotExist": "Tato značka neexistuje",
+	"userNameInCorrect": "Uživatelské jméno nebo heslo je nesprávné.",
+	"averageRating": "Průměrné hodnocení",
+	"popularity": "popularita",
+	"titleAToZ": "Název: A až Z",
+	"titleZToA": "Název: Z až A",
+	"viewOnGoogleMaps": "Zobrazit na Google Maps",
+	"tooManyFaildedLogin": "Příliš mnoho neúspěšných pokusů o přihlášení. Prosím zkuste to znovu později."
 }
diff --git a/lib/l10n/intl_da.arb b/lib/l10n/intl_da.arb
index 1657f47..119b1e7 100644
--- a/lib/l10n/intl_da.arb
+++ b/lib/l10n/intl_da.arb
@@ -1,15 +1,14 @@
 {
 	"@@locale": "da",
-	"DateDESC": "Dato faldende",
-	"Dutch": "hollandske",
-	"Egypt": "Egypten",
-	"India": "Hindi",
-	"Korean": "Korean",
-	"Netherlands": "hollandske",
-	"Polish": "Polere",
-	"PrivacyAndTerm": "Fortrolighed og vilkår",
-	"Qty": "QTY",
-	"Tamil": "Tamil",
+	"dateDESC": "Dato faldende",
+	"dutch": "hollandske",
+	"egypt": "Egypten",
+	"india": "Hindi",
+	"korean": "korean",
+	"netherlands": "hollandske",
+	"polish": "Polere",
+	"privacyAndTerm": "Fortrolighed og vilkår",
+	"qty": "QTY",
 	"UserNameInCorrect": "Brugernavnet eller adgangskoden er forkert",
 	"aboutUs": "Om os",
 	"account": "konto",
@@ -216,7 +215,6 @@
 	"downloadApp": "Download app",
 	"draft": "Udkast",
 	"duration": "Varighed",
-	"dutch": "hollandske",
 	"earnings": "Indtjening",
 	"edit": "Redigere:",
 	"editProductInfo": "Rediger produktinfo",
@@ -333,7 +331,6 @@
 	"kannada": "kannaresisk",
 	"keep": "HOLDE",
 	"khmer": "Khmer",
-	"korean": "Korean",
 	"kurdish": "kurdisk",
 	"language": "Sprog",
 	"languageSuccess": "Sproget er opdateret",
@@ -824,5 +821,22 @@
 	"driverAssigned": "Driver tildelt",
 	"enterYourPhone": "Indtast dit telefonnummer for at komme i gang.",
 	"otpVerification": "OTP-bekræftelse",
-	"weSentAnOTPTo": "En godkendelseskode er blevet sendt til"
+	"weSentAnOTPTo": "En godkendelseskode er blevet sendt til",
+	"accountIsPendingApproval": "Kontoen afventer godkendelse.",
+	"canNotCreateOrder": "Kan ikke oprette ordre",
+	"canNotCreateUser": "Kan ikke oprette brugeren.",
+	"canNotGetPayments": "Kan ikke få betalingsmetoder",
+	"canNotGetShipping": "Kan ikke få forsendelsesmetoder",
+	"canNotGetToken": "Kan ikke få token info.",
+	"canNotSaveOrder": "Kan ikke gemme ordren på hjemmesiden",
+	"canNotUpdateInfo": "Kan ikke opdatere brugeroplysninger.",
+	"emptyShippingMsg": "Der er ingen tilgængelige forsendelsesmuligheder. Sørg for, at din adresse er indtastet korrekt, eller kontakt os, hvis du har brug for hjælp.",
+	"tagNotExist": "Dette tag findes ikke",
+	"userNameInCorrect": "Brugernavnet eller adgangskoden er forkert.",
+	"averageRating": "Gennemsnitlig vurdering",
+	"popularity": "popularitet",
+	"titleAToZ": "Titel: A til Z",
+	"titleZToA": "Titel: Z til A",
+	"viewOnGoogleMaps": "Se på Google Maps",
+	"tooManyFaildedLogin": "For mange mislykkede loginforsøg. Prøv igen senere."
 }
diff --git a/lib/l10n/intl_de.arb b/lib/l10n/intl_de.arb
index ac48d60..d9cce02 100644
--- a/lib/l10n/intl_de.arb
+++ b/lib/l10n/intl_de.arb
@@ -175,7 +175,7 @@
 	"japanese": "Japanisch",
 	"languageSuccess": "Die Sprache wurde erfolgreich aktualisiert",
 	"agreeWithPrivacy": "Datenschutz",
-	"PrivacyAndTerm": " Datenschutz und Laufzeit ",
+	"privacyAndTerm": " Datenschutz und Laufzeit ",
 	"iAgree": "Zustimmen",
 	"currentPassword": "Aktuelles Passwort",
 	"newPassword": "Neues Passwort",
@@ -349,11 +349,11 @@
 	"waitForPost": "Warten auf Postprodukt",
 	"waitingForConfirmation": "Auf Bestätigung warten",
 	"yourBookingDetail": "Ihr Buchungsdetail",
-	"Egypt": "Ägypten",
-	"India": "Indien",
-	"Korean": "Koreanisch",
-	"Netherlands": "Niederlande",
-	"Dutch": "Niederländisch",
+	"egypt": "Ägypten",
+	"india": "Indien",
+	"korean": "Koreanisch",
+	"netherlands": "Niederlande",
+	"dutch": "Niederländisch",
 	"continues": "Fortsetzen",
 	"refunds": "Rückerstattungen",
 	"UserNameInCorrect": "Der Benutzername oder das Passwort ist falsch",
@@ -365,7 +365,7 @@
 	"saveForLater": "Für später speichern",
 	"useNow": "Jetzt benutzen",
 	"validUntilDate": "Gültig bis {date}",
-	"Qty": "Menge",
+	"qty": "Menge",
 	"createdOn": "Erstellt am:",
 	"itemTotal": "Artikel gesamt:",
 	"orderId": "Auftragsnummer:",
@@ -435,7 +435,7 @@
 	"uploadFile": "Datei hochladen",
 	"uploading": "Hochladen",
 	"serbian": "Serbisch",
-	"Polish": "Polieren",
+	"polish": "Polieren",
 	"persian": "Persian",
 	"kurdish": "Kurdish",
 	"active": "Aktiv",
@@ -533,7 +533,7 @@
 	"shipped": "Versandt",
 	"storeInformation": "Information speichern",
 	"updatePassword": "Passwort erneuern",
-	"DateDESC": "Datum absteigend",
+	"dateDESC": "Datum absteigend",
 	"addANewPost": "Neuen Beitrag hinzufügen",
 	"addNewBlog": "Neuen Blog hinzufügen",
 	"addNewPost": "Neuen Beitrag erstellen",
@@ -543,12 +543,10 @@
 	"createNewPostSuccessfully": "Ihr Beitrag wurde erfolgreich als Entwurf erstellt. Bitte werfen Sie einen Blick auf Ihre Admin-Site.",
 	"createPost": "Beitrag erstellen",
 	"dateASC": "Datum aufsteigend",
-	"dutch": "Niederländisch",
 	"emptyComment": "Ihr Kommentar darf nicht leer sein",
 	"emptySearch": "Sie haben noch nicht nach Artikeln gesucht. Fangen wir jetzt an - wir helfen Ihnen.",
 	"hindi": "Hindi",
 	"imageFeature": "Bildfunktion",
-	"korean": "Koreanisch",
 	"loginToComment": "Bitte loggen Sie sich ein, um einen Kommentar abzugeben",
 	"momentAgo": "vor einem Moment",
 	"monthsAgo": " Vor{month} Monaten",
@@ -612,7 +610,6 @@
 	"greaterDistance": ">{total} km",
 	"addToCartMaximum": "Die maximale Menge wurde überschritten",
 	"playAll": "Alle wiedergeben",
-	"Tamil": "Tamil",
 	"customerNote": "Kundenhinweis",
 	"stop": "Halt",
 	"cantPickDateInThePast": "Datum in der Vergangenheit ist nicht zulässig",
@@ -824,5 +821,22 @@
 	"driverAssigned": "Fahrer zugewiesen",
 	"enterYourPhone": "Geben Sie Ihre Telefonnummer ein, um loszulegen.",
 	"otpVerification": "OTP-Überprüfung",
-	"weSentAnOTPTo": "Ein Authentifizierungscode wurde gesendet an"
+	"weSentAnOTPTo": "Ein Authentifizierungscode wurde gesendet an",
+	"accountIsPendingApproval": "Die Genehmigung des Kontos steht noch aus.",
+	"canNotCreateOrder": "Bestellung kann nicht erstellt werden",
+	"canNotCreateUser": "Der Benutzer kann nicht erstellt werden.",
+	"canNotGetPayments": "Zahlungsmethoden können nicht abgerufen werden",
+	"canNotGetShipping": "Versandarten können nicht abgerufen werden",
+	"canNotGetToken": "Token-Info kann nicht abgerufen werden.",
+	"canNotSaveOrder": "Die Bestellung kann nicht auf der Website gespeichert werden",
+	"canNotUpdateInfo": "Benutzerinformationen können nicht aktualisiert werden.",
+	"emptyShippingMsg": "Es sind keine Versandoptionen verfügbar. Bitte stellen Sie sicher, dass Ihre Adresse korrekt eingegeben wurde, oder kontaktieren Sie uns, wenn Sie Hilfe benötigen.",
+	"tagNotExist": "Dieses Tag existiert nicht",
+	"userNameInCorrect": "Der Benutzername oder das Passwort ist falsch.",
+	"averageRating": "Durchschnittliche Bewertung",
+	"popularity": "Popularität",
+	"titleAToZ": "Titel: A bis Z",
+	"titleZToA": "Titel: Z bis A",
+	"viewOnGoogleMaps": "Auf Google Maps ansehen",
+	"tooManyFaildedLogin": "Zu viele fehlgeschlagene Anmeldeversuche. Bitte versuchen Sie es später erneut."
 }
diff --git a/lib/l10n/intl_el.arb b/lib/l10n/intl_el.arb
index fc409d5..4fc56d3 100644
--- a/lib/l10n/intl_el.arb
+++ b/lib/l10n/intl_el.arb
@@ -1,14 +1,14 @@
 {
 	"@@locale": "el",
-	"DateDESC": "Ημερομηνία φθίνουσα",
-	"Dutch": "Ολλανδός",
-	"Egypt": "Αίγυπτος",
-	"India": "Χίντι",
-	"Korean": "κορεάτης",
-	"Netherlands": "Ολλανδός",
-	"Polish": "Στίλβωση",
-	"PrivacyAndTerm": "Απόρρητο και όρος",
-	"Qty": "Ποσότητα",
+	"dateDESC": "Ημερομηνία φθίνουσα",
+	"dutch": "Ολλανδός",
+	"egypt": "Αίγυπτος",
+	"india": "Χίντι",
+	"korean": "κορεάτης",
+	"netherlands": "Ολλανδός",
+	"polish": "Στίλβωση",
+	"privacyAndTerm": "Απόρρητο και όρος",
+	"qty": "Ποσότητα",
 	"UserNameInCorrect": "Το όνομα χρήστη ή ο κωδικός πρόσβασης δεν είναι σωστά",
 	"aboutUs": "Σχετικά με εμάς",
 	"active": "Ενεργός",
@@ -151,7 +151,6 @@
 	"download": "Κατεβάστε",
 	"draft": "Προσχέδιο",
 	"duration": "διάρκεια",
-	"dutch": "Ολλανδός",
 	"earnings": "Κέρδη",
 	"edit": "Επεξεργασία:",
 	"editProductInfo": "Επεξεργασία πληροφοριών προϊόντος",
@@ -236,7 +235,6 @@
 	"iwantToCreateAccount": "Θέλω να δημιουργήσω λογαριασμό",
 	"japanese": "Ιαπωνικά",
 	"keep": "Διατήρηση",
-	"korean": "κορεάτης",
 	"kurdish": "Κουρδικά",
 	"language": "γλώσσες",
 	"languageSuccess": "Η γλώσσα ενημερώθηκε με επιτυχία",
@@ -612,7 +610,6 @@
 	"greaterDistance": ">{total} χλμ",
 	"addToCartMaximum": "Η μέγιστη ποσότητα έχει ξεπεραστεί",
 	"playAll": "Παίξε τα όλα",
-	"Tamil": "Ταμίλ",
 	"customerNote": "Σημείωση πελάτη",
 	"stop": "Να σταματήσει",
 	"cantPickDateInThePast": "Η ημερομηνία στο παρελθόν δεν επιτρέπεται",
@@ -824,5 +821,22 @@
 	"driverAssigned": "Εκχωρήθηκε πρόγραμμα οδήγησης",
 	"enterYourPhone": "Εισαγάγετε τον αριθμό τηλεφώνου σας για να ξεκινήσετε.",
 	"otpVerification": "Επαλήθευση OTP",
-	"weSentAnOTPTo": "Ένας κωδικός ελέγχου ταυτότητας έχει σταλεί στη διεύθυνση"
+	"weSentAnOTPTo": "Ένας κωδικός ελέγχου ταυτότητας έχει σταλεί στη διεύθυνση",
+	"accountIsPendingApproval": "Ο λογαριασμός εκκρεμεί έγκριση.",
+	"canNotCreateOrder": "Δεν είναι δυνατή η δημιουργία παραγγελίας",
+	"canNotCreateUser": "Δεν είναι δυνατή η δημιουργία του χρήστη.",
+	"canNotGetPayments": "Δεν είναι δυνατή η λήψη τρόπων πληρωμής",
+	"canNotGetShipping": "Δεν είναι δυνατή η λήψη μεθόδων αποστολής",
+	"canNotGetToken": "Δεν είναι δυνατή η λήψη πληροφοριών διακριτικού.",
+	"canNotSaveOrder": "Δεν είναι δυνατή η αποθήκευση της παραγγελίας στον ιστότοπο",
+	"canNotUpdateInfo": "Δεν είναι δυνατή η ενημέρωση των στοιχείων χρήστη.",
+	"emptyShippingMsg": "Δεν υπάρχουν διαθέσιμες επιλογές αποστολής. Βεβαιωθείτε ότι η διεύθυνσή σας έχει εισαχθεί σωστά ή επικοινωνήστε μαζί μας εάν χρειάζεστε βοήθεια.",
+	"tagNotExist": "Αυτή η ετικέτα δεν υπάρχει",
+	"userNameInCorrect": "Το όνομα χρήστη ή ο κωδικός πρόσβασης είναι λανθασμένο.",
+	"averageRating": "Μέση Βαθμολογία",
+	"popularity": "δημοτικότητα",
+	"titleAToZ": "Τίτλος: Α έως Ω",
+	"titleZToA": "Τίτλος: Ω έως Α",
+	"viewOnGoogleMaps": "Προβολή στους Χάρτες Google",
+	"tooManyFaildedLogin": "Πάρα πολλές αποτυχημένες προσπάθειες σύνδεσης. Παρακαλώ προσπαθήστε ξανά αργότερα."
 }
diff --git a/lib/l10n/intl_en.arb b/lib/l10n/intl_en.arb
index 381d754..0f84737 100644
--- a/lib/l10n/intl_en.arb
+++ b/lib/l10n/intl_en.arb
@@ -178,7 +178,7 @@
 	"japanese": "Japanese",
 	"languageSuccess": "The Language is updated successfully",
 	"agreeWithPrivacy": "Privacy and Term",
-	"PrivacyAndTerm": "Privacy and Term",
+	"privacyAndTerm": "Privacy and Term",
 	"iAgree": "I agree with",
 	"categories": "Categories",
 	"stores": "Stores",
@@ -354,10 +354,8 @@
 	"thailand": "Thai",
 	"hungarian": "Hungarian",
 	"vendorInfo": "Vendor Info",
-	"Netherlands": "Dutch",
-	"Korean": "Korean",
-	"India": "Hindi",
-	"Dutch": "Dutch",
+	"netherlands": "dutch",
+	"india": "Hindi",
 	"useNow": "Use Now",
 	"expired": "Expired",
 	"validUntilDate": "Valid til {date}",
@@ -368,9 +366,9 @@
 	"saveForLater": "Save For Later",
 	"refunds": "Refunds",
 	"continues": "Continue",
-	"Egypt": "Egypt",
+	"egypt": "Egypt",
 	"UserNameInCorrect": "The username or password is incorrect",
-	"Qty": "Qty",
+	"qty": "qty",
 	"itemTotal": "Item total: ",
 	"createdOn": "Created on: ",
 	"orderId": "Order ID: ",
@@ -461,7 +459,7 @@
 	"confirmClearTheCart": "Are you sure you want to clear the cart?",
 	"keep": "Keep",
 	"serbian": "Serbian",
-	"Polish": "Polish",
+	"polish": "Polish",
 	"persian": "Persian",
 	"kurdish": "Kurdish",
 	"pleaseSignInBeforeUploading": "Please sign in to your account before uploading any files.",
@@ -565,12 +563,12 @@
 	"createPost": "Create post",
 	"emptyComment": "Your comment can not be empty",
 	"hindi": "Hindi",
-	"korean": "Korean",
-	"dutch": "Dutch",
+	"korean": "korean",
+	"dutch": "dutch",
 	"relatedLayoutTitle": "Things You Might Love",
 	"audioDetected": "Audio item(s) detected. Do you want to add to Audio Player?",
 	"dateASC": "Date ascending",
-	"DateDESC": "Date descending",
+	"dateDESC": "Date descending",
 	"seeOrder": "See Order",
 	"openMap": "Map",
 	"allDeliveryOrders": "All Orders",
@@ -615,7 +613,6 @@
 	"greaterDistance": ">{total} km",
 	"addToCartMaximum": "The maximum quantity has been exceeded",
 	"playAll": "Play All",
-	"Tamil": "Tamil",
 	"customerNote": "Customer note",
 	"stop": "Stop",
 	"youCanOnlyOrderSingleStore": "You can only purchase from a single store.",
@@ -824,5 +821,24 @@
 	"driverAssigned": "Driver Assigned",
 	"enterYourPhone": "Enter your phone number to get started.",
 	"otpVerification": "OTP Verification",
-	"weSentAnOTPTo": "An authentication code has been send to"
+	"weSentAnOTPTo": "An authentication code has been send to",
+	"emptyShippingMsg": "There are no shipping options available. Please ensure that your address has been entered correctly, or contact us if you need any help.",
+	"canNotUpdateInfo": "Can not update user info.",
+	"canNotCreateUser": "Can not create the user.",
+	"accountIsPendingApproval": "The account is pending approval.",
+	"userNameInCorrect": "The username or password is incorrect.",
+	"canNotSaveOrder": "Can't save the order to website",
+	"tagNotExist": "This tag does not exist",
+	"canNotGetToken": "Can not get token Info.",
+	"canNotGetShipping": "Can not get shipping methods",
+	"canNotGetPayments": "Can not get payment methods",
+	"canNotCreateOrder": "Can not create order",
+	"titleAToZ": "Title: A to Z",
+	"titleZToA": "Title: Z to A",
+	"popularity": "Popularity",
+	"averageRating": "Average Rating",
+	"tooManyFaildedLogin": "Too many failed login attempts. Please try again later.",
+	"viewOnGoogleMaps": "View on Google Maps",
+	"smsCodeExpired": "The SMS code has expired. Please re-send the verification code to try again.",
+	"youNeedToLoginCheckout": "You need to login to checkout"
 }
diff --git a/lib/l10n/intl_es.arb b/lib/l10n/intl_es.arb
index 202627b..c89bc25 100644
--- a/lib/l10n/intl_es.arb
+++ b/lib/l10n/intl_es.arb
@@ -176,7 +176,7 @@
 	"japanese": "Japonés",
 	"languageSuccess": "El idioma se actualizó correctamente",
 	"agreeWithPrivacy": "Terminos",
-	"PrivacyAndTerm": "Política de Privacidad y Términos",
+	"privacyAndTerm": "Política de Privacidad y Términos",
 	"iAgree": "Acepto los",
 	"currentPassword": "contraseña actual",
 	"newPassword": "Nueva contraseña",
@@ -350,11 +350,11 @@
 	"vendorInfo": "Información del vendedor",
 	"waitingForConfirmation": "Esperando confirmación",
 	"yourBookingDetail": "El detalle de su reserva",
-	"Egypt": "EGIPTO",
-	"India": "hindi",
-	"Korean": "coreano",
-	"Netherlands": "Países Bajos",
-	"Dutch": "holandés",
+	"egypt": "EGIPTO",
+	"india": "hindi",
+	"korean": "coreano",
+	"netherlands": "Países Bajos",
+	"dutch": "holandés",
 	"continues": "Continuar",
 	"refunds": "reembolsos",
 	"UserNameInCorrect": "El nombre de usuario o contraseña son incorrectos",
@@ -366,7 +366,7 @@
 	"saveForLater": "Guardar para más adelante",
 	"useNow": "Usar ahora",
 	"validUntilDate": "Válido hasta {date}",
-	"Qty": "Cantidad",
+	"qty": "Cantidad",
 	"createdOn": "Creado en:",
 	"itemTotal": "total:",
 	"orderId": "Solicitar ID:",
@@ -436,7 +436,7 @@
 	"uploadFile": "Subir archivo",
 	"uploading": "Subiendo",
 	"serbian": "Serbio",
-	"Polish": "Polaco",
+	"polish": "Polaco",
 	"persian": "Persian",
 	"kurdish": "Kurdish",
 	"active": "Activo",
@@ -533,7 +533,7 @@
 	"shipped": "Enviado",
 	"storeInformation": "Almacenar información",
 	"updatePassword": "Actualiza contraseña",
-	"DateDESC": "Fecha Descendente",
+	"dateDESC": "Fecha Descendente",
 	"addANewPost": "Agregar una nueva publicación",
 	"addNewBlog": "Agregar nuevo blog",
 	"addNewPost": "Crear nueva publicación",
@@ -543,12 +543,10 @@
 	"createNewPostSuccessfully": "Tu publicación se ha creado correctamente como borrador. Por favor, eche un vistazo a su sitio de administración.",
 	"createPost": "Crear publicación",
 	"dateASC": "Fecha Ascendente",
-	"dutch": "holandés",
 	"emptyComment": "Tu comentario no puede estar vacío",
 	"emptySearch": "Aún no has buscado artículos. Empecemos ahora, te ayudaremos.",
 	"hindi": "hindi",
 	"imageFeature": "Característica de imagen",
-	"korean": "coreano",
 	"loginToComment": "Por favor, inicia sesión para comentar",
 	"momentAgo": "hace un momento",
 	"monthsAgo": " Hace{month} meses",
@@ -612,7 +610,6 @@
 	"greaterDistance": ">{total} km",
 	"addToCartMaximum": "Se ha superado la cantidad máxima",
 	"playAll": "Jugar todo",
-	"Tamil": "Tamil",
 	"customerNote": "NOTA AL CLIENTE",
 	"stop": "Detener",
 	"cantPickDateInThePast": "No se permiten fechas en el pasado",
@@ -824,5 +821,22 @@
 	"driverAssigned": "Conductor asignado",
 	"enterYourPhone": "Introduzca su número de teléfono para comenzar.",
 	"otpVerification": "Verificación OTP",
-	"weSentAnOTPTo": "Se ha enviado un código de autenticación a"
+	"weSentAnOTPTo": "Se ha enviado un código de autenticación a",
+	"accountIsPendingApproval": "La cuenta está pendiente de aprobación.",
+	"canNotCreateOrder": "No se puede crear orden",
+	"canNotCreateUser": "No se puede crear el usuario.",
+	"canNotGetPayments": "No puedo obtener métodos de pago",
+	"canNotGetShipping": "No se pueden obtener los métodos de envío.",
+	"canNotGetToken": "No se puede obtener la información del token.",
+	"canNotSaveOrder": "No se puede guardar el pedido en el sitio web",
+	"canNotUpdateInfo": "No se puede actualizar la información del usuario.",
+	"emptyShippingMsg": "No hay opciones de envío disponibles. Asegúrese de haber ingresado su dirección correctamente o contáctenos si necesita ayuda.",
+	"tagNotExist": "Esta etiqueta no existe",
+	"userNameInCorrect": "El nombre de usuario o contraseña son incorrectos.",
+	"averageRating": "Puntuación media",
+	"popularity": "Popularidad",
+	"titleAToZ": "Título: de la A a la Z",
+	"titleZToA": "Título: De la Z a la A",
+	"viewOnGoogleMaps": "VER EN GOOGLE MAPS",
+	"tooManyFaildedLogin": "Demasiados intentos de inicio de sesión fallidos. Por favor, inténtelo de nuevo más tarde."
 }
diff --git a/lib/l10n/intl_fa.arb b/lib/l10n/intl_fa.arb
index 6a8e4ab..3517179 100644
--- a/lib/l10n/intl_fa.arb
+++ b/lib/l10n/intl_fa.arb
@@ -195,7 +195,7 @@
 	"japanese": "جاپانی",
 	"languageSuccess": "زبان با موفقیت تمدید گردید",
 	"agreeWithPrivacy": "حریم خصوصی",
-	"PrivacyAndTerm": "توافقنامه حریم خصوصی",
+	"privacyAndTerm": "توافقنامه حریم خصوصی",
 	"iAgree": "من قبول دارم ",
 	"currentPassword": "رمز عبور فعلی",
 	"newPassword": "رمز عبور جدید",
@@ -315,15 +315,15 @@
 	"almostSoldOut": "آخرین تعداد",
 	"endsIn": "آخرین {timeLeft}",
 	"kurdish": "Kurdish",
-	"DateDESC": "تاریخ نزولی است",
-	"Dutch": "هلندی",
-	"Egypt": "مصر",
-	"India": "هندی",
-	"Korean": "کره ای",
-	"Netherlands": "هلندی",
-	"Polish": "لهستانی",
-	"Qty": "QTY",
-	"Tamil": "تامیل",
+	"dateDESC": "تاریخ نزولی است",
+	"dutch": "هلندی",
+	"egypt": "مصر",
+	"india": "هندی",
+	"korean": "کره ای",
+	"netherlands": "هلندی",
+	"polish": "لهستانی",
+	"qty": "QTY",
+	"tamil": "تامیل",
 	"UserNameInCorrect": "نام کاربری یا رمز عبور اشتباه است",
 	"accountSetup": "تنظیمات حساب",
 	"active": "فعال",
@@ -405,7 +405,6 @@
 	"direction": "جهت",
 	"distance": "~{total} کیلومتر",
 	"draft": "پیش نویس",
-	"dutch": "هلندی",
 	"earnings": "درآمد",
 	"edit": "ویرایش:",
 	"editProductInfo": "ویرایش اطلاعات محصول",
@@ -455,7 +454,6 @@
 	"invalidPhoneNumber": "شماره تلفن نامعتبر",
 	"itemTotal": "کل مورد:",
 	"keep": "نگاه داشتن",
-	"korean": "کره ای",
 	"latestProducts": "آخرین محصولات",
 	"link": "ارتباط دادن",
 	"listBannerType": "لیست بنر نوع",
@@ -695,7 +693,6 @@
 	"finnish": "فنلاندی",
 	"greek": "یونانی",
 	"swedish": "سوئدی",
-	"tamil": "تامیل",
 	"khmer": "خمر",
 	"expectedDeliveryDate": "تاریخ تحویل قابل انتظار",
 	"pleaseSelectADate": "لطفا تاریخ رزرو را انتخاب کنید",
@@ -824,5 +821,22 @@
 	"driverAssigned": "درایور تعیین شده است",
 	"enterYourPhone": "برای شروع شماره تلفن خود را وارد کنید.",
 	"otpVerification": "تأیید OTP",
-	"weSentAnOTPTo": "یک کد احراز هویت به ارسال شده است"
+	"weSentAnOTPTo": "یک کد احراز هویت به ارسال شده است",
+	"accountIsPendingApproval": "حساب در انتظار تایید است.",
+	"canNotCreateOrder": "نمی توان نظم ایجاد کرد",
+	"canNotCreateUser": "نمی توان کاربر را ایجاد کرد.",
+	"canNotGetPayments": "نمی توان روش های پرداخت را دریافت کرد",
+	"canNotGetShipping": "نمی توان روش های حمل و نقل را دریافت کرد",
+	"canNotGetToken": "نمی توان اطلاعات رمز را دریافت کرد.",
+	"canNotSaveOrder": "نمی توان سفارش را در وب سایت ذخیره کرد",
+	"canNotUpdateInfo": "نمی توان اطلاعات کاربر را به روز کرد.",
+	"emptyShippingMsg": "هیچ گزینه حمل و نقل در دسترس نیست. لطفا مطمئن شوید که آدرس شما به درستی وارد شده است یا در صورت نیاز به کمک با ما تماس بگیرید.",
+	"tagNotExist": "این برچسب وجود ندارد",
+	"userNameInCorrect": "نام کاربری یا رمز عبور اشتباه است.",
+	"averageRating": "میانگین امتیاز",
+	"popularity": "محبوبیت",
+	"titleAToZ": "عنوان: A تا Z",
+	"titleZToA": "عنوان: Z تا A",
+	"viewOnGoogleMaps": "مشاهده در نقشه های گوگل",
+	"tooManyFaildedLogin": "تعداد زیادی تلاش برای ورود ناموفق. لطفاً بعداً دوباره امتحان کنید."
 }
diff --git a/lib/l10n/intl_fi.arb b/lib/l10n/intl_fi.arb
index f05cf89..841340c 100644
--- a/lib/l10n/intl_fi.arb
+++ b/lib/l10n/intl_fi.arb
@@ -1,15 +1,15 @@
 {
 	"@@locale": "fi",
-	"DateDESC": "Päivämäärä laskeva",
-	"Dutch": "Hollannin kieli",
-	"Egypt": "Egypti",
-	"India": "hindi",
-	"Korean": "Korealainen",
-	"Netherlands": "Hollannin kieli",
-	"Polish": "Kiillottaa",
-	"PrivacyAndTerm": "Yksityisyys ja termi",
-	"Qty": "Määrä",
-	"Tamil": "tamil",
+	"dateDESC": "Päivämäärä laskeva",
+	"dutch": "Hollannin kieli",
+	"egypt": "Egypti",
+	"india": "hindi",
+	"korean": "Korealainen",
+	"netherlands": "Hollannin kieli",
+	"polish": "Kiillottaa",
+	"privacyAndTerm": "Yksityisyys ja termi",
+	"qty": "Määrä",
+	"tamil": "tamil",
 	"UserNameInCorrect": "Käyttäjänimi tai salasana on väärä",
 	"aboutUs": "meistä",
 	"accountSetup": "Tilin asetukset",
@@ -167,7 +167,6 @@
 	"download": "Ladata",
 	"draft": "Luonnos",
 	"duration": "Kesto",
-	"dutch": "Hollannin kieli",
 	"earnings": "Ansiot",
 	"edit": "Muokata:",
 	"editProductInfo": "Muokkaa tuotetietoja",
@@ -260,7 +259,6 @@
 	"iwantToCreateAccount": "Haluan luoda tilin",
 	"japanese": "japanilainen",
 	"keep": "Pitää",
-	"korean": "Korealainen",
 	"kurdish": "kurdien",
 	"language": "Kieli (kielet",
 	"languageSuccess": "Kielen päivittäminen onnistui",
@@ -694,7 +692,6 @@
 	"finnish": "Suomalainen",
 	"greek": "kreikkalainen",
 	"swedish": "Ruotsin kieli",
-	"tamil": "tamil",
 	"khmer": "Khmer",
 	"expectedDeliveryDate": "oletettu toimituspäivä",
 	"pleaseSelectADate": "Valitse varauspäivä",
@@ -824,5 +821,22 @@
 	"driverAssigned": "Kuljettaja määrätty",
 	"enterYourPhone": "Aloita kirjoittamalla puhelinnumerosi.",
 	"otpVerification": "OTP-vahvistus",
-	"weSentAnOTPTo": "Todennuskoodi on lähetetty osoitteeseen"
+	"weSentAnOTPTo": "Todennuskoodi on lähetetty osoitteeseen",
+	"accountIsPendingApproval": "Tili odottaa hyväksyntää.",
+	"canNotCreateOrder": "Tilausta ei voi luoda",
+	"canNotCreateUser": "Käyttäjää ei voi luoda.",
+	"canNotGetPayments": "Maksutapoja ei voi saada",
+	"canNotGetShipping": "Toimitusmenetelmiä ei voi saada",
+	"canNotGetToken": "Tunnustietoja ei voi saada.",
+	"canNotSaveOrder": "Tilausta ei voi tallentaa verkkosivustolle",
+	"canNotUpdateInfo": "Käyttäjätietoja ei voi päivittää.",
+	"emptyShippingMsg": "Toimitusvaihtoehtoja ei ole saatavilla. Varmista, että osoitteesi on syötetty oikein, tai ota yhteyttä, jos tarvitset apua.",
+	"tagNotExist": "Tätä tunnistetta ei ole olemassa",
+	"userNameInCorrect": "Käyttäjänimi tai salasana on väärä.",
+	"averageRating": "Keskiarvoluokitus",
+	"popularity": "suosio",
+	"titleAToZ": "Otsikko: A-Z",
+	"titleZToA": "Otsikko: Z - A",
+	"viewOnGoogleMaps": "Näytä Google Mapsissa",
+	"tooManyFaildedLogin": "Liian monta epäonnistunutta kirjautumisyritystä. Yritä uudelleen myöhemmin."
 }
diff --git a/lib/l10n/intl_fr.arb b/lib/l10n/intl_fr.arb
index 7992e2a..717116a 100644
--- a/lib/l10n/intl_fr.arb
+++ b/lib/l10n/intl_fr.arb
@@ -176,7 +176,7 @@
 	"japanese": "Japonais",
 	"languageSuccess": "La langue a bien été mise à jour",
 	"agreeWithPrivacy": "CGV",
-	"PrivacyAndTerm": "CGV",
+	"privacyAndTerm": "CGV",
 	"iAgree": "Je suis d'accord avec",
 	"currentPassword": "Mot de passe actuel",
 	"newPassword": "Nouveau mot de passe",
@@ -350,11 +350,11 @@
 	"waitingForConfirmation": "En attente de confirmation",
 	"youCanOnlyPurchase": "Vous ne pouvez acheter que",
 	"yourBookingDetail": "Détails de votre réservation",
-	"Egypt": "Egypte",
-	"India": "Hindi",
-	"Korean": "coréen",
-	"Netherlands": "Pays-Bas",
-	"Dutch": "Néerlandais",
+	"egypt": "Egypte",
+	"india": "Hindi",
+	"korean": "coréen",
+	"netherlands": "Pays-Bas",
+	"dutch": "Néerlandais",
 	"continues": "Continuer",
 	"refunds": "Remboursements",
 	"UserNameInCorrect": "Le pseudo ou mot de passe est incorect",
@@ -366,7 +366,7 @@
 	"saveForLater": "Garder pour plus tard",
 	"useNow": "Utiliser maintenant",
 	"validUntilDate": "Valable jusqu'au {date}",
-	"Qty": "qté",
+	"qty": "qté",
 	"createdOn": "Créé sur:",
 	"itemTotal": "Objet total:",
 	"orderId": "Numéro de commande:",
@@ -436,7 +436,7 @@
 	"uploadFile": "Téléverser un fichier",
 	"uploading": "Téléchargement",
 	"serbian": "Serbe",
-	"Polish": "Polonais",
+	"polish": "Polonais",
 	"persian": "Persian",
 	"kurdish": "Kurdish",
 	"active": "actif",
@@ -533,7 +533,7 @@
 	"shipped": "expédié",
 	"storeInformation": "Informations sur la boutique",
 	"updatePassword": "Mettre à jour le mot de passe",
-	"DateDESC": "Date décroissante",
+	"dateDESC": "Date décroissante",
 	"addANewPost": "Ajouter un nouveau message",
 	"addNewBlog": "Ajouter un nouveau blog",
 	"addNewPost": "Créer un nouveau message",
@@ -543,12 +543,10 @@
 	"createNewPostSuccessfully": "Votre message a bien été créé en tant que brouillon. Veuillez jeter un œil à votre site d'administration.",
 	"createPost": "Créer une publication",
 	"dateASC": "Date ascendante",
-	"dutch": "Néerlandais",
 	"emptyComment": "Votre commentaire ne peut pas être vide",
 	"emptySearch": "Vous n'avez pas encore recherché d'articles. Commençons maintenant - nous vous aiderons.",
 	"hindi": "Hindi",
 	"imageFeature": "Fonction d'image",
-	"korean": "coréen",
 	"loginToComment": "Veuillez vous connecter pour commenter",
 	"momentAgo": "il y a un moment",
 	"monthsAgo": " Il y a{month} mois",
@@ -612,7 +610,6 @@
 	"greaterDistance": ">{total} km",
 	"addToCartMaximum": "La quantité maximale a été dépassée",
 	"playAll": "Jouer à tous",
-	"Tamil": "tamil",
 	"customerNote": "Note du client",
 	"stop": "Arrêtez",
 	"cantPickDateInThePast": "La date dans le passé n'est pas autorisée",
@@ -824,5 +821,22 @@
 	"driverAssigned": "Chauffeur assigné",
 	"enterYourPhone": "Entrez votre numéro de téléphone pour commencer.",
 	"otpVerification": "Vérification OTP",
-	"weSentAnOTPTo": "Un code d'authentification a été envoyé à"
+	"weSentAnOTPTo": "Un code d'authentification a été envoyé à",
+	"accountIsPendingApproval": "Le compte est en attente d'approbation.",
+	"canNotCreateOrder": "Impossible de créer la commande",
+	"canNotCreateUser": "Impossible de créer l'utilisateur.",
+	"canNotGetPayments": "Impossible d'obtenir des méthodes de paiement",
+	"canNotGetShipping": "Impossible d'obtenir les méthodes d'expédition",
+	"canNotGetToken": "Impossible d'obtenir les informations sur le jeton.",
+	"canNotSaveOrder": "Impossible d'enregistrer la commande sur le site Web",
+	"canNotUpdateInfo": "Impossible de mettre à jour les informations utilisateur.",
+	"emptyShippingMsg": "Il n'y a pas d'options d'expédition disponibles. Veuillez vous assurer que votre adresse a été saisie correctement ou contactez-nous si vous avez besoin d'aide.",
+	"tagNotExist": "Cette balise n'existe pas",
+	"userNameInCorrect": "Le pseudo ou mot de passe est incorect.",
+	"averageRating": "Note moyenne",
+	"popularity": "Popularité",
+	"titleAToZ": "Titre : A à Z",
+	"titleZToA": "Titre : Z à A",
+	"viewOnGoogleMaps": "VOIR SUR GOOGLE MAPS",
+	"tooManyFaildedLogin": "Trop de tentatives de connexion infructueuses. Veuillez réessayer plus tard."
 }
diff --git a/lib/l10n/intl_he.arb b/lib/l10n/intl_he.arb
index 2728545..135a656 100644
--- a/lib/l10n/intl_he.arb
+++ b/lib/l10n/intl_he.arb
@@ -174,7 +174,7 @@
 	"japanese": "יפני",
 	"languageSuccess": "השפה עודכנה בהצלחה",
 	"agreeWithPrivacy": "פרטיות ותנאי",
-	"PrivacyAndTerm": "פרטיות ומונח",
+	"privacyAndTerm": "פרטיות ומונח",
 	"iAgree": "אני מסכים עם",
 	"categories": "קטגוריות",
 	"stores": "חנויות",
@@ -350,11 +350,11 @@
 	"hungarian": "הונגרית",
 	"itsOrdered": "זה הורה!",
 	"vendorInfo": "מידע על הספק",
-	"Egypt": "מצרים",
-	"India": "הינדי",
-	"Korean": "קוריאנית",
-	"Netherlands": "הולנד",
-	"Dutch": "הולנדית",
+	"egypt": "מצרים",
+	"india": "הינדי",
+	"korean": "קוריאנית",
+	"netherlands": "הולנד",
+	"dutch": "הולנדית",
 	"continues": "המשך",
 	"refunds": "החזרים",
 	"UserNameInCorrect": "שם המשתמש או הסיסמה שגויים",
@@ -366,7 +366,7 @@
 	"saveForLater": "לחסוך למועד מאוחר יותר",
 	"useNow": "השתמש עכשיו",
 	"validUntilDate": "תקף עד {date}",
-	"Qty": "כמות",
+	"qty": "כמות",
 	"createdOn": "נוצר ב:",
 	"itemTotal": "פריט כולל:",
 	"orderId": "מספר הזמנה:",
@@ -436,7 +436,7 @@
 	"uploadFile": "העלה קובץ",
 	"uploading": "מעלה",
 	"serbian": "סרבית",
-	"Polish": "פולני",
+	"polish": "פולני",
 	"persian": "פַּרסִית",
 	"kurdish": "Kurdish",
 	"active": "פעיל",
@@ -533,7 +533,7 @@
 	"shipped": "נשלח",
 	"storeInformation": "אחסון מידע",
 	"updatePassword": "עדכן סיסמה",
-	"DateDESC": "תאריך יורד",
+	"dateDESC": "תאריך יורד",
 	"addANewPost": "הוסף פוסט חדש",
 	"addNewBlog": "הוסף בלוג חדש",
 	"addNewPost": "צור פוסט חדש",
@@ -543,12 +543,10 @@
 	"createNewPostSuccessfully": "הפוסט שלך נוצר בהצלחה כטיוטה. אנא עיין באתר הניהול שלך.",
 	"createPost": "צור פוסט",
 	"dateASC": "תאריך עלייה",
-	"dutch": "הולנדית",
 	"emptyComment": "התגובה שלך לא יכולה להיות ריקה",
 	"emptySearch": "עדיין לא חיפשת פריטים. נתחיל עכשיו - נעזור לך.",
 	"hindi": "הינדי",
 	"imageFeature": "תכונת תמונה",
-	"korean": "קוריאנית",
 	"loginToComment": "אנא התחבר להגיב",
 	"momentAgo": "לפני רגע",
 	"monthsAgo": " לפני{month} חודשים",
@@ -612,7 +610,6 @@
 	"greaterDistance": ">{total} ק\"מ",
 	"addToCartMaximum": "הכמות המרבית חרגה",
 	"playAll": "שחק הכל",
-	"Tamil": "טמילית",
 	"customerNote": "הערת לקוח",
 	"stop": "תפסיק",
 	"cantPickDateInThePast": "תאריך בעבר אסור",
@@ -824,5 +821,22 @@
 	"driverAssigned": "נהג שהוקצה",
 	"enterYourPhone": "הזן את מספר הטלפון שלך כדי להתחיל.",
 	"otpVerification": "אימות OTP",
-	"weSentAnOTPTo": "קוד אימות נשלח אל"
+	"weSentAnOTPTo": "קוד אימות נשלח אל",
+	"accountIsPendingApproval": "החשבון ממתין לאישור.",
+	"canNotCreateOrder": "לא ניתן ליצור סדר",
+	"canNotCreateUser": "לא ניתן ליצור את המשתמש.",
+	"canNotGetPayments": "לא ניתן לקבל אמצעי תשלום",
+	"canNotGetShipping": "לא ניתן לקבל שיטות משלוח",
+	"canNotGetToken": "לא ניתן לקבל מידע אסימון.",
+	"canNotSaveOrder": "לא ניתן לשמור את ההזמנה באתר",
+	"canNotUpdateInfo": "לא ניתן לעדכן את פרטי המשתמש.",
+	"emptyShippingMsg": "אין אפשרויות משלוח זמינות. אנא ודא שהכתובת שלך הוזנה כהלכה, או צור איתנו קשר אם אתה זקוק לעזרה כלשהי.",
+	"tagNotExist": "תג זה לא קיים",
+	"userNameInCorrect": "שם המשתמש או הסיסמה שגויים.",
+	"averageRating": "דירוג ממוצע",
+	"popularity": "פּוֹפּוּלָרִיוּת",
+	"titleAToZ": "כותרת: א' עד ת'",
+	"titleZToA": "כותרת: Z עד A",
+	"viewOnGoogleMaps": "הצג בגוגל מפות",
+	"tooManyFaildedLogin": "יותר מדי ניסיונות כניסה כושלים. בבקשה נסה שוב מאוחר יותר."
 }
diff --git a/lib/l10n/intl_hi.arb b/lib/l10n/intl_hi.arb
index d223f09..24f7435 100644
--- a/lib/l10n/intl_hi.arb
+++ b/lib/l10n/intl_hi.arb
@@ -1,10 +1,10 @@
 {
 	"@@locale": "hi",
-	"Egypt": "मिस्र",
-	"India": "हिंदी",
-	"Korean": "कोरियाई",
-	"Netherlands": "नीदरलैंड",
-	"PrivacyAndTerm": "गोपनीयता और शब्द",
+	"egypt": "मिस्र",
+	"india": "हिंदी",
+	"korean": "कोरियाई",
+	"netherlands": "नीदरलैंड",
+	"privacyAndTerm": "गोपनीयता और शब्द",
 	"aboutUs": "हमारे बारे में",
 	"addListing": "लिस्टिंग जोड़ें",
 	"addToCart": "कार्ट में डालें",
@@ -354,7 +354,7 @@
 	"yourUsernameEmail": "आपका उपयोगकर्ता नाम या ईमेल",
 	"zipCode": "पिन कोड",
 	"zipCodeIsRequired": "ज़िप कोड फ़ील्ड आवश्यक है",
-	"Dutch": "डच",
+	"dutch": "डच",
 	"continues": "जारी रहना",
 	"refunds": "रिफंड",
 	"UserNameInCorrect": "यूजरनेम या पासवर्ड गलत है",
@@ -366,7 +366,7 @@
 	"saveForLater": "भविष्य के लिए बचाओ",
 	"useNow": "अभी उपयोग करें",
 	"validUntilDate": "मान्य तिल {date}",
-	"Qty": "मात्रा",
+	"qty": "मात्रा",
 	"createdOn": "को निर्मित:",
 	"itemTotal": "कुल वस्तुएँ:",
 	"orderId": "आदेश ID:",
@@ -436,7 +436,7 @@
 	"uploadFile": "दस्तावेज अपलोड करें",
 	"uploading": "अपलोडिंग",
 	"serbian": "सर्बियाई ",
-	"Polish": "पोलिश",
+	"polish": "पोलिश",
 	"persian": "Persian",
 	"kurdish": "Kurdish",
 	"active": "सक्रिय",
@@ -533,7 +533,7 @@
 	"shipped": "भेज दिया",
 	"storeInformation": "जानकारी जमा करो",
 	"updatePassword": "पासवर्ड अपडेट करें",
-	"DateDESC": "अवरोही तिथि",
+	"dateDESC": "अवरोही तिथि",
 	"addANewPost": "एक नई पोस्ट जोड़ें",
 	"addNewBlog": "नया ब्लॉग जोड़ें",
 	"addNewPost": "नई पोस्ट बनाएं",
@@ -543,12 +543,10 @@
 	"createNewPostSuccessfully": "आपका पोस्ट सफलतापूर्वक एक मसौदे के रूप में बनाया गया है। कृपया अपने व्यवस्थापक साइट पर एक नज़र डालें।",
 	"createPost": "पोस्ट बनाएँ",
 	"dateASC": "आरोही तिथि",
-	"dutch": "डच",
 	"emptyComment": "आपकी टिप्पणी खाली नहीं हो सकती",
 	"emptySearch": "आपने अभी तक आइटम नहीं खोजे हैं। चलिए अब शुरू करते हैं - हम आपकी मदद करेंगे।",
 	"hindi": "हिंदी",
 	"imageFeature": "छवि सुविधा",
-	"korean": "कोरियाई",
 	"loginToComment": "कृपया टिप्पणी में लॉगिन करें",
 	"momentAgo": "एक क्षण पहले",
 	"monthsAgo": "{month} महीने पहले",
@@ -612,7 +610,6 @@
 	"greaterDistance": ">{total} किमी",
 	"addToCartMaximum": "अधिकतम मात्रा पार हो गई है",
 	"playAll": "सभी को बजाएं",
-	"Tamil": "तामिल",
 	"customerNote": "ग्राहक नोट",
 	"stop": "रुकें",
 	"cantPickDateInThePast": "अतीत में तारीख की अनुमति नहीं है",
@@ -824,5 +821,22 @@
 	"driverAssigned": "ड्राइवर असाइन किया गया",
 	"enterYourPhone": "आरंभ करने के लिए अपना फ़ोन नंबर दर्ज करें।",
 	"otpVerification": "ओटीपी सत्यापन",
-	"weSentAnOTPTo": "को एक प्रमाणीकरण कोड भेज दिया गया है"
+	"weSentAnOTPTo": "को एक प्रमाणीकरण कोड भेज दिया गया है",
+	"accountIsPendingApproval": "खाता अनुमोदन के लिए लंबित है।",
+	"canNotCreateOrder": "आदेश नहीं बना सकता",
+	"canNotCreateUser": "उपयोगकर्ता नहीं बना सकता।",
+	"canNotGetPayments": "भुगतान विधियां नहीं मिल सकतीं",
+	"canNotGetShipping": "शिपिंग के तरीके नहीं मिल सकते",
+	"canNotGetToken": "टोकन जानकारी नहीं मिल सकती है।",
+	"canNotSaveOrder": "वेबसाइट पर ऑर्डर सेव नहीं किया जा सकता",
+	"canNotUpdateInfo": "उपयोगकर्ता जानकारी अपडेट नहीं कर सकता।",
+	"emptyShippingMsg": "कोई शिपिंग विकल्प उपलब्ध नहीं हैं। कृपया सुनिश्चित करें कि आपका पता सही दर्ज किया गया है, या यदि आपको कोई सहायता चाहिए तो हमसे संपर्क करें।",
+	"tagNotExist": "यह टैग मौजूद नहीं है",
+	"userNameInCorrect": "यूजरनेम या पासवर्ड गलत है।",
+	"averageRating": "औसत रेटिंग",
+	"popularity": "लोकप्रियता",
+	"titleAToZ": "शीर्षक: ए टू जेड",
+	"titleZToA": "शीर्षक: Z से A",
+	"viewOnGoogleMaps": "Google मानचित्र पर देखें",
+	"tooManyFaildedLogin": "बहुत से असफल लॉगिन प्रयास। बाद में पुन: प्रयास करें।"
 }
diff --git a/lib/l10n/intl_hu.arb b/lib/l10n/intl_hu.arb
index 3a8c767..c4b5b8e 100644
--- a/lib/l10n/intl_hu.arb
+++ b/lib/l10n/intl_hu.arb
@@ -177,7 +177,7 @@
 	"japanese": "Japán",
 	"languageSuccess": "A Nyelv sikeresen frissült",
 	"agreeWithPrivacy": "Adatvédelem",
-	"PrivacyAndTerm": "Adatvédelem",
+	"privacyAndTerm": "Adatvédelem",
 	"iAgree": "Egyetértek",
 	"currentPassword": "Jelenlegi Jelszó",
 	"newPassword": "Új jelszó",
@@ -350,11 +350,11 @@
 	"waitingForConfirmation": "Megerősítésre vár",
 	"youCanOnlyPurchase": "Csak vásárolni lehet",
 	"yourBookingDetail": "A foglalás részletei",
-	"Egypt": "Egyiptom",
-	"India": "hindi",
-	"Korean": "koreai",
-	"Netherlands": "Hollandia",
-	"Dutch": "holland",
+	"egypt": "Egyiptom",
+	"india": "hindi",
+	"korean": "koreai",
+	"netherlands": "Hollandia",
+	"dutch": "holland",
 	"continues": "Folytatni",
 	"refunds": "Visszatérítések",
 	"UserNameInCorrect": "A felhasználónév vagy jelszó helytelen",
@@ -366,7 +366,7 @@
 	"saveForLater": "Rakd félre későbbre",
 	"useNow": "Használd most",
 	"validUntilDate": "Érvényes: {date}",
-	"Qty": "Mennyiség",
+	"qty": "Mennyiség",
 	"createdOn": "Készült ekkor:",
 	"itemTotal": "Tétel összesen:",
 	"orderId": "Rendelés azonosító:",
@@ -436,7 +436,7 @@
 	"uploadFile": "Fájl feltöltés",
 	"uploading": "Feltöltés",
 	"serbian": "Szerb",
-	"Polish": "Fényesít",
+	"polish": "Fényesít",
 	"persian": "Persian",
 	"kurdish": "Kurdish",
 	"active": "Aktív",
@@ -533,7 +533,7 @@
 	"shipped": "Kiszállított",
 	"storeInformation": "Raktárinformáció",
 	"updatePassword": "Frissítse a jelszót",
-	"DateDESC": "Dátum csökkenő",
+	"dateDESC": "Dátum csökkenő",
 	"addANewPost": "Új bejegyzés hozzáadása",
 	"addNewBlog": "Új blog hozzáadása",
 	"addNewPost": "Új hozzászólás létrehozása",
@@ -543,12 +543,10 @@
 	"createNewPostSuccessfully": "A bejegyzés sikeresen elkészült piszkozatként. Vessen egy pillantást az admin webhelyére.",
 	"createPost": "Hozz létre posztot",
 	"dateASC": "Dátum növekvő",
-	"dutch": "holland",
 	"emptyComment": "A megjegyzés nem lehet üres",
 	"emptySearch": "Még nem keresett elemeket. Kezdjük most - segítünk.",
 	"hindi": "hindi",
 	"imageFeature": "Kép funkció",
-	"korean": "koreai",
 	"loginToComment": "Kérjük, jelentkezzen be a hozzászóláshoz",
 	"momentAgo": "egy pillanattal ezelőtt",
 	"monthsAgo": "{month} hónappal ezelőtt",
@@ -612,7 +610,6 @@
 	"greaterDistance": ">{total} km",
 	"addToCartMaximum": "A maximális mennyiséget túllépték",
 	"playAll": "Play All",
-	"Tamil": "tamil",
 	"customerNote": "Ügyfél megjegyzése",
 	"stop": "Állj meg",
 	"cantPickDateInThePast": "A múltbeli dátum nem megengedett",
@@ -824,5 +821,22 @@
 	"driverAssigned": "Illesztőprogram hozzárendelve",
 	"enterYourPhone": "A kezdéshez adja meg telefonszámát.",
 	"otpVerification": "OTP igazolás",
-	"weSentAnOTPTo": "A hitelesítési kódot elküldtük a címre"
+	"weSentAnOTPTo": "A hitelesítési kódot elküldtük a címre",
+	"accountIsPendingApproval": "A fiók jóváhagyásra vár.",
+	"canNotCreateOrder": "Nem lehet sorrendet létrehozni",
+	"canNotCreateUser": "Nem lehet létrehozni a felhasználót.",
+	"canNotGetPayments": "Fizetési módok nem érhetők el",
+	"canNotGetShipping": "A szállítási módokat nem lehet megkapni",
+	"canNotGetToken": "Nem érhető el token információ.",
+	"canNotSaveOrder": "A megrendelés nem menthető a webhelyre",
+	"canNotUpdateInfo": "Nem lehet frissíteni a felhasználói adatokat.",
+	"emptyShippingMsg": "Nincsenek szállítási lehetőségek. Kérjük, ellenőrizze, hogy helyesen adta-e meg címét, vagy lépjen kapcsolatba velünk, ha segítségre van szüksége.",
+	"tagNotExist": "Ez a címke nem létezik",
+	"userNameInCorrect": "A felhasználónév vagy jelszó helytelen.",
+	"averageRating": "Átlagos értékelés",
+	"popularity": "Népszerűség",
+	"titleAToZ": "Cím: A-tól Z-ig",
+	"titleZToA": "Cím: Z-től A-ig",
+	"viewOnGoogleMaps": "Megtekintés a Google Térképen",
+	"tooManyFaildedLogin": "Túl sok sikertelen bejelentkezési kísérlet. Kérlek, próbáld újra később."
 }
diff --git a/lib/l10n/intl_id.arb b/lib/l10n/intl_id.arb
index 3c2a4ee..074473d 100644
--- a/lib/l10n/intl_id.arb
+++ b/lib/l10n/intl_id.arb
@@ -176,7 +176,7 @@
 	"japanese": "Japanese",
 	"languageSuccess": "Bahasa berhasil diperbarui",
 	"agreeWithPrivacy": "Privasi dan Ketentuan",
-	"PrivacyAndTerm": "Privasi dan Ketentuan",
+	"privacyAndTerm": "Privasi dan Ketentuan",
 	"iAgree": "saya setuju dengan",
 	"currentPassword": "kata sandi saat ini",
 	"newPassword": "kata sandi baru",
@@ -350,11 +350,11 @@
 	"waitForPost": "Menunggu produk posting",
 	"waitingForConfirmation": "menunggu konfirmasi",
 	"yourBookingDetail": "Detail pemesanan Anda",
-	"Egypt": "Mesir",
-	"India": "India",
-	"Korean": "Korea",
-	"Netherlands": "Belanda",
-	"Dutch": "Belanda",
+	"egypt": "Mesir",
+	"india": "india",
+	"korean": "Korea",
+	"netherlands": "Belanda",
+	"dutch": "Belanda",
 	"continues": "Terus",
 	"refunds": "Pengembalian dana",
 	"UserNameInCorrect": "Nama pengguna atau kata sandi salah",
@@ -366,7 +366,7 @@
 	"saveForLater": "Simpan untuk nanti",
 	"useNow": "Gunakan sekarang",
 	"validUntilDate": "Berlaku sampai {date}",
-	"Qty": "Jml",
+	"qty": "Jml",
 	"createdOn": "Dibuat pada:",
 	"itemTotal": "Total barang:",
 	"orderId": "Id pemesanan:",
@@ -436,7 +436,7 @@
 	"uploadFile": "Unggah data",
 	"uploading": "Mengunggah",
 	"serbian": "Orang Serbia",
-	"Polish": "Polandia",
+	"polish": "Polandia",
 	"persian": "Persian",
 	"kurdish": "Kurdish",
 	"active": "Aktif",
@@ -533,7 +533,7 @@
 	"shipped": "dikirim",
 	"storeInformation": "Informasi toko",
 	"updatePassword": "Perbarui Kata Sandi",
-	"DateDESC": "Tanggal turun",
+	"dateDESC": "Tanggal turun",
 	"addANewPost": "Tambahkan Posting Baru",
 	"addNewBlog": "Tambahkan Blog Baru",
 	"addNewPost": "Buat Posting Baru New",
@@ -543,12 +543,10 @@
 	"createNewPostSuccessfully": "Posting Anda berhasil dibuat sebagai draf. Silakan lihat di situs admin Anda.",
 	"createPost": "Buat Posting",
 	"dateASC": "Tanggal naik",
-	"dutch": "Belanda",
 	"emptyComment": "Komentar Anda tidak boleh kosong",
 	"emptySearch": "Anda belum mencari item. Mari mulai sekarang - kami akan membantu Anda.",
 	"hindi": "Hindi",
 	"imageFeature": "Fitur Gambar",
-	"korean": "Korea",
 	"loginToComment": "Silahkan Login Untuk Berkomentar",
 	"momentAgo": "beberapa saat",
 	"monthsAgo": "{month} bulan yang lalu",
@@ -612,7 +610,6 @@
 	"greaterDistance": ">{total} km",
 	"addToCartMaximum": "Jumlah maksimum telah terlampaui",
 	"playAll": "Mainkan Semua",
-	"Tamil": "Tamil",
 	"customerNote": "Catatan pelanggan",
 	"stop": "Berhenti",
 	"cantPickDateInThePast": "Tanggal di masa lalu tidak diperbolehkan",
@@ -824,5 +821,22 @@
 	"driverAssigned": "Pengemudi Ditugaskan",
 	"enterYourPhone": "Masukkan nomor telepon Anda untuk memulai.",
 	"otpVerification": "Verifikasi OTP",
-	"weSentAnOTPTo": "Kode otentikasi telah dikirim ke"
+	"weSentAnOTPTo": "Kode otentikasi telah dikirim ke",
+	"accountIsPendingApproval": "Akun sedang menunggu persetujuan.",
+	"canNotCreateOrder": "Tidak dapat membuat pesanan",
+	"canNotCreateUser": "Tidak dapat membuat pengguna.",
+	"canNotGetPayments": "Tidak bisa mendapatkan metode pembayaran",
+	"canNotGetShipping": "Tidak bisa mendapatkan metode pengiriman",
+	"canNotGetToken": "Tidak bisa mendapatkan Info token.",
+	"canNotSaveOrder": "Tidak dapat menyimpan pesanan ke situs web",
+	"canNotUpdateInfo": "Tidak dapat memperbarui info pengguna.",
+	"emptyShippingMsg": "Tidak ada opsi pengiriman yang tersedia. Harap pastikan bahwa alamat Anda telah dimasukkan dengan benar, atau hubungi kami jika Anda memerlukan bantuan.",
+	"tagNotExist": "Tag ini tidak ada",
+	"userNameInCorrect": "Nama pengguna atau kata sandi salah.",
+	"averageRating": "Penilaian rata-rata",
+	"popularity": "Kepopuleran",
+	"titleAToZ": "Judul : A sampai Z",
+	"titleZToA": "Judul: Z ke A",
+	"viewOnGoogleMaps": "Lihat di Google Maps",
+	"tooManyFaildedLogin": "Terlalu banyak upaya login yang gagal. Silakan coba lagi nanti."
 }
diff --git a/lib/l10n/intl_it.arb b/lib/l10n/intl_it.arb
index bb03805..8f4dcca 100644
--- a/lib/l10n/intl_it.arb
+++ b/lib/l10n/intl_it.arb
@@ -178,7 +178,7 @@
 	"german": "Tedesco",
 	"languageSuccess": "La lingua è stata aggiornata correttamente",
 	"agreeWithPrivacy": "Privacy e termini",
-	"PrivacyAndTerm": "Privacy e termini",
+	"privacyAndTerm": "Privacy e termini",
 	"iAgree": "Sono d'accordo con",
 	"currentPassword": "Password attuale",
 	"newPassword": "Nuova password",
@@ -350,11 +350,11 @@
 	"waitForPost": "In attesa di post prodotto",
 	"waitingForConfirmation": "In attesa di conferma",
 	"yourBookingDetail": "I dettagli della tua prenotazione",
-	"Egypt": "Egitto",
-	"India": "hindi",
-	"Korean": "coreano",
-	"Netherlands": "Olanda",
-	"Dutch": "olandese",
+	"egypt": "Egitto",
+	"india": "hindi",
+	"korean": "coreano",
+	"netherlands": "Olanda",
+	"dutch": "olandese",
 	"continues": "CONTINUA",
 	"refunds": "Rimborsi",
 	"UserNameInCorrect": "Il nome utente o password non sono corretti",
@@ -366,7 +366,7 @@
 	"saveForLater": "Salva per dopo",
 	"useNow": "Usalo ora",
 	"validUntilDate": "Valido fino alle {date}",
-	"Qty": "Quantità",
+	"qty": "Quantità",
 	"createdOn": "creato:",
 	"itemTotal": "Totale articolo:",
 	"orderId": "ID ordine:",
@@ -436,7 +436,7 @@
 	"uploadFile": "Caricare un file",
 	"uploading": "Caricamento",
 	"serbian": "Serbo",
-	"Polish": "Polish",
+	"polish": "Polish",
 	"persian": "Persian",
 	"kurdish": "Kurdish",
 	"active": "Attivo",
@@ -533,7 +533,7 @@
 	"shipped": "Spedito",
 	"storeInformation": "Informazione di negozio",
 	"updatePassword": "Aggiorna Password",
-	"DateDESC": "Data decrescente",
+	"dateDESC": "Data decrescente",
 	"addANewPost": "Aggiungi un nuovo post",
 	"addNewBlog": "Aggiungi nuovo blog",
 	"addNewPost": "Crea nuovo post",
@@ -543,12 +543,10 @@
 	"createNewPostSuccessfully": "Il tuo post è stato creato correttamente come bozza. Dai un'occhiata al tuo sito di amministrazione.",
 	"createPost": "Crea Post",
 	"dateASC": "Data crescente",
-	"dutch": "olandese",
 	"emptyComment": "Il tuo commento non può essere vuoto",
 	"emptySearch": "Non hai ancora cercato elementi. Cominciamo ora: ti aiuteremo.",
 	"hindi": "hindi",
 	"imageFeature": "Caratteristica dell'immagine",
-	"korean": "coreano",
 	"loginToComment": "Effettua il login per commentare",
 	"momentAgo": "un attimo fa",
 	"monthsAgo": "{month} mesi fa",
@@ -612,7 +610,6 @@
 	"greaterDistance": ">{total} km",
 	"addToCartMaximum": "La quantità massima è stata superata",
 	"playAll": "Giocare tutto",
-	"Tamil": "tamil",
 	"customerNote": "Nota del cliente",
 	"stop": "Stop",
 	"cantPickDateInThePast": "La data nel passato non è consentita",
@@ -824,5 +821,22 @@
 	"driverAssigned": "Conducente assegnato",
 	"enterYourPhone": "Inserisci il tuo numero di telefono per iniziare.",
 	"otpVerification": "Verifica OTP",
-	"weSentAnOTPTo": "È stato inviato un codice di autenticazione a"
+	"weSentAnOTPTo": "È stato inviato un codice di autenticazione a",
+	"accountIsPendingApproval": "Il conto è in attesa di approvazione.",
+	"canNotCreateOrder": "Impossibile creare l'ordine",
+	"canNotCreateUser": "Impossibile creare l'utente.",
+	"canNotGetPayments": "Impossibile ottenere metodi di pagamento",
+	"canNotGetShipping": "Impossibile ottenere i metodi di spedizione",
+	"canNotGetToken": "Impossibile ottenere informazioni sul token.",
+	"canNotSaveOrder": "Impossibile salvare l'ordine sul sito web",
+	"canNotUpdateInfo": "Impossibile aggiornare le informazioni sull'utente.",
+	"emptyShippingMsg": "Non sono disponibili opzioni di spedizione. Assicurati che il tuo indirizzo sia stato inserito correttamente o contattaci se hai bisogno di aiuto.",
+	"tagNotExist": "Questo tag non esiste",
+	"userNameInCorrect": "L'username o la password non sono corretti.",
+	"averageRating": "Voto medio",
+	"popularity": "Popolarità",
+	"titleAToZ": "Titolo: dalla A alla Z",
+	"titleZToA": "Titolo: dalla Z alla A",
+	"viewOnGoogleMaps": "Visualizza su Google Maps",
+	"tooManyFaildedLogin": "Troppi tentativi di accesso non riusciti. Per favore riprova più tardi."
 }
diff --git a/lib/l10n/intl_ja.arb b/lib/l10n/intl_ja.arb
index c382403..59079d8 100644
--- a/lib/l10n/intl_ja.arb
+++ b/lib/l10n/intl_ja.arb
@@ -176,7 +176,7 @@
 	"japanese": "日本語",
 	"languageSuccess": "言語が正常に更新されました",
 	"agreeWithPrivacy": "プライバシーと期間",
-	"PrivacyAndTerm": "プライバシーと期間",
+	"privacyAndTerm": "プライバシーと期間",
 	"iAgree": "私は同意します",
 	"currentPassword": "現在のパスワード",
 	"newPassword": "新しいパスワード",
@@ -350,11 +350,11 @@
 	"waitForPost": "ポスト製品を待っています",
 	"waitingForConfirmation": "確認を待ちます",
 	"yourBookingDetail": "予約の詳細",
-	"Egypt": "エジプト",
-	"India": "インド",
-	"Korean": "韓国語",
-	"Netherlands": "オランダ",
-	"Dutch": "オランダの",
+	"egypt": "エジプト",
+	"india": "インド",
+	"korean": "韓国語",
+	"netherlands": "オランダ",
+	"dutch": "オランダの",
 	"continues": "持続する",
 	"refunds": "払い戻し",
 	"UserNameInCorrect": "ユーザー名またはパスワードが正しくありません",
@@ -366,7 +366,7 @@
 	"saveForLater": "後で見るように保存",
 	"useNow": "今すぐ使用",
 	"validUntilDate": " {date}まで有効",
-	"Qty": "数量",
+	"qty": "数量",
 	"createdOn": "作成日：",
 	"itemTotal": "アイテム合計：",
 	"orderId": "注文ID：",
@@ -436,7 +436,7 @@
 	"uploadFile": "ファイルをアップロードする",
 	"uploading": "アップロード中",
 	"serbian": "セルビア語",
-	"Polish": "研磨",
+	"polish": "研磨",
 	"persian": "Persian",
 	"kurdish": "Kurdish",
 	"active": "アクティブ",
@@ -533,7 +533,7 @@
 	"shipped": "発送済み",
 	"storeInformation": "店舗情報",
 	"updatePassword": "パスワード更新",
-	"DateDESC": "日付の降順",
+	"dateDESC": "日付の降順",
 	"addANewPost": "新しい投稿を追加する",
 	"addNewBlog": "新しいブログを追加する",
 	"addNewPost": "新しい投稿を作成",
@@ -543,12 +543,10 @@
 	"createNewPostSuccessfully": "投稿は下書きとして正常に作成されました。管理サイトをご覧ください。",
 	"createPost": "投稿を作成する",
 	"dateASC": "日付の昇順",
-	"dutch": "オランダの",
 	"emptyComment": "コメントを空にすることはできません",
 	"emptySearch": "まだアイテムを検索していません。今から始めましょう-私たちはあなたを助けます。",
 	"hindi": "ヒンディー語",
 	"imageFeature": "画像機能",
-	"korean": "韓国語",
 	"loginToComment": "コメントするにはログインしてください",
 	"momentAgo": "少し前",
 	"monthsAgo": "{month} か月前",
@@ -612,7 +610,6 @@
 	"greaterDistance": ">{total} km",
 	"addToCartMaximum": "最大数量を超えました",
 	"playAll": "全部やる",
-	"Tamil": "タミル語",
 	"customerNote": "カスタマーノート",
 	"stop": "やめる",
 	"cantPickDateInThePast": "過去の日付は許可されていません",
@@ -824,5 +821,22 @@
 	"driverAssigned": "ドライバーの割り当て",
 	"enterYourPhone": "電話番号を入力して開始します。",
 	"otpVerification": "OTP 検証",
-	"weSentAnOTPTo": "認証コードが送信されました"
+	"weSentAnOTPTo": "認証コードが送信されました",
+	"accountIsPendingApproval": "アカウントは承認待ちです。",
+	"canNotCreateOrder": "オーダーを作成できません",
+	"canNotCreateUser": "ユーザーを作成できません。",
+	"canNotGetPayments": "支払い方法を取得できません",
+	"canNotGetShipping": "配送方法を取得できません",
+	"canNotGetToken": "トークン情報を取得できません。",
+	"canNotSaveOrder": "注文をウェブサイトに保存できません",
+	"canNotUpdateInfo": "ユーザー情報を更新できません。",
+	"emptyShippingMsg": "利用可能な配送オプションはありません。住所が正しく入力されていることを確認するか、サポートが必要な場合はお問い合わせください。",
+	"tagNotExist": "このタグは存在しません",
+	"userNameInCorrect": "ユーザー名またはパスワードが正しくありません。",
+	"averageRating": "平均評価",
+	"popularity": "人気",
+	"titleAToZ": "タイトル: A to Z",
+	"titleZToA": "タイトル: Z to A",
+	"viewOnGoogleMaps": "Google マップで見る",
+	"tooManyFaildedLogin": "ログイン試行の失敗が多すぎます。後でもう一度やり直してください。"
 }
diff --git a/lib/l10n/intl_km.arb b/lib/l10n/intl_km.arb
index 1ad3298..b2e03d4 100644
--- a/lib/l10n/intl_km.arb
+++ b/lib/l10n/intl_km.arb
@@ -1,15 +1,15 @@
 {
 	"@@locale": "km",
-	"DateDESC": "កាលបរិច្ឆេទធ្លាក់ចុះ",
-	"Dutch": "ហូឡង់",
-	"Egypt": "អេហ្ស៊ីប",
-	"India": "ហិណ្ឌូ",
-	"Korean": "កូរ៉េ",
-	"Netherlands": "ហូឡង់",
-	"Polish": "ប៉ូឡូញ",
-	"PrivacyAndTerm": "ភាពឯកជន និងរយៈពេល",
-	"Qty": "ចំនួន",
-	"Tamil": "តាមិល",
+	"dateDESC": "កាលបរិច្ឆេទធ្លាក់ចុះ",
+	"dutch": "ហូឡង់",
+	"egypt": "អេហ្ស៊ីប",
+	"india": "ហិណ្ឌូ",
+	"korean": "កូរ៉េ",
+	"netherlands": "ហូឡង់",
+	"polish": "ប៉ូឡូញ",
+	"privacyAndTerm": "ភាពឯកជន និងរយៈពេល",
+	"qty": "ចំនួន",
+	"tamil": "តាមិល",
 	"UserNameInCorrect": "ឈ្មោះ​អ្នក​ប្រើ ឬ​ពាក្យ​សម្ងាត់​មិន​ត្រឹមត្រូវ។",
 	"aboutUs": "អំពី​ពួក​យើង",
 	"accountSetup": "ការដំឡើងគណនី",
@@ -179,7 +179,6 @@
 	"download": "ទាញយក",
 	"draft": "សេចក្តីព្រាង",
 	"duration": "រយៈពេល",
-	"dutch": "ហូឡង់",
 	"earnings": "ប្រាក់ចំណូល",
 	"edit": "កែសម្រួល៖",
 	"editProductInfo": "កែសម្រួលព័ត៌មានផលិតផល",
@@ -282,7 +281,6 @@
 	"iwantToCreateAccount": "ខ្ញុំចង់បង្កើតគណនីមួយ។",
 	"japanese": "ជនជាតិជប៉ុន",
 	"keep": "រក្សា",
-	"korean": "កូរ៉េ",
 	"kurdish": "ឃឺដ",
 	"language": "ភាសា",
 	"languageSuccess": "ភាសាត្រូវបានធ្វើបច្ចុប្បន្នភាពដោយជោគជ័យ",
@@ -694,7 +692,6 @@
 	"yourUsernameEmail": "ឈ្មោះអ្នកប្រើ ឬអ៊ីមែលរបស់អ្នក។",
 	"zipCode": "លេខ​កូដ​តំបន់",
 	"zipCodeIsRequired": "បំពេញលេខកូដតំបន់ត្រូវបានទាមទារ",
-	"tamil": "តាមិល",
 	"khmer": "ខ្មែរ",
 	"expectedDeliveryDate": "កាលបរិច្ឆេទដឹកជញ្ជូនដែលរំពឹងទុក",
 	"pleaseSelectADate": "សូមជ្រើសរើសកាលបរិច្ឆេទកក់",
@@ -824,5 +821,22 @@
 	"driverAssigned": "អ្នកបើកបរត្រូវបានចាត់តាំង",
 	"enterYourPhone": "បញ្ចូលលេខទូរស័ព្ទរបស់អ្នកដើម្បីចាប់ផ្តើម។",
 	"otpVerification": "ការផ្ទៀងផ្ទាត់ OTP",
-	"weSentAnOTPTo": "លេខកូដផ្ទៀងផ្ទាត់ត្រូវបានផ្ញើទៅ"
+	"weSentAnOTPTo": "លេខកូដផ្ទៀងផ្ទាត់ត្រូវបានផ្ញើទៅ",
+	"accountIsPendingApproval": "គណនីកំពុងរង់ចាំការអនុម័ត។",
+	"canNotCreateOrder": "មិនអាចបង្កើតការបញ្ជាទិញបានទេ។",
+	"canNotCreateUser": "មិនអាចបង្កើតអ្នកប្រើប្រាស់បានទេ។",
+	"canNotGetPayments": "មិនអាចទទួលបានវិធីបង់ប្រាក់បានទេ។",
+	"canNotGetShipping": "មិនអាចទទួលបានវិធីសាស្រ្តដឹកជញ្ជូន",
+	"canNotGetToken": "មិនអាចទទួលបានព័ត៌មានសញ្ញាសម្ងាត់។",
+	"canNotSaveOrder": "មិនអាចរក្សាទុកការបញ្ជាទិញទៅគេហទំព័របានទេ។",
+	"canNotUpdateInfo": "មិនអាចធ្វើបច្ចុប្បន្នភាពព័ត៌មានអ្នកប្រើប្រាស់បានទេ។",
+	"emptyShippingMsg": "មិនមានជម្រើសដឹកជញ្ជូនទេ។ សូមប្រាកដថាអាសយដ្ឋានរបស់អ្នកត្រូវបានបញ្ចូលត្រឹមត្រូវ ឬទាក់ទងមកយើង ប្រសិនបើអ្នកត្រូវការជំនួយណាមួយ។",
+	"tagNotExist": "ស្លាកនេះមិនមានទេ។",
+	"userNameInCorrect": "ឈ្មោះ​អ្នក​ប្រើ ឬ​ពាក្យ​សម្ងាត់​មិន​ត្រឹមត្រូវ។",
+	"averageRating": "ការវាយតម្លៃជាមធ្យម",
+	"popularity": "ប្រជាប្រិយភាព",
+	"titleAToZ": "ចំណងជើង៖ A ដល់ Z",
+	"titleZToA": "ចំណងជើង៖ Z ដល់ A",
+	"viewOnGoogleMaps": "មើលនៅលើផែនទី Google",
+	"tooManyFaildedLogin": "ការព្យាយាមចូលដែលបរាជ័យច្រើនពេក។ សូម​ព្យាយាម​ម្តង​ទៀត​នៅ​ពេល​ក្រោយ។"
 }
diff --git a/lib/l10n/intl_kn.arb b/lib/l10n/intl_kn.arb
index f5affc7..816ef30 100644
--- a/lib/l10n/intl_kn.arb
+++ b/lib/l10n/intl_kn.arb
@@ -176,7 +176,7 @@
   "japanese": "ಜಪಾನೀಸ್",
   "languageSuccess": "ಭಾಷೆಯನ್ನು ಯಶಸ್ವಿಯಾಗಿ ನವೀಕರಿಸಲಾಗಿದೆ",
   "agreeWithPrivacy": "ಗೌಪ್ಯತೆಗೆ ಒಪ್ಪಿಗೆಯಿದೆ",
-  "PrivacyAndTerm": "ಗೌಪ್ಯತೆ ಮತ್ತು ನಿಯಮಗಳು",
+  "privacyAndTerm": "ಗೌಪ್ಯತೆ ಮತ್ತು ನಿಯಮಗಳು",
   "iAgree": "ನಾನು ಒಪ್ಪುತ್ತೇನೆ",
   "categories": "ವಿಭಾಗಗಳು",
   "stores": "ಅಂಗಡಿಗಳು",
@@ -351,10 +351,8 @@
   "thailand": "ಥೈಲ್ಯಾಂಡ್",
   "hungarian": "ಹಂಗೇರಿಯನ್",
   "vendorInfo": "ಮಾರಾಟಗಾರರ ಮಾಹಿತಿ",
-  "Netherlands": "ಡಚ್",
-  "Korean": "ಕೊರಿಯನ್",
-  "India": "ಹಿಂದಿ",
-  "Dutch": "ಡಚ್",
+  "netherlands": "ಡಚ್",
+  "india": "ಹಿಂದಿ",
   "useNow": "ಈಗ ಬೆಳೆಸಿ",
   "expired": "ಅವಧಿ ಮುಗಿದಿದೆ",
   "validUntilDate": "ದಿನಾಂಕದವರೆಗೆ ಮಾನ್ಯ {date}",
@@ -365,9 +363,9 @@
   "saveForLater": "ನಂತರಕ್ಕೆ ಉಳಿಸಿ",
   "refunds": "ಮರುಪಾವತಿ ಗಳು",
   "continues": "ಮುಂದುವರಿಯುತ್ತದೆ",
-  "Egypt": "ಈಜಿಪ್ಟ್",
+  "egypt": "ಈಜಿಪ್ಟ್",
   "UserNameInCorrect": "ಬಳಕೆದಾರ ಹೆಸರು ಅಥವಾ ಪಾಸ್ವರ್ಡ್ ತಪ್ಪಾಗಿದೆ",
-  "Qty": "ಪ್ರಮಾಣ",
+  "qty": "ಪ್ರಮಾಣ",
   "itemTotal": "ಒಟ್ಟು ವಸ್ತುಗಳು: ",
   "createdOn": "ರಂದು ರಚಿಸಲಾಗಿದೆ: ",
   "orderId": " ಐಡಿ: ",
@@ -458,7 +456,7 @@
   "confirmClearTheCart": "ನೀವು ಕಾರ್ಟ್ ಅನ್ನು ತೆರವುಗೊಳಿಸಲು ಖಚಿತವಾಗಿ ಬಯಸುವಿರಾ?",
   "keep": "ಇಟ್ಟುಕೊಳ್ಳಿ",
   "serbian": "ಸೈಬೀರಿಯನ್",
-  "Polish": "ಹೊಳಪು ಕೊಡು",
+  "polish": "ಹೊಳಪು ಕೊಡು",
   "persian": "ಪರ್ಷಿಯನ್",
   "kurdish": "ಕುರುಡಿಶ್",
   "pleaseSignInBeforeUploading": "ಯಾವುದೇ ಫೈಲ್ಗಳನ್ನು ಅಪ್ಲೋಡ್ ಮಾಡುವ ಮೊದಲು ದಯವಿಟ್ಟು ನಿಮ್ಮ ಖಾತೆಗೆ ಸೈನ್ ಇನ್ ಮಾಡಿ.",
@@ -567,7 +565,7 @@
   "relatedLayoutTitle": "ನೀವು ಪ್ರೀತಿಸಬಹುದು ಆದ ವಿಷಯಗಳು",
   "audioDetected": "ಆಡಿಯೋ ಐಟಂಗಳು ಪತ್ತೆಯಾಗಿದೆ. ನೀವು ಆಡಿಯೋ ಪ್ಲೇಯರ್ ಗೆ ಸೇರಿಸಲು ಬಯಸುವಿರಾ?",
   "dateASC": "ಆರೋಹಣ ದಿನಾಂಕ",
-  "DateDESC": "ಅವರೋಹಣ ದಿನಾಂಕ", "seeOrder": "ಆರ್ಡರ್ ನೋಡಿ",
+  "dateDESC": "ಅವರೋಹಣ ದಿನಾಂಕ", "seeOrder": "ಆರ್ಡರ್ ನೋಡಿ",
   "openMap": "ನಕ್ಷೆ",
   "allDeliveryOrders": "ಎಲ್ಲಾ ಆರ್ಡರ್ ಗಳು",
   "orderSummary": "ಆರ್ಡರ್ ಸಾರಾಂಶ",
@@ -611,7 +609,7 @@
   "greaterDistance": ">{total} ಕಿಮಿ",
   "addToCartMaximum": "ಗರಿಷ್ಠ ಪ್ರಮಾಣವನ್ನು ಮೀರಿದೆ",
   "playAll": "ಎಲ್ಲಾ ಪ್ಲೇ ಮಾಡಿ",
-  "Tamil": "ತಮಿಲ್",
+  "tamil": "ತಮಿಲ್",
   "customerNote": "ಸಹಕಾರ ಟಿಪ್ಪಣಿ",
   "stop": "ನಿಲ್ಲಿಸು"
 }
diff --git a/lib/l10n/intl_ko.arb b/lib/l10n/intl_ko.arb
index 814075c..ed0e17c 100644
--- a/lib/l10n/intl_ko.arb
+++ b/lib/l10n/intl_ko.arb
@@ -175,7 +175,7 @@
 	"japanese": "일본어",
 	"languageSuccess": "언어가 성공적으로 업데이트되었습니다.",
 	"agreeWithPrivacy": "개인 정보 보호 및 기간",
-	"PrivacyAndTerm": "개인 정보 보호 및 기간",
+	"privacyAndTerm": "개인 정보 보호 및 기간",
 	"iAgree": "동의합니다",
 	"categories": "카테고리",
 	"stores": "백화점",
@@ -333,10 +333,10 @@
 	"endsIn": " {timeLeft}로 끝남",
 	"hebrew": "헤브라이 사람",
 	"thailand": "타이",
-	"Egypt": "이집트",
-	"India": "힌디 어",
-	"Korean": "한국어",
-	"Netherlands": "네덜란드",
+	"egypt": "이집트",
+	"india": "힌디 어",
+	"korean": "한국어",
+	"netherlands": "네덜란드",
 	"additionalServices": "추가적인 서비스",
 	"adults": "어른",
 	"arabic": "아라비아 말",
@@ -354,7 +354,7 @@
 	"vendorInfo": "공급 업체 정보",
 	"waitingForConfirmation": "확인을 기다리는 중",
 	"yourBookingDetail": "예약 세부 정보",
-	"Dutch": "네덜란드 사람",
+	"dutch": "네덜란드 사람",
 	"continues": "잇다",
 	"refunds": "환불",
 	"UserNameInCorrect": "사용자 이름 또는 비밀번호가 올바르지 않습니다.",
@@ -366,7 +366,7 @@
 	"saveForLater": "나중에 저장",
 	"useNow": "지금 사용",
 	"validUntilDate": " {date}까지 유효",
-	"Qty": "수량",
+	"qty": "수량",
 	"createdOn": "에 만든:",
 	"itemTotal": "항목 합계 :",
 	"orderId": "주문 아이디:",
@@ -436,7 +436,7 @@
 	"uploadFile": "파일 업로드",
 	"uploading": "업로드 중",
 	"serbian": "세르비아 사람",
-	"Polish": "광택",
+	"polish": "광택",
 	"persian": "Persian",
 	"kurdish": "Kurdish",
 	"active": "유효한",
@@ -533,7 +533,7 @@
 	"shipped": "배송 됨",
 	"storeInformation": "가게 정보",
 	"updatePassword": "비밀번호 업데이트",
-	"DateDESC": "내림차순 날짜",
+	"dateDESC": "내림차순 날짜",
 	"addANewPost": "새 게시물 추가",
 	"addNewBlog": "새 블로그 추가",
 	"addNewPost": "새 게시물 작성",
@@ -543,12 +543,10 @@
 	"createNewPostSuccessfully": "게시물이 초안으로 작성되었습니다. 관리자 사이트를 살펴보십시오.",
 	"createPost": "게시물 작성",
 	"dateASC": "날짜 오름차순",
-	"dutch": "네덜란드 사람",
 	"emptyComment": "댓글은 비워 둘 수 없습니다.",
 	"emptySearch": "아직 항목을 검색하지 않았습니다. 지금 시작하겠습니다. 저희가 도와 드리겠습니다.",
 	"hindi": "힌디 어",
 	"imageFeature": "이미지 기능",
-	"korean": "한국어",
 	"loginToComment": "댓글을 남기려면 로그인하십시오",
 	"momentAgo": "조금 전",
 	"monthsAgo": "{month} 개월 전",
@@ -612,7 +610,6 @@
 	"greaterDistance": ">{total} km",
 	"addToCartMaximum": "최대 수량을 초과했습니다",
 	"playAll": "모두 재생",
-	"Tamil": "타밀 사람",
 	"customerNote": "고객 메모",
 	"stop": "중지",
 	"cantPickDateInThePast": "과거 날짜는 허용되지 않습니다.",
@@ -824,5 +821,22 @@
 	"driverAssigned": "할당된 드라이버",
 	"enterYourPhone": "시작하려면 전화번호를 입력하세요.",
 	"otpVerification": "OTP 인증",
-	"weSentAnOTPTo": "인증 코드가 전송되었습니다"
+	"weSentAnOTPTo": "인증 코드가 전송되었습니다",
+	"accountIsPendingApproval": "계정이 승인 대기 중입니다.",
+	"canNotCreateOrder": "주문을 생성할 수 없습니다",
+	"canNotCreateUser": "사용자를 생성할 수 없습니다.",
+	"canNotGetPayments": "결제 수단을 받을 수 없습니다",
+	"canNotGetShipping": "배송 방법을 얻을 수 없습니다",
+	"canNotGetToken": "토큰 정보를 가져올 수 없습니다.",
+	"canNotSaveOrder": "웹사이트에 주문을 저장할 수 없습니다",
+	"canNotUpdateInfo": "사용자 정보를 업데이트할 수 없습니다.",
+	"emptyShippingMsg": "배송 옵션이 없습니다. 주소가 올바르게 입력되었는지 확인하거나 도움이 필요한 경우 당사에 문의하십시오.",
+	"tagNotExist": "이 태그는 존재하지 않습니다",
+	"userNameInCorrect": "사용자 이름 또는 암호가 올바르지 않습니다.",
+	"averageRating": "평균 평점",
+	"popularity": "인기",
+	"titleAToZ": "제목: A to Z",
+	"titleZToA": "제목: Z to A",
+	"viewOnGoogleMaps": "Google 지도에서 보기",
+	"tooManyFaildedLogin": "실패한 로그인 시도가 너무 많습니다. 나중에 다시 시도 해주십시오."
 }
diff --git a/lib/l10n/intl_ku.arb b/lib/l10n/intl_ku.arb
index 9cd83e0..d935e8b 100644
--- a/lib/l10n/intl_ku.arb
+++ b/lib/l10n/intl_ku.arb
@@ -170,13 +170,12 @@
   "niceName": "ناوی جوان",
   "english": "ئینگلیزی",
   "vietnamese": "ڤێتنامی",
-  "kurdish": "کوردی",
   "spanish": "ئیسپانى",
   "chinese": "چینی",
   "japanese": "یابانی",
   "languageSuccess": "زمان بەسەرکەوتوویی گۆڕدرا",
   "agreeWithPrivacy": "مەرج و یاسای بەکارهێنان",
-  "PrivacyAndTerm": "مەرج و یاسای بەکارهێنان",
+  "privacyAndTerm": "مەرج و یاسای بەکارهێنان",
   "iAgree": "ڕازیم بە",
   "categories": "بەشەکان",
   "stores": "فرۆشگاکان",
@@ -344,9 +343,9 @@
   "saveForLater": "تۆمارکردن بۆ دوایی",
   "refunds": "قەرەبووکردنەوەکان",
   "continues": "بەردەوامبە",
-  "Egypt": "میسر",
+  "egypt": "میسر",
   "UserNameInCorrect": "ناوى بەکارهێنەر، ووشەى تێپەڕ هەڵەیە",
-  "Qty": "بڕ",
+  "qty": "بڕ",
   "itemTotal": "کۆی گشتى ئایتم: ",
   "createdOn": "دروستکراوە لە: ",
   "orderId": "ژمارەى داواکارى: ",
diff --git a/lib/l10n/intl_lo.arb b/lib/l10n/intl_lo.arb
index cbaf03a..c7d487c 100644
--- a/lib/l10n/intl_lo.arb
+++ b/lib/l10n/intl_lo.arb
@@ -1,15 +1,14 @@
 {
 	"@@locale": "lo",
-	"DateDESC": "ວັນທີຫຼຸດລົງ",
-	"Dutch": "ໂຮນລັງ",
-	"Egypt": "ອີຢີບ",
-	"India": "ຮິນດູ",
-	"Korean": "ເກົາຫຼີ",
-	"Netherlands": "ໂຮນລັງ",
-	"Polish": "ໂປໂລຍ",
-	"PrivacyAndTerm": "ຄວາມເປັນສ່ວນຕົວ ແລະ ກົດລະບຽບ",
-	"Qty": "ຈຳນວນ",
-	"Tamil": "ທະມິນ",
+	"dateDESC": "ວັນທີຫຼຸດລົງ",
+	"dutch": "ພາສາໂຮນລັງ",
+	"egypt": "ອີຢີບ",
+	"india": "ຮິນດູ",
+	"korean": "ພາສາເກົາຫຼີ",
+	"netherlands": "ໂຮນລັງ",
+	"polish": "ໂປໂລຍ",
+	"privacyAndTerm": "ຄວາມເປັນສ່ວນຕົວ ແລະ ກົດລະບຽບ",
+	"qty": "ຈຳນວນ",
 	"UserNameInCorrect": "ຊື່ຜູ້ໃຊ້ ຫຼືລະຫັດຜ່ານບໍ່ຖືກຕ້ອງ",
 	"aboutUs": "ກ່ຽວ​ກັບ​ພວກ​ເຮົາ",
 	"accountSetup": "ການ​ຕັ້ງ​ຄ່າ​ບັນ​ຊີ​",
@@ -181,7 +180,6 @@
 	"download": "ດາວໂຫລດ",
 	"draft": "ຮ່າງ",
 	"duration": "ໄລຍະເວລາ",
-	"dutch": "ພາສາໂຮນລັງ",
 	"earnings": "ລາຍຮັບ",
 	"edit": "ແກ້ໄຂ:",
 	"editProductInfo": "ແກ້ໄຂຂໍ້ມູນຜະລິດຕະພັນ",
@@ -287,7 +285,6 @@
 	"kannada": "ພາສາການາດາ",
 	"keep": "ຮັກສາໄວ້",
 	"khmer": "ພາສາກຳປູເຈຍ",
-	"korean": "ພາສາເກົາຫຼີ",
 	"kurdish": "ເຄີດິສ",
 	"language": "ພາສາຕ່າງໆ",
 	"languageSuccess": "ພາສາໄດ້ຖືກປັບປຸງສໍາເລັດແລ້ວ",
@@ -824,5 +821,22 @@
 	"driverAssigned": "ໄດເວີມອບຫມາຍ",
 	"enterYourPhone": "ໃສ່ເບີໂທລະສັບຂອງທ່ານເພື່ອເລີ່ມຕົ້ນ.",
 	"otpVerification": "ການກວດສອບ OTP",
-	"weSentAnOTPTo": "ລະຫັດການພິສູດຢືນຢັນໄດ້ຖືກສົ່ງໄປຫາ"
+	"weSentAnOTPTo": "ລະຫັດການພິສູດຢືນຢັນໄດ້ຖືກສົ່ງໄປຫາ",
+	"accountIsPendingApproval": "ບັນຊີແມ່ນລໍຖ້າການອະນຸມັດ.",
+	"canNotCreateOrder": "ບໍ່ສາມາດສ້າງຄໍາສັ່ງ",
+	"canNotCreateUser": "ບໍ່ສາມາດສ້າງຜູ້ໃຊ້ໄດ້.",
+	"canNotGetPayments": "ບໍ່ສາມາດຮັບວິທີການຈ່າຍເງິນໄດ້",
+	"canNotGetShipping": "ບໍ່ສາມາດໄດ້ຮັບວິທີການຂົນສົ່ງ",
+	"canNotGetToken": "ບໍ່ສາມາດຮັບຂໍ້ມູນ token ໄດ້.",
+	"canNotSaveOrder": "ບໍ່ສາມາດບັນທຶກຄຳສັ່ງຊື້ໃສ່ເວັບໄຊທ໌ໄດ້",
+	"canNotUpdateInfo": "ບໍ່ສາມາດອັບເດດຂໍ້ມູນຜູ້ໃຊ້ໄດ້.",
+	"emptyShippingMsg": "ບໍ່ມີທາງເລືອກໃນການຈັດສົ່ງ. ກະ​ລຸ​ນາ​ຮັບ​ປະ​ກັນ​ວ່າ​ທີ່​ຢູ່​ຂອງ​ທ່ານ​ໄດ້​ຖືກ​ປ້ອນ​ຖືກ​ຕ້ອງ​, ຫຼື​ຕິດ​ຕໍ່​ຫາ​ພວກ​ເຮົາ​ຖ້າ​ຫາກ​ວ່າ​ທ່ານ​ຕ້ອງ​ການ​ການ​ຊ່ວຍ​ເຫຼືອ​ໃດໆ​.",
+	"tagNotExist": "ບໍ່ມີແທັກນີ້",
+	"userNameInCorrect": "ຊື່ຜູ້ໃຊ້ ຫຼືລະຫັດຜ່ານບໍ່ຖືກຕ້ອງ.",
+	"averageRating": "ຄະແນນສະເລ່ຍ",
+	"popularity": "ຄວາມນິຍົມ",
+	"titleAToZ": "ຫົວຂໍ້: A ຫາ Z",
+	"titleZToA": "ຊື່: Z ຫາ A",
+	"viewOnGoogleMaps": "ເບິ່ງໃນແຜນທີ່ Google",
+	"tooManyFaildedLogin": "ພະຍາຍາມເຂົ້າສູ່ລະບົບລົ້ມເຫລວຫຼາຍຄັ້ງເກີນໄປ. ກະລຸນາລອງໃໝ່ໃນພາຍຫຼັງ."
 }
diff --git a/lib/l10n/intl_mr.arb b/lib/l10n/intl_mr.arb
index fe8038a..96d3eab 100644
--- a/lib/l10n/intl_mr.arb
+++ b/lib/l10n/intl_mr.arb
@@ -176,7 +176,7 @@
   "japanese": "जपानी",
   "languageSuccess": "भाषा यशस्वीरित्या अद्यतनित केली आहे",
   "agreeWithPrivacy": "गोपनीयता सहमती",
-  "PrivacyAndTerm": "गोपनीयता आणि अटी",
+  "privacyAndTerm": "गोपनीयता आणि अटी",
   "iAgree": "सोबत मी सहमत आहे",
   "categories": "वर्गवारी",
   "stores": "स्टोअर्स",
@@ -351,10 +351,8 @@
   "thailand": "थाई",
   "hungarian": "हंगेरियन",
   "vendorInfo": "विक्रेता माहिती",
-  "Netherlands": "डच",
-  "Korean": "कोरियन",
-  "India": "हिंदी",
-  "Dutch": "डच",
+  "netherlands": "डच",
+  "india": "हिंदी",
   "useNow": "आता वापरा",
   "expired": "कालबाह्य झाले",
   "validUntilDate": "पर्यंत वैध {date}",
@@ -365,9 +363,9 @@
   "saveForLater": "भविष्यासाठी राखून ठेवा",
   "refunds": "परतावा",
   "continues": "सुरू",
-  "Egypt": "इजिप्त",
+  "egypt": "इजिप्त",
   "UserNameInCorrect": "वापरकर्तानाव किंवा पासवर्ड चुकीचा आहे",
-  "Qty": "मात्रा",
+  "qty": "मात्रा",
   "itemTotal": "आयटम एकूण:",
   "createdOn": "रोजी तयार केले:",
   "orderId": "ऑर्डर आयडी:",
@@ -458,7 +456,7 @@
   "confirmClearTheCart": "तुम्हाला खात्री आहे की तुम्ही कार्ट साफ करू इच्छिता?",
   "keep": "ठेवा",
   "serbian": "सर्बियन",
-  "Polish": "पोलिश",
+  "polish": "पोलिश",
   "persian": "पर्शियन",
   "kurdish": "कुर्दिश",
   "pleaseSignInBeforeUploading": "कृपया कोणत्याही फायली अपलोड करण्यापूर्वी आपल्या खात्यात साइन इन करा.",
@@ -567,7 +565,7 @@
   "relatedLayoutTitle": "ज्या गोष्टी तुम्हाला आवडतील",
   "audioDetected": "ऑडिओ आयटम(s) आढळले. तुम्हाला ऑडिओ प्लेयरमध्ये जोडायचे आहे का??",
   "dateASC": "चढत्या तारखेला",
-  "DateDESC": "उतरण्याची तारीख",
+  "dateDESC": "उतरण्याची तारीख",
   "seeOrder": "ऑर्डर पहा",
   "openMap": "नकाशा",
   "allDeliveryOrders": "सर्व आदेश",
@@ -612,7 +610,7 @@
   "greaterDistance": ">{total} किमी",
   "addToCartMaximum": "कमाल प्रमाण ओलांडले गेले आहे",
   "playAll": "सगळे खेळा",
-  "Tamil": "तमिळ",
+  "tamil": "तमिळ",
   "customerNote": "ग्राहक टीप",
   "stop": "थांबा"
 } 
diff --git a/lib/l10n/intl_ms.arb b/lib/l10n/intl_ms.arb
index 0b98c7b..3b4d429 100644
--- a/lib/l10n/intl_ms.arb
+++ b/lib/l10n/intl_ms.arb
@@ -1,15 +1,14 @@
 {
 	"@@locale": "ms",
-	"DateDESC": "Tarikh menurun",
-	"Dutch": "Belanda",
-	"Egypt": "Mesir",
-	"India": "Hindi",
-	"Korean": "Korea",
-	"Netherlands": "Belanda",
-	"Polish": "Poland",
-	"PrivacyAndTerm": "Privasi dan Terma",
-	"Qty": "Kuantiti",
-	"Tamil": "Bahasa Tamil",
+	"dateDESC": "Tarikh menurun",
+	"dutch": "Belanda",
+	"egypt": "Mesir",
+	"india": "Hindi",
+	"korean": "Korea",
+	"netherlands": "Belanda",
+	"polish": "Poland",
+	"privacyAndTerm": "Privasi dan Terma",
+	"qty": "Kuantiti",
 	"UserNameInCorrect": "Nama pengguna atau kata laluan adalah salah",
 	"aboutUs": "Tentang kita",
 	"accountSetup": "Persediaan akaun",
@@ -180,7 +179,6 @@
 	"download": "Muat turun",
 	"draft": "Draf",
 	"duration": "Tempoh",
-	"dutch": "Belanda",
 	"earnings": "Pendapatan",
 	"edit": "Sunting:",
 	"editProductInfo": "Edit Maklumat Produk",
@@ -286,7 +284,6 @@
 	"kannada": "Kannada",
 	"keep": "Simpan",
 	"khmer": "Khmer",
-	"korean": "Korea",
 	"kurdish": "Orang Kurdi",
 	"language": "Bahasa",
 	"languageSuccess": "Bahasa berjaya dikemas kini",
@@ -824,5 +821,22 @@
 	"driverAssigned": "Pemandu Ditugaskan",
 	"enterYourPhone": "Masukkan nombor telefon anda untuk bermula.",
 	"otpVerification": "Pengesahan OTP",
-	"weSentAnOTPTo": "Kod pengesahan telah dihantar ke"
+	"weSentAnOTPTo": "Kod pengesahan telah dihantar ke",
+	"accountIsPendingApproval": "Akaun sedang menunggu kelulusan.",
+	"canNotCreateOrder": "Tidak boleh membuat pesanan",
+	"canNotCreateUser": "Tidak boleh mencipta pengguna.",
+	"canNotGetPayments": "Tidak boleh mendapatkan kaedah pembayaran",
+	"canNotGetShipping": "Tidak boleh mendapatkan kaedah penghantaran",
+	"canNotGetToken": "Tidak boleh mendapatkan Maklumat token.",
+	"canNotSaveOrder": "Tidak dapat menyimpan pesanan ke tapak web",
+	"canNotUpdateInfo": "Tidak dapat mengemas kini maklumat pengguna.",
+	"emptyShippingMsg": "Tiada pilihan penghantaran tersedia. Sila pastikan alamat anda telah dimasukkan dengan betul, atau hubungi kami jika anda memerlukan sebarang bantuan.",
+	"tagNotExist": "Tag ini tidak wujud",
+	"userNameInCorrect": "Nama pengguna atau kata laluan adalah salah.",
+	"averageRating": "Penilaian purata",
+	"popularity": "Populariti",
+	"titleAToZ": "Tajuk: A hingga Z",
+	"titleZToA": "Tajuk: Z hingga A",
+	"viewOnGoogleMaps": "Lihat di Peta Google",
+	"tooManyFaildedLogin": "Terlalu banyak percubaan log masuk yang gagal. Sila cuba sebentar lagi."
 }
diff --git a/lib/l10n/intl_my.arb b/lib/l10n/intl_my.arb
index 414496a..ac4fbc3 100644
--- a/lib/l10n/intl_my.arb
+++ b/lib/l10n/intl_my.arb
@@ -176,7 +176,7 @@
 	"japanese": "Japanese",
 	"languageSuccess": "ဘာသာစကားကိုအောင်မြင်စွာပြောင်းလဲလိုက်ပါပြီ။",
 	"agreeWithPrivacy": "ကိုယ်ရေးကိုယ်တာနှင့်စည်းမျဥ်းစည်းကမ်းများ",
-	"PrivacyAndTerm": "ကိုယ်ရေးကိုယ်တာနှင့်စည်းမျဥ်းစည်းကမ်းများ",
+	"privacyAndTerm": "ကိုယ်ရေးကိုယ်တာနှင့်စည်းမျဥ်းစည်းကမ်းများ",
 	"iAgree": "လက်ခံသဘောတူပါသည်",
 	"categories": "အမျိုးအစားများ",
 	"stores": "ဆိုင်များ",
@@ -351,10 +351,10 @@
 	"thailand": "Thai",
 	"hungarian": "Hungarian",
 	"vendorInfo": "ရောင်းချသူအကြောင်း",
-	"Netherlands": "Dutch",
-	"Korean": "Korean",
-	"India": "Hindi",
-	"Dutch": "Dutch",
+	"netherlands": "dutch",
+	"korean": "korean",
+	"india": "Hindi",
+	"dutch": "dutch",
 	"useNow": "ယခုအသုံးပြုရန်",
 	"expired": "Expired",
 	"validUntilDate": "Valid til {date}",
@@ -365,9 +365,9 @@
 	"saveForLater": "သိမ်းဆည်းပါ",
 	"refunds": "ပြန်အမ်းငွေများ",
 	"continues": "ဆက်လက်လုပ်ဆောင်သည်။",
-	"Egypt": "Egypt",
+	"egypt": "egypt",
 	"UserNameInCorrect": "နာမည် (သို့မဟုတ်) စကားဝှက်မှားယွင်းနေပါသည်။",
-	"Qty": "Qty",
+	"qty": "qty",
 	"itemTotal": "ပစ္စည်းများစုစုပေါင်း : ",
 	"createdOn": "Created on: ",
 	"orderId": "အော်ဒါအမှတ်: ",
@@ -458,7 +458,7 @@
 	"confirmClearTheCart": "သင်ဈေးခြင်းကိုရှင်းလင်းချင်တာသေချာပြီလား?",
 	"keep": "Keep",
 	"serbian": "Serbian",
-	"Polish": "Polish",
+	"polish": "Polish",
 	"persian": "Persian",
 	"kurdish": "Kurdish",
 	"pleaseSignInBeforeUploading": "Please sign in to your account before uploading any files.",
@@ -562,12 +562,10 @@
 	"createPost": "Create post",
 	"emptyComment": "Your comment can not be empty",
 	"hindi": "Hindi",
-	"korean": "Korean",
-	"dutch": "Dutch",
 	"relatedLayoutTitle": "သင်ကြိုက်လောက်မည့်ပစ္စည်းများ",
 	"audioDetected": "Audio item(s) detected. Do you want to add to Audio Player?",
 	"dateASC": "ငယ်စဉ်ကြီးလိုက်ရက်စွဲ",
-	"DateDESC": "ကြီးစဉ်ငယ်လိုက်ရက်စွဲ ",
+	"dateDESC": "ကြီးစဉ်ငယ်လိုက်ရက်စွဲ ",
 	"seeOrder": "အော်ဒါကြည့်ရန်",
 	"openMap": "မြေပုံ",
 	"allDeliveryOrders": "အော်ဒါအကုန်",
@@ -612,7 +610,6 @@
 	"greaterDistance": ">{total} km",
 	"addToCartMaximum": "အများဆုံးလက်ခံနိုင်သည့်ပမာဏကျော်လွန်သွားပါပြီ",
 	"playAll": "Play All",
-	"Tamil": "Tamil",
 	"customerNote": "ဝယ်ယူသူမှတ်စု",
 	"stop": "Stop",
 	"youCanOnlyOrderSingleStore": "တစ်ခါလျှင်ဆိုင်တစ်ခုထဲကနေပဲဝယ်ယူလို့ရပါသည်။.",
@@ -824,5 +821,22 @@
 	"driverAssigned": "ယာဉ်မောင်း တာဝန်ပေးအပ်ထားသည်။",
 	"enterYourPhone": "စတင်ရန် သင့်ဖုန်းနံပါတ်ကို ထည့်ပါ။",
 	"otpVerification": "OTP အတည်ပြုခြင်း။",
-	"weSentAnOTPTo": "အထောက်အထားစိစစ်ခြင်းကုဒ်ကို ပေးပို့ပြီးဖြစ်သည်။"
+	"weSentAnOTPTo": "အထောက်အထားစိစစ်ခြင်းကုဒ်ကို ပေးပို့ပြီးဖြစ်သည်။",
+	"accountIsPendingApproval": "အကောင့်သည် အတည်ပြုချက်ကို ဆိုင်းငံ့ထားသည်။",
+	"canNotCreateOrder": "အော်ဒါဖန်တီး၍မရပါ။",
+	"canNotCreateUser": "အသုံးပြုသူကို ဖန်တီး၍မရပါ။",
+	"canNotGetPayments": "ငွေပေးချေမှုနည်းလမ်းများကို မရနိုင်ပါ။",
+	"canNotGetShipping": "ပို့ဆောင်ရေးနည်းလမ်းများ မရပါ။",
+	"canNotGetToken": "တိုကင်အချက်အလက် မရနိုင်ပါ။",
+	"canNotSaveOrder": "မှာယူမှုကို ဝဘ်ဆိုက်တွင် သိမ်းဆည်း၍မရပါ။",
+	"canNotUpdateInfo": "အသုံးပြုသူအချက်အလက်ကို အပ်ဒိတ်လုပ်၍မရပါ။",
+	"emptyShippingMsg": "ပို့ဆောင်ရန် ရွေးချယ်စရာများ မရှိပါ။ သင့်လိပ်စာကို မှန်ကန်စွာ ထည့်သွင်းထားကြောင်း သေချာစေပါ၊ သို့မဟုတ် သင်အကူအညီလိုအပ်ပါက ကျွန်ုပ်တို့ထံ ဆက်သွယ်ပါ။",
+	"tagNotExist": "ဤ tag မရှိပါ။",
+	"userNameInCorrect": "အသုံးပြုသူအမည် သို့မဟုတ် စကားဝှက်သည် မမှန်ပါ။",
+	"averageRating": "ပျမ်းမျှ အဆင့်သတ်မှတ်ချက်",
+	"popularity": "ကျော်ကြားမှု",
+	"titleAToZ": "ခေါင်းစဉ်- A မှ Z",
+	"titleZToA": "ခေါင်းစဉ်- Z မှ A",
+	"viewOnGoogleMaps": "Google Maps တွင်ကြည့်ရှုပါ။",
+	"tooManyFaildedLogin": "အကောင့်ဝင်ရန် ကြိုးပမ်းမှုများစွာ မအောင်မြင်ပါ။ နောက်မှ ထပ်စမ်းကြည့်ပါ။"
 }
diff --git a/lib/l10n/intl_nl.arb b/lib/l10n/intl_nl.arb
index 0f59304..0ba1640 100644
--- a/lib/l10n/intl_nl.arb
+++ b/lib/l10n/intl_nl.arb
@@ -1,10 +1,10 @@
 {
 	"@@locale": "nl",
-	"Egypt": "Egypte",
-	"India": "Hindi",
-	"Korean": "Koreaans",
-	"Netherlands": "Nederland",
-	"PrivacyAndTerm": "Privacy en termijn",
+	"egypt": "Egypte",
+	"india": "Hindi",
+	"korean": "Koreaans",
+	"netherlands": "Nederland",
+	"privacyAndTerm": "Privacy en termijn",
 	"aboutUs": "Over Ons",
 	"addListing": "Vermelding toevoegen",
 	"addToCart": "Voeg toe aan winkelmandje",
@@ -354,7 +354,7 @@
 	"yourUsernameEmail": "Uw gebruikersnaam of e-mailadres",
 	"zipCode": "Postcode",
 	"zipCodeIsRequired": "Het postcode-veld is verplicht",
-	"Dutch": "Nederlands",
+	"dutch": "Nederlands",
 	"continues": "Doorgaan met",
 	"refunds": "Restitutie",
 	"UserNameInCorrect": "De gebruikersnaam of het wachtwoord is niet correct",
@@ -366,7 +366,7 @@
 	"saveForLater": "Bewaar voor later",
 	"useNow": "Gebruik nu",
 	"validUntilDate": "Geldig tot {date}",
-	"Qty": "aantal",
+	"qty": "aantal",
 	"createdOn": "Gemaakt op:",
 	"itemTotal": "Item totaal:",
 	"orderId": "Order ID:",
@@ -436,7 +436,7 @@
 	"uploadFile": "Upload bestand",
 	"uploading": "Uploaden",
 	"serbian": "Sirbî ",
-	"Polish": "Pools",
+	"polish": "Pools",
 	"persian": "Persian",
 	"kurdish": "Kurdish",
 	"active": "Actief",
@@ -533,7 +533,7 @@
 	"shipped": "verzonden",
 	"storeInformation": "Informatie opslaan",
 	"updatePassword": "Vernieuw wachtwoord",
-	"DateDESC": "Datum aflopend",
+	"dateDESC": "Datum aflopend",
 	"addANewPost": "Voeg een nieuw bericht toe",
 	"addNewBlog": "Nieuwe blog toevoegen",
 	"addNewPost": "Nieuw bericht maken",
@@ -543,12 +543,10 @@
 	"createNewPostSuccessfully": "Je bericht is succesvol aangemaakt als concept. Neem een kijkje op uw admin-site.",
 	"createPost": "Post maken",
 	"dateASC": "Datum oplopend",
-	"dutch": "Nederlands",
 	"emptyComment": "Uw opmerking mag niet leeg zijn",
 	"emptySearch": "U heeft nog niet naar items gezocht. Laten we nu beginnen - we zullen u helpen.",
 	"hindi": "Hindi",
 	"imageFeature": "Afbeeldingsfunctie",
-	"korean": "Koreaans",
 	"loginToComment": "Gelieve in te loggen om te reageren",
 	"momentAgo": "een moment geleden",
 	"monthsAgo": "{month} maanden geleden",
@@ -612,7 +610,6 @@
 	"greaterDistance": ">{total} km",
 	"addToCartMaximum": "De maximale hoeveelheid is overschreden",
 	"playAll": "Speel alles",
-	"Tamil": "tamil",
 	"customerNote": "klant nota",
 	"stop": "Hou op",
 	"cantPickDateInThePast": "Datum in het verleden is niet toegestaan",
@@ -824,5 +821,22 @@
 	"driverAssigned": "Bestuurder toegewezen",
 	"enterYourPhone": "Voer je telefoonnummer in om te beginnen.",
 	"otpVerification": "OTP-verificatie",
-	"weSentAnOTPTo": "Er is een authenticatiecode verzonden naar:"
+	"weSentAnOTPTo": "Er is een authenticatiecode verzonden naar:",
+	"accountIsPendingApproval": "Het account wacht op goedkeuring.",
+	"canNotCreateOrder": "Kan bestelling niet maken",
+	"canNotCreateUser": "Kan de gebruiker niet aanmaken.",
+	"canNotGetPayments": "Kan geen betalingsmethoden krijgen",
+	"canNotGetShipping": "Kan geen verzendmethoden krijgen",
+	"canNotGetToken": "Kan tokeninfo niet ophalen.",
+	"canNotSaveOrder": "Kan de bestelling niet opslaan op de website",
+	"canNotUpdateInfo": "Kan gebruikersgegevens niet bijwerken.",
+	"emptyShippingMsg": "Er zijn geen verzendopties beschikbaar. Zorg ervoor dat uw adres correct is ingevoerd, of neem contact met ons op als u hulp nodig heeft.",
+	"tagNotExist": "Deze tag bestaat niet",
+	"userNameInCorrect": "De gebruikersnaam of het wachtwoord is niet correct.",
+	"averageRating": "Gemiddelde score",
+	"popularity": "populariteit",
+	"titleAToZ": "Titel: A tot Z",
+	"titleZToA": "Titel: Z tot A",
+	"viewOnGoogleMaps": "Bekijk op Google Maps",
+	"tooManyFaildedLogin": "Te veel mislukte inlogpogingen. Probeer het later opnieuw."
 }
diff --git a/lib/l10n/intl_pl.arb b/lib/l10n/intl_pl.arb
index 42a90aa..bcd4165 100644
--- a/lib/l10n/intl_pl.arb
+++ b/lib/l10n/intl_pl.arb
@@ -1,12 +1,12 @@
 {
 	"@@locale": "pl",
-	"Dutch": "holenderski",
-	"Egypt": "Egipt",
-	"India": "hinduski",
-	"Korean": "koreański",
-	"Netherlands": "holenderski",
-	"PrivacyAndTerm": "Prywatność i okres obowiązywania",
-	"Qty": "Ilość",
+	"dutch": "holenderski",
+	"egypt": "Egipt",
+	"india": "hinduski",
+	"korean": "koreański",
+	"netherlands": "holenderski",
+	"privacyAndTerm": "Prywatność i okres obowiązywania",
+	"qty": "Ilość",
 	"UserNameInCorrect": "Nazwa użytkownika lub hasło są nieprawidłowe",
 	"aboutUs": "O nas",
 	"active": "aktywny",
@@ -455,7 +455,7 @@
 	"yourUsernameEmail": "Twoja nazwa użytkownika lub adres e-mail",
 	"zipCode": "Kod pocztowy",
 	"zipCodeIsRequired": "Pole kodu pocztowego jest wymagane",
-	"Polish": "Polskie",
+	"polish": "Polskie",
 	"persian": "Persian",
 	"kurdish": "Kurdish",
 	"confirmClearTheCart": "Czy na pewno chcesz wyczyścić koszyk?",
@@ -533,7 +533,7 @@
 	"shipped": "Wysłane",
 	"storeInformation": "Przechowaj informację",
 	"updatePassword": "Aktualizować hasło",
-	"DateDESC": "Data malejąco",
+	"dateDESC": "Data malejąco",
 	"addANewPost": "Dodaj nowy post",
 	"addNewBlog": "Dodaj nowy blog",
 	"addNewPost": "Utwórz nowy post",
@@ -543,12 +543,10 @@
 	"createNewPostSuccessfully": "Twój post został pomyślnie utworzony jako wersja robocza. Proszę spojrzeć na swoją stronę administratora.",
 	"createPost": "Utwórz wpis",
 	"dateASC": "Data rosnąco",
-	"dutch": "holenderski",
 	"emptyComment": "Twój komentarz nie może być pusty",
 	"emptySearch": "Nie szukałeś jeszcze przedmiotów. Zacznijmy teraz - pomożemy Ci.",
 	"hindi": "hinduski",
 	"imageFeature": "Funkcja obrazu",
-	"korean": "koreański",
 	"loginToComment": "Zaloguj się, aby skomentować",
 	"momentAgo": "Przed chwilą",
 	"monthsAgo": "{month} miesięcy temu",
@@ -612,7 +610,6 @@
 	"greaterDistance": ">{total} km",
 	"addToCartMaximum": "Przekroczono maksymalną ilość",
 	"playAll": "Odtwórz wszystko",
-	"Tamil": "Tamil",
 	"customerNote": "Notatka dla klienta",
 	"stop": "Zatrzymać",
 	"cantPickDateInThePast": "Data z przeszłości jest niedozwolona",
@@ -824,5 +821,22 @@
 	"driverAssigned": "Przypisany kierowca",
 	"enterYourPhone": "Wprowadź swój numer telefonu, aby rozpocząć.",
 	"otpVerification": "Weryfikacja OTP",
-	"weSentAnOTPTo": "Kod uwierzytelniający został wysłany do"
+	"weSentAnOTPTo": "Kod uwierzytelniający został wysłany do",
+	"accountIsPendingApproval": "Konto oczekuje na zatwierdzenie.",
+	"canNotCreateOrder": "Nie można utworzyć zamówienia",
+	"canNotCreateUser": "Nie można utworzyć użytkownika.",
+	"canNotGetPayments": "Nie mogę uzyskać metod płatności",
+	"canNotGetShipping": "Nie można uzyskać metod wysyłki",
+	"canNotGetToken": "Nie można uzyskać informacji o tokenie.",
+	"canNotSaveOrder": "Nie mogę zapisać zamówienia na stronie",
+	"canNotUpdateInfo": "Nie można zaktualizować informacji o użytkowniku.",
+	"emptyShippingMsg": "Brak dostępnych opcji wysyłki. Upewnij się, że Twój adres został wpisany poprawnie lub skontaktuj się z nami, jeśli potrzebujesz pomocy.",
+	"tagNotExist": "Ten tag nie istnieje",
+	"userNameInCorrect": "Nazwa użytkownika lub hasło są nieprawidłowe.",
+	"averageRating": "średnia ocena",
+	"popularity": "popularność",
+	"titleAToZ": "Tytuł: A do Z",
+	"titleZToA": "Tytuł: Z do A",
+	"viewOnGoogleMaps": "Zobacz w Mapach Google",
+	"tooManyFaildedLogin": "Zbyt wiele nieudanych prób logowania. Spróbuj ponownie później."
 }
diff --git a/lib/l10n/intl_pt.arb b/lib/l10n/intl_pt.arb
index 9a4d014..66c39c6 100644
--- a/lib/l10n/intl_pt.arb
+++ b/lib/l10n/intl_pt.arb
@@ -176,7 +176,7 @@
 	"japanese": "Japonês",
 	"languageSuccess": "O idioma foi atualizado corretamente",
 	"agreeWithPrivacy": "Acordo de Privacidade",
-	"PrivacyAndTerm": "Política de Privacidade e Termos",
+	"privacyAndTerm": "Política de Privacidade e Termos",
 	"iAgree": "estou de acordo com",
 	"currentPassword": "Senha atual",
 	"newPassword": "Nova senha",
@@ -350,11 +350,11 @@
 	"waitForPost": "Esperando pela postagem do produto",
 	"waitingForConfirmation": "Aguardando confirmação",
 	"yourBookingDetail": "Detalhes da sua reserva",
-	"Egypt": "Egito",
-	"India": "Índia",
-	"Korean": "coreano",
-	"Netherlands": "Países Baixos",
-	"Dutch": "holandês",
+	"egypt": "Egito",
+	"india": "Índia",
+	"korean": "coreano",
+	"netherlands": "Países Baixos",
+	"dutch": "holandês",
 	"continues": "Continuar",
 	"refunds": "Reembolsos",
 	"UserNameInCorrect": "O nome de usuário ou senha está incorreto",
@@ -366,7 +366,7 @@
 	"saveForLater": "Guardar para depois",
 	"useNow": "Use agora",
 	"validUntilDate": "Válido até {date}",
-	"Qty": "Qtd",
+	"qty": "Qtd",
 	"createdOn": "Criado em:",
 	"itemTotal": "Total de itens:",
 	"orderId": "ID do pedido:",
@@ -436,7 +436,7 @@
 	"uploadFile": "Subir arquivo",
 	"uploading": "Upload",
 	"serbian": "Sérvio ",
-	"Polish": "Polonês",
+	"polish": "Polonês",
 	"persian": "Persian",
 	"kurdish": "Kurdish",
 	"active": "Ativo",
@@ -533,7 +533,7 @@
 	"shipped": "Enviado",
 	"storeInformation": "Guardar informação",
 	"updatePassword": "Atualizar senha",
-	"DateDESC": "Data decrescente",
+	"dateDESC": "Data decrescente",
 	"addANewPost": "Adicionar uma nova postagem",
 	"addNewBlog": "Adicionar Novo Blog",
 	"addNewPost": "Criar nova postagem",
@@ -543,12 +543,10 @@
 	"createNewPostSuccessfully": "Sua postagem foi criada com sucesso como um rascunho. Por favor, dê uma olhada em seu site de administração.",
 	"createPost": "Criar postagem",
 	"dateASC": "Data crescente",
-	"dutch": "holandês",
 	"emptyComment": "Seu comentário não pode estar vazio",
 	"emptySearch": "Você ainda não procurou por itens. Vamos começar agora - vamos ajudá-lo.",
 	"hindi": "hindi",
 	"imageFeature": "Característica de imagem",
-	"korean": "coreano",
 	"loginToComment": "Por favor faça o login para comentar",
 	"momentAgo": "há um momento atrás",
 	"monthsAgo": "{month} meses atrás",
@@ -612,7 +610,6 @@
 	"greaterDistance": ">{total} km",
 	"addToCartMaximum": "A quantidade máxima foi excedida",
 	"playAll": "Jogar tudo",
-	"Tamil": "tâmil",
 	"customerNote": "Nota do Cliente",
 	"stop": "Pare",
 	"cantPickDateInThePast": "Data no passado não é permitida",
@@ -824,5 +821,22 @@
 	"driverAssigned": "Motorista atribuído",
 	"enterYourPhone": "Coloque seu número de telefone para começar.",
 	"otpVerification": "Verificação OTP",
-	"weSentAnOTPTo": "Um código de autenticação foi enviado para"
+	"weSentAnOTPTo": "Um código de autenticação foi enviado para",
+	"accountIsPendingApproval": "A conta está pendente de aprovação.",
+	"canNotCreateOrder": "Não é possível criar o pedido",
+	"canNotCreateUser": "Não é possível criar o usuário.",
+	"canNotGetPayments": "Não consigo obter as formas de pagamento",
+	"canNotGetShipping": "Não é possível obter métodos de envio",
+	"canNotGetToken": "Não é possível obter informações do token.",
+	"canNotSaveOrder": "Não é possível salvar o pedido no site",
+	"canNotUpdateInfo": "Não é possível atualizar as informações do usuário.",
+	"emptyShippingMsg": "Não há opções de envio disponíveis. Certifique-se de que seu endereço foi inserido corretamente ou entre em contato conosco se precisar de ajuda.",
+	"tagNotExist": "Esta etiqueta não existe",
+	"userNameInCorrect": "O nome de usuário ou senha está incorreto.",
+	"averageRating": "Classificação média",
+	"popularity": "Popularidade",
+	"titleAToZ": "Título: A a Z",
+	"titleZToA": "Título: Z a A",
+	"viewOnGoogleMaps": "Ver no Google Maps",
+	"tooManyFaildedLogin": "Muitas tentativas de login com falha. Por favor, tente novamente mais tarde."
 }
diff --git a/lib/l10n/intl_ro.arb b/lib/l10n/intl_ro.arb
index c716251..1c7a42c 100644
--- a/lib/l10n/intl_ro.arb
+++ b/lib/l10n/intl_ro.arb
@@ -176,7 +176,7 @@
 	"japanese": "Japoneză",
 	"languageSuccess": "Limba a fost schimbată cu success",
 	"agreeWithPrivacy": "Politică de confidențialitate",
-	"PrivacyAndTerm": "Termeni și condiții",
+	"privacyAndTerm": "Termeni și condiții",
 	"iAgree": "Sunteți de acord cu",
 	"currentPassword": "Parola Curentă",
 	"newPassword": "Parola Nouă",
@@ -350,11 +350,11 @@
 	"waitForPost": "Se așteaptă postarea produsului",
 	"waitingForConfirmation": "Se așteaptă confirmarea",
 	"yourBookingDetail": "Detaliile rezervării",
-	"Egypt": "Egipt",
-	"India": "India",
-	"Korean": "Coreeană",
-	"Netherlands": "Olanda",
-	"Dutch": "Olandeză",
+	"egypt": "Egipt",
+	"india": "india",
+	"korean": "coreeană",
+	"netherlands": "Olanda",
+	"dutch": "olandeză",
 	"continues": "Continuă",
 	"refunds": "Rambursări",
 	"UserNameInCorrect": "Numele de utilizator sau parola este incorectă",
@@ -366,7 +366,7 @@
 	"saveForLater": "Salvează pentru mai tarziu",
 	"useNow": "Folosește acum",
 	"validUntilDate": "Valabil până la {date}",
-	"Qty": "Cantitate",
+	"qty": "Cantitate",
 	"createdOn": "Creat pe:",
 	"itemTotal": "Total articole:",
 	"orderId": "Comanda ID:",
@@ -436,7 +436,7 @@
 	"uploadFile": "Încarcă fișier",
 	"uploading": "Se încarcă",
 	"serbian": "Sârbă",
-	"Polish": "Poloneză",
+	"polish": "Poloneză",
 	"persian": "Persană",
 	"kurdish": "Kurdă",
 	"active": "Activ",
@@ -533,7 +533,7 @@
 	"shipped": "Transportat",
 	"storeInformation": "Informații despre magazin",
 	"updatePassword": "Actualizați parola",
-	"DateDESC": "Data descrescătoare",
+	"dateDESC": "Data descrescătoare",
 	"addANewPost": "Adăugați o postare nouă",
 	"addNewBlog": "Adăugați un blog nou",
 	"addNewPost": "Creați postare nouă",
@@ -543,12 +543,10 @@
 	"createNewPostSuccessfully": "Postarea dvs. a fost creată cu succes ca schiță. Vă rugăm să aruncați o privire la site-ul dvs. de administrare.",
 	"createPost": "Creați o postare",
 	"dateASC": "Data ascendentă",
-	"dutch": "olandeză",
 	"emptyComment": "Comentariul dvs. nu poate fi gol",
 	"emptySearch": "Nu ați căutat încă articole. Să începem acum - vă vom ajuta.",
 	"hindi": "Hindi",
 	"imageFeature": "Caracteristică imagine",
-	"korean": "coreeană",
 	"loginToComment": "Vă rugăm să vă autentificați pentru a comenta",
 	"momentAgo": "acum un moment",
 	"monthsAgo": " Acum{month} luni",
@@ -612,7 +610,6 @@
 	"greaterDistance": ">{total} km",
 	"addToCartMaximum": "Cantitatea maximă a fost depășită",
 	"playAll": "Redă toate",
-	"Tamil": "Tamil",
 	"customerNote": "Nota clientului",
 	"stop": "Stop",
 	"cantPickDateInThePast": "Data din trecut nu este permisă",
@@ -824,5 +821,22 @@
 	"driverAssigned": "Sofer atribuit",
 	"enterYourPhone": "Introduceți numărul dvs. de telefon pentru a începe.",
 	"otpVerification": "Verificare OTP",
-	"weSentAnOTPTo": "Un cod de autentificare a fost trimis către"
+	"weSentAnOTPTo": "Un cod de autentificare a fost trimis către",
+	"accountIsPendingApproval": "Contul este în așteptarea aprobării.",
+	"canNotCreateOrder": "Nu se poate crea comanda",
+	"canNotCreateUser": "Nu se poate crea utilizatorul.",
+	"canNotGetPayments": "Nu pot obține metode de plată",
+	"canNotGetShipping": "Nu pot obține metode de expediere",
+	"canNotGetToken": "Nu pot obține informații despre simbol.",
+	"canNotSaveOrder": "Nu se poate salva comanda pe site",
+	"canNotUpdateInfo": "Nu se pot actualiza informațiile despre utilizator.",
+	"emptyShippingMsg": "Nu există opțiuni de livrare disponibile. Vă rugăm să vă asigurați că adresa dvs. a fost introdusă corect sau să ne contactați dacă aveți nevoie de ajutor.",
+	"tagNotExist": "Această etichetă nu există",
+	"userNameInCorrect": "Numele de utilizator sau parola este incorecta.",
+	"averageRating": "Rata medie",
+	"popularity": "Popularitate",
+	"titleAToZ": "Titlu: de la A la Z",
+	"titleZToA": "Titlu: de la Z la A",
+	"viewOnGoogleMaps": "Vizualizați pe Google Maps",
+	"tooManyFaildedLogin": "Prea multe încercări eșuate de conectare. Vă rugăm să încercați din nou mai târziu."
 }
diff --git a/lib/l10n/intl_ru.arb b/lib/l10n/intl_ru.arb
index b8c6180..5c82495 100644
--- a/lib/l10n/intl_ru.arb
+++ b/lib/l10n/intl_ru.arb
@@ -177,7 +177,7 @@
 	"japanese": "Японский",
 	"languageSuccess": "Язык успешно обновлён",
 	"agreeWithPrivacy": "Политика конфиденциальности и условия использования",
-	"PrivacyAndTerm": "Политика конфиденциальности и условия использования",
+	"privacyAndTerm": "Политика конфиденциальности и условия использования",
 	"iAgree": "Я согласен с",
 	"categories": "Категории",
 	"stores": "Магазины",
@@ -350,11 +350,11 @@
 	"vendorInfo": "Информация о продавце",
 	"waitingForConfirmation": "Ожидание подтверждения",
 	"yourBookingDetail": "Детали вашего бронирования",
-	"Egypt": "Египет",
-	"India": "хинди",
-	"Korean": "корейский язык",
-	"Netherlands": "Нидерланды",
-	"Dutch": "Голландский",
+	"egypt": "Египет",
+	"india": "хинди",
+	"korean": "корейский язык",
+	"netherlands": "Нидерланды",
+	"dutch": "Голландский",
 	"continues": "Продолжить",
 	"refunds": "возвраты",
 	"UserNameInCorrect": "Имя пользователя или пароль неверны",
@@ -366,7 +366,7 @@
 	"saveForLater": "Сохранить на потом",
 	"useNow": "Использовать сейчас",
 	"validUntilDate": "Действительно до {date}",
-	"Qty": "Кол-во",
+	"qty": "Кол-во",
 	"createdOn": "Создано на:",
 	"itemTotal": "Итого:",
 	"orderId": "Номер заказа:",
@@ -436,7 +436,7 @@
 	"uploadFile": "Загрузить файл",
 	"uploading": "Выгрузка",
 	"serbian": "сербский ",
-	"Polish": "Polish",
+	"polish": "Polish",
 	"persian": "Persian",
 	"kurdish": "Kurdish",
 	"active": "активный",
@@ -533,7 +533,7 @@
 	"shipped": "Отправленный",
 	"storeInformation": "Информация о магазине",
 	"updatePassword": "Обновить пароль",
-	"DateDESC": "Дата по убыванию",
+	"dateDESC": "Дата по убыванию",
 	"addANewPost": "Добавить новое сообщение",
 	"addNewBlog": "Добавить новый блог",
 	"addNewPost": "Создать новую запись",
@@ -543,12 +543,10 @@
 	"createNewPostSuccessfully": "Ваше сообщение было успешно создано как черновик. Пожалуйста, взгляните на свой админ-сайт.",
 	"createPost": "Создать сообщение",
 	"dateASC": "Дата по возрастанию",
-	"dutch": "Голландский",
 	"emptyComment": "Ваш комментарий не может быть пустым",
 	"emptySearch": "Вы еще не искали товары. Начнем сейчас - мы вам поможем.",
 	"hindi": "хинди",
 	"imageFeature": "Особенности изображения",
-	"korean": "корейский язык",
 	"loginToComment": "Пожалуйста, войдите, чтобы оставить комментарий",
 	"momentAgo": "минуту назад",
 	"monthsAgo": "{month} месяцев назад",
@@ -612,7 +610,6 @@
 	"greaterDistance": ">{total} км",
 	"addToCartMaximum": "Превышено максимальное количество",
 	"playAll": "Играть все",
-	"Tamil": "тамильский",
 	"customerNote": "Примечание клиента",
 	"stop": "СТОП",
 	"cantPickDateInThePast": "Дата в прошлом не допускается",
@@ -824,5 +821,22 @@
 	"driverAssigned": "Назначен водитель",
 	"enterYourPhone": "Введите свой номер телефона, чтобы начать.",
 	"otpVerification": "Проверка одноразового пароля",
-	"weSentAnOTPTo": "Код аутентификации был отправлен на"
+	"weSentAnOTPTo": "Код аутентификации был отправлен на",
+	"accountIsPendingApproval": "Аккаунт ожидает одобрения.",
+	"canNotCreateOrder": "Не могу создать заказ",
+	"canNotCreateUser": "Не могу создать пользователя.",
+	"canNotGetPayments": "Не могу получить способы оплаты",
+	"canNotGetShipping": "Не могу получить способы доставки",
+	"canNotGetToken": "Не удается получить информацию о токене.",
+	"canNotSaveOrder": "Не могу сохранить заказ на сайте",
+	"canNotUpdateInfo": "Не могу обновить информацию о пользователе.",
+	"emptyShippingMsg": "Вариантов доставки нет. Пожалуйста, убедитесь, что ваш адрес был введен правильно, или свяжитесь с нами, если вам нужна помощь.",
+	"tagNotExist": "Этот тег не существует",
+	"userNameInCorrect": "Имя пользователя или пароль неверны.",
+	"averageRating": "средний рейтинг",
+	"popularity": "популярность",
+	"titleAToZ": "Название: От А до Я",
+	"titleZToA": "Название: От Я до А",
+	"viewOnGoogleMaps": "Посмотреть на Google Картах",
+	"tooManyFaildedLogin": "Слишком много неудачных попыток входа. Пожалуйста, попробуйте позже."
 }
diff --git a/lib/l10n/intl_sk.arb b/lib/l10n/intl_sk.arb
index cc7a97b..f4c93fd 100644
--- a/lib/l10n/intl_sk.arb
+++ b/lib/l10n/intl_sk.arb
@@ -1,15 +1,15 @@
 {
 	"@@locale": "sk",
-	"DateDESC": "Dátum zostupne",
-	"Dutch": "holandský",
-	"Egypt": "egypt",
-	"India": "hindčina",
-	"Korean": "kórejský",
-	"Netherlands": "holandský",
-	"Polish": "poľský",
-	"PrivacyAndTerm": "Osob. údaje a obch. podmienky",
-	"Qty": "Množstvo",
-	"Tamil": "tamil",
+	"dateDESC": "Dátum zostupne",
+	"dutch": "holandský",
+	"egypt": "egypt",
+	"india": "hindčina",
+	"korean": "kórejský",
+	"netherlands": "holandský",
+	"polish": "poľský",
+	"privacyAndTerm": "Osob. údaje a obch. podmienky",
+	"qty": "Množstvo",
+	"tamil": "tamil",
 	"UserNameInCorrect": "Používateľské meno alebo heslo je nesprávne",
 	"aboutUs": "O nás",
 	"accountSetup": "Nastavenie účtu",
@@ -185,7 +185,6 @@
 	"download": "Stiahnuť ▼",
 	"draft": "Návrh",
 	"duration": "Trvanie",
-	"dutch": "holandský",
 	"earnings": "Zárobok",
 	"edit": "Upraviť",
 	"editProductInfo": "Upraviť informácie o produkte",
@@ -293,7 +292,6 @@
 	"kannada": "kanadský",
 	"keep": "Zachovať",
 	"khmer": "khmer",
-	"korean": "kórejský",
 	"kurdish": "kurdský",
 	"language": "Jazyk",
 	"languageSuccess": "Jazyk bol úspešne aktualizovaný",
@@ -623,7 +621,6 @@
 	"swedish": "švédsky",
 	"tags": "Tagy",
 	"takePicture": "Odfotiť",
-	"tamil": "tamil",
 	"tapSelectLocation": "Klepnutím vyberte miesto",
 	"tax": "Daň",
 	"thailand": "thai",
@@ -824,5 +821,22 @@
 	"driverAssigned": "Vodič pridelený",
 	"enterYourPhone": "Začnite zadaním telefónneho čísla.",
 	"otpVerification": "Overenie OTP",
-	"weSentAnOTPTo": "Overovací kód bol odoslaný na adresu"
+	"weSentAnOTPTo": "Overovací kód bol odoslaný na adresu",
+	"accountIsPendingApproval": "Účet čaká na schválenie.",
+	"canNotCreateOrder": "Nie je možné vytvoriť objednávku",
+	"canNotCreateUser": "Nie je možné vytvoriť používateľa.",
+	"canNotGetPayments": "Nie je možné získať spôsoby platby",
+	"canNotGetShipping": "Nie je možné získať spôsoby dopravy",
+	"canNotGetToken": "Nie je možné získať informácie o tokene.",
+	"canNotSaveOrder": "Objednávku nie je možné uložiť na web",
+	"canNotUpdateInfo": "Nie je možné aktualizovať informácie o používateľovi.",
+	"emptyShippingMsg": "Nie sú k dispozícii žiadne možnosti dopravy. Uistite sa, že vaša adresa bola zadaná správne, alebo nás kontaktujte, ak potrebujete pomoc.",
+	"tagNotExist": "Táto značka neexistuje",
+	"userNameInCorrect": "Používateľské meno alebo heslo je nesprávne.",
+	"averageRating": "Priemerné hodnotenie",
+	"popularity": "Popularita",
+	"titleAToZ": "Názov: A až Z",
+	"titleZToA": "Názov: Z po A",
+	"viewOnGoogleMaps": "Zobraziť na Google Maps",
+	"tooManyFaildedLogin": "Príliš veľa neúspešných pokusov o prihlásenie. Skúste neskôr prosím."
 }
diff --git a/lib/l10n/intl_sq.arb b/lib/l10n/intl_sq.arb
index 10be537..192aaa3 100644
--- a/lib/l10n/intl_sq.arb
+++ b/lib/l10n/intl_sq.arb
@@ -1,15 +1,15 @@
 {
 	"@@locale": "sq",
-	"DateDESC": "Data në zbritje",
-	"Dutch": "holandez",
-	"Egypt": "Egjipti",
-	"India": "Hindi",
-	"Korean": "korean",
-	"Netherlands": "holandez",
-	"Polish": "polonisht",
-	"PrivacyAndTerm": "Privatësia dhe afati",
-	"Qty": "Qty",
-	"Tamil": "tamil",
+	"dateDESC": "Data në zbritje",
+	"dutch": "holandez",
+	"egypt": "Egjipti",
+	"india": "Hindi",
+	"korean": "korean",
+	"netherlands": "holandez",
+	"polish": "polonisht",
+	"privacyAndTerm": "Privatësia dhe afati",
+	"qty": "qty",
+	"tamil": "tamil",
 	"UserNameInCorrect": "Emri i përdoruesit ose fjalëkalimi është i pasaktë",
 	"aboutUs": "rreth nesh",
 	"accountSetup": "Konfigurimi i llogarisë",
@@ -199,7 +199,6 @@
 	"download": "Shkarko",
 	"draft": "drafti",
 	"duration": "kohëzgjatje",
-	"dutch": "holandez",
 	"earnings": "Fitimet",
 	"edit": "Redakto:",
 	"editProductInfo": "Redakto informacionin e produktit",
@@ -310,7 +309,6 @@
 	"kannada": "Kannada",
 	"keep": "Mbaj",
 	"khmer": "Khmer",
-	"korean": "korean",
 	"kurdish": "kurd",
 	"language": "gjuhë",
 	"languageSuccess": "Gjuha është përditësuar me sukses",
@@ -664,7 +662,6 @@
 	"swedish": "suedez",
 	"tags": "Etiketat",
 	"takePicture": "Bëj foto",
-	"tamil": "tamil",
 	"tapSelectLocation": "Trokit për të zgjedhur këtë vendndodhje",
 	"tax": "taksë",
 	"thailand": "Thai",
@@ -824,5 +821,22 @@
 	"driverAssigned": "Caktuar shofer",
 	"enterYourPhone": "Futni numrin tuaj të telefonit për të filluar.",
 	"otpVerification": "Verifikimi OTP",
-	"weSentAnOTPTo": "Një kod vërtetimi është dërguar te"
+	"weSentAnOTPTo": "Një kod vërtetimi është dërguar te",
+	"accountIsPendingApproval": "Llogaria është në pritje të miratimit.",
+	"canNotCreateOrder": "Nuk mund të krijohet rend",
+	"canNotCreateUser": "Përdoruesi nuk mund të krijohet.",
+	"canNotGetPayments": "Nuk mund të merren mënyrat e pagesës",
+	"canNotGetShipping": "Nuk mund të merren metodat e transportit",
+	"canNotGetToken": "Nuk mund të merret informacioni i shenjës.",
+	"canNotSaveOrder": "Porosia nuk mund të ruhet në faqen e internetit",
+	"canNotUpdateInfo": "Informacioni i përdoruesit nuk mund të përditësohet.",
+	"emptyShippingMsg": "Nuk ka opsione transporti në dispozicion. Ju lutemi sigurohuni që adresa juaj të jetë futur saktë ose na kontaktoni nëse keni nevojë për ndihmë.",
+	"tagNotExist": "Kjo etiketë nuk ekziston",
+	"userNameInCorrect": "Emri i përdoruesit ose fjalëkalimi është i pasaktë.",
+	"averageRating": "Vleresim mesatar",
+	"popularity": "Popullariteti",
+	"titleAToZ": "Titulli: A deri në Z",
+	"titleZToA": "Titulli: Z në A",
+	"viewOnGoogleMaps": "Shikoni në Google Maps",
+	"tooManyFaildedLogin": "Shumë përpjekje të dështuara për hyrje. Ju lutemi provoni përsëri më vonë."
 }
diff --git a/lib/l10n/intl_sr.arb b/lib/l10n/intl_sr.arb
index 0d56b7b..ab023aa 100644
--- a/lib/l10n/intl_sr.arb
+++ b/lib/l10n/intl_sr.arb
@@ -175,7 +175,7 @@
 	"japanese": "Јапански",
 	"languageSuccess": "Језик је успешно ажуриран",
 	"agreeWithPrivacy": "Правила о приватности",
-	"PrivacyAndTerm": " Заштита података и услови ",
+	"privacyAndTerm": " Заштита података и услови ",
 	"iAgree": "слажем се",
 	"currentPassword": "Тренутна лозинка",
 	"newPassword": "Нова лозинка",
@@ -349,11 +349,11 @@
 	"waitForPost": "Чека се пост производ",
 	"waitingForConfirmation": "Сачекајте потврду",
 	"yourBookingDetail": "Детаљи резервације",
-	"Egypt": "Египат",
-	"India": "Индија",
-	"Korean": "корејски",
-	"Netherlands": "Холандија",
-	"Dutch": "Холандски",
+	"egypt": "Египат",
+	"india": "Индија",
+	"korean": "korejski",
+	"netherlands": "Холандија",
+	"dutch": "Holandski",
 	"continues": "Настави",
 	"refunds": "повраћај новца",
 	"UserNameInCorrect": "Корисничко име или лозинка нетачни",
@@ -365,7 +365,7 @@
 	"saveForLater": "Фиксни попусти на производе",
 	"useNow": "Користите сада",
 	"validUntilDate": "Датум истека {date}",
-	"Qty": "износ",
+	"qty": "износ",
 	"createdOn": "Направљено дана:",
 	"itemTotal": "укупне ставке:",
 	"orderId": "Auftragsnummer:",
@@ -418,11 +418,10 @@
 	"location": "Локација",
 	"options": "Опције",
 	"serbian": "Српски",
-	"Polish": "Пољски",
+	"polish": "Пољски",
 	"persian": "Persian",
 	"kurdish": "Kurdish",
-	"DateDESC": "Datum opadajući",
-	"Tamil": "Tamilski",
+	"dateDESC": "Datum opadajući",
 	"accountSetup": "Podešavanje računa",
 	"active": "aktivan",
 	"addAName": "Dodajte ime",
@@ -472,7 +471,6 @@
 	"direction": "Pravac",
 	"distance": "~{total} km",
 	"draft": "Skica",
-	"dutch": "Holandski",
 	"edit": "Uredite:",
 	"editWithoutColon": "Uredi",
 	"emailDoesNotExist": "Račun e -pošte koji ste unijeli ne postoji. Molimo pokušajte ponovo.",
@@ -505,7 +503,6 @@
 	"incorrectPassword": "Netačna lozinka",
 	"invalidPhoneNumber": "Nevažeći telefonski broj",
 	"keep": "Zadržati",
-	"korean": "korejski",
 	"latestProducts": "Najnoviji proizvodi",
 	"link": "veza",
 	"listBannerType": "Lista banera",
@@ -824,5 +821,22 @@
 	"driverAssigned": "Driver Assigned",
 	"enterYourPhone": "Unesite svoj broj telefona da započnete.",
 	"otpVerification": "OTP verifikacija",
-	"weSentAnOTPTo": "Kod za autentifikaciju je poslan na"
+	"weSentAnOTPTo": "Kod za autentifikaciju je poslan na",
+	"accountIsPendingApproval": "Račun čeka odobrenje.",
+	"canNotCreateOrder": "Ne mogu kreirati red",
+	"canNotCreateUser": "Ne mogu kreirati korisnika.",
+	"canNotGetPayments": "Ne mogu dobiti načine plaćanja",
+	"canNotGetShipping": "Ne mogu dobiti metode dostave",
+	"canNotGetToken": "Ne mogu dobiti informacije o tokenu.",
+	"canNotSaveOrder": "Nije moguće sačuvati narudžbu na web stranici",
+	"canNotUpdateInfo": "Nije moguće ažurirati podatke o korisniku.",
+	"emptyShippingMsg": "Nema dostupnih opcija dostave. Provjerite je li vaša adresa ispravno unesena ili nas kontaktirajte ako vam je potrebna pomoć.",
+	"tagNotExist": "Ova oznaka ne postoji",
+	"userNameInCorrect": "Korisničko ime ili lozinka su netačni.",
+	"averageRating": "Просечна оцена",
+	"popularity": "Popularnost",
+	"titleAToZ": "Наслов: А до З",
+	"titleZToA": "Наслов: З до А",
+	"viewOnGoogleMaps": "Погледајте на Гоогле мапама",
+	"tooManyFaildedLogin": "Превише неуспешних покушаја пријаве. Покушајте поново касније."
 }
diff --git a/lib/l10n/intl_sv.arb b/lib/l10n/intl_sv.arb
index 4131568..8080ec6 100644
--- a/lib/l10n/intl_sv.arb
+++ b/lib/l10n/intl_sv.arb
@@ -1,13 +1,13 @@
 {
 	"@@locale": "sv",
-	"Dutch": "holländska",
-	"Egypt": "Egypten",
-	"India": "hindi",
-	"Korean": "korean",
-	"Netherlands": "holländska",
-	"Polish": "putsa",
-	"PrivacyAndTerm": "SEKRETESS OCH VILLKOR",
-	"Qty": "st",
+	"dutch": "holländska",
+	"egypt": "Egypten",
+	"india": "hindi",
+	"korean": "korean",
+	"netherlands": "holländska",
+	"polish": "putsa",
+	"privacyAndTerm": "SEKRETESS OCH VILLKOR",
+	"qty": "st",
 	"UserNameInCorrect": "Användarnamnet eller lösenordet är felaktigt",
 	"aboutUs": "om oss",
 	"active": "Aktiva",
@@ -533,7 +533,7 @@
 	"shipped": "levereras",
 	"storeInformation": "Butiksinformation",
 	"updatePassword": "Uppdatera lösenord",
-	"DateDESC": "Datum fallande",
+	"dateDESC": "Datum fallande",
 	"addANewPost": "Lägg till ett nytt inlägg",
 	"addNewBlog": "Lägg till ny blogg",
 	"addNewPost": "Skapa nytt inlägg",
@@ -543,12 +543,10 @@
 	"createNewPostSuccessfully": "Ditt inlägg har skapats som ett utkast. Ta en titt på din administratörswebbplats.",
 	"createPost": "Skapa inlägg",
 	"dateASC": "Datum stigande",
-	"dutch": "holländska",
 	"emptyComment": "Din kommentar får inte vara tom",
 	"emptySearch": "Du har inte sökt efter objekt än. Låt oss börja nu - vi hjälper dig.",
 	"hindi": "hindi",
 	"imageFeature": "Bildfunktion",
-	"korean": "korean",
 	"loginToComment": "Logga in för att kommentera",
 	"momentAgo": "en stund sedan",
 	"monthsAgo": "{month} månader sedan",
@@ -612,7 +610,6 @@
 	"greaterDistance": ">{total} km",
 	"addToCartMaximum": "Maxmängden har överskridits",
 	"playAll": "Spela alla",
-	"Tamil": "tamil",
 	"customerNote": "Kundanteckning",
 	"stop": "Sluta",
 	"cantPickDateInThePast": "Tidigare datum är inte tillåtet",
@@ -824,5 +821,22 @@
 	"driverAssigned": "Förare tilldelad",
 	"enterYourPhone": "Ange ditt telefonnummer för att komma igång.",
 	"otpVerification": "OTP-verifiering",
-	"weSentAnOTPTo": "En autentiseringskod har skickats till"
+	"weSentAnOTPTo": "En autentiseringskod har skickats till",
+	"accountIsPendingApproval": "Kontot väntar på godkännande.",
+	"canNotCreateOrder": "Kan inte skapa beställning",
+	"canNotCreateUser": "Kan inte skapa användaren.",
+	"canNotGetPayments": "Kan inte få betalningsmetoder",
+	"canNotGetShipping": "Kan inte få leveransmetoder",
+	"canNotGetToken": "Kan inte få information om token.",
+	"canNotSaveOrder": "Det går inte att spara beställningen på webbplatsen",
+	"canNotUpdateInfo": "Kan inte uppdatera användarinformation.",
+	"emptyShippingMsg": "Det finns inga tillgängliga fraktalternativ. Se till att din adress har angetts korrekt, eller kontakta oss om du behöver hjälp.",
+	"tagNotExist": "Den här taggen finns inte",
+	"userNameInCorrect": "Användarnamnet eller lösenordet är felaktigt.",
+	"averageRating": "Genomsnittligt betyg",
+	"popularity": "popularitet",
+	"titleAToZ": "Titel: A till Ö",
+	"titleZToA": "Titel: Ö till A",
+	"viewOnGoogleMaps": "Visa på Google Maps",
+	"tooManyFaildedLogin": "För många misslyckade inloggningsförsök. Vänligen försök igen senare."
 }
diff --git a/lib/l10n/intl_sw.arb b/lib/l10n/intl_sw.arb
index 12f3f72..1909e7b 100644
--- a/lib/l10n/intl_sw.arb
+++ b/lib/l10n/intl_sw.arb
@@ -1,15 +1,15 @@
 {
 	"@@locale": "sw",
-	"DateDESC": "Tarehe ya kushuka",
-	"Dutch": "Kiholanzi",
-	"Egypt": "Misri",
-	"India": "Kihindi",
-	"Korean": "Kikorea",
-	"Netherlands": "Kiholanzi",
-	"Polish": "Kipolishi",
-	"PrivacyAndTerm": "Faragha na Vigezo",
-	"Qty": "Kiasi",
-	"Tamil": "Kitamil",
+	"dateDESC": "Tarehe ya kushuka",
+	"dutch": "Kiholanzi",
+	"egypt": "Misri",
+	"india": "Kihindi",
+	"korean": "Kikorea",
+	"netherlands": "Kiholanzi",
+	"polish": "Kipolishi",
+	"privacyAndTerm": "Faragha na Vigezo",
+	"qty": "Kiasi",
+	"tamil": "Kitamil",
 	"UserNameInCorrect": "Jina la mtumiaji au nenosiri si sahihi",
 	"aboutUs": "Kuhusu sisi",
 	"accountSetup": "Unda akaunti",
@@ -185,7 +185,6 @@
 	"download": "Pakua",
 	"draft": "Rasimu",
 	"duration": "Muda",
-	"dutch": "Kiholanzi",
 	"earnings": "Mapato",
 	"edit": "Hariri:",
 	"editProductInfo": "Hariri Maelezo ya Bidhaa",
@@ -293,7 +292,6 @@
 	"kannada": "Kannada",
 	"keep": "Weka",
 	"khmer": "Khmer",
-	"korean": "Kikorea",
 	"kurdish": "Kikurdi",
 	"language": "Lugha",
 	"languageSuccess": "Lugha imesasishwa kwa mafanikio",
@@ -624,7 +622,6 @@
 	"swedish": "Kiswidi",
 	"tags": "Lebo",
 	"takePicture": "Kuchukua picha",
-	"tamil": "Kitamil",
 	"tapSelectLocation": "Gusa ili kuchagua eneo hili",
 	"tax": "Kodi",
 	"thailand": "Thai",
@@ -824,5 +821,22 @@
 	"driverAssigned": "Dereva Amekabidhiwa",
 	"enterYourPhone": "Weka nambari yako ya simu ili kuanza.",
 	"otpVerification": "Uthibitishaji wa OTP",
-	"weSentAnOTPTo": "Msimbo wa uthibitishaji umetumwa kwa"
+	"weSentAnOTPTo": "Msimbo wa uthibitishaji umetumwa kwa",
+	"accountIsPendingApproval": "Akaunti inasubiri kuidhinishwa.",
+	"canNotCreateOrder": "Haiwezi kuunda mpangilio",
+	"canNotCreateUser": "Haiwezi kuunda mtumiaji.",
+	"canNotGetPayments": "Haiwezi kupata njia za malipo",
+	"canNotGetShipping": "Haiwezi kupata njia za usafirishaji",
+	"canNotGetToken": "Haiwezi kupata Maelezo ya ishara.",
+	"canNotSaveOrder": "Haiwezi kuhifadhi agizo kwenye tovuti",
+	"canNotUpdateInfo": "Haiwezi kusasisha maelezo ya mtumiaji.",
+	"emptyShippingMsg": "Hakuna chaguo za usafirishaji zinazopatikana. Tafadhali hakikisha kwamba anwani yako imeingizwa ipasavyo, au wasiliana nasi ikiwa unahitaji usaidizi wowote.",
+	"tagNotExist": "Lebo hii haipo",
+	"userNameInCorrect": "Jina la mtumiaji au nenosiri si sahihi.",
+	"averageRating": "Ukadiriaji Wastani",
+	"popularity": "Umaarufu",
+	"titleAToZ": "Kichwa: A hadi Z",
+	"titleZToA": "Kichwa: Z hadi A",
+	"viewOnGoogleMaps": "Tazama kwenye Ramani za Google",
+	"tooManyFaildedLogin": "Majaribio mengi sana ya kuingia yameshindwa. Tafadhali jaribu tena baadae."
 }
diff --git a/lib/l10n/intl_ta.arb b/lib/l10n/intl_ta.arb
index 3d4c04d..beddc2d 100644
--- a/lib/l10n/intl_ta.arb
+++ b/lib/l10n/intl_ta.arb
@@ -176,7 +176,7 @@
 	"japanese": "ஜப்பானிஸ்",
 	"languageSuccess": "மொழி வெற்றிகரமாக மாற்றப்பட்டுள்ளது",
 	"agreeWithPrivacy": "தனியுரிமையுடன்  உடன்படுகின்றேன்",
-	"PrivacyAndTerm": "தனியுரிமையும் விதிமுறையும் ",
+	"privacyAndTerm": "தனியுரிமையும் விதிமுறையும் ",
 	"iAgree": "உடன்படுகின்றேன்",
 	"categories": "கேட்டகரிஸ்",
 	"stores": "கடைகள்",
@@ -351,10 +351,10 @@
 	"thailand": "தாய்",
 	"hungarian": "ஹங்கேரியன்",
 	"vendorInfo": "விற்பனையாளரின் தகவல்",
-	"Netherlands": "நெதர்லாந்து",
-	"Korean": "கொறியன்",
-	"India": "ஹிந்தி ",
-	"Dutch": "டச்சு",
+	"netherlands": "நெதர்லாந்து",
+	"korean": "கொரிய",
+	"india": "ஹிந்தி ",
+	"dutch": "டச்சு",
 	"useNow": "பயன்படுத்துங்கள்",
 	"expired": "காலாவதியாகிவிட்டது",
 	"validUntilDate": "செல்லுபடியாகும் திகதி",
@@ -365,9 +365,9 @@
 	"saveForLater": "பின் தேவைக்காக சேர்த்துக்கொள்ள",
 	"refunds": "ரீபண்ட்ஸ்",
 	"continues": "தொடர்க",
-	"Egypt": "எகிப்து",
+	"egypt": "எகிப்து",
 	"UserNameInCorrect": "பாவனையாளர் பெயர் அல்லது பாஸ்வேர்ட் பிழையானது",
-	"Qty": "அளவு  ",
+	"qty": "அளவு  ",
 	"itemTotal": "பொருட்களின் தொகை",
 	"createdOn": "உருவாக்கப்பட்ட",
 	"orderId": "ஓடர் ஐடி:",
@@ -458,12 +458,11 @@
 	"confirmClearTheCart": "உறுதியாக கார்ட்டை அழிப்பதா?",
 	"keep": "வைத்துக்கொள்ளவும் ",
 	"serbian": "சேர்பியன்",
-	"Polish": "பொலிஷ்",
+	"polish": "பொலிஷ்",
 	"persian": "பாரசீகம்",
 	"kurdish": "குர்திஷ்",
 	"pleaseSignInBeforeUploading": "பதிவேற்றுவதற்கு முன் உள்நுழைக",
 	"maximumFileSizeMb": "அதிகபட்ச கோப்பு அளவு :",
-	"Tamil": "தமிழ்",
 	"added": "சேர்க்கப்பட்டது",
 	"afternoon": "மதியம்",
 	"amount": "தொகை",
@@ -546,7 +545,7 @@
 	"warningCurrencyMessageForWallet": "வாலட் அம்சத்திற்கு தற்போது தேர்ந்தெடுக்கப்பட்ட நாணயம் கிடைக்கவில்லை, அதை {default_currency}என மாற்றவும்",
 	"youCanOnlyOrderSingleStore": "நீங்கள் ஒரு கடையில் மட்டுமே வாங்க முடியும்.",
 	"yourOrderHasBeenAdded": "உங்கள் ஆர்டர் சேர்க்கப்பட்டது",
-	"DateDESC": "இறங்கும் தேதி",
+	"dateDESC": "இறங்கும் தேதி",
 	"accountSetup": "கணக்கு அமைவு",
 	"addANewPost": "புதிய இடுகையைச் சேர்க்கவும்",
 	"addASlug": "ஒரு ஸ்லக் சேர்க்கவும்",
@@ -585,7 +584,6 @@
 	"deliveryManagement": "டெலிவரி",
 	"deliveryNotificationError": "தகவல் இல்லை.\nஇந்த உத்தரவு நீக்கப்பட்டது.",
 	"distance": "~{total} கி.மீ",
-	"dutch": "டச்சு",
 	"emptyComment": "உங்கள் கருத்து காலியாக இருக்க முடியாது",
 	"emptySearch": "நீங்கள் இன்னும் உருப்படிகளைத் தேடவில்லை. இப்போது தொடங்குவோம் - நாங்கள் உங்களுக்கு உதவுவோம்.",
 	"enterYourEmailOrUsername": "உங்கள் மின்னஞ்சல் அல்லது பயனர் பெயரை உள்ளிடவும்",
@@ -607,7 +605,6 @@
 	"imageFeature": "படத்தின் அம்சம்",
 	"incorrectPassword": "தவறான கடவுச்சொல்",
 	"invalidPhoneNumber": "தவறான தொலைபேசி எண்",
-	"korean": "கொரிய",
 	"latestProducts": "சமீபத்திய தயாரிப்புகள்",
 	"link": "இணைப்பு",
 	"listBannerType": "பட்டியல் பேனர் வகை",
@@ -824,5 +821,22 @@
 	"driverAssigned": "டிரைவர் நியமிக்கப்பட்டார்",
 	"enterYourPhone": "தொடங்குவதற்கு உங்கள் தொலைபேசி எண்ணை உள்ளிடவும்.",
 	"otpVerification": "OTP சரிபார்ப்பு",
-	"weSentAnOTPTo": "அங்கீகாரக் குறியீடு அனுப்பப்பட்டது"
+	"weSentAnOTPTo": "அங்கீகாரக் குறியீடு அனுப்பப்பட்டது",
+	"accountIsPendingApproval": "கணக்கு ஒப்புதலுக்காக நிலுவையில் உள்ளது.",
+	"canNotCreateOrder": "ஒழுங்கை உருவாக்க முடியாது",
+	"canNotCreateUser": "பயனரை உருவாக்க முடியாது.",
+	"canNotGetPayments": "கட்டண முறைகளைப் பெற முடியாது",
+	"canNotGetShipping": "கப்பல் முறைகளைப் பெற முடியாது",
+	"canNotGetToken": "டோக்கன் தகவலைப் பெற முடியவில்லை.",
+	"canNotSaveOrder": "ஆர்டரை இணையதளத்தில் சேமிக்க முடியவில்லை",
+	"canNotUpdateInfo": "பயனர் தகவலைப் புதுப்பிக்க முடியாது.",
+	"emptyShippingMsg": "ஷிப்பிங் விருப்பங்கள் எதுவும் இல்லை. உங்கள் முகவரி சரியாக உள்ளிடப்பட்டுள்ளதா என்பதை உறுதிப்படுத்தவும் அல்லது ஏதேனும் உதவி தேவைப்பட்டால் எங்களை தொடர்பு கொள்ளவும்.",
+	"tagNotExist": "இந்த குறிச்சொல் இல்லை",
+	"userNameInCorrect": "பயனர்பெயர் அல்லது கடவுச்சொல் தவறானது.",
+	"averageRating": "சராசரி மதிப்பீடு",
+	"popularity": "பிரபலம்",
+	"titleAToZ": "தலைப்பு: A முதல் Z வரை",
+	"titleZToA": "தலைப்பு: Z முதல் A",
+	"viewOnGoogleMaps": "கூகுள் மேப்ஸில் பார்க்கவும்",
+	"tooManyFaildedLogin": "பல உள்நுழைவு முயற்சிகள் தோல்வியடைந்தன. பிறகு முயற்சிக்கவும்."
 }
diff --git a/lib/l10n/intl_th.arb b/lib/l10n/intl_th.arb
index 5fc0972..cd8d11e 100644
--- a/lib/l10n/intl_th.arb
+++ b/lib/l10n/intl_th.arb
@@ -1,6 +1,6 @@
 {
 	"@@locale": "th",
-	"PrivacyAndTerm": "ความเป็นส่วนตัวและข้อกำหนด",
+	"privacyAndTerm": "ความเป็นส่วนตัวและข้อกำหนด",
 	"aboutUs": "เกี่ยวกับเรา",
 	"addToCart": "เพิ่มในรถเข็น",
 	"addToCartSucessfully": "เพิ่มลงในรถเข็นของคุณแล้ว",
@@ -350,11 +350,11 @@
 	"thailand": "Thai",
 	"hungarian": "ฮังการี",
 	"vendorInfo": "ข้อมูลผู้ขาย",
-	"Egypt": "อียิปต์",
-	"India": "ภาษาฮินดี",
-	"Korean": "เกาหลี",
-	"Netherlands": "เนเธอร์แลนด์",
-	"Dutch": "ดัตช์",
+	"egypt": "อียิปต์",
+	"india": "ภาษาฮินดี",
+	"korean": "เกาหลี",
+	"netherlands": "เนเธอร์แลนด์",
+	"dutch": "ดัตช์",
 	"continues": "ต่อ",
 	"refunds": "การคืนเงิน",
 	"UserNameInCorrect": "ชื่อผู้ใช้หรือรหัสผ่านไม่ถูกต้อง",
@@ -366,7 +366,7 @@
 	"saveForLater": "บันทึกในภายหลัง",
 	"useNow": "ใช้ตอนนี้",
 	"validUntilDate": "ใช้ได้จนถึง {date}",
-	"Qty": "จำนวน",
+	"qty": "จำนวน",
 	"createdOn": "สร้างบน:",
 	"itemTotal": "รวมรายการ:",
 	"orderId": "รหัสคำสั่งซื้อ:",
@@ -436,7 +436,7 @@
 	"uploadFile": "อัปโหลดไฟล์",
 	"uploading": "อัปโหลด",
 	"serbian": "เซอร์เบีย",
-	"Polish": "ขัด",
+	"polish": "ขัด",
 	"persian": "Persian",
 	"kurdish": "Kurdish",
 	"active": "active",
@@ -533,7 +533,7 @@
 	"shipped": "จัดส่งแล้ว",
 	"storeInformation": "เก็บข้อมูล",
 	"updatePassword": "อัปเดตรหัสผ่าน",
-	"DateDESC": "วันที่จากมากไปน้อย",
+	"dateDESC": "วันที่จากมากไปน้อย",
 	"addANewPost": "เพิ่มโพสต์ใหม่",
 	"addNewBlog": "เพิ่มบล็อกใหม่",
 	"addNewPost": "สร้างโพสต์ใหม่",
@@ -543,12 +543,10 @@
 	"createNewPostSuccessfully": "สร้างโพสต์ของคุณเป็นฉบับร่างเรียบร้อยแล้ว โปรดดูที่ไซต์ผู้ดูแลระบบของคุณ",
 	"createPost": "สร้างโพสต์",
 	"dateASC": "วันที่ขึ้น",
-	"dutch": "ดัตช์",
 	"emptyComment": "ไม่มีความคิดเห็น",
 	"emptySearch": "คุณยังไม่ได้ค้นหารายการ มาเริ่มกันเลย - เราจะช่วยคุณ",
 	"hindi": "ภาษาฮินดี",
 	"imageFeature": "คุณสมบัติภาพ",
-	"korean": "เกาหลี",
 	"loginToComment": "กรุณาเข้าสู่ระบบเพื่อแสดงความคิดเห็น",
 	"momentAgo": "เมื่อสักครู่ที่ผ่านมา",
 	"monthsAgo": "{month} เดือนที่แล้ว",
@@ -612,7 +610,6 @@
 	"greaterDistance": ">{total} กม.",
 	"addToCartMaximum": "เกินปริมาณสูงสุดแล้ว",
 	"playAll": "เล่นทั้งหมด",
-	"Tamil": "มิลักขะ",
 	"customerNote": "หมายเหตุลูกค้า",
 	"stop": "หยุด",
 	"cantPickDateInThePast": "ไม่อนุญาตให้ใช้วันที่ในอดีต",
@@ -824,5 +821,22 @@
 	"driverAssigned": "คนขับได้รับมอบหมาย",
 	"enterYourPhone": "ป้อนหมายเลขโทรศัพท์ของคุณเพื่อเริ่มต้น",
 	"otpVerification": "การตรวจสอบ OTP",
-	"weSentAnOTPTo": "ส่งรหัสยืนยันไปที่ .แล้ว"
+	"weSentAnOTPTo": "ส่งรหัสยืนยันไปที่ .แล้ว",
+	"accountIsPendingApproval": "บัญชีอยู่ระหว่างรอการอนุมัติ",
+	"canNotCreateOrder": "สร้างคำสั่งซื้อไม่ได้",
+	"canNotCreateUser": "ไม่สามารถสร้างผู้ใช้ได้",
+	"canNotGetPayments": "ไม่สามารถรับวิธีการชำระเงินได้",
+	"canNotGetShipping": "ไม่สามารถรับวิธีการจัดส่งได้",
+	"canNotGetToken": "ไม่สามารถรับข้อมูลโทเค็นได้",
+	"canNotSaveOrder": "บันทึกคำสั่งซื้อลงเว็บไซต์ไม่ได้",
+	"canNotUpdateInfo": "ไม่สามารถอัปเดตข้อมูลผู้ใช้",
+	"emptyShippingMsg": "ไม่มีตัวเลือกการจัดส่งที่ใช้ได้ โปรดตรวจสอบให้แน่ใจว่าได้ป้อนที่อยู่ของคุณอย่างถูกต้อง หรือติดต่อเรา หากคุณต้องการความช่วยเหลือ",
+	"tagNotExist": "ไม่มีแท็กนี้",
+	"userNameInCorrect": "ชื่อผู้ใช้หรือรหัสผ่านไม่ถูกต้อง",
+	"averageRating": "คะแนนเฉลี่ย",
+	"popularity": "ความนิยม",
+	"titleAToZ": "ชื่อเรื่อง: A ถึง Z",
+	"titleZToA": "ชื่อเรื่อง: Z ถึง A",
+	"viewOnGoogleMaps": "ดูบน Google Maps",
+	"tooManyFaildedLogin": "มีการพยายามเข้าสู่ระบบที่ล้มเหลวหลายครั้งเกินไป โปรดลองอีกครั้งในภายหลัง."
 }
diff --git a/lib/l10n/intl_ti.arb b/lib/l10n/intl_ti.arb
index 97a042b..b488c51 100644
--- a/lib/l10n/intl_ti.arb
+++ b/lib/l10n/intl_ti.arb
@@ -177,7 +177,7 @@
 	"japanese": "ጃፓንኛ",
 	"languageSuccess": "ቋንቋ ብዕዉት መገዲ ተቀይሩ ኣሎ ፥ በጃኻ ነቲ APP እንደገና ጀምሮ",
 	"agreeWithPrivacy": "ብሕታዊን ውዕላትን",
-	"PrivacyAndTerm": "ብሕታዊን ውዕላትን",
+	"privacyAndTerm": "ብሕታዊን ውዕላትን",
 	"iAgree": "እሰማማዕ ኣለኩ ምስ",
 	"categories": "ምድባት",
 	"stores": "ድኳናት",
@@ -353,10 +353,8 @@
 	"thailand": "ታይ",
 	"hungarian": "ሃንጋሪያን",
 	"vendorInfo": "ሓበሬታ ሸቃጦ",
-	"Netherlands": "ዳትች",
-	"Korean": "ኮርያን",
-	"India": "ሂንዲ",
-	"Dutch": "ዶትች",
+	"netherlands": "ዳትች",
+	"india": "ሂንዲ",
 	"useNow": "ሕጅ ተጠቐም",
 	"expired": "ወደቐ ",
 	"validUntilDate": "ቅቡል ክሳብ {date}",
@@ -367,9 +365,9 @@
 	"saveForLater": " ንደሓር ኣዋህልል",
 	"refunds": "ገንዘብ ምምላስ",
 	"continues": "ቀጻሊ",
-	"Egypt": "ግብጺ",
+	"egypt": "ግብጺ",
 	"UserNameInCorrect": " ስም ተጠቃሚ ወይ ፓስዎርድ ጌጋ እዩ",
-	"Qty": "ብዝሒ",
+	"qty": "ብዝሒ",
 	"itemTotal": "ድምር ኣቕሓ",
 	"createdOn": "እተፈጥረ: ",
 	"orderId": "መንነት ኣሰራርሓ: ",
@@ -460,7 +458,7 @@
 	"confirmClearTheCart": "እዚ ዓረብያ ናጻ ክትገብሮ ኸም እትደሊ ርግጸኛ ዲኻ?",
 	"keep": "ዓቅብ",
 	"serbian": "ሰርብያን",
-	"Polish": "ፖልሽ",
+	"polish": "ፖልሽ",
 	"persian": "ፐርሺያን",
 	"kurdish": "ኩርድሽ",
 	"pleaseSignInBeforeUploading": "ዝዀነ ይኹን ፋይላት ቅድሚ ምጽዓንኩም ብኽብረትኩም ኣብ ሕሳብካም ተመዝጊብኩም እተዉ.",
@@ -569,7 +567,7 @@
 	"relatedLayoutTitle": "ከተፍቅሮ እትኽእል ነገራት",
 	"audioDetected": "ኣቕሓ/ኣቕሓታት ኣውድዮ ተረኺቡ.  ኣውድዮ መጻወቲ ክትውስኽ ትደሊዶ?",
 	"dateASC": "ምድያብ ዕለት ",
-	"DateDESC": "ምውራድ ዕለት",
+	"dateDESC": "ምውራድ ዕለት",
 	"seeOrder": "ትእዛዝ ርአ",
 	"openMap": "ካርታ",
 	"allDeliveryOrders": "ኩሉ ትእዛዛት",
@@ -614,7 +612,6 @@
 	"greaterDistance": ">{total} ኪሎሜተር",
 	"addToCartMaximum": "እቲ ዝለዓለ መጠን ቁጽሪ ሓሊፉ ኣሎ",
 	"playAll": "ኵሉ ተጻወት",
-	"Tamil": "ታሚል",
 	"customerNote": "መዘኻኸሪ ዓማዊል",
 	"stop": "ደው በል",
 	"youCanOnlyOrderSingleStore": "ካብ ሓንቲ ድኳን ጥራይ ክትዕድግ ትኽእል.",
diff --git a/lib/l10n/intl_tr.arb b/lib/l10n/intl_tr.arb
index 8e31a81..3f6613a 100644
--- a/lib/l10n/intl_tr.arb
+++ b/lib/l10n/intl_tr.arb
@@ -59,7 +59,7 @@
 	"paymentMethods": "Ödeme Şekli",
 	"chooseYourPaymentMethod": "Ödeme Şeklini Seç",
 	"placeMyOrder": "Sipariş Ver",
-	"itsOrdered": "Siparişiniz edildi!",
+	"itsOrdered": "Siparişiniz verildi!",
 	"orderNo": "Sipariş numarası",
 	"showAllMyOrdered": "Tüm Siparişlerimi Göster",
 	"backToShop": "Mağazaya geri dön",
@@ -85,7 +85,7 @@
 	"noInternetConnection": "İnternet bağlantısı yok",
 	"settings": "Ayarlar",
 	"generalSetting": "Genel ayarlar",
-	"getNotification": "Bildirim al",
+	"getNotification": "Bildirimleri al",
 	"listMessages": "Gelen Bildirimler",
 	"language": "diller",
 	"darkTheme": "Koyu Tema",
@@ -156,7 +156,7 @@
 	"orderSuccessTitle1": "Siparişinizi başarıyla verdiniz",
 	"orderSuccessMsg1": "Teslimat durumu özelliğimizi kullanarak siparişinizin durumunu kontrol edebilirsiniz. Siparişinizin ayrıntılarını ve ilerlemesini takip etmek için bir bağlantı içeren bir sipariş onay e-postası alacaksınız.",
 	"orderSuccessTitle2": "Hesabınız",
-	"orderSuccessMsg2": "Daha önce tanımlanan e-posta ve şifreyi kullanarak hesabınıza giriş yapabilirsiniz. Hesap bölümğnden bilgilerinizi güncelleyebilir, geçmiş siparişlerinizi görüntüleyebilirsiniz.",
+	"orderSuccessMsg2": "Daha önce tanımlanan e-posta ve şifreyi kullanarak hesabınıza giriş yapabilirsiniz. Hesap bölümünden bilgilerinizi güncelleyebilir, geçmiş siparişlerinizi görüntüleyebilirsiniz.",
 	"signIn": "Giriş Yap",
 	"signUp": "Kayıt Ol",
 	"next": "Sıradaki",
@@ -180,12 +180,12 @@
 	"german": "Almanca",
 	"languageSuccess": "Dil başarıyla değiştirildi",
 	"agreeWithPrivacy": "Gizlilik Ve Koşul Poliçesi",
-	"PrivacyAndTerm": "Gizlilik Ve Koşul Poliçesi",
+	"privacyAndTerm": "Gizlilik Ve Koşul Poliçesi",
 	"iAgree": "Onaylıyorum",
 	"currentPassword": "Mevcut Şifre",
 	"newPassword": "Yeni Şifre",
 	"addToCartSucessfully": "sepetinize eklendi",
-	"pullToLoadMore": "Daha fazla yüklemek için çekin",
+	"pullToLoadMore": "Daha fazla yüklemek için kaydırın",
 	"loadFail": "Yükleme başarısız!",
 	"releaseToLoadMore": "Daha fazlasını yüklemek için bırakın",
 	"noData": "Veri Yok",
@@ -350,11 +350,10 @@
 	"waitForPost": "Ürün sonrası bekleniyor",
 	"waitingForConfirmation": "Onay Bekliyor",
 	"yourBookingDetail": "Rezervasyon detayınız",
-	"Egypt": "Mısır",
-	"India": "Hintçe",
-	"Korean": "Koreli",
-	"Netherlands": "Hollanda",
-	"Dutch": "Flemenkçe",
+	"egypt": "Mısır",
+	"india": "Hintçe",
+	"korean": "Koreli",
+	"netherlands": "Hollanda",
 	"continues": "Devam et",
 	"refunds": "Geri ödemeler",
 	"UserNameInCorrect": "Kullanıcı adı veya şifre yanlış",
@@ -366,7 +365,7 @@
 	"saveForLater": "Sonraya sakla",
 	"useNow": "Şimdi kullan",
 	"validUntilDate": " {date}tarihine kadar geçerlidir",
-	"Qty": "Adet",
+	"qty": "Adet",
 	"createdOn": "Oluşturulma tarihi:",
 	"itemTotal": "Öğe toplamı:",
 	"orderId": "Sipariş Kimliği:",
@@ -376,7 +375,7 @@
 	"approved": "onaylı",
 	"back": "Geri",
 	"cantFindThisOrderId": "Bu sipariş kimliğini bulamıyorum",
-	"change": "Değişiklik",
+	"change": "Değiştir",
 	"chatListScreen": "Sohbet Listesi Ekranı",
 	"chooseFromGallery": "Galeriden Seç",
 	"chooseFromServer": "Sunucudan Seçin",
@@ -435,7 +434,7 @@
 	"typeYourMessage": "Mesajınızı buraya yazın...",
 	"uploadFile": "Dosya yükleme",
 	"uploading": "Yükleme",
-	"Polish": "Lehçe",
+	"polish": "Lehçe",
 	"persian": "Persian",
 	"kurdish": "Kurdish",
 	"active": "Aktif",
@@ -492,7 +491,7 @@
 	"shopEmail": "E-posta alışverişi",
 	"shopName": "Mağaza ismi",
 	"shopPhone": "Telefon satın al",
-	"shopSlug": "Dükkan sümüklüböcek",
+	"shopSlug": "Dükkan kısa adı",
 	"storeListBanner": "Mağaza Listesi Başlığı",
 	"storeLogo": "Mağaza Logosu",
 	"storeMobileBanner": "Mağaza Mobil Afişi",
@@ -502,24 +501,24 @@
 	"street": "sokak",
 	"street2": "Sokak 2",
 	"updateFailed": "Güncelleştirme başarısız!",
-	"updateSuccess": "Başarıyla güncelleme!",
+	"updateSuccess": "Başarıyla güncellendi!",
 	"week": " {week}haftası",
-	"addASlug": "Sümüklü böcek ekleyin",
+	"addASlug": "Kısa ad ekleyin",
 	"confirm": "Onaylamak",
 	"confirmDeleteItem": "Bu öğeyi silmek istediğinizden emin misiniz?",
 	"markAsRead": "Okundu olarak işaretle",
 	"markAsUnread": "Okunmamış olarak işaretle",
 	"refundOrderFailed": "Sipariş için geri ödeme talebi başarısız oldu",
-	"refundOrderSuccess": "Siparişiniz için başarıyla geri ödeme talep edin!",
+	"refundOrderSuccess": "Geri ödeme isteği başarılı!",
 	"noFileToDownload": "İndirilecek dosya yok.",
-	"orderStatusCanceledReversal": "iptal edilen prova",
+	"orderStatusCanceledReversal": "iptal edilen sipariş",
 	"orderStatusChargeBack": "GERİ ÇEKME",
 	"orderStatusDenied": "Reddedildi",
 	"orderStatusExpired": "Süresi doldu",
 	"orderStatusProcessed": "işlenmiş",
 	"orderStatusReversed": "ters",
 	"orderStatusShipped": "Gönderilen",
-	"orderStatusVoided": "işeme",
+	"orderStatusVoided": "Sipariş Durumu İptal Edildi",
 	"assigned": "atanmış",
 	"call": "Telefon etmek",
 	"chat": "Sohbet",
@@ -533,7 +532,7 @@
 	"shipped": "Gönderilen",
 	"storeInformation": "Bilgi depola",
 	"updatePassword": "Şifreyi güncelle",
-	"DateDESC": "Tarih azalan",
+	"dateDESC": "Tarih azalan",
 	"addANewPost": "Yeni Mesaj Ekle",
 	"addNewBlog": "Yeni Blog Ekle",
 	"addNewPost": "Yeni Gönderi Oluştur",
@@ -548,7 +547,6 @@
 	"emptySearch": "Henüz öğe aramadınız. Şimdi başlayalım - size yardım edeceğiz.",
 	"hindi": "Hintçe",
 	"imageFeature": "Görüntü Özelliği",
-	"korean": "Koreli",
 	"loginToComment": "Lütfen yorum yapmak için giriş yapın",
 	"momentAgo": "az önce",
 	"monthsAgo": "{month} ay önce",
@@ -612,7 +610,6 @@
 	"greaterDistance": ">{total} km",
 	"addToCartMaximum": "Maksimum miktar aşıldı",
 	"playAll": "Hepsini Oynat",
-	"Tamil": "Tamilce",
 	"customerNote": "müşteri notu",
 	"stop": "durdurmak",
 	"cantPickDateInThePast": "Geçmişteki tarihe izin verilmiyor",
@@ -629,7 +626,7 @@
 	"onVacation": "Tatilde",
 	"amount": "Miktar",
 	"backToWallet": "Cüzdan'a Geri Dön",
-	"balance": "denge",
+	"balance": "Bakiye",
 	"chooseCategory": "Kategori Seçin",
 	"chooseType": "Tur seçin",
 	"confirmClearCartWhenTopUp": "Yüklendiğinde sepet temizlenecektir.",
@@ -713,11 +710,11 @@
 	"orders": "Emirler",
 	"posAddressToolTip": "Bu adres yerel cihazınıza kaydedilecektir. Kullanıcı adresi DEĞİLDİR.",
 	"save": "Kayıt etmek",
-	"state": "Belirtmek, bildirmek",
+	"state": "durum",
 	"slovak": "Slovak",
 	"swahili": "Svahili",
 	"bleState": "Bluetooth Adaptörü: {state}",
-	"checking": "kontrol etme...",
+	"checking": "kontrol ediliyor...",
 	"dateTime": "Tarih Saat",
 	"debit": "Borç",
 	"doYouWantToLogout": "Oturumu kapatmak istiyor musunuz?",
@@ -773,8 +770,6 @@
 	"sortBy": "Göre sırala",
 	"dateLatest": "Tarih: En son",
 	"dateOldest": "Tarih: En eski",
-	"priceHighToLow": "Fiyat pahalıdan ucuza",
-	"priceLowToHigh": "Fiyat: Düşükten Yükseğe",
 	"canNotLoadThisLink": "Bu bağlantı yüklenemiyor",
 	"failedToLoadImage": "Resim yüklenemedi",
 	"imageNetwork": "Görüntü Ağı",
@@ -824,5 +819,24 @@
 	"driverAssigned": "Sürücü Atandı",
 	"enterYourPhone": "Başlamak için telefon numaranızı girin.",
 	"otpVerification": "OTP Doğrulaması",
-	"weSentAnOTPTo": "Bir kimlik doğrulama kodu gönderildi"
+	"weSentAnOTPTo": "Bir kimlik doğrulama kodu gönderildi",
+	"accountIsPendingApproval": "Hesap onay bekliyor.",
+	"canNotCreateOrder": "Sipariş oluşturulamıyor",
+	"canNotCreateUser": "Kullanıcı oluşturulamıyor.",
+	"canNotGetPayments": "Ödeme yöntemleri alınamıyor",
+	"canNotGetShipping": "Nakliye yöntemleri alınamıyor",
+	"canNotGetToken": "Belirteç Bilgisi alınamıyor.",
+	"canNotSaveOrder": "Sipariş web sitesine kaydedilemiyor",
+	"canNotUpdateInfo": "Kullanıcı bilgileri güncellenemiyor.",
+	"emptyShippingMsg": "Gönderim seçeneği bulunmamaktadır. Lütfen adresinizin doğru girildiğinden emin olun veya herhangi bir yardıma ihtiyacınız olursa bizimle iletişime geçin.",
+	"tagNotExist": "Bu etiket mevcut değil",
+	"userNameInCorrect": "Kullanıcı adı veya şifre yanlış.",
+	"averageRating": "Ortalama puanı",
+	"popularity": "Popülerlik",
+	"titleAToZ": "Başlık: A'dan Z'ye",
+	"titleZToA": "Başlık: Z'den A'ya",
+	"viewOnGoogleMaps": "Google Haritalar'da Görüntüle",
+	"tooManyFaildedLogin": "Çok fazla başarısız oturum açma girişimi. Lütfen daha sonra tekrar deneyiniz.",
+	"priceHighToLow": "Fiyat düşen",
+	"priceLowToHigh": "Fiyat yükselen"
 }
diff --git a/lib/l10n/intl_uk.arb b/lib/l10n/intl_uk.arb
index c2c2eef..ddbf2ad 100644
--- a/lib/l10n/intl_uk.arb
+++ b/lib/l10n/intl_uk.arb
@@ -1,13 +1,13 @@
 {
 	"@@locale": "uk",
-	"Dutch": "Голландська",
-	"Egypt": "Єгипет",
-	"India": "Хінді",
-	"Korean": "Корейська",
-	"Netherlands": "Голландська",
-	"Polish": "Польська",
-	"PrivacyAndTerm": "Конфіденційність та термін",
-	"Qty": "Кількість",
+	"dutch": "Голландська",
+	"egypt": "Єгипет",
+	"india": "Хінді",
+	"korean": "Корейська",
+	"netherlands": "Голландська",
+	"polish": "Польська",
+	"privacyAndTerm": "Конфіденційність та термін",
+	"qty": "Кількість",
 	"UserNameInCorrect": "Ім'я користувача чи пароль неправильні",
 	"aboutUs": "Про нас",
 	"active": "Активний",
@@ -533,7 +533,7 @@
 	"shipped": "Відвантажено",
 	"storeInformation": "Інформація про магазин",
 	"updatePassword": "оновити пароль",
-	"DateDESC": "Дата спадання",
+	"dateDESC": "Дата спадання",
 	"addANewPost": "Додати нове повідомлення",
 	"addNewBlog": "Додати новий щоденник",
 	"addNewPost": "Створити нову публікацію",
@@ -543,12 +543,10 @@
 	"createNewPostSuccessfully": "Ваше повідомлення успішно створено як чернетку. Будь ласка, загляньте на сайт адміністратора.",
 	"createPost": "Створити публікацію",
 	"dateASC": "Дата за зростанням",
-	"dutch": "Голландська",
 	"emptyComment": "Ваш коментар не може бути порожнім",
 	"emptySearch": "Ви ще не шукали елементи. Почнемо зараз - ми допоможемо вам.",
 	"hindi": "Хінді",
 	"imageFeature": "Особливість зображення",
-	"korean": "Корейська",
 	"loginToComment": "Будь ласка, увійдіть, щоб прокоментувати",
 	"momentAgo": "хвилину тому",
 	"monthsAgo": "{month} місяців тому",
@@ -612,7 +610,6 @@
 	"greaterDistance": ">{total} км",
 	"addToCartMaximum": "Перевищено максимальну кількість",
 	"playAll": "Грати все",
-	"Tamil": "Таміл",
 	"customerNote": "Примітка клієнта",
 	"stop": "Стій",
 	"cantPickDateInThePast": "Дата в минулому заборонена",
@@ -824,5 +821,22 @@
 	"driverAssigned": "Призначений водій",
 	"enterYourPhone": "Введіть свій номер телефону, щоб почати.",
 	"otpVerification": "Перевірка OTP",
-	"weSentAnOTPTo": "Код автентифікації надіслано на адресу"
+	"weSentAnOTPTo": "Код автентифікації надіслано на адресу",
+	"accountIsPendingApproval": "Обліковий запис очікує на затвердження.",
+	"canNotCreateOrder": "Неможливо створити порядок",
+	"canNotCreateUser": "Неможливо створити користувача.",
+	"canNotGetPayments": "Неможливо отримати способи оплати",
+	"canNotGetShipping": "Неможливо отримати способи доставки",
+	"canNotGetToken": "Не вдається отримати інформацію про маркер.",
+	"canNotSaveOrder": "Не вдається зберегти замовлення на сайті",
+	"canNotUpdateInfo": "Неможливо оновити інформацію користувача.",
+	"emptyShippingMsg": "Варіантів доставки немає. Переконайтеся, що вашу адресу введено правильно, або зв’яжіться з нами, якщо вам потрібна допомога.",
+	"tagNotExist": "Цей тег не існує",
+	"userNameInCorrect": "Ім'я користувача або пароль неправильні.",
+	"averageRating": "Середній рейтинг",
+	"popularity": "Популярність",
+	"titleAToZ": "Назва: від А до Я",
+	"titleZToA": "Назва: Я до А",
+	"viewOnGoogleMaps": "Переглянути на Google Maps",
+	"tooManyFaildedLogin": "Забагато невдалих спроб входу. Будь-ласка спробуйте пізніше."
 }
diff --git a/lib/l10n/intl_ur.arb b/lib/l10n/intl_ur.arb
index 1deddf3..f0183ba 100644
--- a/lib/l10n/intl_ur.arb
+++ b/lib/l10n/intl_ur.arb
@@ -1,15 +1,15 @@
 {
 	"@@locale": "ur",
-	"DateDESC": "نزول کی تاریخ",
-	"Dutch": "ڈچ",
-	"Egypt": "مصر",
-	"India": "ہندی",
-	"Korean": "کورین",
-	"Netherlands": "ڈچ",
-	"Polish": "پولش",
-	"PrivacyAndTerm": "رازداری اور اصطلاح",
-	"Qty": "مقدار",
-	"Tamil": "تمل",
+	"dateDESC": "نزول کی تاریخ",
+	"dutch": "ڈچ",
+	"egypt": "مصر",
+	"india": "ہندی",
+	"korean": "کورین",
+	"netherlands": "ڈچ",
+	"polish": "پولش",
+	"privacyAndTerm": "رازداری اور اصطلاح",
+	"qty": "مقدار",
+	"tamil": "تمل",
 	"UserNameInCorrect": "صارف نام یا پاس ورڈ غلط ہے۔",
 	"aboutUs": "ہمارے بارے میں",
 	"account": "اکاؤنٹ",
@@ -221,7 +221,6 @@
 	"downloadApp": "ایپ ڈاؤن لوڈ کریں",
 	"draft": "ڈرافٹ",
 	"duration": "دورانیہ",
-	"dutch": "ڈچ",
 	"earnings": "آمدنی",
 	"edit": "ترمیم:",
 	"editProductInfo": "پروڈکٹ کی معلومات میں ترمیم کریں۔",
@@ -344,7 +343,6 @@
 	"kannada": "کناڈا",
 	"keep": "رکھو",
 	"khmer": "خمیر",
-	"korean": "کورین",
 	"kurdish": "کرد",
 	"language": "زبانیں",
 	"languageSuccess": "زبان کو کامیابی سے اپ ڈیٹ کر دیا گیا ہے۔",
@@ -715,7 +713,6 @@
 	"swedish": "سویڈش",
 	"tags": "ٹیگز",
 	"takePicture": "تصویر لے",
-	"tamil": "تمل",
 	"tapSelectLocation": "اس مقام کو منتخب کرنے کے لیے تھپتھپائیں۔",
 	"tax": "ٹیکس",
 	"thailand": "تھائی",
@@ -824,5 +821,22 @@
 	"driverAssigned": "ڈرائیور تفویض",
 	"enterYourPhone": "شروع کرنے کے لیے اپنا فون نمبر درج کریں۔",
 	"otpVerification": "OTP تصدیق",
-	"weSentAnOTPTo": "کو ایک تصدیقی کوڈ بھیج دیا گیا ہے۔"
+	"weSentAnOTPTo": "کو ایک تصدیقی کوڈ بھیج دیا گیا ہے۔",
+	"accountIsPendingApproval": "اکاؤنٹ کی منظوری زیر التواء ہے۔",
+	"canNotCreateOrder": "آرڈر نہیں بنا سکتے",
+	"canNotCreateUser": "صارف نہیں بنا سکتا۔",
+	"canNotGetPayments": "ادائیگی کے طریقے حاصل نہیں کر سکتے",
+	"canNotGetShipping": "شپنگ کے طریقے نہیں مل سکتے",
+	"canNotGetToken": "ٹوکن کی معلومات حاصل نہیں کر سکتے۔",
+	"canNotSaveOrder": "آرڈر کو ویب سائٹ پر محفوظ نہیں کیا جا سکتا",
+	"canNotUpdateInfo": "صارف کی معلومات کو اپ ڈیٹ نہیں کر سکتے۔",
+	"emptyShippingMsg": "شپنگ کے کوئی اختیارات دستیاب نہیں ہیں۔ براہ کرم یقینی بنائیں کہ آپ کا پتہ درست طریقے سے درج کیا گیا ہے، یا اگر آپ کو کسی مدد کی ضرورت ہو تو ہم سے رابطہ کریں۔",
+	"tagNotExist": "یہ ٹیگ موجود نہیں ہے۔",
+	"userNameInCorrect": "صارف نام یا پاس ورڈ غلط ہے۔",
+	"averageRating": "اوسط درجہ بندی",
+	"popularity": "مقبولیت",
+	"titleAToZ": "عنوان: اے سے زیڈ",
+	"titleZToA": "عنوان: Z سے A",
+	"viewOnGoogleMaps": "گوگل میپس پر دیکھیں",
+	"tooManyFaildedLogin": "لاگ ان کی بہت ساری ناکام کوششیں براہ کرم کچھ دیر بعد کوشش کریں."
 }
diff --git a/lib/l10n/intl_uz.arb b/lib/l10n/intl_uz.arb
index 0f2c443..e6b3d78 100644
--- a/lib/l10n/intl_uz.arb
+++ b/lib/l10n/intl_uz.arb
@@ -1,15 +1,15 @@
 {
 	"@@locale": "uz",
-	"DateDESC": "Sana tushmoqda",
-	"Dutch": "Golland",
-	"Egypt": "Misr",
-	"India": "Hindcha",
-	"Korean": "Koreys",
-	"Netherlands": "Golland",
-	"Polish": "Polyakcha",
-	"PrivacyAndTerm": "Maxfiylik va muddat",
-	"Qty": "qty",
-	"Tamil": "Tamil tili",
+	"dateDESC": "Sana tushmoqda",
+	"dutch": "Golland",
+	"egypt": "Misr",
+	"india": "Hindcha",
+	"korean": "Koreys",
+	"netherlands": "Golland",
+	"polish": "Polyakcha",
+	"privacyAndTerm": "Maxfiylik va muddat",
+	"qty": "qty",
+	"tamil": "Tamil tili",
 	"UserNameInCorrect": "Foydalanuvchi nomi yoki parol noto'g'ri",
 	"aboutUs": "Biz haqimizda",
 	"accountSetup": "Hisobni sozlash",
@@ -192,7 +192,6 @@
 	"download": "Yuklab oling",
 	"draft": "Qoralama",
 	"duration": "Davomiyligi",
-	"dutch": "Golland",
 	"earnings": "Daromad",
 	"edit": "Tahrirlash:",
 	"editProductInfo": "Mahsulot ma'lumotlarini tahrirlash",
@@ -302,7 +301,6 @@
 	"kannada": "Kannada",
 	"keep": "Saqlamoq",
 	"khmer": "Khmer",
-	"korean": "Koreys",
 	"kurdish": "Kurd",
 	"language": "Tillar",
 	"languageSuccess": "Til muvaffaqiyatli yangilandi",
@@ -650,7 +648,6 @@
 	"swedish": "Shved",
 	"tags": "Teglar",
 	"takePicture": "Rasmga olish",
-	"tamil": "Tamil tili",
 	"tapSelectLocation": "Bu joyni tanlash uchun bosing",
 	"tax": "Soliq",
 	"thailand": "Tay",
@@ -824,5 +821,22 @@
 	"driverAssigned": "Haydovchi tayinlangan",
 	"enterYourPhone": "Boshlash uchun telefon raqamingizni kiriting.",
 	"otpVerification": "OTP tekshiruvi",
-	"weSentAnOTPTo": "Kimga autentifikatsiya kodi yuborildi"
+	"weSentAnOTPTo": "Kimga autentifikatsiya kodi yuborildi",
+	"accountIsPendingApproval": "Hisob tasdiqlanishi kutilmoqda.",
+	"canNotCreateOrder": "Buyurtma yaratib bo'lmaydi",
+	"canNotCreateUser": "Foydalanuvchi yaratib bo‘lmadi.",
+	"canNotGetPayments": "Toʻlov usullarini olish imkonsiz",
+	"canNotGetShipping": "Yuk tashish usullarini olish mumkin emas",
+	"canNotGetToken": "Token maʼlumotlarini olish imkonsiz.",
+	"canNotSaveOrder": "Buyurtmani veb-saytga saqlab bo'lmadi",
+	"canNotUpdateInfo": "Foydalanuvchi maʼlumotlarini yangilab boʻlmadi.",
+	"emptyShippingMsg": "Yuk tashish imkoniyatlari mavjud emas. Iltimos, manzilingiz to'g'ri kiritilganligiga ishonch hosil qiling yoki sizga yordam kerak bo'lsa, biz bilan bog'laning.",
+	"tagNotExist": "Bu teg mavjud emas",
+	"userNameInCorrect": "Foydalanuvchi nomi yoki parol noto'g'ri.",
+	"averageRating": "O'rtacha reyting",
+	"popularity": "Mashhurlik",
+	"titleAToZ": "Sarlavha: A dan Z gacha",
+	"titleZToA": "Sarlavha: Z dan A gacha",
+	"viewOnGoogleMaps": "Google Xaritalarda ko'rish",
+	"tooManyFaildedLogin": "Kirish uchun juda koʻp muvaffaqiyatsiz urinishlar. Iltimos keyinroq qayta urinib ko'ring."
 }
diff --git a/lib/l10n/intl_vi.arb b/lib/l10n/intl_vi.arb
index d22e780..dbff888 100644
--- a/lib/l10n/intl_vi.arb
+++ b/lib/l10n/intl_vi.arb
@@ -193,7 +193,7 @@
 	"japanese": "Tiếng Nhật",
 	"languageSuccess": "Cập nhật thành công",
 	"agreeWithPrivacy": "Đồng ý với điều khoản",
-	"PrivacyAndTerm": "Quyền riêng tư và Điều khoản",
+	"privacyAndTerm": "Quyền riêng tư và Điều khoản",
 	"iAgree": "Tôi đồng ý với",
 	"currentPassword": "Mật khẩu hiện tại",
 	"newPassword": "Mật khẩu mới",
@@ -350,11 +350,11 @@
 	"transactionCancelled": "Giao dịch bị hủy",
 	"waitingForConfirmation": "Đang chờ xác nhận",
 	"yourBookingDetail": "Chi tiết đặt phòng của bạn",
-	"Egypt": "Ai Cập",
-	"India": "Tiếng Hindi",
-	"Korean": "Hàn Quốc",
-	"Netherlands": "nước Hà Lan",
-	"Dutch": "Hà Lan",
+	"egypt": "Ai Cập",
+	"india": "Tiếng Hindi",
+	"korean": "Hàn Quốc",
+	"netherlands": "nước Hà Lan",
+	"dutch": "Hà Lan",
 	"continues": "Tiếp tục",
 	"refunds": "Tiền hoàn lại",
 	"UserNameInCorrect": "Tên người dùng hoặc mật khẩu không chính xác",
@@ -366,7 +366,7 @@
 	"saveForLater": "Để dành về sau",
 	"useNow": "Sử dụng ngay",
 	"validUntilDate": "Có hiệu lực cho đến {date}",
-	"Qty": "SỐ LƯỢNG",
+	"qty": "SỐ LƯỢNG",
 	"createdOn": "Được tạo ra:",
 	"itemTotal": "Tổng mục:",
 	"orderId": "ID đơn hàng:",
@@ -436,7 +436,7 @@
 	"uploadFile": "Cập nhật dử liệu",
 	"uploading": "Đang tải lên",
 	"serbian": "Tiếng Serbian",
-	"Polish": "Tiếng Ba Lan",
+	"polish": "Tiếng Ba Lan",
 	"persian": "Tiếng Ba Tư",
 	"kurdish": "Kurdish",
 	"active": "Hoạt động",
@@ -533,7 +533,7 @@
 	"shipped": "Đã vận chuyển",
 	"storeInformation": "Lưu trữ thông tin",
 	"updatePassword": "Cập nhật mật khẩu",
-	"DateDESC": "Ngày giảm dần",
+	"dateDESC": "Ngày giảm dần",
 	"addANewPost": "Thêm một bài viết mới",
 	"addNewBlog": "Thêm blog mới",
 	"addNewPost": "Tạo bài mới",
@@ -543,12 +543,10 @@
 	"createNewPostSuccessfully": "Bài đăng của bạn đã được tạo thành công dưới dạng bản nháp. Hãy xem trang web quản trị của bạn.",
 	"createPost": "Tạo bài đăng",
 	"dateASC": "Ngày tăng dần",
-	"dutch": "Hà Lan",
 	"emptyComment": "Nhận xét của bạn không được để trống",
 	"emptySearch": "Bạn vẫn chưa tìm kiếm các mục. Hãy bắt đầu ngay bây giờ - chúng tôi sẽ giúp bạn.",
 	"hindi": "Tiếng Hindi",
 	"imageFeature": "Tính năng Hình ảnh",
-	"korean": "Hàn Quốc",
 	"loginToComment": "Vui lòng đăng nhập để bình luận",
 	"momentAgo": "lúc nãy",
 	"monthsAgo": "{month} tháng trước",
@@ -612,7 +610,6 @@
 	"greaterDistance": ">{total} km",
 	"addToCartMaximum": "Số lượng tối đa đã bị vượt quá",
 	"playAll": "Chơi tất cả",
-	"Tamil": "Tiếng Tamil",
 	"customerNote": "Lưu ý khách hàng",
 	"stop": "Dừng lại",
 	"cantPickDateInThePast": "Ngày trong quá khứ không được phép",
@@ -824,5 +821,22 @@
 	"driverAssigned": "Người lái xe được chỉ định",
 	"enterYourPhone": "Nhập số điện thoại của bạn để bắt đầu.",
 	"otpVerification": "Xác minh OTP",
-	"weSentAnOTPTo": "Mã xác thực đã được gửi đến"
+	"weSentAnOTPTo": "Mã xác thực đã được gửi đến",
+	"accountIsPendingApproval": "Tài khoản đang chờ phê duyệt.",
+	"canNotCreateOrder": "Không thể tạo đơn hàng",
+	"canNotCreateUser": "Không thể tạo người dùng.",
+	"canNotGetPayments": "Không thể nhận phương thức thanh toán",
+	"canNotGetShipping": "Không thể nhận phương thức vận chuyển",
+	"canNotGetToken": "Không thể nhận thông tin mã thông báo.",
+	"canNotSaveOrder": "Không thể lưu đơn đặt hàng vào trang web",
+	"canNotUpdateInfo": "Không thể cập nhật thông tin người dùng.",
+	"emptyShippingMsg": "Không có tùy chọn vận chuyển có sẵn. Vui lòng đảm bảo rằng địa chỉ của bạn đã được nhập chính xác, hoặc liên hệ với chúng tôi nếu bạn cần bất kỳ trợ giúp nào.",
+	"tagNotExist": "Thẻ này không tồn tại",
+	"userNameInCorrect": "Tên người dùng hoặc mật khẩu không chính xác.",
+	"averageRating": "Xếp hạng trung bình",
+	"popularity": "Phổ biến",
+	"titleAToZ": "Tiêu đề: A đến Z",
+	"titleZToA": "Tiêu đề: Z đến A",
+	"viewOnGoogleMaps": "Xem trên Google Maps",
+	"tooManyFaildedLogin": "Quá nhiều lần đăng nhập không thành công. Vui lòng thử lại sau."
 }
diff --git a/lib/l10n/intl_zh.arb b/lib/l10n/intl_zh.arb
index c9e667e..9b6a8e2 100644
--- a/lib/l10n/intl_zh.arb
+++ b/lib/l10n/intl_zh.arb
@@ -176,7 +176,7 @@
 	"japanese": "日本",
 	"languageSuccess": "语言已成功更新",
 	"agreeWithPrivacy": "隐私权和条款",
-	"PrivacyAndTerm": "隐私权和条款",
+	"privacyAndTerm": "隐私权和条款",
 	"iAgree": "我同意",
 	"currentPassword": "当前密码",
 	"newPassword": "新密码",
@@ -350,11 +350,11 @@
 	"waitForPost": "等待后期产品",
 	"waitingForConfirmation": "等待确认中",
 	"yourBookingDetail": "您的预订详细信息",
-	"Egypt": "埃及",
-	"India": "印地语",
-	"Korean": "朝鲜的",
-	"Netherlands": "荷兰",
-	"Dutch": "荷兰人",
+	"egypt": "埃及",
+	"india": "印地语",
+	"korean": "朝鲜的",
+	"netherlands": "荷兰",
+	"dutch": "荷兰人",
 	"continues": "继续",
 	"refunds": "退款",
 	"UserNameInCorrect": "用户名或密码不正确",
@@ -366,7 +366,7 @@
 	"saveForLater": "留着以后用",
 	"useNow": "现在使用",
 	"validUntilDate": "有效期至 {date}",
-	"Qty": "数量",
+	"qty": "数量",
 	"createdOn": "创建于：",
 	"itemTotal": "物品总数：",
 	"orderId": "订单ID：",
@@ -436,7 +436,7 @@
 	"uploadFile": "上传文件",
 	"uploading": "上传",
 	"serbian": "塞尔维亚",
-	"Polish": "波兰语",
+	"polish": "波兰语",
 	"persian": "Persian",
 	"kurdish": "Kurdish",
 	"active": "活性",
@@ -533,7 +533,7 @@
 	"shipped": "已出货",
 	"storeInformation": "储存信息",
 	"updatePassword": "更新密码",
-	"DateDESC": "日期降序",
+	"dateDESC": "日期降序",
 	"addANewPost": "添加新帖子",
 	"addNewBlog": "添加新博客",
 	"addNewPost": "建立新讯息",
@@ -543,12 +543,10 @@
 	"createNewPostSuccessfully": "您的帖子已成功创建为草稿。请查看您的管理站点。",
 	"createPost": "建立讯息",
 	"dateASC": "日期升序",
-	"dutch": "荷兰人",
 	"emptyComment": "您的评论不能为空",
 	"emptySearch": "您尚未搜索商品。现在开始-我们会为您提供帮助。",
 	"hindi": "印地语",
 	"imageFeature": "图片特征",
-	"korean": "朝鲜的",
 	"loginToComment": "请登录后发表评论",
 	"momentAgo": "刚才",
 	"monthsAgo": "{month} 个月前",
@@ -578,7 +576,6 @@
 	"deliveryNotificationError": "没有数据。\n此订单已被删除。",
 	"deliveryManagement": "交货",
 	"deliveryBoy": "送货员：",
-	"Tamil": "泰米尔语",
 	"accountSetup": "帐户设置",
 	"addToCartMaximum": "已超过最大数量",
 	"atLeastThreeCharacters": "至少3个字符...",
@@ -824,5 +821,22 @@
 	"driverAssigned": "分配的驱动程序",
 	"enterYourPhone": "输入您的电话号码以开始使用。",
 	"otpVerification": "一次性密码验证",
-	"weSentAnOTPTo": "验证码已发送至"
+	"weSentAnOTPTo": "验证码已发送至",
+	"accountIsPendingApproval": "该帐户正在等待批准。",
+	"canNotCreateOrder": "无法创建订单",
+	"canNotCreateUser": "无法创建用户。",
+	"canNotGetPayments": "无法获取付款方式",
+	"canNotGetShipping": "无法获取送货方式",
+	"canNotGetToken": "无法获取令牌信息。",
+	"canNotSaveOrder": "无法将订单保存到网站",
+	"canNotUpdateInfo": "无法更新用户信息。",
+	"emptyShippingMsg": "没有可用的运输选项。请确保您的地址输入正确，如果您需要任何帮助，请与我们联系。",
+	"tagNotExist": "此标签不存在",
+	"userNameInCorrect": "用户名或密码不正确。",
+	"averageRating": "平均评分",
+	"popularity": "人气度",
+	"titleAToZ": "标题：A到Z",
+	"titleZToA": "标题：Z到A",
+	"viewOnGoogleMaps": "在谷歌地图上查看",
+	"tooManyFaildedLogin": "登录尝试失败次数过多。请稍后再试。"
 }
diff --git a/lib/l10n/intl_zh_CN.arb b/lib/l10n/intl_zh_CN.arb
index b0eaebb..378e52c 100644
--- a/lib/l10n/intl_zh_CN.arb
+++ b/lib/l10n/intl_zh_CN.arb
@@ -1,15 +1,15 @@
 {
 	"@@locale": "zh_CN",
-	"DateDESC": "日期降序",
-	"Dutch": "荷兰",
-	"Egypt": "埃及",
-	"India": "印度",
-	"Korean": "朝鲜",
-	"Netherlands": "荷兰",
-	"Polish": "波兰语",
-	"PrivacyAndTerm": "隐私和条款",
-	"Qty": "QTY",
-	"Tamil": "泰米尔语",
+	"dateDESC": "日期降序",
+	"dutch": "荷兰人",
+	"egypt": "埃及",
+	"india": "印度",
+	"korean": "朝鲜",
+	"netherlands": "荷兰",
+	"polish": "波兰语",
+	"privacyAndTerm": "隐私和条款",
+	"qty": "QTY",
+	"tamil": "泰米尔语",
 	"UserNameInCorrect": "用户名或密码不正确",
 	"aboutUs": "关于我们",
 	"accountSetup": "账户设置",
@@ -192,7 +192,6 @@
 	"download": "下载",
 	"draft": "草稿",
 	"duration": "持续时间",
-	"dutch": "荷兰人",
 	"earnings": "收益",
 	"edit": "编辑：",
 	"editProductInfo": "编辑商品信息",
@@ -303,7 +302,6 @@
 	"kannada": "卡纳达语",
 	"keep": "保留",
 	"khmer": "高棉语",
-	"korean": "朝鲜",
 	"kurdish": "库尔德",
 	"language": "语言",
 	"languageSuccess": "语言更新成功",
@@ -653,7 +651,6 @@
 	"swedish": "瑞典",
 	"tags": "标签",
 	"takePicture": "拍照片",
-	"tamil": "泰米尔语",
 	"tapSelectLocation": "点按以选择此位置",
 	"tax": "税",
 	"thailand": "泰国",
@@ -824,5 +821,22 @@
 	"driverAssigned": "分配的驱动程序",
 	"enterYourPhone": "输入您的电话号码以开始使用。",
 	"otpVerification": "一次性密码验证",
-	"weSentAnOTPTo": "验证码已发送至"
+	"weSentAnOTPTo": "验证码已发送至",
+	"accountIsPendingApproval": "该帐户正在等待批准。",
+	"canNotCreateOrder": "无法创建订单",
+	"canNotCreateUser": "无法创建用户。",
+	"canNotGetPayments": "无法获取付款方式",
+	"canNotGetShipping": "无法获取送货方式",
+	"canNotGetToken": "无法获取令牌信息。",
+	"canNotSaveOrder": "无法将订单保存到网站",
+	"canNotUpdateInfo": "无法更新用户信息。",
+	"emptyShippingMsg": "没有可用的运输选项。请确保您的地址输入正确，如果您需要任何帮助，请与我们联系。",
+	"tagNotExist": "此标签不存在",
+	"userNameInCorrect": "用户名或密码不正确。",
+	"averageRating": "平均评分",
+	"popularity": "人气度",
+	"titleAToZ": "标题：A到Z",
+	"titleZToA": "标题：Z到A",
+	"viewOnGoogleMaps": "在谷歌地图上查看",
+	"tooManyFaildedLogin": "登录尝试失败次数过多。请稍后再试。"
 }
diff --git a/lib/l10n/intl_zh_TW.arb b/lib/l10n/intl_zh_TW.arb
index f0d942c..8e51cef 100644
--- a/lib/l10n/intl_zh_TW.arb
+++ b/lib/l10n/intl_zh_TW.arb
@@ -1,15 +1,15 @@
 {
 	"@@locale": "zh_TW",
-	"DateDESC": "日期降冪",
-	"Dutch": "荷蘭",
-	"Egypt": "埃及",
-	"India": "印度",
-	"Korean": "朝鮮",
-	"Netherlands": "荷蘭",
-	"Polish": "波蘭語",
-	"PrivacyAndTerm": "隱私和條款",
-	"Qty": "QTY",
-	"Tamil": "泰米爾語",
+	"dateDESC": "日期降冪",
+	"dutch": "荷蘭人",
+	"egypt": "埃及",
+	"india": "印度",
+	"korean": "朝鮮",
+	"netherlands": "荷蘭",
+	"polish": "波蘭語",
+	"privacyAndTerm": "隱私和條款",
+	"qty": "QTY",
+	"tamil": "泰米爾語",
 	"UserNameInCorrect": "用戶名或密碼不正確",
 	"aboutUs": "關於我們",
 	"accountSetup": "帳戶設置",
@@ -192,7 +192,6 @@
 	"download": "下載",
 	"draft": "草稿",
 	"duration": "持續時間",
-	"dutch": "荷蘭人",
 	"earnings": "收益",
 	"edit": "編輯：",
 	"editProductInfo": "編輯商品資訊",
@@ -303,7 +302,6 @@
 	"kannada": "卡納達語",
 	"keep": "保留",
 	"khmer": "高棉語",
-	"korean": "朝鮮",
 	"kurdish": "庫爾德",
 	"language": "語言",
 	"languageSuccess": "語言更新成功",
@@ -653,7 +651,6 @@
 	"swedish": "瑞典",
 	"tags": "標籤",
 	"takePicture": "拍照片",
-	"tamil": "泰米爾語",
 	"tapSelectLocation": "點按以選擇此位置",
 	"tax": "稅",
 	"thailand": "泰國",
@@ -824,5 +821,22 @@
 	"driverAssigned": "分配的驅動程序",
 	"enterYourPhone": "輸入您的電話號碼以開始使用。",
 	"otpVerification": "一次性密碼驗證",
-	"weSentAnOTPTo": "驗證碼已發送至"
+	"weSentAnOTPTo": "驗證碼已發送至",
+	"accountIsPendingApproval": "該帳戶正在等待批准。",
+	"canNotCreateOrder": "無法創建訂單",
+	"canNotCreateUser": "無法創建用戶。",
+	"canNotGetPayments": "無法獲取付款方式",
+	"canNotGetShipping": "無法獲取送貨方式",
+	"canNotGetToken": "無法獲取令牌信息。",
+	"canNotSaveOrder": "無法將訂單保存到網站",
+	"canNotUpdateInfo": "無法更新用戶信息。",
+	"emptyShippingMsg": "沒有可用的運輸選項。請確保您的地址輸入正確，如果您需要任何幫助，請與我們聯繫。",
+	"tagNotExist": "此標籤不存在",
+	"userNameInCorrect": "用戶名或密碼不正確。",
+	"averageRating": "平均評分",
+	"popularity": "人氣",
+	"titleAToZ": "標題：A到Z",
+	"titleZToA": "標題：Z到A",
+	"viewOnGoogleMaps": "在谷歌地圖上查看",
+	"tooManyFaildedLogin": "登錄嘗試失敗次數過多。請稍後再試。"
 }
diff --git a/lib/main.dart b/lib/main.dart
index e77b9a6..8c4d55a 100644
--- a/lib/main.dart
+++ b/lib/main.dart
@@ -108,8 +108,5 @@ void main() {
     ResponsiveSizingConfig.instance.setCustomBreakpoints(
         const ScreenBreakpoints(desktop: 900, tablet: 600, watch: 100));
     runApp(App(languageCode: languageCode));
-  }, (e, stack) {
-    printLog(e);
-    printLog(stack);
-  });
+  }, printError);
 }
diff --git a/lib/main_layout/layout_desktop.dart b/lib/main_layout/layout_desktop.dart
index 3269039..58f3222 100644
--- a/lib/main_layout/layout_desktop.dart
+++ b/lib/main_layout/layout_desktop.dart
@@ -1,11 +1,12 @@
 import 'package:flutter/material.dart';
 import 'package:flutter/rendering.dart';
+import 'package:inspireui/icons/constants.dart';
 
-import '../common/tools.dart';
 import '../widgets/web_layout/appbar_web.dart';
 
 class LayoutDesktop extends StatefulWidget {
   final Widget widget;
+
   const LayoutDesktop({Key? key, required this.widget}) : super(key: key);
 
   @override
diff --git a/lib/main_layout/layout_left_menu.dart b/lib/main_layout/layout_left_menu.dart
index 23b04eb..f4e0614 100644
--- a/lib/main_layout/layout_left_menu.dart
+++ b/lib/main_layout/layout_left_menu.dart
@@ -1,9 +1,10 @@
 import 'dart:async';
 
 import 'package:flutter/material.dart';
+import 'package:provider/provider.dart';
 
 import '../common/constants.dart';
-import '../common/tools.dart';
+import '../models/app_model.dart';
 import '../modules/dynamic_layout/helper/helper.dart';
 
 class LayoutLeftMenu extends StatefulWidget {
@@ -123,7 +124,10 @@ class _LayoutStateLeftMenu extends State<LayoutLeftMenu>
   /// variable will always be false. So when rotating the screen
   ///  left menu will not be active.
   void activeLayout() {
-    eventBus.fire(const EventOpenCustomDrawer());
-    isActive = true;
+    var appConfig = Provider.of<AppModel>(context, listen: false).appConfig;
+    if (appConfig?.drawer?.enable ?? true) {
+      eventBus.fire(const EventOpenCustomDrawer());
+      isActive = true;
+    }
   }
 }
diff --git a/lib/menu/appbar.dart b/lib/menu/appbar.dart
index c09762a..9600b8f 100644
--- a/lib/menu/appbar.dart
+++ b/lib/menu/appbar.dart
@@ -13,17 +13,23 @@ import '../modules/dynamic_layout/helper/helper.dart';
 import '../routes/flux_navigate.dart';
 import '../widgets/common/index.dart';
 
-class FluxAppBar extends StatefulWidget implements PreferredSizeWidget {
-  const FluxAppBar({Key? key}) : super(key: key);
+class FluxAppBar extends StatefulWidget {
+  final bool isBottom;
+  final bool showBottom;
 
-  @override
-  State<FluxAppBar> createState() => _FluxAppBarState();
+  const FluxAppBar({
+    Key? key,
+    this.isBottom = false,
+    this.showBottom = true,
+  }) : super(key: key);
 
   @override
-  Size get preferredSize => const Size.fromHeight(kToolbarHeight);
+  State<FluxAppBar> createState() => _FluxAppBarState();
 }
 
 class _FluxAppBarState extends State<FluxAppBar> {
+  double get appBarSize => kToolbarHeight;
+
   AppBarConfig? get appBar =>
       Provider.of<AppModel>(context, listen: false).appConfig!.appBar;
 
@@ -78,335 +84,366 @@ class _FluxAppBarState extends State<FluxAppBar> {
       shouldRebuild: (oldValue, newValue) =>
           oldValue?.toJson().toString() != newValue?.toJson().toString(),
       builder: (context, value, child) {
-        if (value == null || (value.items?.isEmpty ?? true)) {
+        if (value == null ||
+            ((value.items?.isEmpty ?? true) &&
+                (value.items?.isEmpty ?? true))) {
           return const SizedBox();
         }
         return Container(
-          height: widget.preferredSize.height,
+          alignment: Alignment.center,
           decoration: value.backgroundColor != null
               ? BoxDecoration(
                   color: HexColor(value.backgroundColor),
                 )
               : null,
-          child: Row(
-            mainAxisAlignment: MainAxisAlignment.spaceBetween,
-            children: value.items?.map(
-                  (AppBarItemConfig item) {
-                    Widget widget;
-                    switch (item.type) {
-                      case 'space':
-                        return const Spacer();
-                      case 'location':
-                        widget = Container(
-                          height: this.widget.preferredSize.height,
-                          padding: EdgeInsets.only(
-                            left: item.paddingLeft.toDouble(),
-                            right: item.paddingRight.toDouble(),
-                            top: item.paddingTop.toDouble(),
-                            bottom: item.paddingBottom.toDouble(),
-                          ),
-                          child: Column(
-                            mainAxisAlignment: MainAxisAlignment.center,
-                            crossAxisAlignment: CrossAxisAlignment.start,
-                            children: <Widget>[
-                              if (!item.hideTitle)
-                                Row(
-                                  children: [
-                                    const SizedBox(width: 4.0),
-                                    Text(
-                                      item.title ?? S.of(context).selectAddress,
-                                      style: const TextStyle(
-                                        fontSize: 10.0,
-                                        fontWeight: FontWeight.w300,
-                                      ),
-                                    ),
-                                    const Icon(
-                                      Icons.arrow_drop_down,
-                                      size: 16.0,
-                                    ),
-                                    const Spacer(),
-                                  ],
-                                ),
-                              Row(
-                                mainAxisSize: MainAxisSize.max,
-                                children: [
-                                  DeferredWidget(
-                                    defer_icon.loadLibrary,
-                                    () => Icon(
-                                      defer_icon.iconPicker(
-                                        item.icon!,
-                                        item.fontFamily!,
-                                      ),
-                                      size: item.iconSize.toDouble(),
-                                      color: item.iconColor != null
-                                          ? HexColor(item.iconColor)
-                                          : Theme.of(context).primaryColor,
-                                    ),
-                                  ),
-                                  Expanded(
-                                    child: Text(
-                                      currentAddress?.toString() ?? '',
-                                      style: const TextStyle(
-                                        fontSize: 14.0,
-                                        fontWeight: FontWeight.w500,
-                                      ),
-                                      overflow: TextOverflow.ellipsis,
-                                    ),
-                                  ),
-                                ],
-                              ),
-                            ],
-                          ),
-                        );
-                        break;
-                      case 'text':
-                        var textColor = item.textColor != null
-                            ? HexColor(item.textColor)
-                            : Theme.of(context).colorScheme.secondary;
-                        widget = Container(
-                          alignment: Tools.getAlignment(
-                            item.alignment,
-                            defaultValue: Alignment.center,
-                          ),
-                          height: this.widget.preferredSize.height,
-                          padding: EdgeInsets.only(
-                            left: item.paddingLeft.toDouble(),
-                            right: item.paddingRight.toDouble(),
-                            top: item.paddingTop.toDouble(),
-                            bottom: item.paddingBottom.toDouble(),
-                          ),
-                          child: Text(
-                            item.title ?? '',
-                            style: TextStyle(
-                              fontSize: Helper.formatDouble(item.fontSize),
-                              fontWeight: Tools.getFontWeight(
-                                item.fontWeight,
-                                defaultValue: FontWeight.w300,
+          child: Column(
+            mainAxisAlignment: MainAxisAlignment.start,
+            children: [
+              if (!widget.isBottom)
+                Row(
+                  mainAxisAlignment: MainAxisAlignment.spaceBetween,
+                  children: renderAppBarItems(
+                    context,
+                    value.items,
+                  ),
+                ),
+              if (widget.isBottom && widget.showBottom)
+                Row(
+                  mainAxisAlignment: MainAxisAlignment.spaceBetween,
+                  children: renderAppBarItems(
+                    context,
+                    value.bottomItems,
+                  ),
+                ),
+            ],
+          ),
+        );
+      },
+    );
+  }
+
+  List<Widget> renderAppBarItems(
+    BuildContext context,
+    List<AppBarItemConfig>? items,
+  ) {
+    return items?.map(
+          (AppBarItemConfig item) {
+            Widget widget;
+            switch (item.type) {
+              case 'space':
+                if (item.isCustomSpace) {
+                  widget = SizedBox(width: item.size.toDouble());
+                  break;
+                }
+                return const Spacer();
+              case 'location':
+                widget = Container(
+                  height: appBarSize,
+                  padding: EdgeInsets.only(
+                    left: item.paddingLeft.toDouble(),
+                    right: item.paddingRight.toDouble(),
+                    top: item.paddingTop.toDouble(),
+                    bottom: item.paddingBottom.toDouble(),
+                  ),
+                  child: Column(
+                    mainAxisAlignment: MainAxisAlignment.center,
+                    crossAxisAlignment: CrossAxisAlignment.start,
+                    children: <Widget>[
+                      if (!item.hideTitle)
+                        Row(
+                          children: [
+                            const SizedBox(width: 4.0),
+                            Text(
+                              item.title ?? S.of(context).selectAddress,
+                              style: const TextStyle(
+                                fontSize: 10.0,
+                                fontWeight: FontWeight.w300,
                               ),
-                              color: textColor.withOpacity(
-                                  Helper.formatDouble(item.textOpacity) ?? 0.5),
                             ),
-                          ),
-                        );
-                        break;
-                      case 'search':
-                        widget = Padding(
-                          padding: EdgeInsets.only(
-                            left: item.paddingLeft.toDouble(),
-                            right: item.paddingRight.toDouble(),
-                            top: item.paddingTop.toDouble(),
-                            bottom: item.paddingBottom.toDouble(),
-                          ),
-                          child: Row(
-                            mainAxisSize: MainAxisSize.max,
-                            children: <Widget>[
-                              DeferredWidget(
-                                defer_icon.loadLibrary,
-                                () => Icon(
-                                  defer_icon.iconPicker(
-                                    item.icon!,
-                                    item.fontFamily!,
-                                  ),
-                                  size: item.iconSize.toDouble(),
-                                  color: item.iconColor != null
-                                      ? HexColor(item.iconColor)
-                                      : Theme.of(context).primaryColor,
-                                ),
-                              ),
-                              SizedBox(
-                                width: 4.0,
-                                height: this.widget.preferredSize.height,
-                              ),
-                              if (!item.hideTitle)
-                                Expanded(
-                                  child: Text(
-                                    item.title ?? '',
-                                    overflow: TextOverflow.ellipsis,
-                                    style: Theme.of(context)
-                                        .textTheme
-                                        .bodyText2
-                                        ?.copyWith(
-                                          fontSize: Helper.formatDouble(
-                                              item.fontSize),
-                                          fontWeight: Tools.getFontWeight(
-                                            item.fontWeight,
-                                            defaultValue: FontWeight.w300,
-                                          ),
-                                          color: Theme.of(context)
-                                              .colorScheme
-                                              .secondary
-                                              .withOpacity(Helper.formatDouble(
-                                                      item.textOpacity) ??
-                                                  0.5),
-                                        ),
-                                  ),
-                                ),
-                            ],
-                          ),
-                        );
-                        break;
-                      case 'icon':
-                        widget = SizedBox(
-                          height: item.size.toDouble(),
-                          width: item.size.toDouble(),
-                          child: IconButton(
-                            color: item.iconColor != null
-                                ? HexColor(item.iconColor)
-                                : Theme.of(context)
-                                    .colorScheme
-                                    .secondary
-                                    .withOpacity(0.9),
-                            iconSize: item.iconSize.toDouble(),
-                            padding: EdgeInsets.only(
-                              left: item.paddingLeft.toDouble(),
-                              right: item.paddingRight.toDouble(),
-                              top: item.paddingTop.toDouble(),
-                              bottom: item.paddingBottom.toDouble(),
+                            const Icon(
+                              Icons.arrow_drop_down,
+                              size: 16.0,
                             ),
-                            icon: DeferredWidget(
-                              defer_icon.loadLibrary,
-                              () => Icon(
-                                defer_icon.iconPicker(
-                                  item.icon!,
-                                  item.fontFamily!,
-                                ),
+                            const Spacer(),
+                          ],
+                        ),
+                      Row(
+                        mainAxisSize: MainAxisSize.max,
+                        children: [
+                          DeferredWidget(
+                            defer_icon.loadLibrary,
+                            () => Icon(
+                              defer_icon.iconPicker(
+                                item.icon!,
+                                item.fontFamily!,
                               ),
+                              size: item.iconSize.toDouble(),
+                              color: item.iconColor != null
+                                  ? HexColor(item.iconColor)
+                                  : Theme.of(context).primaryColor,
                             ),
-                            onPressed: () => handleItemAction(item),
                           ),
-                        );
-                        break;
-                      case 'logo':
-                        widget = Padding(
-                          padding: EdgeInsets.only(
-                            left: item.paddingLeft.toDouble(),
-                            right: item.paddingRight.toDouble(),
-                            top: item.paddingTop.toDouble(),
-                            bottom: item.paddingBottom.toDouble(),
-                          ),
-                          child: InkWell(
-                            onTap: () => handleItemAction(item),
-                            child: FluxImage(
-                              imageUrl: context.select(
-                                (AppModel _) => _.themeConfig.logo,
+                          Expanded(
+                            child: Text(
+                              currentAddress?.toString() ?? '',
+                              style: const TextStyle(
+                                fontSize: 14.0,
+                                fontWeight: FontWeight.w500,
                               ),
-                              width: item.width?.toDouble(),
-                              height: item.height?.toDouble(),
-                              fit: ImageTools.boxFit(item.imageBoxFit),
-                              color: item.imageColor != null
-                                  ? HexColor(item.imageColor)
-                                  : null,
+                              overflow: TextOverflow.ellipsis,
                             ),
                           ),
-                        );
-                        break;
-                      case 'image':
-                        widget = Padding(
-                          padding: EdgeInsets.only(
-                            left: item.paddingLeft.toDouble(),
-                            right: item.paddingRight.toDouble(),
-                            top: item.paddingTop.toDouble(),
-                            bottom: item.paddingBottom.toDouble(),
-                          ),
-                          child: InkWell(
-                            onTap: () => handleItemAction(item),
-                            child: FluxImage(
-                              imageUrl: item.image!,
-                              width: item.width?.toDouble(),
-                              height: item.height?.toDouble(),
-                              fit: ImageTools.boxFit(item.imageBoxFit),
-                              color: item.imageColor != null
-                                  ? HexColor(item.imageColor)
-                                  : null,
-                            ),
+                        ],
+                      ),
+                    ],
+                  ),
+                );
+                break;
+              case 'text':
+                var textColor = item.textColor != null
+                    ? HexColor(item.textColor)
+                    : Theme.of(context).colorScheme.secondary;
+                widget = Container(
+                  alignment: Tools.getAlignment(
+                    item.alignment,
+                    defaultValue: Alignment.center,
+                  ),
+                  height: appBarSize,
+                  padding: EdgeInsets.only(
+                    left: item.paddingLeft.toDouble(),
+                    right: item.paddingRight.toDouble(),
+                    top: item.paddingTop.toDouble(),
+                    bottom: item.paddingBottom.toDouble(),
+                  ),
+                  child: Text(
+                    item.title ?? '',
+                    style: TextStyle(
+                      fontSize: Helper.formatDouble(item.fontSize),
+                      fontWeight: Tools.getFontWeight(
+                        item.fontWeight,
+                        defaultValue: FontWeight.w300,
+                      ),
+                      color: textColor.withOpacity(
+                          Helper.formatDouble(item.textOpacity) ?? 0.5),
+                    ),
+                  ),
+                );
+                break;
+              case 'search':
+                widget = Padding(
+                  padding: EdgeInsets.only(
+                    left: item.paddingLeft.toDouble(),
+                    right: item.paddingRight.toDouble(),
+                    top: item.paddingTop.toDouble(),
+                    bottom: item.paddingBottom.toDouble(),
+                  ),
+                  child: Row(
+                    mainAxisSize: MainAxisSize.max,
+                    children: <Widget>[
+                      DeferredWidget(
+                        defer_icon.loadLibrary,
+                        () => Icon(
+                          defer_icon.iconPicker(
+                            item.icon!,
+                            item.fontFamily!,
                           ),
-                        );
-                        break;
-                      default:
-                        return const SizedBox();
-                    }
-
-                    /// Add badge number.
-                    if (item.type == 'icon' &&
-                        ['cart', 'notification'].contains(item.action)) {
-                      var badgeCount = 0;
-                      if (item.action == 'notification') {
-                        badgeCount =
-                            Provider.of<NotificationModel>(context).unreadCount;
-                      }
-                      if (item.action == 'cart') {
-                        badgeCount =
-                            Provider.of<CartModel>(context).totalCartQuantity;
-                      }
-
-                      widget = Stack(
-                        children: [
-                          widget,
-                          if (badgeCount > 0)
-                            Positioned(
-                              right: 0,
-                              top: 0,
-                              child: Container(
-                                padding: const EdgeInsets.all(1),
-                                decoration: BoxDecoration(
-                                  color: Colors.red,
-                                  borderRadius: BorderRadius.circular(16),
-                                ),
-                                constraints: const BoxConstraints(
-                                  minWidth: 18,
-                                  minHeight: 18,
-                                ),
-                                child: Text(
-                                  '$badgeCount',
-                                  style: const TextStyle(
-                                    color: Colors.white,
-                                    fontSize: 12,
-                                    height: 1.3,
+                          size: item.iconSize.toDouble(),
+                          color: item.iconColor != null
+                              ? HexColor(item.iconColor)
+                              : Theme.of(context).primaryColor,
+                        ),
+                      ),
+                      SizedBox(
+                        width: 4.0,
+                        height: appBarSize,
+                      ),
+                      if (!item.hideTitle)
+                        Expanded(
+                          child: Text(
+                            item.title ?? '',
+                            overflow: TextOverflow.ellipsis,
+                            style: Theme.of(context)
+                                .textTheme
+                                .bodyText2
+                                ?.copyWith(
+                                  fontSize: Helper.formatDouble(item.fontSize),
+                                  fontWeight: Tools.getFontWeight(
+                                    item.fontWeight,
+                                    defaultValue: FontWeight.w300,
                                   ),
-                                  textAlign: TextAlign.center,
+                                  color: Theme.of(context)
+                                      .colorScheme
+                                      .secondary
+                                      .withOpacity(Helper.formatDouble(
+                                              item.textOpacity) ??
+                                          0.5),
                                 ),
-                              ),
-                            )
-                        ],
-                      );
-                    }
-
-                    /// Add margin & background.
-                    widget = Container(
-                      decoration: BoxDecoration(
-                        color: item.backgroundColor != null
-                            ? HexColor(item.backgroundColor)
-                            : Colors.transparent,
-                        borderRadius:
-                            BorderRadius.circular(item.radius.toDouble()),
+                          ),
+                        ),
+                    ],
+                  ),
+                );
+                break;
+              case 'icon':
+                widget = SizedBox(
+                  height: item.size.toDouble(),
+                  width: item.size.toDouble(),
+                  child: IconButton(
+                    color: item.iconColor != null
+                        ? HexColor(item.iconColor)
+                        : Theme.of(context)
+                            .colorScheme
+                            .secondary
+                            .withOpacity(0.9),
+                    iconSize: item.iconSize.toDouble(),
+                    padding: EdgeInsets.only(
+                      left: item.paddingLeft.toDouble(),
+                      right: item.paddingRight.toDouble(),
+                      top: item.paddingTop.toDouble(),
+                      bottom: item.paddingBottom.toDouble(),
+                    ),
+                    icon: DeferredWidget(
+                      defer_icon.loadLibrary,
+                      () => Icon(
+                        defer_icon.iconPicker(
+                          item.icon!,
+                          item.fontFamily!,
+                        ),
                       ),
-                      margin: EdgeInsets.only(
-                        left: item.marginLeft.toDouble(),
-                        right: item.marginRight.toDouble(),
-                        top: item.marginTop.toDouble(),
-                        bottom: item.marginBottom.toDouble(),
+                    ),
+                    onPressed: () => handleItemAction(item),
+                  ),
+                );
+                break;
+              case 'logo':
+                widget = Padding(
+                  padding: EdgeInsets.only(
+                    left: item.paddingLeft.toDouble(),
+                    right: item.paddingRight.toDouble(),
+                    top: item.paddingTop.toDouble(),
+                    bottom: item.paddingBottom.toDouble(),
+                  ),
+                  child: InkWell(
+                    onTap: () => handleItemAction(item),
+                    child: FluxImage(
+                      imageUrl: context.select(
+                        (AppModel _) => _.themeConfig.logo,
                       ),
-                      child: widget,
-                    );
+                      width: item.width?.toDouble(),
+                      height: item.height?.toDouble(),
+                      fit: ImageTools.boxFit(item.imageBoxFit),
+                      color: item.imageColor != null
+                          ? HexColor(item.imageColor)
+                          : null,
+                    ),
+                  ),
+                );
+                break;
+              case 'image':
+                widget = Padding(
+                  padding: EdgeInsets.only(
+                    left: item.paddingLeft.toDouble(),
+                    right: item.paddingRight.toDouble(),
+                    top: item.paddingTop.toDouble(),
+                    bottom: item.paddingBottom.toDouble(),
+                  ),
+                  child: InkWell(
+                    onTap: () => handleItemAction(item),
+                    child: FluxImage(
+                      imageUrl: item.image!,
+                      width: item.width?.toDouble(),
+                      height: item.height?.toDouble(),
+                      fit: ImageTools.boxFit(item.imageBoxFit),
+                      color: item.imageColor != null
+                          ? HexColor(item.imageColor)
+                          : null,
+                    ),
+                  ),
+                );
+                break;
+              default:
+                return const SizedBox();
+            }
+
+            /// Add badge number.
+            if (item.type == 'icon' &&
+                ['cart', 'notification'].contains(item.action)) {
+              var badgeCount = 0;
+              if (item.action == 'notification') {
+                badgeCount =
+                    Provider.of<NotificationModel>(context).unreadCount;
+              }
+              if (item.action == 'cart') {
+                badgeCount = Provider.of<CartModel>(context).totalCartQuantity;
+              }
 
-                    /// Handle expanded widget.
-                    if (['search', 'text', 'location'].contains(item.type)) {
-                      widget = Expanded(
-                        child: GestureDetector(
-                          onTap: () => handleItemAction(item),
-                          child: widget,
+              widget = Stack(
+                children: [
+                  widget,
+                  if (badgeCount > 0)
+                    Positioned(
+                      right: 0,
+                      top: 0,
+                      child: Container(
+                        padding: const EdgeInsets.all(1),
+                        decoration: BoxDecoration(
+                          color: Colors.red,
+                          borderRadius: BorderRadius.circular(16),
+                        ),
+                        constraints: const BoxConstraints(
+                          minWidth: 18,
+                          minHeight: 18,
+                        ),
+                        child: Text(
+                          '$badgeCount',
+                          style: const TextStyle(
+                            color: Colors.white,
+                            fontSize: 12,
+                            height: 1.3,
+                          ),
+                          textAlign: TextAlign.center,
                         ),
-                      );
-                    }
+                      ),
+                    )
+                ],
+              );
+            }
 
-                    return widget;
-                  },
-                ).toList() ??
-                [],
-          ),
-        );
-      },
-    );
+            if (item.onlyShowWhenAtTop && this.widget.showBottom) {
+              widget = const SizedBox();
+            }
+
+            /// Add margin & background.
+            widget = Container(
+              decoration: BoxDecoration(
+                color: item.backgroundColor != null
+                    ? HexColor(item.backgroundColor)
+                    : Colors.transparent,
+                borderRadius: BorderRadius.circular(item.radius.toDouble()),
+              ),
+              margin: EdgeInsets.only(
+                left: item.marginLeft.toDouble(),
+                right: item.marginRight.toDouble(),
+                top: item.marginTop.toDouble(),
+                bottom: item.marginBottom.toDouble(),
+              ),
+              child: widget,
+            );
+
+            /// Handle expanded widget.
+            if (['search', 'text', 'location'].contains(item.type)) {
+              widget = Expanded(
+                child: GestureDetector(
+                  onTap: () => handleItemAction(item),
+                  child: widget,
+                ),
+              );
+            }
+
+            return widget;
+          },
+        ).toList() ??
+        [];
   }
 
   void handleItemAction(AppBarItemConfig item) {
diff --git a/lib/menu/maintab.dart b/lib/menu/maintab.dart
index 37f3f44..0d2ad26 100644
--- a/lib/menu/maintab.dart
+++ b/lib/menu/maintab.dart
@@ -3,8 +3,8 @@ import 'dart:async';
 import 'package:collection/collection.dart' show IterableExtension;
 import 'package:flutter/cupertino.dart';
 import 'package:flutter/material.dart';
-import 'package:flutter/services.dart';
-import 'package:new_version/new_version.dart';
+import 'package:inspireui/inspireui.dart';
+import 'package:new_version_plus/new_version_plus.dart';
 import 'package:provider/provider.dart';
 import 'package:shared_preferences/shared_preferences.dart';
 
@@ -42,6 +42,7 @@ class MainTabsState extends CustomOverlayState<MainTabs>
     with WidgetsBindingObserver {
   /// check Desktop screen and app Setting variable
   bool get isDesktopDisplay => Layout.isDisplayDesktop(context);
+  bool get isDisplayTablet => Layout.isDisplayTablet(context);
 
   AppSetting get appSetting =>
       Provider.of<AppModel>(context, listen: false).appConfig!.settings;
@@ -56,6 +57,7 @@ class MainTabsState extends CustomOverlayState<MainTabs>
   Map saveIndexTab = {};
   Map<String, String?> childTabName = {};
   int currentTabIndex = 0;
+  int defaultTabIndex = 0;
 
   List<TabBarMenuConfig> get tabData =>
       Provider.of<AppModel>(context, listen: false).appConfig!.tabBar;
@@ -84,7 +86,7 @@ class MainTabsState extends CustomOverlayState<MainTabs>
     if (isAndroid && kAdvanceConfig.inAppUpdateForAndroid.enable) {
       unawaited(InAppUpdateForAndroid().checkForUpdate());
     } else if (kAdvanceConfig.enableVersionCheck) {
-      NewVersion().showAlertIfNecessary(context: context);
+      NewVersionPlus().showAlertIfNecessary(context: context);
     }
 
     final hasAskedAge = injector<SharedPreferences>()
@@ -133,8 +135,8 @@ class MainTabsState extends CustomOverlayState<MainTabs>
       return Future.value(false);
     }
 
-    if (tabController.index != 0) {
-      tabController.animateTo(0);
+    if (tabController.index != defaultTabIndex) {
+      tabController.animateTo(defaultTabIndex);
       _emitChildTabName();
       return Future.value(false);
     } else {
@@ -153,7 +155,10 @@ class MainTabsState extends CustomOverlayState<MainTabs>
                 if (isIos) {
                   Navigator.of(context).pop(true);
                 } else {
-                  SystemNavigator.pop();
+                  // BUG: cannot exit the app on xiaomi and Android 12. Could be an issue https://github.com/flutter/flutter/issues/98133
+
+                  Navigator.of(context).pop(true);
+                  // SystemNavigator.pop();
                 }
               },
               child: Text(S.of(context).yes),
@@ -173,6 +178,7 @@ class MainTabsState extends CustomOverlayState<MainTabs>
   @override
   void dispose() {
     if (isInitialized) {
+      tabController.removeListener(_tabListener);
       tabController.dispose();
     }
     WidgetsBinding.instance.removeObserver(this);
@@ -262,8 +268,11 @@ class MainTabsState extends CustomOverlayState<MainTabs>
         child: WillPopScope(
           onWillPop: _handleWillPopScopeRoot,
           child: LayoutLeftMenu(
-            menu:
-                (appConfig.drawer?.enable ?? true) ? const SideBarMenu() : null,
+            menu: isDesktopDisplay
+                ? (appConfig.drawer?.enable ?? true)
+                    ? const SideBarMenu()
+                    : null
+                : (isDisplayTablet ? const SideBarMenu() : null),
             content: MediaQuery(
               data: isDesktopDisplay
                   ? media.copyWith(
@@ -352,7 +361,7 @@ extension TabBarMenuExtention on MainTabsState {
     );
   }
 
-  /// init the tabView data and tabController
+  /// 🚀 init the tabView data and tabController
   void _initTabData(context) async {
     var appModel = Provider.of<AppModel>(context, listen: false);
 
@@ -364,35 +373,46 @@ extension TabBarMenuExtention on MainTabsState {
     var tabData = appModel.appConfig!.tabBar;
     var enableOnTop =
         appModel.appConfig?.settings.tabBarConfig.enableOnTop ?? false;
+
+    /// groupTabData: group of groupLayout config - use for dynamic tab menu
+    var groupTabData = tabData.where((e) => e.groupLayout == true).toList();
+
     for (var i = 0; i < tabData.length; i++) {
       var dataOfTab = tabData[i];
+
       saveIndexTab[dataOfTab.layout] = i;
       navigators[i] = GlobalKey<NavigatorState>();
       final initialRoute = dataOfTab.layout;
-      if (enableOnTop) {
-        _tabView.add(
-          MediaQuery(
-            data: MediaQuery.of(context).copyWith(
-              padding: EdgeInsets.zero,
-              viewPadding: EdgeInsets.zero,
-            ),
-            child: tabViewItem(
-              key: navigators[i],
-              initialRoute: initialRoute,
-              args: dataOfTab,
-            ),
-          ),
-        );
-      } else {
-        _tabView.add(
-          tabViewItem(
-            key: navigators[i],
-            initialRoute: initialRoute,
-            args: dataOfTab,
-          ),
-        );
+      var routeData = initialRoute == RouteList.tabMenu ||
+              initialRoute == RouteList.scrollable
+          ? groupTabData
+          : dataOfTab;
+
+      if (dataOfTab.isDefaultTab) {
+        defaultTabIndex = i;
       }
+
+      _tabView.add(
+        enableOnTop
+            ? MediaQuery(
+                data: MediaQuery.of(context).copyWith(
+                  padding: EdgeInsets.zero,
+                  viewPadding: EdgeInsets.zero,
+                ),
+                child: tabViewItem(
+                  key: navigators[i],
+                  initialRoute: initialRoute,
+                  args: routeData,
+                ),
+              )
+            : tabViewItem(
+                key: navigators[i],
+                initialRoute: initialRoute,
+                args: routeData,
+              ),
+      );
     }
+
     // ignore: invalid_use_of_protected_member
     setState(() {
       tabController = TabController(length: _tabView.length, vsync: this);
@@ -400,17 +420,20 @@ extension TabBarMenuExtention on MainTabsState {
     if (MainTabControlDelegate.getInstance().index != null) {
       tabController.animateTo(MainTabControlDelegate.getInstance().index!);
     } else {
-      MainTabControlDelegate.getInstance().index = 0;
+      MainTabControlDelegate.getInstance().index = defaultTabIndex;
+      tabController.animateTo(defaultTabIndex, duration: Duration.zero);
     }
     isInitialized = true;
 
     /// Load the Design from FluxBuilder
-    tabController.addListener(() {
-      if (tabController.index == currentTabIndex) {
-        eventBus.fire(EventNavigatorTabbar(tabController.index));
-        MainTabControlDelegate.getInstance().index = tabController.index;
-      }
-    });
+    tabController.addListener(_tabListener);
+  }
+
+  void _tabListener() {
+    if (tabController.index == currentTabIndex) {
+      eventBus.fire(EventNavigatorTabbar(tabController.index));
+      MainTabControlDelegate.getInstance().index = tabController.index;
+    }
   }
 
   void _emitChildTabName() {
@@ -470,20 +493,22 @@ extension TabBarMenuExtention on MainTabsState {
         ? position
         : (tabData.length / 2).floor();
 
-    return Selector<CartModel, int>(
-      selector: (_, cartModel) => cartModel.totalCartQuantity,
-      builder: (context, totalCart, child) {
-        return IconFloatingAction(
-          config: appSetting.tabBarConfig.tabBarFloating,
-          item: tabData[itemIndex].jsonData,
-          onTap: () {
-            tabController.animateTo(itemIndex);
-            _onTapTabBar(itemIndex);
-          },
-          totalCart: totalCart,
-        );
-      },
-    );
+    return shouldHideTabBar
+        ? const SizedBox()
+        : Selector<CartModel, int>(
+            selector: (_, cartModel) => cartModel.totalCartQuantity,
+            builder: (context, totalCart, child) {
+              return IconFloatingAction(
+                config: appSetting.tabBarConfig.tabBarFloating,
+                item: tabData[itemIndex].jsonData,
+                onTap: () {
+                  tabController.animateTo(itemIndex);
+                  _onTapTabBar(itemIndex);
+                },
+                totalCart: totalCart,
+              );
+            },
+          );
   }
 
   void customTabBar() {
diff --git a/lib/menu/side_menu.dart b/lib/menu/side_menu.dart
index 93793d7..444a4eb 100644
--- a/lib/menu/side_menu.dart
+++ b/lib/menu/side_menu.dart
@@ -5,7 +5,6 @@ import 'package:flutter_zoom_drawer/config.dart';
 import 'package:flutter_zoom_drawer/flutter_zoom_drawer.dart';
 
 import '../common/constants.dart';
-import '../common/tools/adaptive_tools.dart';
 import '../modules/dynamic_layout/helper/helper.dart';
 import '../modules/dynamic_layout/index.dart';
 import '../screens/index.dart';
@@ -51,6 +50,7 @@ class _StateSideMenu extends BaseScreen<SideMenu> {
 
   StreamSubscription? _subOpenNativeDrawer;
   StreamSubscription? _subCloseNativeDrawer;
+  StreamSubscription? _subDrawerSettings;
   final _drawerController = ZoomDrawerController();
 
   bool get enableBackground =>
@@ -70,7 +70,7 @@ class _StateSideMenu extends BaseScreen<SideMenu> {
         _drawerController.open!();
       }
     });
-    eventBus.on<EventDrawerSettings>().listen((event) {
+    _subDrawerSettings = eventBus.on<EventDrawerSettings>().listen((event) {
       if (!_scaffoldKey.currentState!.isDrawerOpen) {
         _scaffoldKey.currentState!.openDrawer();
       }
@@ -103,6 +103,7 @@ class _StateSideMenu extends BaseScreen<SideMenu> {
 
     _subOpenNativeDrawer?.cancel();
     _subCloseNativeDrawer?.cancel();
+    _subDrawerSettings?.cancel();
   }
 
   bool isOpen() {
@@ -169,7 +170,8 @@ class _StateSideMenu extends BaseScreen<SideMenu> {
       body: widget.child,
       drawer: widget.drawer == null ||
               !enableDrawer ||
-              Layout.isDisplayDesktop(context)
+              Layout.isDisplayDesktop(context) ||
+              Layout.isDisplayTablet(context)
           ? null
           : Drawer(
               child: enableBackground
diff --git a/lib/menu/sidebar.dart b/lib/menu/sidebar.dart
index ff7f677..bf47502 100644
--- a/lib/menu/sidebar.dart
+++ b/lib/menu/sidebar.dart
@@ -331,92 +331,99 @@ class MenuBarState extends State<SideBarMenu> {
   }
 
   Widget buildListCategory({TextStyle? textStyle}) {
-    final categories = Provider.of<CategoryModel>(context).categories;
-    var widgets = <Widget>[];
+    return Selector<CategoryModel, List<Category>?>(
+      shouldRebuild: (previous, next) {
+        return previous != next;
+      },
+      selector: (context, provider) => provider.categories,
+      builder: (context, categories, child) {
+        var widgets = <Widget>[];
 
-    if (categories != null) {
-      var list = categories.where((item) => item.parent == '0').toList();
-      for (var i = 0; i < list.length; i++) {
-        final currentCategory = list[i];
-        var childCategories =
-            categories.where((o) => o.parent == currentCategory.id).toList();
-        widgets.add(Container(
-          color: i.isOdd
-              ? null
-              : Theme.of(context).colorScheme.secondary.withOpacity(0.1),
+        if (categories != null) {
+          var list = categories.where((item) => item.parent == '0').toList();
+          for (var i = 0; i < list.length; i++) {
+            final currentCategory = list[i];
+            var childCategories = categories
+                .where((o) => o.parent == currentCategory.id)
+                .toList();
+            widgets.add(Container(
+              color: i.isOdd
+                  ? null
+                  : Theme.of(context).colorScheme.secondary.withOpacity(0.1),
 
-          /// Check to add only parent link category
-          child: childCategories.isEmpty
-              ? InkWell(
-                  onTap: () => navigateToBackDrop(currentCategory),
-                  child: Padding(
-                    padding: const EdgeInsets.only(
-                      right: 20,
-                      bottom: 12,
-                      left: 16,
-                      top: 12,
-                    ),
-                    child: Row(
-                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
-                      children: [
-                        Expanded(
-                            child: Text(
-                          currentCategory.name!.toUpperCase(),
-                          style: textStyle,
-                        )),
-                        const SizedBox(width: 24),
-                        currentCategory.totalProduct == null
-                            ? const Icon(Icons.chevron_right)
-                            : Padding(
-                                padding:
-                                    const EdgeInsets.symmetric(vertical: 10),
+              /// Check to add only parent link category
+              child: childCategories.isEmpty
+                  ? InkWell(
+                      onTap: () => navigateToBackDrop(currentCategory),
+                      child: Padding(
+                        padding: const EdgeInsets.only(
+                          right: 20,
+                          bottom: 12,
+                          left: 16,
+                          top: 12,
+                        ),
+                        child: Row(
+                          mainAxisAlignment: MainAxisAlignment.spaceBetween,
+                          children: [
+                            Expanded(
                                 child: Text(
-                                  S
-                                      .of(context)
-                                      .nItems(currentCategory.totalProduct!),
-                                  style: TextStyle(
-                                    color: Theme.of(context).primaryColor,
-                                    fontSize: 12,
+                              currentCategory.name!.toUpperCase(),
+                              style: textStyle,
+                            )),
+                            const SizedBox(width: 24),
+                            currentCategory.totalProduct == null
+                                ? const Icon(Icons.chevron_right)
+                                : Padding(
+                                    padding: const EdgeInsets.symmetric(
+                                        vertical: 10),
+                                    child: Text(
+                                      S.of(context).nItems(
+                                          currentCategory.totalProduct!),
+                                      style: TextStyle(
+                                        color: Theme.of(context).primaryColor,
+                                        fontSize: 12,
+                                      ),
+                                    ),
                                   ),
-                                ),
-                              ),
-                      ],
-                    ),
-                  ),
-                )
-              : ExpansionTile(
-                  title: Padding(
-                    padding: const EdgeInsets.only(left: 0.0, top: 0),
-                    child: Text(
-                      currentCategory.name!.toUpperCase(),
-                      style: textStyle?.copyWith(fontSize: 14) ??
-                          const TextStyle(fontSize: 14),
-                    ),
-                  ),
-                  textColor: Theme.of(context).primaryColor,
-                  iconColor: Theme.of(context).primaryColor,
-                  children:
-                      getChildren(categories, currentCategory, childCategories)
+                          ],
+                        ),
+                      ),
+                    )
+                  : ExpansionTile(
+                      title: Padding(
+                        padding: const EdgeInsets.only(left: 0.0, top: 0),
+                        child: Text(
+                          currentCategory.name!.toUpperCase(),
+                          style: textStyle?.copyWith(fontSize: 14) ??
+                              const TextStyle(fontSize: 14),
+                        ),
+                      ),
+                      textColor: Theme.of(context).primaryColor,
+                      iconColor: Theme.of(context).primaryColor,
+                      children: getChildren(
+                              categories, currentCategory, childCategories)
                           as List<Widget>,
-                ),
-        ));
-      }
-    }
+                    ),
+            ));
+          }
+        }
 
-    return ExpansionTile(
-      initiallyExpanded: true,
-      expandedCrossAxisAlignment: CrossAxisAlignment.start,
-      tilePadding: const EdgeInsets.only(left: 16, right: 8),
-      title: Text(
-        S.of(context).byCategory.toUpperCase(),
-        style: TextStyle(
-          fontSize: 14,
-          fontWeight: FontWeight.w600,
-          color: textStyle?.color ??
-              Theme.of(context).colorScheme.secondary.withOpacity(0.5),
-        ),
-      ),
-      children: widgets,
+        return ExpansionTile(
+          initiallyExpanded: true,
+          expandedCrossAxisAlignment: CrossAxisAlignment.start,
+          tilePadding: const EdgeInsets.only(left: 16, right: 8),
+          title: Text(
+            S.of(context).byCategory.toUpperCase(),
+            style: TextStyle(
+              fontSize: 14,
+              fontWeight: FontWeight.w600,
+              color: textStyle?.color ??
+                  Theme.of(context).colorScheme.secondary.withOpacity(0.5),
+            ),
+          ),
+          children: widgets,
+        );
+      },
     );
   }
 
diff --git a/lib/models/app_model.dart b/lib/models/app_model.dart
index d289580..4d0259b 100644
--- a/lib/models/app_model.dart
+++ b/lib/models/app_model.dart
@@ -15,6 +15,7 @@ import '../services/index.dart';
 import 'advertisement/index.dart' show AdvertisementConfig;
 import 'cart/cart_model.dart';
 import 'category/category_model.dart';
+import 'filter_attribute_model.dart';
 
 class AppModel with ChangeNotifier {
   AppConfig? appConfig;
@@ -102,10 +103,10 @@ class AppModel with ChangeNotifier {
       var defaultCurrency = kAdvanceConfig.defaultCurrency;
 
       darkTheme = prefs.getBool('darkTheme') ?? kDefaultDarkTheme;
-      currency =
-          prefs.getString('currency') ?? defaultCurrency?.currencyDisplay;
-      currencyCode =
-          prefs.getString('currencyCode') ?? defaultCurrency?.currencyCode;
+      currency = prefs.getString(LocalStorageKey.currency) ??
+          defaultCurrency?.currencyDisplay;
+      currencyCode = prefs.getString(LocalStorageKey.currencyCode) ??
+          defaultCurrency?.currencyCode;
       smallestUnitRate = defaultCurrency?.smallestUnitRate;
       isInit = true;
       await updateTheme(darkTheme);
@@ -120,17 +121,22 @@ class AppModel with ChangeNotifier {
     try {
       _langCode = languageCode;
       var prefs = injector<SharedPreferences>();
-      await prefs.setString('language', _langCode);
+      await prefs.setString(LocalStorageKey.languageCode, _langCode);
 
       await loadAppConfig(isSwitched: true);
       await loadCurrency();
       eventBus.fire(const EventChangeLanguage());
 
-      await Provider.of<CategoryModel>(context, listen: false).getCategories(
-        lang: languageCode,
+      final categoryModel = Provider.of<CategoryModel>(context, listen: false);
+      categoryModel.refreshCategoryList();
+      unawaited(categoryModel.getCategories(
+        lang: _langCode,
         sortingList: categories,
+        categoryLayout: categoryLayout,
         remapCategories: remapCategories,
-      );
+      ));
+      unawaited(Provider.of<FilterAttributeModel>(context, listen: false)
+          .getFilterAttributes());
 
       return true;
     } catch (err) {
@@ -254,6 +260,11 @@ class AppModel with ChangeNotifier {
       if (categoryTab != null) {
         if (categoryTab.categories != null) {
           categories = List<String>.from(categoryTab.categories ?? []);
+          if (ServerConfig().isShopify) {
+            /// Support old type category (base64) work with new API
+            /// Old type is base64, new type is url like gid://shopify/Collection/123456789
+            categories = categories?.map(_parseShopifyCategories).toList();
+          }
         }
         if (categoryTab.images != null) {
           categoriesIcons =
@@ -261,6 +272,19 @@ class AppModel with ChangeNotifier {
         }
         if (categoryTab.remapCategories != null) {
           remapCategories = categoryTab.remapCategories;
+
+          /// Support old type category (base64) work with new API
+          /// Old type is base64, new type is url like gid://shopify/Collection/123456789
+          if (ServerConfig().isShopify) {
+            remapCategories = remapCategories?.map((e) {
+              for (var key in ['parent', 'category']) {
+                if (e[key] != null) {
+                  e[key] = _parseShopifyCategories(e[key]);
+                }
+              }
+              return e;
+            }).toList();
+          }
         }
         categoryLayout = categoryTab.categoryLayout;
       }
@@ -273,11 +297,11 @@ class AppModel with ChangeNotifier {
 
       notifyListeners();
       printLog('[Debug] Finish Load AppConfig', startTime);
+      eventBus.fire(const EventLoadedAppConfig());
       return appConfig;
     } catch (err, trace) {
       printLog('🔴 AppConfig JSON loading error');
-      printLog(err);
-      printLog(trace);
+      printError(err, trace);
       isLoading = false;
       notifyListeners();
       return null;
@@ -302,4 +326,12 @@ class AppModel with ChangeNotifier {
   void raiseNotify() {
     notifyListeners();
   }
+
+  String _parseShopifyCategories(String categoryId) {
+    try {
+      return EncodeUtils.decode(categoryId);
+    } on FormatException catch (_) {
+      return categoryId;
+    }
+  }
 }
diff --git a/lib/models/audio/playlist_audio.dart b/lib/models/audio/playlist_audio.dart
index 4b313fc..7f9cf23 100644
--- a/lib/models/audio/playlist_audio.dart
+++ b/lib/models/audio/playlist_audio.dart
@@ -49,7 +49,7 @@ class PlaylistAudio {
         }
       }
     } catch (e, trace) {
-      printLog(trace);
+      printError(e, trace);
       printLog('AudioItem $name error: ${e.toString()}');
     }
   }
diff --git a/lib/models/blog_wish_list_model.dart b/lib/models/blog_wish_list_model.dart
index 464d447..1758862 100644
--- a/lib/models/blog_wish_list_model.dart
+++ b/lib/models/blog_wish_list_model.dart
@@ -54,8 +54,7 @@ class BlogWishListModel extends ChangeNotifier {
         blogs = list;
       }
     } catch (err, trace) {
-      printLog(err);
-      printLog(trace);
+      printError(err, trace);
     }
   }
 }
diff --git a/lib/models/brand_model.dart b/lib/models/brand_model.dart
index 94498bc..832aede 100644
--- a/lib/models/brand_model.dart
+++ b/lib/models/brand_model.dart
@@ -31,8 +31,7 @@ class BrandModel with ChangeNotifier {
         await storage.setItem(kLocalKey['home']!, data);
       }
     } catch (err, trace) {
-      printLog(err);
-      printLog(trace);
+      printError(err, trace);
     }
   }
 
diff --git a/lib/models/cart/cart_model_bigcommerce.dart b/lib/models/cart/cart_model_bigcommerce.dart
index 903c89d..4b9612d 100644
--- a/lib/models/cart/cart_model_bigcommerce.dart
+++ b/lib/models/cart/cart_model_bigcommerce.dart
@@ -316,7 +316,7 @@ class CartModelBigCommerce
           return '${S.of(context).youCanOnlyPurchase} ${product.maxQuantity} ${S.of(context).forThisProduct}';
         }
       } else {
-        var isExceeded = ((productsInCart[key] ?? -1) + quantity!) >=
+        var isExceeded = ((productsInCart[key] ?? 0) + quantity!) >
             kCartDetail['maxAllowQuantity'];
 
         if (isExceeded && !allowBackorder) {
diff --git a/lib/models/cart/cart_model_shopify.dart b/lib/models/cart/cart_model_shopify.dart
index a8e6478..440f652 100644
--- a/lib/models/cart/cart_model_shopify.dart
+++ b/lib/models/cart/cart_model_shopify.dart
@@ -4,6 +4,7 @@ import '../../common/config.dart';
 import '../../common/tools.dart';
 import '../../generated/l10n.dart';
 import '../index.dart';
+import '../mixins/language_mixin.dart';
 import 'mixin/index.dart';
 
 class CartModelShopify
@@ -18,6 +19,7 @@ class CartModelShopify
         OpencartMixin,
         VendorMixin,
         ShopifyMixin,
+        LanguageMixin,
         OrderDeliveryMixin
     implements CartModel {
   static final CartModelShopify _instance = CartModelShopify._internal();
@@ -134,7 +136,13 @@ class CartModelShopify
       productsInCart[key] = quantity;
     } else {
       final stockQuantity = defaultVariation.stockQuantity ?? 0;
-      if (quantityOfProductInCart == stockQuantity && (variation?.backordersAllowed ?? false) == false) {
+      var maxAllowQuantity = kCartDetail['maxAllowQuantity'];
+      if (maxAllowQuantity != null &&
+          (quantityOfProductInCart + (quantity ?? 0)) > maxAllowQuantity) {
+        return '${S.current.youCanOnlyPurchase} $maxAllowQuantity ${S.current.forThisProduct}';
+      }
+      if (quantityOfProductInCart == stockQuantity &&
+          (variation?.backordersAllowed ?? false) == false) {
         return S.of(context).addToCartMaximum;
       }
 
diff --git a/lib/models/cart/cart_model_woo.dart b/lib/models/cart/cart_model_woo.dart
index ad45083..76d584a 100644
--- a/lib/models/cart/cart_model_woo.dart
+++ b/lib/models/cart/cart_model_woo.dart
@@ -74,10 +74,11 @@ class CartModelWoo
         final signUpFee = item[productId]!.metaData.firstWhere(
             (element) => element['key'] == '_subscription_sign_up_fee',
             orElse: () => {})['value'];
-        if ((signUpFee?.isNotEmpty ?? false) && productsInCart[id] != null) {
+        if ((signUpFee?.isNotEmpty ?? false) &&
+            productsInCart[id] != null &&
+            double.parse(signUpFee!) > 0) {
           return double.parse(signUpFee!) * productsInCart[id]!;
         }
-        return 0.0;
       }
     }
 
@@ -329,7 +330,7 @@ class CartModelWoo
           return '${S.current.youCanOnlyPurchase} ${product.maxQuantity} ${S.current.forThisProduct}';
         }
       } else {
-        var isExceeded = ((productsInCart[key] ?? -1) + quantity!) >=
+        var isExceeded = ((productsInCart[key] ?? 0) + quantity!) >
             kCartDetail['maxAllowQuantity'];
 
         if (isExceeded && !allowBackorder) {
diff --git a/lib/models/cart/checkout_shopify.dart b/lib/models/cart/checkout_shopify.dart
index 4961e17..940ba84 100644
--- a/lib/models/cart/checkout_shopify.dart
+++ b/lib/models/cart/checkout_shopify.dart
@@ -19,6 +19,17 @@ class CheckoutCart {
     coupon = Coupon.fromShopify(parsedJson['discountApplications'] ?? {});
   }
 
+  CheckoutCart.fromJsonShopifyV2(Map<String, dynamic> parsedJson) {
+    id = parsedJson['id'];
+    webUrl = parsedJson['webUrl'];
+    subtotalPrice =
+        double.parse(parsedJson['subtotalPriceV2']?['amount'] ?? '0');
+    totalTax = double.parse(parsedJson['totalTaxV2']?['amount'] ?? '0');
+    totalPrice = double.parse(parsedJson['totalPriceV2']?['amount'] ?? '0');
+    paymentDue = double.parse(parsedJson['paymentDueV2']?['amount'] ?? '0');
+    coupon = Coupon.fromShopify(parsedJson['discountApplications'] ?? {});
+  }
+
   @override
   String toString() => 'Checkout { id: $id }';
 }
diff --git a/lib/models/cart/mixin/local_mixin.dart b/lib/models/cart/mixin/local_mixin.dart
index 8312c8f..3f7969a 100644
--- a/lib/models/cart/mixin/local_mixin.dart
+++ b/lib/models/cart/mixin/local_mixin.dart
@@ -117,7 +117,7 @@ mixin LocalMixin on CartMixin {
           addProductToCart(
             product: Product.fromLocalJson(item['product']),
             quantity: item['quantity'],
-            variation: item['variation'] != 'null'
+            variation: item['variation'] != 'null' && item['variation'] != null
                 ? ProductVariation.fromLocalJson(item['variation'])
                 : null,
             options: item['options'] ?? <String, dynamic>{},
diff --git a/lib/models/category/category_model.dart b/lib/models/category/category_model.dart
index f509ecd..a640746 100644
--- a/lib/models/category/category_model.dart
+++ b/lib/models/category/category_model.dart
@@ -1,21 +1,20 @@
-import 'package:flutter/material.dart';
-
 import '../entities/category.dart';
 import 'detail_category_model.dart';
+import 'list_category_model.dart';
 
-abstract class CategoryModel with ChangeNotifier {
+abstract class CategoryModel extends ListCategoryModel {
   List<Category>? get categories;
 
   Map<String?, Category> get categoryList;
 
-  bool get isLoading;
-
   void sortCategoryList({
     List<Category>? categoryList,
     dynamic sortingList,
     String? categoryLayout,
   });
 
+  void refreshCategoryList();
+
   void mapCategories(List<Category> categories, List<Map> remapCategories);
 
   Future<void> getCategories({
@@ -34,4 +33,7 @@ abstract class CategoryModel with ChangeNotifier {
   DetailCategoryModel? getDetailCategoryModel(String id) {
     return null;
   }
+
+  List<Category>? get rootCategories =>
+      categories?.where((element) => element.isRoot).toList();
 }
diff --git a/lib/models/category/category_model_impl.dart b/lib/models/category/category_model_impl.dart
index ab90651..59ce9e2 100644
--- a/lib/models/category/category_model_impl.dart
+++ b/lib/models/category/category_model_impl.dart
@@ -1,4 +1,5 @@
-import 'package:collection/collection.dart' show IterableExtension;
+import 'package:collection/collection.dart'
+    show IterableExtension, UnmodifiableListView;
 
 import '../../common/constants.dart';
 import '../../services/index.dart';
@@ -8,7 +9,11 @@ import 'category_model.dart';
 class CategoryModelImpl extends CategoryModel {
   final Services _service = Services();
 
-  List<Category>? _categories = [];
+  List<Category>? _categories;
+
+  @override
+  UnmodifiableListView<Category> get data =>
+      UnmodifiableListView(_categories ?? <Category>[]);
 
   @override
   List<Category>? get categories => _categories;
@@ -18,6 +23,7 @@ class CategoryModelImpl extends CategoryModel {
 
   @override
   bool isLoading = false;
+
   List<Category>? _allCategories;
 
   /// Format the Category List and assign the List by Category ID
@@ -143,4 +149,13 @@ class CategoryModelImpl extends CategoryModel {
   List<Category>? getCategory({required String parentId}) {
     return _categories?.where((element) => element.parent == parentId).toList();
   }
+
+  @override
+  bool get isFirstLoad => _categories == null;
+
+  @override
+  void refreshCategoryList() {
+    _categories?.clear();
+    notifyListeners();
+  }
 }
diff --git a/lib/models/category/detail_category_model.dart b/lib/models/category/detail_category_model.dart
index 61c6097..4f94fb0 100644
--- a/lib/models/category/detail_category_model.dart
+++ b/lib/models/category/detail_category_model.dart
@@ -28,7 +28,7 @@ class DetailCategoryModel with ChangeNotifier {
   bool get isLoading => _totalProduct == null;
 
   bool? get hasChildren =>
-      _category.hasChildren ?? (_subcategoryModel.data?.isNotEmpty);
+      _category.hasChildren ?? (_subcategoryModel.data.isNotEmpty);
 
   DetailCategoryModel({required Category category})
       : _category = category,
@@ -48,7 +48,7 @@ class DetailCategoryModel with ChangeNotifier {
     /// If null then need check it's has children or not
     if (_category.hasChildren ?? true) {
       await _subcategoryModel.getData();
-      if (_subcategoryModel.data?.isNotEmpty ?? false) {
+      if (_subcategoryModel.data.isNotEmpty) {
         notifyListeners();
         return;
       }
diff --git a/lib/models/category/list_category_model.dart b/lib/models/category/list_category_model.dart
index cc6b240..899f2a7 100644
--- a/lib/models/category/list_category_model.dart
+++ b/lib/models/category/list_category_model.dart
@@ -4,7 +4,7 @@ import '../paging_data_provider.dart';
 
 class ListCategoryModel extends PagingDataProvider<Category> {
   ListCategoryModel({
-    required String? parentId,
+    String? parentId,
     int limit = 25,
   }) : super(
           dataRepo: ListCategoryRepository(
diff --git a/lib/models/category/main_category_model.dart b/lib/models/category/main_category_model.dart
index 49b76ee..c2f9028 100644
--- a/lib/models/category/main_category_model.dart
+++ b/lib/models/category/main_category_model.dart
@@ -4,7 +4,7 @@ import 'detail_category_model.dart';
 import 'list_category_model.dart';
 
 class MainCategoryModel extends ListCategoryModel implements CategoryModel {
-  MainCategoryModel() : super(parentId: null, limit: 10);
+  MainCategoryModel() : super(parentId: null, limit: 15);
 
   final Map<String, DetailCategoryModel> _subCategories = {};
 
@@ -63,4 +63,11 @@ class MainCategoryModel extends ListCategoryModel implements CategoryModel {
 
   @override
   Map<String?, Category> get categoryList => const <String?, Category>{};
+
+  /// Because the default MainCategoryModel just fetch root categories
+  @override
+  List<Category>? get rootCategories => categories;
+
+  @override
+  void refreshCategoryList() => refresh(autoGetData: false);
 }
diff --git a/lib/models/entities/blog.dart b/lib/models/entities/blog.dart
index 7afd0c5..cdfc3f2 100644
--- a/lib/models/entities/blog.dart
+++ b/lib/models/entities/blog.dart
@@ -3,8 +3,10 @@
 import 'dart:convert';
 
 import 'package:html_unescape/html_unescape.dart';
+import 'package:http/http.dart' as http;
 import 'package:intl/intl.dart';
 
+import '../../common/config.dart';
 import '../../common/constants.dart';
 import '../../common/tools.dart';
 import '../../services/index.dart';
@@ -62,7 +64,19 @@ class Blog {
         commentCount = 0;
 
   factory Blog.fromJson(Map<String, dynamic>? json) {
+    if (json == null || json.isEmpty) {
+      return const Blog.empty();
+    }
+
     switch (ServerConfig().type) {
+      case ConfigType.shopify:
+        return Blog.fromShopifyJson(json);
+      case ConfigType.strapi:
+        return Blog.fromStrapiJson(json);
+      case ConfigType.notion:
+        return Blog.fromNotionJson(json);
+      case ConfigType.bigCommerce:
+        return Blog.fromBigCommerceJson(json);
       case ConfigType.woo:
       case ConfigType.opencart:
       case ConfigType.magento:
@@ -73,17 +87,8 @@ class Blog {
       case ConfigType.mylisting:
       case ConfigType.listeo:
       case ConfigType.listpro:
-        return Blog.fromWooJson(json!);
-      case ConfigType.shopify:
-        return Blog.fromShopifyJson(json!);
-      case ConfigType.strapi:
-        return Blog.fromStrapiJson(json!);
-      case ConfigType.notion:
-        return Blog.fromNotionJson(json!);
-      case ConfigType.bigCommerce:
-        return Blog.fromBigCommerceJson(json!);
       default:
-        return const Blog.empty(0);
+        return Blog.fromWooJson(json);
     }
   }
 
@@ -142,10 +147,13 @@ class Blog {
         imageFeature =
             imgMedia[0]['media_details']?['sizes']?['large']?['source_url'];
         imageFeature ??= imgMedia[0]['source_url'];
+      } else {
+        imageFeature ??= (json['image'] ?? json['image_feature']);
       }
     }
 
-    final author = json['_embedded']?['author']?[0]['name'] ?? '';
+    final author =
+        json['_embedded']?['author']?[0]['name'] ?? json['author_name'] ?? '';
     final date = Tools.formatDate(json['date']);
     final id = json['id'];
     final title = HtmlUnescape().convert(json['title']['rendered']);
@@ -155,11 +163,15 @@ class Blog {
     final categoryId = categories.isNotEmpty ? categories.first : null;
     final excerpt = HtmlUnescape().convert(json['excerpt']['rendered']);
     final slug = json['slug'];
-    final authorImage = json['_embedded']?['author']?[0]['avatar_urls']?['48'];
+    final authorImage = json['_embedded']?['author']?[0]['avatar_urls']
+            ?['48'] ??
+        json['post_author_avatar_urls']?['48'];
     final link = json['link'];
     final videoUrl = Videos.getVideoLink(content);
 
-    final commentCount = List.from(json['_embedded']?['replies'] ?? []).length;
+    final commentCount = json['_embedded']?['replies'] != null
+        ? List.from(json['_embedded']?['replies'] ?? []).length
+        : json['post_comment_count'] ?? 0;
 
     return Blog(
       author: author,
@@ -269,12 +281,13 @@ class Blog {
 
   static Future getBlogs({String? url, categories, page = 1}) async {
     try {
-      var param = '_embed&page=$page';
+      var param =
+          '_embed&page=$page${kAdvanceConfig.alwaysRefreshBlog ? '&dummy=${DateTime.now().millisecondsSinceEpoch}' : ''}';
       if (categories != null) {
         param += '&categories=$categories';
       }
       final response =
-          await httpGet('$url/wp-json/wp/v2/posts?$param'.toUri()!);
+          await http.get('$url/wp-json/wp/v2/posts?$param'.toUri()!);
 
       if (response.statusCode != 200) {
         return [];
diff --git a/lib/models/entities/category.dart b/lib/models/entities/category.dart
index 93ff8e9..a1fae9f 100644
--- a/lib/models/entities/category.dart
+++ b/lib/models/entities/category.dart
@@ -21,6 +21,8 @@ class Category {
   bool? hasChildren = false;
   List<Category> subCategories = [];
 
+  int? _leveldepth;
+
   Category({
     this.id,
     this.sku,
@@ -184,6 +186,10 @@ class Category {
       totalProduct = parsedJson['nb_products_recursive'] != null
           ? int.parse(parsedJson['nb_products_recursive'].toString())
           : null;
+      if ((parsedJson['associations']?['categories'] as List?)?.isNotEmpty ?? false) {
+        hasChildren = true;
+      }
+      _leveldepth = int.tryParse('${parsedJson['level_depth']}');
     } catch (e, trace) {
       printLog(e.toString());
       printLog(trace.toString());
@@ -301,7 +307,7 @@ class Category {
     }
   }
 
-  bool get isRoot => parent == '0';
+  bool get isRoot => parent == '0' || _leveldepth == 2;
 
   @override
   String toString() => 'Category { id: $id  name: $name}';
diff --git a/lib/models/entities/filter_sorty_by.dart b/lib/models/entities/filter_sorty_by.dart
index 8d8326d..95622b7 100644
--- a/lib/models/entities/filter_sorty_by.dart
+++ b/lib/models/entities/filter_sorty_by.dart
@@ -10,17 +10,30 @@ extension Display on OrderType {
 
   String get displayDate => this == OrderType.asc ? 'Newest' : 'Oldest';
 
+  String get displayTitle => this == OrderType.asc ? 'A -> Z' : 'Z -> A';
+
   bool get isAsc => this == OrderType.asc;
   bool get isDesc => this == OrderType.desc;
 }
 
 enum OrderByType {
+  onSale,
+  featured,
   price,
   date,
+  title,
+  popularity,
+  rating,
+  id,
+  include,
+  slug,
+  modified,
+  // ignore: constant_identifier_names
+  menu_order,
 }
 
 class FilterSortBy {
-  /// Include name, date, price
+  /// Include name, date, price, popularity, rating
   final OrderByType? orderByType;
 
   /// Include asc, desc
@@ -192,12 +205,18 @@ class FilterSortBy {
 
   String? get displayOrderBy {
     switch (orderByType) {
-      case null:
-        return null;
       case OrderByType.price:
         return S.current.byPrice;
       case OrderByType.date:
         return S.current.date;
+      case OrderByType.title:
+        return S.current.title;
+      case OrderByType.popularity:
+        return S.current.popularity;
+      case OrderByType.rating:
+        return S.current.averageRating;
+      default:
+        return null;
     }
   }
 }
diff --git a/lib/models/entities/firebase_error_exception.dart b/lib/models/entities/firebase_error_exception.dart
index 406382e..637e02b 100644
--- a/lib/models/entities/firebase_error_exception.dart
+++ b/lib/models/entities/firebase_error_exception.dart
@@ -28,4 +28,9 @@ class FirebaseErrorException {
   /// "no-app" is used when a user attempts to read a [FirebaseApp] which does
   /// not exist.
   final String code;
+
+  @override
+  String toString() {
+    return message ?? code;
+  }
 }
diff --git a/lib/models/entities/payment_method.dart b/lib/models/entities/payment_method.dart
index 665f785..6f29c3c 100644
--- a/lib/models/entities/payment_method.dart
+++ b/lib/models/entities/payment_method.dart
@@ -30,7 +30,10 @@ class PaymentMethod {
     title = isNotBlank(parsedJson['title'])
         ? parsedJson['title']
         : parsedJson['method_title'];
-    description = parsedJson['description'];
+    description = parsedJson['description'] is String &&
+            isNotBlank(parsedJson['description'])
+        ? parsedJson['description']
+        : null;
     enabled = true;
   }
 
diff --git a/lib/models/entities/product.dart b/lib/models/entities/product.dart
index 4f82c43..ed8dcef 100644
--- a/lib/models/entities/product.dart
+++ b/lib/models/entities/product.dart
@@ -22,8 +22,10 @@ import 'product_variation.dart';
 import 'tag.dart';
 import 'vendor_admin_variation.dart';
 
+const _defaultId = '0';
+
 class Product {
-  String? id;
+  String id;
   String? sku;
   String? name;
   String? status;
@@ -120,98 +122,102 @@ class Product {
   String? twitter;
   String? instagram;
   String? eventDate;
-  String? rating;
+
+  // String? rating;
   int? totalReview = 0;
   double? lat;
   double? long;
   List<dynamic>? listingMenu = [];
   ListingSlots? slots;
+  bool? listingBookingStatus;
 
   ///----FLUXSTORE LISTING----///
-  Product(
-      {String? id,
-      String? sku,
-      String? name,
-      String? status,
-      String? vendor,
-      String? description,
-      String? shortDescription,
-      String? permalink,
-      String? price,
-      String? regularPrice,
-      String? salePrice,
-      String? maxPrice,
-      String? minPrice,
-      bool? onSale,
-      bool? inStock,
-      double? averageRating,
-      int? totalSales,
-      String? dateOnSaleFrom,
-      String? dateOnSaleTo,
-      int? ratingCount,
-      List<String>? images,
-      String? imageFeature,
-      List<ProductAttribute>? attributes,
-      List<Attribute>? defaultAttributes,
-      List<ProductAttribute>? infors,
-      String? categoryId,
-      String? videoUrl,
-      List<dynamic>? groupedProducts,
-      List<String?>? files,
-      int? stockQuantity,
-      int? minQuantity,
-      int? maxQuantity,
-      bool? manageStock,
-      bool? backOrdered,
-      String? relatedIds,
-      bool? backordersAllowed,
-      Store? store,
-      List<Tag>? tags,
-      List<Category>? categories,
-      List<Map<String, dynamic>>? metaData,
-      List<ProductAddons>? addOns,
-      List<AddonsOption>? selectedOptions,
-      List<VendorAdminVariation>? vendorAdminVariations,
-      List<ProductVariation>? variationProducts,
-      bool? isPurchased,
-      bool? isDownloadable,
-      String? type,
-      String? affiliateUrl,
-      List<ProductVariation>? variations,
-      List<Map<String, dynamic>>? options,
-      BookingModel? bookingInfo,
-      String? idShop,
-      bool? isFeatured,
-      String? vendorAdminImageFeature,
-      List<String>? categoryIds,
-      List<ProductAttribute>? vendorAdminProductAttributes,
-      String? distance,
-      Map? pureTaxonomies,
-      List? reviews,
-      String? featured,
-      bool? verified,
-      String? tagLine,
-      String? priceRange,
-      String? categoryName,
-      String? hours,
-      String? location,
-      String? phone,
-      String? facebook,
-      String? email,
-      String? website,
-      String? skype,
-      String? whatsapp,
-      String? youtube,
-      String? twitter,
-      String? instagram,
-      String? eventDate,
-      String? rating,
-      int? totalReview,
-      double? lat,
-      double? long,
-      List<dynamic>? listingMenu,
-      ListingSlots? slots,
-      bool? isRestricted});
+  Product({
+    this.id = _defaultId,
+    String? sku,
+    String? name,
+    String? status,
+    String? vendor,
+    String? description,
+    String? shortDescription,
+    String? permalink,
+    String? price,
+    String? regularPrice,
+    String? salePrice,
+    String? maxPrice,
+    String? minPrice,
+    bool? onSale,
+    bool? inStock,
+    double? averageRating,
+    int? totalSales,
+    String? dateOnSaleFrom,
+    String? dateOnSaleTo,
+    int? ratingCount,
+    List<String>? images,
+    String? imageFeature,
+    List<ProductAttribute>? attributes,
+    List<Attribute>? defaultAttributes,
+    List<ProductAttribute>? infors,
+    String? categoryId,
+    String? videoUrl,
+    List<dynamic>? groupedProducts,
+    List<String?>? files,
+    int? stockQuantity,
+    int? minQuantity,
+    int? maxQuantity,
+    bool? manageStock,
+    bool? backOrdered,
+    String? relatedIds,
+    bool? backordersAllowed,
+    Store? store,
+    List<Tag>? tags,
+    List<Category>? categories,
+    List<Map<String, dynamic>>? metaData,
+    List<ProductAddons>? addOns,
+    List<AddonsOption>? selectedOptions,
+    List<VendorAdminVariation>? vendorAdminVariations,
+    List<ProductVariation>? variationProducts,
+    bool? isPurchased,
+    bool? isDownloadable,
+    String? type,
+    String? affiliateUrl,
+    List<ProductVariation>? variations,
+    List<Map<String, dynamic>>? options,
+    BookingModel? bookingInfo,
+    String? idShop,
+    bool? isFeatured,
+    String? vendorAdminImageFeature,
+    List<String>? categoryIds,
+    List<ProductAttribute>? vendorAdminProductAttributes,
+    String? distance,
+    Map? pureTaxonomies,
+    List? reviews,
+    String? featured,
+    bool? verified,
+    String? tagLine,
+    String? priceRange,
+    String? categoryName,
+    String? hours,
+    String? location,
+    String? phone,
+    String? facebook,
+    String? email,
+    String? website,
+    String? skype,
+    String? whatsapp,
+    String? youtube,
+    String? twitter,
+    String? instagram,
+    String? eventDate,
+    String? rating,
+    int? totalReview,
+    double? lat,
+    double? long,
+    List<dynamic>? listingMenu,
+    ListingSlots? slots,
+    bool? isRestricted,
+    bool? listingBookingStatus,
+  });
 
   Product.empty(this.id) {
     name = '';
@@ -251,6 +257,8 @@ class Product {
 
   bool get isSimpleProduct => type == 'simple';
 
+  bool get isGroupedProduct => type == 'grouped';
+
   String? get displayPrice {
     return onSale == true
         ? (isNotBlank(salePrice) ? salePrice ?? '0' : price)
@@ -264,8 +272,7 @@ class Product {
         .toList();
   }
 
-  Product.cloneFrom(Product p) {
-    id = p.id;
+  Product.cloneFrom(Product p) : id = p.id {
     sku = p.sku;
     status = p.status;
     name = p.name;
@@ -314,7 +321,8 @@ class Product {
     categories = p.categories.toList();
   }
 
-  Product.fromJson(Map<String, dynamic> parsedJson) {
+  Product.fromJson(Map<String, dynamic> parsedJson)
+      : id = parsedJson['id'].toString() {
     try {
       id = parsedJson['id'].toString();
       sku = parsedJson['sku'];
@@ -355,7 +363,7 @@ class Product {
       inStock =
           parsedJson['in_stock'] ?? parsedJson['stock_status'] == 'instock';
       if (inStock == true && manageStock) {
-        inStock = parsedJson['stock_quantity'] > 0;
+        inStock = (parsedJson['stock_quantity'] ?? 0) > 0;
       }
       backOrdered = parsedJson['backordered'] ?? false;
       backordersAllowed = (parsedJson['backorders_allowed'] ?? false) ||
@@ -698,9 +706,9 @@ class Product {
     }
   }
 
-  Product.fromOpencartJson(Map<String, dynamic> parsedJson) {
+  Product.fromOpencartJson(Map<String, dynamic> parsedJson)
+      : id = parsedJson['product_id'] ?? _defaultId {
     try {
-      id = parsedJson['product_id'] ?? '0';
       name = HtmlUnescape().convert(parsedJson['name']);
       description = parsedJson['description'];
       permalink =
@@ -739,9 +747,9 @@ class Product {
     }
   }
 
-  Product.fromMagentoJson(Map<String, dynamic> parsedJson) {
+  Product.fromMagentoJson(Map<String, dynamic> parsedJson)
+      : id = "${parsedJson["id"]}" {
     try {
-      id = "${parsedJson["id"]}";
       sku = parsedJson['sku'];
       name = parsedJson['name'];
       permalink = parsedJson['permalink'];
@@ -756,7 +764,7 @@ class Product {
     }
   }
 
-  Product.fromShopify(Map<String, dynamic> json) {
+  Product.fromShopify(Map<String, dynamic> json) : id = json['id'] {
     try {
       var priceV2 = json['variants']['edges'][0]['node']['priceV2'];
       var compareAtPriceV2 =
@@ -774,7 +782,6 @@ class Product {
       }
 
       categoryId = json['categoryId'] ?? (defaultCategory ?? {})['id'];
-      id = json['id'];
       sku = json['sku'];
       name = json['title'];
       vendor = json['vendor'];
@@ -839,9 +846,11 @@ class Product {
     }
   }
 
-  Product.fromPresta(Map<String, dynamic> parsedJson, apiLink) {
+  Product.fromPresta(Map<String, dynamic> parsedJson, apiLink)
+      : id = parsedJson['id'] != null
+            ? parsedJson['id'].toString()
+            : _defaultId {
     try {
-      id = parsedJson['id'] != null ? parsedJson['id'].toString() : '0';
       var productName = parsedJson['name'];
       name = (productName is List && productName.isNotEmpty)
           ? '${productName[0]?['value']}'
@@ -922,9 +931,9 @@ class Product {
     }
   }
 
-  Product.fromJsonStrapi(SerializerProduct model, apiLink) {
+  Product.fromJsonStrapi(SerializerProduct model, apiLink)
+      : id = model.id.toString() {
     try {
-      id = model.id.toString();
       name = model.title;
       inStock = !model.isOutOfStock!;
       stockQuantity = model.inventory;
@@ -973,7 +982,7 @@ class Product {
       categoryIds = '-1';
     }
     return {
-      'id': id ?? '',
+      'id': id,
       'name': name ?? '',
       'status': status ?? 'pending',
       'description': description ?? '',
@@ -1045,7 +1054,6 @@ class Product {
       'twitter': twitter,
       'instagram': instagram,
       'eventDate': eventDate,
-      'rating': rating,
       'totalReview': totalReview,
       'lat': lat,
       'long': long,
@@ -1060,9 +1068,9 @@ class Product {
     };
   }
 
-  Product.fromLocalJson(Map<String, dynamic> json) {
+  Product.fromLocalJson(Map<String, dynamic> json)
+      : id = json['id'].toString() {
     try {
-      id = json['id'].toString();
       sku = json['sku'];
       name = json['name'];
       description = json['description'];
@@ -1152,7 +1160,6 @@ class Product {
       twitter = json['twitter'];
       instagram = json['instagram'];
       eventDate = json['eventDate'];
-      rating = json['rating'];
       totalReview = json['totalReview'];
       lat = json['lat'];
       long = json['long'];
@@ -1172,7 +1179,8 @@ class Product {
     }
   }
 
-  Product.fromNotion(Map<String, dynamic> json) {
+  Product.fromNotion(Map<String, dynamic> json)
+      : id = json['properties']?['id'] ?? '' {
     try {
       final properties = json['properties'];
       id = json['id'] ?? '';
@@ -1210,8 +1218,6 @@ class Product {
       ratingCount = 0;
       averageRating = 0.0;
 
-      rating = rating ?? '0.0';
-
       defaultAttributes = <Attribute>[];
       attributes = [];
 
@@ -1252,10 +1258,11 @@ class Product {
     }
   }
 
-  Product.fromBigCommerce(Map<String, dynamic> json) {
+  Product.fromBigCommerce(Map<String, dynamic> json)
+      : id = '${json['id'] ?? ''}' {
     try {
-      id = '${json['id'] ?? ''}';
       name = json['name'];
+      categoryId = List.from(json['categories'] ?? []).first.toString();
       description = json['description'];
       regularPrice = '${json['price'] ?? '0.0'}';
       price = '${json['price'] ?? '0.0'}';
@@ -1267,7 +1274,7 @@ class Product {
       onSale = (int.tryParse('$salePrice') ?? 0) > 0;
       inStock = json['availability'] == 'available';
       images = <String>[];
-      if (id?.isNotEmpty ?? false) {
+      if (id.isNotEmpty) {
         permalink = 'https://fluxstore/product/$id';
       }
 
@@ -1288,9 +1295,11 @@ class Product {
         imageFeature = images.isNotEmpty ? images.first : kDefaultImage;
       }
 
-      ratingCount = json['rating_count'];
-      averageRating = 0.0;
-      rating = '${json['rating_total']}';
+      ratingCount = json['rating_count'] ?? 0;
+      if (ratingCount != 0) {
+        averageRating =
+            (Tools.formatDouble(json['rating_total']) ?? 0) / ratingCount!;
+      }
 
       variations = [];
       attributes = [];
@@ -1323,9 +1332,9 @@ class Product {
   }
 
   /// The return JSON From Ajax Search Pro (WooCommerce)
-  Product.fromAjaxSearch(Map<String, dynamic> json) {
+  Product.fromAjaxSearch(Map<String, dynamic> json)
+      : id = json['id'].toString() {
     try {
-      id = json['id'].toString();
       name = HtmlUnescape().convert(json['title']);
       description =
           isNotBlank(json['post_title']) ? json['post_title'] : json['excerpt'];
@@ -1377,10 +1386,10 @@ class Product {
   }
 
   ///----FLUXSTORE LISTING----////
-  Product.fromListingJson(Map<String, dynamic> json) {
+  Product.fromListingJson(Map<String, dynamic> json)
+      : id = Tools.getValueByKey(json, DataMapping().kProductDataMapping['id'])
+            .toString() {
     try {
-      id = Tools.getValueByKey(json, DataMapping().kProductDataMapping['id'])
-          .toString();
       name = HtmlUnescape().convert(Tools.getValueByKey(
           json, DataMapping().kProductDataMapping['title']));
       description = Tools.getValueByKey(
@@ -1410,9 +1419,9 @@ class Product {
       type =
           Tools.getValueByKey(json, DataMapping().kProductDataMapping['type']);
       categoryName = type;
-      rating = Tools.getValueByKey(
-          json, DataMapping().kProductDataMapping['rating']);
-      rating = rating ?? '0.0';
+      averageRating = double.tryParse(
+          '${Tools.getValueByKey(json, DataMapping().kProductDataMapping['rating'])}');
+      averageRating = averageRating ?? 0.0;
 
       final reviews = Tools.getValueByKey(
           json, DataMapping().kProductDataMapping['totalReview']);
@@ -1526,10 +1535,16 @@ class Product {
         }
       }
 
+      if (json['listing_data']?['_booking_status'] == 'on') {
+        listingBookingStatus = true;
+      } else {
+        listingBookingStatus = false;
+      }
+
       ///Set other attributes that not relate to Listing to be unusable
 
-    } catch (err) {
-      printLog('err when parsed json Listing $err');
+    } catch (err, trace) {
+      printLog('err when parsed json Listing $trace');
     }
   }
 
@@ -1612,7 +1627,6 @@ class Product {
       String? twitter,
       String? instagram,
       String? eventDate,
-      String? rating,
       int? totalReview,
       double? lat,
       double? long,
@@ -1699,7 +1713,6 @@ class Product {
         twitter: twitter ?? this.twitter,
         instagram: instagram ?? this.instagram,
         eventDate: eventDate ?? this.eventDate,
-        rating: rating ?? this.rating,
         totalReview: totalReview ?? this.totalReview,
         lat: lat ?? this.lat,
         long: long ?? this.long,
diff --git a/lib/models/entities/product_attribute.dart b/lib/models/entities/product_attribute.dart
index 8ec6aab..50de5f1 100644
--- a/lib/models/entities/product_attribute.dart
+++ b/lib/models/entities/product_attribute.dart
@@ -205,7 +205,7 @@ class Attribute {
   }
 
   Attribute.fromPrestaJson(Map<String, dynamic> parsedJson) {
-    id = parsedJson['id'];
+    id = int.tryParse('${parsedJson['id']}');
     name = parsedJson['name'];
     option = parsedJson['option'];
   }
diff --git a/lib/models/entities/product_variation.dart b/lib/models/entities/product_variation.dart
index 70c20b5..be84d5f 100644
--- a/lib/models/entities/product_variation.dart
+++ b/lib/models/entities/product_variation.dart
@@ -116,7 +116,7 @@ class ProductVariation {
     if (inStock == true) {
       /// parsedJson['manage_stock'] can be true, false, "parent".
       if (manageStock) {
-        inStock = parsedJson['stock_quantity'] > 0;
+        inStock = (parsedJson['stock_quantity'] ?? 0) > 0;
       }
     }
     inStock! ? stockQuantity = parsedJson['stock_quantity'] : stockQuantity = 0;
diff --git a/lib/models/entities/sale_stats.dart b/lib/models/entities/sale_stats.dart
index 760d193..32482b7 100644
--- a/lib/models/entities/sale_stats.dart
+++ b/lib/models/entities/sale_stats.dart
@@ -1,4 +1,4 @@
-import 'package:charts_flutter/flutter.dart';
+import 'package:charts_flutter_new/flutter.dart';
 
 class SaleStats {
   SaleStats({
diff --git a/lib/models/entities/shipping_method.dart b/lib/models/entities/shipping_method.dart
index 1e2af08..c5aef0d 100644
--- a/lib/models/entities/shipping_method.dart
+++ b/lib/models/entities/shipping_method.dart
@@ -8,6 +8,7 @@ class ShippingMethod {
   String? title;
   String? description;
   double? cost;
+  double? shippingTax;
   double? minAmount;
   String? classCost;
   String? methodId;
@@ -23,8 +24,8 @@ class ShippingMethod {
       title = parsedJson['label'];
       methodId = parsedJson['method_id'];
       methodTitle = parsedJson['label'];
-      cost = double.parse("${parsedJson["cost"]}") +
-          double.parse("${parsedJson["shipping_tax"]}");
+      cost = double.parse("${parsedJson["cost"]}");
+      shippingTax = double.parse("${parsedJson["shipping_tax"]}");
     } catch (e) {
       printLog('error parsing Shipping method');
     }
diff --git a/lib/models/entities/transaction.dart b/lib/models/entities/transaction.dart
index 2d6bfa1..f35cea7 100644
--- a/lib/models/entities/transaction.dart
+++ b/lib/models/entities/transaction.dart
@@ -1,4 +1,4 @@
-import 'package:inspireui/utils/logs.dart';
+import 'package:inspireui/inspireui.dart';
 
 import 'user.dart';
 
diff --git a/lib/models/entities/user.dart b/lib/models/entities/user.dart
index 1f0590e..8a3a91a 100644
--- a/lib/models/entities/user.dart
+++ b/lib/models/entities/user.dart
@@ -81,7 +81,13 @@ class User {
       email = user['email'] ?? id;
       isSocial = true;
       userUrl = user['avatar'];
-      var roles = user['role'] as List;
+      var roles = [];
+      if (json['role'] is Map) {
+        roles = json['role'].values.toList();
+      } else {
+        roles = json['role'] as List;
+      }
+
       var role = roles.firstWhere(
           (item) => ((item == 'seller') ||
               (item == 'wcfm_vendor') ||
@@ -326,7 +332,12 @@ class User {
       nicename = json['nicename'];
       userUrl = json['url'];
       loggedIn = true;
-      var roles = json['role'] as List;
+      var roles = [];
+      if (json['role'] is Map) {
+        roles = json['role'].values.toList();
+      } else {
+        roles = json['role'] as List;
+      }
 
       isVender = false;
       if (roles.isNotEmpty) {
@@ -377,7 +388,12 @@ class User {
       nicename = json['nicename'];
       userUrl = json['url'];
       loggedIn = true;
-      var roles = json['role'] as List;
+      var roles = [];
+      if (json['role'] is Map) {
+        roles = json['role'].values.toList();
+      } else {
+        roles = json['role'] as List;
+      }
 
       if (roles.isNotEmpty) {
         role = roles.first;
diff --git a/lib/models/entities/vacation_settings.dart b/lib/models/entities/vacation_settings.dart
index 8356323..1fa69da 100644
--- a/lib/models/entities/vacation_settings.dart
+++ b/lib/models/entities/vacation_settings.dart
@@ -85,8 +85,11 @@ class VacationSettings {
   }
 
   bool isOpen() {
+    if (vacationMode == true && vacationOption == VacationOption.instant) {
+      return false;
+    }
     final now = DateTime.now();
-    if (startDate != null && endDate != null) {
+    if (vacationMode == true && startDate != null && endDate != null) {
       if (now.isBefore(endDate!) && now.isAfter(startDate!)) {
         return false;
       }
diff --git a/lib/models/filter_attribute_model.dart b/lib/models/filter_attribute_model.dart
index 2601661..4c9ea9d 100644
--- a/lib/models/filter_attribute_model.dart
+++ b/lib/models/filter_attribute_model.dart
@@ -10,13 +10,15 @@ class FilterAttributeModel with ChangeNotifier, LanguageMixin {
   List<SubAttribute> lstCurrentAttr = [];
   List<bool> lstCurrentSelectedTerms = [];
   bool _isLoading = false;
-  bool isLoadMore = false;
+  bool _isEnd = false;
   int? selectedAttr;
 
   bool get isLoadingMore => _isLoading && lstCurrentAttr.isNotEmpty;
 
   bool get isLoading => _isLoading;
 
+  bool get isEnd => _isEnd;
+
   bool get isFirstLoad => _isLoading && lstCurrentAttr.isEmpty;
 
   int get indexSelectedAttr => selectedAttr != null
@@ -66,6 +68,10 @@ class FilterAttributeModel with ChangeNotifier, LanguageMixin {
         lstCurrentAttr = data;
       }
 
+      if (data.isEmpty) {
+        _isEnd = true;
+      }
+
       // Remove duplicates item
       for (var index = 0; index < lstCurrentAttr.length; index++) {
         final currentProduct = lstCurrentAttr[index];
diff --git a/lib/models/order/order.dart b/lib/models/order/order.dart
index 4a1ba62..e1ec002 100644
--- a/lib/models/order/order.dart
+++ b/lib/models/order/order.dart
@@ -791,36 +791,34 @@ class Order {
         }
       }
 
+      var feeLines = [];
       if (cartModel.rewardTotal > 0) {
-        params['fee_lines'] = [
-          {
-            'name': 'Cart Discount',
-            'tax_status': 'taxable',
-            'total': '${cartModel.rewardTotal * (-1)}',
-            'amount': '${cartModel.rewardTotal * (-1)}'
-          }
-        ];
+        feeLines.add({
+          'name': 'Cart Discount',
+          'tax_status': 'taxable',
+          'total': '${cartModel.rewardTotal * (-1)}',
+          'amount': '${cartModel.rewardTotal * (-1)}'
+        });
       }
       if (cartModel.walletAmount > 0) {
-        params['fee_lines'] = [
-          {
-            'name': 'Via Wallet',
-            'tax_status': 'taxable',
-            'total': '${cartModel.walletAmount * (-1)}',
-            'amount': '${cartModel.walletAmount * (-1)}'
-          }
-        ];
+        feeLines.add({
+          'name': 'Via Wallet',
+          'tax_status': 'taxable',
+          'total': '${cartModel.walletAmount * (-1)}',
+          'amount': '${cartModel.walletAmount * (-1)}'
+        });
         params['total'] = cartModel.getTotal();
       }
       if (cartModel.getCODExtraFee() > 0) {
-        params['fee_lines'] = [
-          {
-            'name': 'COD Extra Fee',
-            'tax_status': 'taxable',
-            'total': '${cartModel.getCODExtraFee()}',
-            'amount': '${cartModel.getCODExtraFee()}'
-          }
-        ];
+        feeLines.add({
+          'name': 'COD Extra Fee',
+          'tax_status': 'taxable',
+          'total': '${cartModel.getCODExtraFee()}',
+          'amount': '${cartModel.getCODExtraFee()}'
+        });
+      }
+      if (feeLines.isNotEmpty) {
+        params['fee_lines'] = feeLines;
       }
       if (cartModel.couponObj != null) {
         params['coupon_lines'] = [
diff --git a/lib/models/paging_data_provider.dart b/lib/models/paging_data_provider.dart
index bc55986..588e1b0 100644
--- a/lib/models/paging_data_provider.dart
+++ b/lib/models/paging_data_provider.dart
@@ -1,21 +1,33 @@
+import 'dart:async';
 import 'dart:collection';
 
 import 'package:flutter/cupertino.dart';
 
+import '../common/constants.dart';
 import '../services/paging/base_page_repository.dart';
 
 abstract class PagingDataProvider<T> extends ChangeNotifier {
-  UnmodifiableListView<T>? get data =>
-      _data == null ? null : UnmodifiableListView(_data!);
+  UnmodifiableListView<T> get data => UnmodifiableListView(_data ?? <T>[]);
 
   bool get isLoading => _isLoading;
 
+  bool get isFirstLoad => _data == null;
+
+  bool get isLoadMore => _isLoading && (_data?.isNotEmpty ?? false);
+
   bool get hasNext => _dataRepo.hasNext;
 
   final BasePageRepository _dataRepo;
 
+  late StreamSubscription _subscriptionChangeLanguage;
+
   PagingDataProvider({required BasePageRepository dataRepo})
-      : _dataRepo = dataRepo;
+      : _dataRepo = dataRepo {
+    _subscriptionChangeLanguage =
+        eventBus.on<EventChangeLanguage>().listen((event) {
+      refresh();
+    });
+  }
 
   List<T>? _data;
 
@@ -38,7 +50,6 @@ abstract class PagingDataProvider<T> extends ChangeNotifier {
       _updateState();
 
       final apiData = await _dataRepo.getData();
-
       _data = [..._data ?? [], ...apiData as Iterable<T>? ?? []];
       await Future.delayed(const Duration(milliseconds: 300), () {
         _isLoading = false;
@@ -53,6 +64,7 @@ abstract class PagingDataProvider<T> extends ChangeNotifier {
     _dataRepo.refresh();
     _data = null;
     _updateState();
+    await _dataRepo.cancelCompleter();
     if (autoGetData) {
       Future.delayed(const Duration(milliseconds: 300), getData);
     }
@@ -67,6 +79,7 @@ abstract class PagingDataProvider<T> extends ChangeNotifier {
   @override
   void dispose() {
     _isDisposed = true;
+    _subscriptionChangeLanguage.cancel();
     super.dispose();
   }
 }
diff --git a/lib/models/payment_method_model.dart b/lib/models/payment_method_model.dart
index b3dfb9f..c8ca634 100644
--- a/lib/models/payment_method_model.dart
+++ b/lib/models/payment_method_model.dart
@@ -23,11 +23,11 @@ class PaymentMethodModel extends ChangeNotifier {
       String? token,
       required String? langCode}) async {
     try {
+      isLoading = paymentMethods.isEmpty ? true : false;
+      message = null;
+      notifyListeners();
       paymentMethods = await _service.api.getPaymentMethods(
-          cartModel: cartModel,
-          shippingMethod: shippingMethod,
-          token: token,
-          langCode: langCode)!;
+          cartModel: cartModel, shippingMethod: shippingMethod, token: token, langCode: langCode)!;
 
       final shouldShowApplePay = isIos &&
           kStripeConfig['enabled'] == true &&
diff --git a/lib/models/product_model.dart b/lib/models/product_model.dart
index 12f1e49..a07c82e 100644
--- a/lib/models/product_model.dart
+++ b/lib/models/product_model.dart
@@ -217,7 +217,7 @@ class ProductModel with ChangeNotifier {
 
       final products = await _cancelLoadProduct!.value;
 
-      isEnd = products!.isEmpty || products.length < apiPageSize;
+      isEnd = products!.isEmpty;
 
       if (page == 0 || page == 1) {
         productsList = products;
@@ -237,8 +237,7 @@ class ProductModel with ChangeNotifier {
       errMsg =
           'There is an issue with the app during request the data, please contact admin for fixing the issues $err';
       isFetching = false;
-      printLog(err);
-      printLog(trace);
+      printError(err, trace);
       notifyListeners();
     }
   }
@@ -315,7 +314,6 @@ class ProductModel with ChangeNotifier {
     cateId,
     cateName,
     String? tag,
-    required BuildContext context,
     List<Product>? products,
     Map<String, dynamic>? config,
     bool showCountdown = false,
@@ -365,17 +363,15 @@ class ProductModel with ChangeNotifier {
           continue;
         }
 
-        if (kAdvanceConfig.hideOutOfStock) {
+        var product = Product.fromJson(item);
+
+        if ((kAdvanceConfig.hideOutOfStock) &&
+            !product.inStock! &&
+            !product.backordersAllowed) {
           /// hideOutOfStock product
-          if (((item['manage_stock'] ?? false) &&
-                  !(item['in_stock'] ?? true)) ||
-              (item['stock_quantity'] is int && item['stock_quantity'] == 0)) {
-            continue;
-          }
+          continue;
         }
 
-        var product = Product.fromJson(item);
-
         if (config['category'] != null && "${config["category"]}".isNotEmpty) {
           product.categoryId = config['category'].toString();
         }
diff --git a/lib/models/tag_model.dart b/lib/models/tag_model.dart
index 6ff6b37..abf2356 100644
--- a/lib/models/tag_model.dart
+++ b/lib/models/tag_model.dart
@@ -14,10 +14,13 @@ class TagModel extends PagingDataModel<Tag> with LanguageMixin {
 
   StreamSubscription? _subLanguageChange;
 
-  TagModel() {
+  int _limit = 9;
+
+  TagModel([int limit = 9]) {
     _subLanguageChange = eventBus.on<EventChangeLanguage>().listen((event) {
       getTags();
     });
+    _limit = limit;
   }
 
   UnmodifiableListView<Tag>? get tagList => data;
@@ -59,7 +62,7 @@ class TagModel extends PagingDataModel<Tag> with LanguageMixin {
   @override
   Future<PagingResponse<Tag>>? Function(dynamic p1) get requestApi =>
       (page) => api.getTagsByPage(
-            limit: 9,
+            limit: _limit,
             lang: langCode,
             page: page,
           );
diff --git a/lib/models/user_model.dart b/lib/models/user_model.dart
index a9e7c88..7ca3a2b 100644
--- a/lib/models/user_model.dart
+++ b/lib/models/user_model.dart
@@ -151,8 +151,7 @@ class UserModel with ChangeNotifier {
         notifyListeners();
       }
     } catch (err, trace) {
-      printLog(trace);
-      printLog(err);
+      printError(err, trace);
       fail!(S.of(context).loginErrorServiceProvider(err.toString()));
     }
   }
@@ -251,6 +250,7 @@ class UserModel with ChangeNotifier {
   }
 
   Future<void> logout() async {
+    loggedIn = false;
     try {
       unawaited(Services().firebase.signOut());
       await FacebookAuth.instance.logOut();
@@ -261,7 +261,6 @@ class UserModel with ChangeNotifier {
     delegate?.onLogout(user);
     await _service.api.logout(user?.cookie);
     user = null;
-    loggedIn = false;
     final prefs = injector<SharedPreferences>();
     await prefs.setBool(LocalStorageKey.loggedIn, false);
 
@@ -269,7 +268,11 @@ class UserModel with ChangeNotifier {
     await Future.delayed(const Duration(milliseconds: 500), () {});
 
     try {
-      await _storage.clear();
+      for (var key in kLocalKey.keys) {
+        if (key != 'countries') {
+          await _storage.deleteItem(key);
+        }
+      }
     } catch (err) {
       printLog(err);
     }
diff --git a/lib/models/vendor/store_model.dart b/lib/models/vendor/store_model.dart
index 75effe8..4856600 100644
--- a/lib/models/vendor/store_model.dart
+++ b/lib/models/vendor/store_model.dart
@@ -1,5 +1,6 @@
 import 'package:flutter/material.dart';
 import 'package:html_unescape/html_unescape.dart';
+import 'package:intl/intl.dart';
 import 'package:quiver/strings.dart';
 
 import '../../common/constants.dart';
@@ -94,13 +95,18 @@ class Store {
   int? id;
   String? name;
   String? email;
+  bool showEmail = true;
   String? chatEmail;
   double? rating;
   String? image;
   String? address;
+  bool showAddress = true;
   String? banner;
   String? phone;
+  bool showPhone = true;
   String? website;
+  String? description;
+  bool showDescription = true;
   bool? isFeatured;
   double? lat;
   double? long;
@@ -157,6 +163,7 @@ class Store {
         : null;
     phone = parsedJson['phone'];
     isFeatured = parsedJson['featured'] ?? false;
+    showDescription = false;
 
     final time = parsedJson['store_open_close']?['time'];
 
@@ -175,8 +182,7 @@ class Store {
         }
       }
     } catch (e, trace) {
-      printLog(trace);
-      printLog(e.toString());
+      printError(e, trace);
     }
   }
 
@@ -192,6 +198,20 @@ class Store {
         : '0.0');
     address = parsedJson['vendor_address'];
 
+    showDescription = !(parsedJson['store_hide_description'] != 'no');
+    showAddress = !(parsedJson['store_hide_address'] != 'no');
+    showEmail = !(parsedJson['store_hide_email'] != 'no');
+    showPhone = !(parsedJson['store_hide_phone'] != 'no');
+
+    if (parsedJson['vendor_description'] != null) {
+      description = parsedJson['vendor_description'] is String
+          ? parsedJson['vendor_description']
+          : null;
+    }
+    if (Bidi.stripHtmlIfNeeded(description ?? '').trim().isEmpty) {
+      showDescription = false;
+    }
+
     if (parsedJson['settings'] != null && parsedJson['settings'] is Map) {
       image = parsedJson['settings']['gravatar'].toString().isNotEmpty &&
               parsedJson['settings']['gravatar'].toString().contains('http')
@@ -395,17 +415,17 @@ class StoreWorkingHour {
   StoreWorkingHour.fromDokan(this.weekday, json) {
     try {
       if ((json['status'] ?? 'close') != 'close') {
-        var openTime = json['opening_time'];
-        var closeTime = json['closing_time'];
-        if (openTime != null && closeTime != null) {
-          openTime = openTime.replaceAll('h', ':');
-          closeTime = closeTime.replaceAll('h', ':');
-          if (openTime.length == 4) {
-            openTime = '0$openTime';
-          }
-          if (closeTime.length == 4) {
-            closeTime = '0$closeTime';
+        var openTimes = json['opening_time'];
+        var closeTimes = json['closing_time'];
+        if (openTimes is List && closeTimes is List) {
+          for (var i = 0; i < openTimes.length; i++) {
+            var openTime = openTimes[i].replaceAll('h', ':');
+            var closeTime = closeTimes[i].replaceAll('h', ':');
+            hours.add(WorkingHour.fromDokan(openTime, closeTime));
           }
+        } else {
+          var openTime = openTimes.replaceAll('h', ':');
+          var closeTime = closeTimes.replaceAll('h', ':');
           hours.add(WorkingHour.fromDokan(openTime, closeTime));
         }
       }
@@ -420,18 +440,28 @@ class WorkingHour {
   DateTime? end;
 
   WorkingHour.fromWCFM(String startTime, String endTime) {
-    final now = DateTime.now();
-    start = DateTime.parse(
-        '${now.year}-${now.month.toString().padLeft(2, '0')}-${now.day.toString().padLeft(2, '0')} $startTime:00');
-    end = DateTime.parse(
-        '${now.year}-${now.month.toString().padLeft(2, '0')}-${now.day.toString().padLeft(2, '0')} $endTime:00');
+    start = getDateTimeFromTime(startTime);
+    end = getDateTimeFromTime(endTime);
   }
 
   WorkingHour.fromDokan(String startTime, String endTime) {
+    start = getDateTimeFromTime(startTime);
+    end = getDateTimeFromTime(endTime);
+  }
+
+  DateTime? getDateTimeFromTime(String time) {
     final now = DateTime.now();
-    start = DateTime.parse(
-        '${now.year}-${now.month.toString().padLeft(2, '0')}-${now.day.toString().padLeft(2, '0')} $startTime:00');
-    end = DateTime.parse(
-        '${now.year}-${now.month.toString().padLeft(2, '0')}-${now.day.toString().padLeft(2, '0')} $endTime:00');
+    time = time.toUpperCase();
+    try {
+      if (time.contains('AM') || time.contains('PM')) {
+        var timeOfDay = DateFormat.jm().parse(time);
+        return now.copyWith(hour: timeOfDay.hour, minute: timeOfDay.minute);
+      }
+      var timeOfDay = DateFormat('hh:mm').parse(time);
+      return now.copyWith(hour: timeOfDay.hour, minute: timeOfDay.minute);
+    } catch (e) {
+      printError('Failed to parse timeOfDay');
+      return null;
+    }
   }
 }
diff --git a/lib/modules/advertisement/google_advertisement.dart b/lib/modules/advertisement/google_advertisement.dart
index 691a28f..d096c2c 100644
--- a/lib/modules/advertisement/google_advertisement.dart
+++ b/lib/modules/advertisement/google_advertisement.dart
@@ -1,7 +1,7 @@
 import 'package:easy_debounce/easy_debounce.dart';
 import 'package:flutter/material.dart';
 import 'package:google_mobile_ads/google_mobile_ads.dart';
-import 'package:inspireui/utils/logs.dart';
+import 'package:inspireui/inspireui.dart';
 
 import '../../models/index.dart'
     show AdvertisementItem, AdvertisementProvider, AdvertisementType;
diff --git a/lib/modules/digits_mobile_login/services/index.dart b/lib/modules/digits_mobile_login/services/index.dart
index d2900f1..398c6b3 100644
--- a/lib/modules/digits_mobile_login/services/index.dart
+++ b/lib/modules/digits_mobile_login/services/index.dart
@@ -1,6 +1,6 @@
 import 'dart:convert' as convert;
 
-import 'package:inspireui/utils/logs.dart';
+import 'package:inspireui/inspireui.dart';
 import 'package:quiver/strings.dart';
 
 import '../../../models/entities/user.dart';
diff --git a/lib/modules/digits_mobile_login/views/digits_mobile_login_screen.dart b/lib/modules/digits_mobile_login/views/digits_mobile_login_screen.dart
index c38ad11..0b0a7b6 100644
--- a/lib/modules/digits_mobile_login/views/digits_mobile_login_screen.dart
+++ b/lib/modules/digits_mobile_login/views/digits_mobile_login_screen.dart
@@ -50,7 +50,7 @@ class _LoginSMSState extends LoginSMSScreenState<DigitsMobileLoginScreen> {
 
         void verifyFailed(exception) {
           stopAnimation();
-          failMessage(exception.message, context);
+          failMessage(exception.toString(), context);
         }
 
         viewModel.verify(
diff --git a/lib/modules/digits_mobile_login/views/digits_mobile_login_sign_up_screen.dart b/lib/modules/digits_mobile_login/views/digits_mobile_login_sign_up_screen.dart
index 5408f72..1cf7ff3 100644
--- a/lib/modules/digits_mobile_login/views/digits_mobile_login_sign_up_screen.dart
+++ b/lib/modules/digits_mobile_login/views/digits_mobile_login_sign_up_screen.dart
@@ -151,7 +151,7 @@ class _RegistrationScreenState extends State<DigitsMobileLoginSignUpScreen> {
           setState(() {
             isLoading = false;
           });
-          _snackBar(exception.message);
+          _snackBar(exception.toString());
         }
 
         final verifiedSuccess = _verifySuccessStream.add;
diff --git a/lib/modules/dynamic_layout/blog/blog_grid.dart b/lib/modules/dynamic_layout/blog/blog_grid.dart
index 17cbc7c..c229d25 100644
--- a/lib/modules/dynamic_layout/blog/blog_grid.dart
+++ b/lib/modules/dynamic_layout/blog/blog_grid.dart
@@ -1,10 +1,9 @@
 import 'package:flutter/material.dart';
 import 'package:inspireui/inspireui.dart' show Skeleton;
 import 'package:provider/provider.dart';
-import 'package:responsive_builder/responsive_builder.dart';
+// import 'package:responsive_builder/responsive_builder.dart';
 
 import '../../../common/constants.dart';
-import '../../../common/tools/adaptive_tools.dart';
 import '../../../routes/flux_navigate.dart';
 import '../../../screens/base_screen.dart';
 import '../../../screens/blog/index.dart';
@@ -60,6 +59,7 @@ class _BlogGridState extends BaseScreen<BlogGrid> {
   @override
   Widget build(BuildContext context) {
     var isDesktop = Layout.isDisplayDesktop(context);
+    var isTablet = Helper.isTablet(MediaQuery.of(context));
     var offset = (widget.config?.innerPadding ?? 0.0) + 11;
     if ((widget.config?.hideDate ?? true) &&
         (widget.config?.hideAuthor ?? true) &&
@@ -67,12 +67,17 @@ class _BlogGridState extends BaseScreen<BlogGrid> {
       offset -= 11.0;
     }
     offset *= 3.0 + 1;
-    var minHeight = getValueForScreenType<double>(
-      context: context,
-      mobile: 334 + offset,
-      tablet: 430 + offset,
-      desktop: screenSize.height * 2 / 3 + offset,
-    );
+    var minHeight = isDesktop
+        ? screenSize.height * 2 / 3 + offset
+        : isTablet
+            ? 350 + offset
+            : 250 + offset;
+    // var minHeight = getValueForScreenType<double>(
+    //   context: context,
+    //   mobile: 250 + offset,
+    //   tablet: 430 + offset,
+    //   desktop: screenSize.height * 2 / 3 + offset,
+    // );
     return ConstrainedBox(
       constraints: BoxConstraints(
         minHeight: minHeight,
diff --git a/lib/modules/dynamic_layout/brand/brand_list_layout.dart b/lib/modules/dynamic_layout/brand/brand_list_layout.dart
index 238b4e3..77683fa 100644
--- a/lib/modules/dynamic_layout/brand/brand_list_layout.dart
+++ b/lib/modules/dynamic_layout/brand/brand_list_layout.dart
@@ -13,6 +13,7 @@ import 'widgets/brand_item.dart';
 
 class BrandListLayout extends StatefulWidget {
   final BrandConfig? config;
+
   const BrandListLayout({Key? key, this.config}) : super(key: key);
 
   @override
@@ -20,45 +21,56 @@ class BrandListLayout extends StatefulWidget {
 }
 
 class _BrandListLayoutState extends State<BrandListLayout> {
+  late BrandLayoutModel model =
+      Provider.of<BrandLayoutModel>(context, listen: false);
+  late String langCode = Provider.of<AppModel>(context, listen: false).langCode;
+
   final _controller = ScrollController();
   var _isLoading = false;
   var _isEnd = false;
+
   @override
   void initState() {
-    final model = Provider.of<BrandLayoutModel>(context, listen: false);
-    final langCode = Provider.of<AppModel>(context, listen: false).langCode;
-    if (model.state == FSLoadState.noData) {
-      _isEnd = true;
+    WidgetsBinding.instance.endOfFrame.then((_) {
+      if (model.state == FSLoadState.noData) {
+        _isEnd = true;
+      }
+      _controller.addListener(_scrollListener);
+    });
+    super.initState();
+  }
+
+  void _scrollListener() {
+    if (!mounted) {
+      return;
     }
-    _controller.addListener(() {
-      if (_controller.position.atEdge) {
-        if (!_isLoading && !_isEnd) {
-          _isLoading = true;
-          try {
-            model.loadBrands(langCode).then((value) {
-              if (value.isEmpty) {
-                _isEnd = true;
-              }
-              _isLoading = false;
-            });
-          } catch (e) {
+    if (_controller.position.atEdge) {
+      if (!_isLoading && !_isEnd) {
+        _isLoading = true;
+        try {
+          model.loadBrands(langCode).then((value) {
+            if (value.isEmpty) {
+              _isEnd = true;
+            }
             _isLoading = false;
-          }
+          });
+        } catch (e) {
+          _isLoading = false;
         }
       }
-    });
-    super.initState();
+    }
   }
 
   @override
   void dispose() {
+    _controller.removeListener(_scrollListener);
     _controller.dispose();
     super.dispose();
   }
 
   void onRefresh() {
-    final model = Provider.of<BrandLayoutModel>(context, listen: false);
-    final langCode = Provider.of<AppModel>(context, listen: false).langCode;
+    model = Provider.of<BrandLayoutModel>(context, listen: false);
+    langCode = Provider.of<AppModel>(context, listen: false).langCode;
     try {
       if (_isLoading) {
         return;
diff --git a/lib/modules/dynamic_layout/category/category_icon.dart b/lib/modules/dynamic_layout/category/category_icon.dart
index 5a2e042..c810271 100644
--- a/lib/modules/dynamic_layout/category/category_icon.dart
+++ b/lib/modules/dynamic_layout/category/category_icon.dart
@@ -62,7 +62,7 @@ class CategoryIcons extends StatelessWidget {
       items.add(
         CategoryIconItem(
           onTap: (name) => onShowProductList(item..name = name),
-          iconSize: widthItem,
+          iconSize: widthItem > 64 ? 64 : widthItem,
           name: name,
           itemConfig: item,
           commonConfig: config.commonItemConfig,
diff --git a/lib/modules/dynamic_layout/category/category_image.dart b/lib/modules/dynamic_layout/category/category_image.dart
index a23a29e..505fbd6 100644
--- a/lib/modules/dynamic_layout/category/category_image.dart
+++ b/lib/modules/dynamic_layout/category/category_image.dart
@@ -9,7 +9,7 @@ class CategoryImages extends StatelessWidget {
 
   const CategoryImages({required this.config, Key? key}) : super(key: key);
 
-  List<Widget> listItem({width}) {
+  List<Widget> listItem({maxWidth}) {
     var items = <Widget>[];
     var sizeWidth;
     var sizeHeight;
@@ -18,18 +18,20 @@ class CategoryImages extends StatelessWidget {
     if (itemSize != null) {
       sizeWidth = itemSize.width;
       sizeHeight = itemSize.height;
+    } else {
+      sizeWidth = maxWidth / 3;
     }
     for (var item in config.items) {
       items.add(CategoryImageItem(
           config: item,
-          width: sizeWidth ?? width,
+          width: sizeWidth,
           height: sizeHeight,
           commonConfig: config.commonItemConfig));
     }
     return items;
   }
 
-  Widget rendorColumns(int column) {
+  Widget rendorColumns(int column, {double? maxItemWidth}) {
     var items = config.items;
     var itemSize = config.commonItemConfig.itemSize;
     var length = items.length ~/ column;
@@ -46,7 +48,7 @@ class CategoryImages extends StatelessWidget {
                 var item = items[index];
                 return CategoryImageItem(
                   config: item,
-                  width: itemSize?.width,
+                  width: itemSize?.width ?? maxItemWidth,
                   height: itemSize?.height,
                   commonConfig: config.commonItemConfig,
                 );
@@ -72,24 +74,32 @@ class CategoryImages extends StatelessWidget {
       ),
       child: LayoutBuilder(
         builder: (context, constraints) {
-          final itemWidth = constraints.maxWidth / 10;
-          final heightList = itemWidth + 22;
-          return config.wrap
-              ? config.columns != null
-                  ? rendorColumns(config.columns!)
-                  : Wrap(
-                      alignment: WrapAlignment.center,
-                      children: listItem(width: constraints.maxWidth),
-                    )
-              : SizedBox(
-                  height: sizeHeight ?? heightList + 80,
-                  child: SingleChildScrollView(
-                    scrollDirection: Axis.horizontal,
-                    child: Row(
-                      children: listItem(width: constraints.maxWidth),
-                    ),
-                  ),
-                );
+          var maxWidth =
+              constraints.maxWidth - config.marginLeft - config.marginRight;
+          final width = maxWidth / 10;
+          final heightList = width + 22;
+
+          if (config.wrap) {
+            if (config.columns != null) {
+              final itemWidth =
+                  constraints.maxWidth / config.columns!.toDouble();
+              return rendorColumns(config.columns!, maxItemWidth: itemWidth);
+            }
+            return Wrap(
+              alignment: WrapAlignment.center,
+              children: listItem(maxWidth: maxWidth),
+            );
+          }
+
+          return SizedBox(
+            height: sizeHeight ?? heightList + 80,
+            child: SingleChildScrollView(
+              scrollDirection: Axis.horizontal,
+              child: Row(
+                children: listItem(maxWidth: maxWidth),
+              ),
+            ),
+          );
         },
       ),
     );
diff --git a/lib/modules/dynamic_layout/category/category_image_item.dart b/lib/modules/dynamic_layout/category/category_image_item.dart
index bbb540c..8984d96 100644
--- a/lib/modules/dynamic_layout/category/category_image_item.dart
+++ b/lib/modules/dynamic_layout/category/category_image_item.dart
@@ -7,6 +7,7 @@ import '../../../generated/l10n.dart';
 import '../../../models/category/category_model.dart';
 import '../../../models/entities/back_drop_arguments.dart';
 import '../../../routes/flux_navigate.dart';
+import '../../../widgets/common/flux_image.dart';
 import '../config/index.dart';
 import 'common_item_extension.dart';
 
@@ -29,7 +30,7 @@ class CategoryImageItem extends StatelessWidget {
   @override
   Widget build(BuildContext context) {
     final screenSize = MediaQuery.of(context).size;
-    final itemWidth = (width ?? screenSize.width) / 3;
+    final itemWidth = width ?? screenSize.width / 3;
     final categoryList = Provider.of<CategoryModel>(context).categoryList;
 
     final id = config.category.toString();
@@ -39,15 +40,10 @@ class CategoryImageItem extends StatelessWidget {
         categoryList[id] != null ? categoryList[id]!.totalProduct : '';
 
     final imageWidget = config.image != null
-        ? config.image.toString().contains('http')
-            ? ImageTools.image(
-                url: config.image ?? '',
-                fit: commonConfig.boxFit,
-              )
-            : Image.asset(
-                config.image!,
-                fit: commonConfig.boxFit,
-              )
+        ? FluxImage(
+            imageUrl: config.image!,
+            fit: commonConfig.boxFit,
+          )
         : null;
     final border = commonConfig.enableBorder ? (commonConfig.border ?? 0.5) : 0;
 
@@ -98,7 +94,7 @@ class CategoryImageItem extends StatelessWidget {
             vertical: commonConfig.marginY,
           ),
           child: Column(
-            crossAxisAlignment: CrossAxisAlignment.start,
+            crossAxisAlignment: CrossAxisAlignment.center,
             children: <Widget>[
               Expanded(
                 child: Container(
@@ -109,7 +105,7 @@ class CategoryImageItem extends StatelessWidget {
                     borderRadius:
                         BorderRadius.circular(commonConfig.radius ?? 0.0),
                     child: imageWidget ??
-                        ImageTools.image(
+                        ImageResize(
                           url: image,
                           fit: commonConfig.boxFit,
                           isResize: true,
diff --git a/lib/modules/dynamic_layout/category/category_menu_with_products.dart b/lib/modules/dynamic_layout/category/category_menu_with_products.dart
index 47796f6..a824ecd 100644
--- a/lib/modules/dynamic_layout/category/category_menu_with_products.dart
+++ b/lib/modules/dynamic_layout/category/category_menu_with_products.dart
@@ -135,7 +135,7 @@ class _CategoryMenuWithProductsState extends State<CategoryMenuWithProducts> {
                 padding: padding,
               ),
               config: productConfig,
-              child: ({maxWidth, products}) {
+              child: ({maxWidth, maxHeight, products}) {
                 return getProductList(
                   productList: products,
                   size: size,
diff --git a/lib/modules/dynamic_layout/category/category_text.dart b/lib/modules/dynamic_layout/category/category_text.dart
index 82f0210..ba4612c 100644
--- a/lib/modules/dynamic_layout/category/category_text.dart
+++ b/lib/modules/dynamic_layout/category/category_text.dart
@@ -88,6 +88,7 @@ class CategoryTexts extends StatelessWidget {
 
     return Container(
       color: Theme.of(context).backgroundColor,
+      width: MediaQuery.of(context).size.width,
       child: Container(
           margin: EdgeInsets.only(
             left: config.marginLeft,
diff --git a/lib/modules/dynamic_layout/config/app_config.dart b/lib/modules/dynamic_layout/config/app_config.dart
index 2730fac..3266a1d 100644
--- a/lib/modules/dynamic_layout/config/app_config.dart
+++ b/lib/modules/dynamic_layout/config/app_config.dart
@@ -315,17 +315,31 @@ class TabBarMenuConfig {
   dynamic images;
   bool parallax = false;
 
-  TabBarMenuConfig(
-      {this.layout,
-      this.icon = 'home',
-      this.label,
-      this.pos,
-      this.fontFamily = 'Tahoma',
-      this.jsonData,
-      this.categories,
-      this.images,
-      this.categoryLayout = 'card',
-      this.key});
+  /// tab menu item is not visible from the list
+  bool visible = true;
+
+  /// group the config to tab menu on home screen
+  bool groupLayout = false;
+  String menuLabel = '';
+
+  bool isDefaultTab = false;
+
+  TabBarMenuConfig({
+    this.layout,
+    this.icon = 'home',
+    this.label,
+    this.pos,
+    this.fontFamily = 'Tahoma',
+    this.jsonData,
+    this.categories,
+    this.images,
+    this.categoryLayout = 'card',
+    this.visible = true,
+    this.groupLayout = false,
+    this.menuLabel = '',
+    this.isDefaultTab = false,
+    this.key,
+  });
 
   TabBarMenuConfig.fromJson(dynamic json) {
     layout = json['layout'];
@@ -347,6 +361,12 @@ class TabBarMenuConfig {
 
     /// enable parallax on Category Card Image
     parallax = json['parallax'] ?? false;
+
+    visible = json['visible'] ?? true;
+    groupLayout = json['groupLayout'] ?? false;
+    menuLabel = json['menuLabel'] ?? '';
+
+    isDefaultTab = json['defaultTab'] ?? false;
   }
 
   Map<String, dynamic> toJson() {
@@ -356,6 +376,10 @@ class TabBarMenuConfig {
     map['pos'] = pos;
     map['fontFamily'] = fontFamily;
     map['parallax'] = parallax;
+    map['visible'] = visible;
+    map['groupLayout'] = groupLayout;
+    map['menuLabel'] = menuLabel;
+    map['defaultTab'] = isDefaultTab;
     map['key'] = key;
     return map;
   }
@@ -365,6 +389,7 @@ class AppBarConfig {
   String? key;
   String? backgroundColor;
   List<AppBarItemConfig>? items;
+  List<AppBarItemConfig>? bottomItems;
   List<dynamic>? showOnScreens;
   bool enable = true;
   bool alwaysShowAppBar = false;
@@ -376,6 +401,7 @@ class AppBarConfig {
   AppBarConfig({
     this.key,
     this.items,
+    this.bottomItems,
     this.showOnScreens,
     this.enable = true,
     this.alwaysShowAppBar = false,
@@ -394,18 +420,32 @@ class AppBarConfig {
   }
 
   AppBarConfig replaceItems(dynamic json) {
-    if (json['items'] != null) {
-      var items = [];
-      json['items'].forEach((v) {
-        items.add(AppBarItemConfig.fromJson(v));
-      });
-      return AppBarConfig(
-        key: key,
-        items: List<AppBarItemConfig>.from(items),
-        showOnScreens: showOnScreens,
-      );
+    final itemsData = json['items'];
+    final bottomItemsData = json['expandedItems'];
+
+    final items = [];
+    final bottomItems = [];
+    if (itemsData is List) {
+      for (var item in itemsData) {
+        items.add(AppBarItemConfig.fromJson(item));
+      }
+    }
+    if (bottomItemsData is List) {
+      for (var item in bottomItemsData) {
+        bottomItems.add(AppBarItemConfig.fromJson(item));
+      }
+    }
+
+    if (items.isEmpty && bottomItems.isEmpty) {
+      return this;
     }
-    return this;
+
+    return AppBarConfig(
+      key: key,
+      items: List<AppBarItemConfig>.from(items),
+      bottomItems: List<AppBarItemConfig>.from(bottomItems),
+      showOnScreens: showOnScreens,
+    );
   }
 
   AppBarConfig.fromJson(dynamic json) {
@@ -424,6 +464,12 @@ class AppBarConfig {
         items?.add(AppBarItemConfig.fromJson(v));
       });
     }
+    if (json['expandedItems'] != null) {
+      bottomItems = [];
+      json['expandedItems'].forEach((v) {
+        bottomItems?.add(AppBarItemConfig.fromJson(v));
+      });
+    }
   }
 
   Map<String, dynamic> toJson() {
@@ -439,6 +485,12 @@ class AppBarConfig {
     if (items != null) {
       map['items'] = items?.map((v) => v.toJson()).toList();
     }
+    if (bottomItems != null) {
+      map['expandedItems'] = bottomItems?.map((v) {
+        v.onlyShowWhenAtTop = false;
+        return v.toJson();
+      }).toList();
+    }
     map.removeWhere((key, value) => value == null);
     return map;
   }
@@ -477,6 +529,8 @@ class AppBarItemConfig {
   num? height;
   String? key;
   String? actionLink;
+  bool onlyShowWhenAtTop = false;
+  bool isCustomSpace = false;
 
   AppBarItemConfig({
     this.type,
@@ -511,6 +565,8 @@ class AppBarItemConfig {
     this.height,
     this.key,
     this.actionLink,
+    this.onlyShowWhenAtTop = false,
+    this.isCustomSpace = false,
   });
 
   AppBarItemConfig.fromJson(dynamic json) {
@@ -546,6 +602,8 @@ class AppBarItemConfig {
     height = json['height'];
     key = json['key'];
     actionLink = json['actionLink'];
+    onlyShowWhenAtTop = json['onlyShowWhenAtTop'] ?? false;
+    isCustomSpace = json['isCustomSpace'] ?? false;
   }
 
   Map<String, dynamic> toJson() {
@@ -582,6 +640,8 @@ class AppBarItemConfig {
     if (height != null) data['height'] = height;
     if (key != null) data['key'] = key;
     if (actionLink != null) data['actionLink'] = actionLink;
+    if (onlyShowWhenAtTop) data['onlyShowWhenAtTop'] = onlyShowWhenAtTop;
+    if (isCustomSpace) data['isCustomSpace'] = isCustomSpace;
     return data;
   }
 }
diff --git a/lib/modules/dynamic_layout/config/product_config.dart b/lib/modules/dynamic_layout/config/product_config.dart
index 2f57d89..60bb892 100644
--- a/lib/modules/dynamic_layout/config/product_config.dart
+++ b/lib/modules/dynamic_layout/config/product_config.dart
@@ -80,6 +80,7 @@ class ProductConfig {
   bool enableParallax = false;
   double parallaxImageRatio = 1.2;
   bool hideEmptyProductLayout = false;
+  double productListItemHeight = 125.0;
 
   ProductConfig({
     this.category,
@@ -132,6 +133,7 @@ class ProductConfig {
     required this.enableRating,
     required this.showStockStatus,
     required this.hideEmptyProductListRating,
+    required this.productListItemHeight,
   });
 
   ProductConfig.empty() {
@@ -169,6 +171,7 @@ class ProductConfig {
     }
     cardDesign =
         kProductCard.cardDesign == 'glass' ? CardDesign.glass : CardDesign.card;
+    productListItemHeight = kProductDetail.productListItemHeight;
   }
 
   ProductConfig.fromJson(dynamic json) {
@@ -268,6 +271,9 @@ class ProductConfig {
     enableParallax = json['parallax'] ?? false;
     parallaxImageRatio = Helper.formatDouble(json['parallaxImageRatio']) ?? 1.2;
     hideEmptyProductLayout = json['hideEmptyProductLayout'] ?? false;
+    productListItemHeight =
+        Helper.formatDouble(json['productListItemHeight']) ??
+            env.productListItemHeight;
   }
 
   Map<String, dynamic> toJson() {
@@ -310,6 +316,7 @@ class ProductConfig {
     map['backgroundHeight'] = backgroundHeight;
     map['backgroundWidth'] = backgroundWidth;
     map['backgroundBoxFit'] = backgroundBoxFit;
+    map['backgroundWidthMode'] = backgroundWidthMode;
     map['cardDesign'] = cardDesign.toString().split('.').last;
     map['titleLine'] = titleLine;
     map['order'] = order;
@@ -343,6 +350,7 @@ class ProductConfig {
     map['parallax'] = enableParallax;
     map['parallaxImageRatio'] = parallaxImageRatio;
     map['hideEmptyProductLayout'] = hideEmptyProductLayout;
+    map['productListItemHeight'] = productListItemHeight;
     map.removeWhere((key, value) => value == null);
     return map;
   }
diff --git a/lib/modules/dynamic_layout/config/tiktok_videos_config.dart b/lib/modules/dynamic_layout/config/tiktok_videos_config.dart
index abdf1d6..5981905 100644
--- a/lib/modules/dynamic_layout/config/tiktok_videos_config.dart
+++ b/lib/modules/dynamic_layout/config/tiktok_videos_config.dart
@@ -2,6 +2,10 @@ import '../helper/helper.dart';
 
 class TikTokVideosConfig {
   String username = '';
+  String uid = '';
+  String secUid = '';
+  String avatarUrl = '';
+
   int limit = 10;
   num marginRight = 16.0;
   num marginBottom = 8.0;
@@ -18,6 +22,9 @@ class TikTokVideosConfig {
 
   TikTokVideosConfig({
     required this.username,
+    this.uid = '',
+    this.secUid = '',
+    this.avatarUrl = '',
     this.marginLeft = 16.0,
     this.marginRight = 16.0,
     this.marginBottom = 8.0,
@@ -31,6 +38,9 @@ class TikTokVideosConfig {
 
   TikTokVideosConfig.fromJson(dynamic json) {
     username = json['username'];
+    uid = json['uid'] ?? '';
+    secUid = json['secUid'] ?? '';
+    avatarUrl = json['avatarUrl'] ?? '';
     marginLeft = json['marginLeft'] ?? 16.0;
     marginRight = json['marginRight'] ?? 16.0;
     marginTop = json['marginTop'] ?? 8.0;
@@ -47,6 +57,9 @@ class TikTokVideosConfig {
   Map<String, dynamic> toJson() {
     var map = <String, dynamic>{};
     map['username'] = username;
+    map['uid'] = uid;
+    map['secUid'] = secUid;
+    map['avatarUrl'] = avatarUrl;
     map['marginLeft'] = marginLeft;
     map['marginRight'] = marginRight;
     map['marginTop'] = marginTop;
@@ -68,6 +81,9 @@ class TikTokVideosConfig {
       other is TikTokVideosConfig &&
           runtimeType == other.runtimeType &&
           username == other.username &&
+          uid == other.uid &&
+          secUid == other.secUid &&
+          avatarUrl == other.avatarUrl &&
           limit == other.limit &&
           marginRight == other.marginRight &&
           marginBottom == other.marginBottom &&
@@ -83,6 +99,9 @@ class TikTokVideosConfig {
   @override
   int get hashCode =>
       username.hashCode ^
+      uid.hashCode ^
+      secUid.hashCode ^
+      avatarUrl.hashCode ^
       limit.hashCode ^
       marginRight.hashCode ^
       marginBottom.hashCode ^
diff --git a/lib/modules/dynamic_layout/geo_search/geo_search.dart b/lib/modules/dynamic_layout/geo_search/geo_search.dart
index 67a3b53..7741d8d 100644
--- a/lib/modules/dynamic_layout/geo_search/geo_search.dart
+++ b/lib/modules/dynamic_layout/geo_search/geo_search.dart
@@ -139,7 +139,7 @@ class StoreWidget extends StatelessWidget {
                 borderRadius: const BorderRadius.only(
                     topLeft: Radius.circular(10.0),
                     topRight: Radius.circular(10.0)),
-                child: ImageTools.image(
+                child: ImageResize(
                   url: store!.banner,
                   fit: BoxFit.cover,
                 ),
diff --git a/lib/modules/dynamic_layout/helper/helper.dart b/lib/modules/dynamic_layout/helper/helper.dart
index aa72f40..e7c647b 100644
--- a/lib/modules/dynamic_layout/helper/helper.dart
+++ b/lib/modules/dynamic_layout/helper/helper.dart
@@ -6,6 +6,7 @@ import 'package:responsive_builder/responsive_builder.dart';
 import 'package:universal_platform/universal_platform.dart';
 
 import '../../../common/constants.dart';
+import '../../../common/tools/tools.dart';
 import '../../../services/service_config.dart';
 
 class Layout {
@@ -18,6 +19,7 @@ class Layout {
   static const String saleOff = 'saleOff';
   static const String card = 'card';
   static const String listTile = 'listTile';
+  static const String list = 'list';
   static const String pinterest = 'pinterest';
   static const String columnsWithFilter = 'columnsWithFilter';
   static const String menu = 'menu';
@@ -57,6 +59,12 @@ class Layout {
   static const String instagramStory = 'instagramStory';
   static const String tiktokVideos = 'tiktokVideos';
 
+  /// Advance Tabbar Menu (combine multi dynamic layout + tabMenu: true)
+  static const String tabMenu = 'tabMenu';
+
+  /// Advance scrollable layout (combine 2 dynamic layout + scrollLayout: true)
+  static const String scrollable = 'scrollable';
+
   static bool isDisplayDesktop(BuildContext context) {
     final deviceType = getDeviceType(MediaQuery.of(context).size);
     return !isMobile &&
@@ -73,7 +81,7 @@ class Layout {
             MediaQuery.of(context).orientation == Orientation.landscape);
   }
 
-  static double buildProductWidth({layout, screenWidth}) {
+  static double buildProductWidth({layout, required screenWidth}) {
     switch (layout) {
       case twoColumn:
         return screenWidth * 0.5;
@@ -92,25 +100,36 @@ class Layout {
     }
   }
 
-  static double buildProductMaxWidth({layout}) {
+  // it does not adapt with large screen
+  static double buildProductMaxWidth({context, layout}) {
+    final isTablet =
+        context != null ? Tools.isTablet(MediaQuery.of(context)) : false;
+    double width;
     switch (layout) {
       case twoColumn:
-        return 300;
+        width = 300;
+        break;
       case threeColumn:
-        return 200;
+        width = 200;
+        break;
       case fourColumn:
-        return 150;
+        width = 150;
+        break;
       case recentView:
-        return 200;
+        width = 200;
+        break;
       case saleOff:
-        return 200;
+        width = 200;
+        break;
       case card:
       case listTile:
       default:
-        return 400;
+        return kMaxProductWidth;
     }
+    return isTablet ? width * 2 : width;
   }
 
+  // it does not adapt with large screen
   static double buildProductHeight({layout, defaultHeight}) {
     switch (layout) {
       case Layout.twoColumn:
@@ -118,13 +137,25 @@ class Layout {
       case Layout.fourColumn:
       case Layout.recentView:
       case Layout.saleOff:
-        return 200;
+        return 220;
       case Layout.card:
       case Layout.listTile:
       default:
         return defaultHeight;
     }
   }
+
+  static double getColumnCount({layout}) {
+    switch (layout) {
+      case Layout.twoColumn:
+        return 2;
+      case Layout.fourColumn:
+        return 4;
+      case Layout.threeColumn:
+      default:
+        return 3;
+    }
+  }
 }
 
 class Helper {
diff --git a/lib/modules/dynamic_layout/logo/logo.dart b/lib/modules/dynamic_layout/logo/logo.dart
index ac2fed9..0339d4f 100644
--- a/lib/modules/dynamic_layout/logo/logo.dart
+++ b/lib/modules/dynamic_layout/logo/logo.dart
@@ -5,7 +5,7 @@ import 'package:inspireui/inspireui.dart' show DeferredWidget;
 import '../../../widgets/common/flux_image.dart';
 import '../config/logo_config.dart';
 
-const double kSizeLogo = 40;
+const double kSizeLogo = 50;
 
 class LogoIcon extends StatelessWidget {
   final LogoConfig config;
@@ -116,152 +116,136 @@ class Logo extends StatelessWidget {
 
   @override
   Widget build(BuildContext context) {
-    final screenSize = MediaQuery.of(context).size;
-    final isRotate = screenSize.width > screenSize.height;
-
     return Builder(
       builder: (context) {
-        return SizedBox(
-          width: screenSize.width,
-          child: FittedBox(
-            fit: BoxFit.cover,
-            child: Container(
-              width: screenSize.width /
-                  ((isRotate ? 1.25 : 2) /
-                      (screenSize.height / screenSize.width)),
-              constraints: const BoxConstraints(minHeight: 40.0),
-              child: Padding(
-                padding: const EdgeInsets.symmetric(horizontal: 15.0),
-                child: Row(
-                  children: [
-                    Expanded(
-                      child: (config.showMenu ?? false)
-                          ? LogoIcon(
-                              menuIcon: config.menuIcon,
-                              onTap: onTapDrawerMenu,
-                              config: config,
-                            )
-                          : const SizedBox(),
-                    ),
-                    Expanded(
-                      flex: 8,
-                      child: Container(
-                        constraints: const BoxConstraints(minHeight: 50),
-                        child: Center(
-                          child: Row(
-                            mainAxisAlignment: MainAxisAlignment.center,
-                            crossAxisAlignment: CrossAxisAlignment.center,
-                            children: <Widget>[
-                              if (config.showLogo) Center(child: renderLogo()),
-                              if (config.name?.isNotEmpty ?? false) ...[
-                                const SizedBox(width: 5),
-                                Text(
-                                  config.name!,
-                                  style: TextStyle(
-                                    fontSize: 20,
-                                    color: Theme.of(context).colorScheme.onBackground,
-                                    fontWeight: FontWeight.bold,
-                                  ),
-                                )
-                              ],
-                            ],
-                          ),
-                        ),
-                      ),
+        return Container(
+          constraints: const BoxConstraints(minHeight: 40.0),
+          padding: const EdgeInsets.symmetric(horizontal: 15.0),
+          child: Row(
+            children: [
+              Expanded(
+                child: (config.showMenu ?? false)
+                    ? LogoIcon(
+                        menuIcon: config.menuIcon,
+                        onTap: onTapDrawerMenu,
+                        config: config,
+                      )
+                    : const SizedBox(),
+              ),
+              Expanded(
+                flex: 8,
+                child: Container(
+                  constraints: const BoxConstraints(minHeight: 50),
+                  child: Center(
+                    child: Row(
+                      mainAxisAlignment: MainAxisAlignment.center,
+                      crossAxisAlignment: CrossAxisAlignment.center,
+                      children: <Widget>[
+                        if (config.showLogo) Center(child: renderLogo()),
+                        if (config.name?.isNotEmpty ?? false) ...[
+                          const SizedBox(width: 5),
+                          Text(
+                            config.name!,
+                            style: TextStyle(
+                              fontSize: 20,
+                              color: Theme.of(context).colorScheme.onBackground,
+                              fontWeight: FontWeight.bold,
+                            ),
+                          )
+                        ],
+                      ],
                     ),
-                    if (config.showSearch)
-                      Expanded(
-                        child: LogoIcon(
-                          menuIcon:
-                              config.searchIcon ?? MenuIcon(name: 'search'),
-                          onTap: onSearch,
-                          config: config,
-                        ),
+                  ),
+                ),
+              ),
+              if (config.showSearch)
+                Expanded(
+                  child: LogoIcon(
+                    menuIcon: config.searchIcon ?? MenuIcon(name: 'search'),
+                    onTap: onSearch,
+                    config: config,
+                  ),
+                ),
+              if (config.showCart)
+                Expanded(
+                  child: Stack(
+                    children: <Widget>[
+                      LogoIcon(
+                        menuIcon: config.cartIcon ?? MenuIcon(name: 'bag'),
+                        onTap: onCheckout,
+                        config: config,
                       ),
-                    if (config.showCart)
-                      Expanded(
-                        child: Stack(
-                          children: <Widget>[
-                            LogoIcon(
-                              menuIcon:
-                                  config.cartIcon ?? MenuIcon(name: 'bag'),
-                              onTap: onCheckout,
-                              config: config,
+                      if (totalCart > 0)
+                        Positioned(
+                          right: 0,
+                          top: 0,
+                          child: Container(
+                            padding: const EdgeInsets.all(1),
+                            decoration: BoxDecoration(
+                              color: Colors.red,
+                              borderRadius: BorderRadius.circular(15),
                             ),
-                            if (totalCart > 0)
-                              Positioned(
-                                right: 0,
-                                top: 0,
-                                child: Container(
-                                  padding: const EdgeInsets.all(1),
-                                  decoration: BoxDecoration(
-                                    color: Colors.red,
-                                    borderRadius: BorderRadius.circular(15),
-                                  ),
-                                  constraints: const BoxConstraints(
-                                    minWidth: 18,
-                                    minHeight: 18,
-                                  ),
-                                  child: Text(
-                                    totalCart.toString(),
-                                    style: const TextStyle(
-                                      color: Colors.white,
-                                      fontSize: 12,
-                                      height: 1.3,
-                                    ),
-                                    textAlign: TextAlign.center,
-                                  ),
-                                ),
-                              )
-                          ],
-                        ),
-                      ),
-                    if (config.showNotification)
-                      Expanded(
-                        child: Stack(
-                          children: <Widget>[
-                            LogoIcon(
-                              menuIcon: config.notificationIcon ??
-                                  MenuIcon(name: 'bell'),
-                              onTap: onTapNotifications,
-                              config: config,
+                            constraints: const BoxConstraints(
+                              minWidth: 18,
+                              minHeight: 18,
+                            ),
+                            child: Text(
+                              totalCart.toString(),
+                              style: const TextStyle(
+                                color: Colors.white,
+                                fontSize: 12,
+                                height: 1.3,
+                              ),
+                              textAlign: TextAlign.center,
                             ),
-                            if (notificationCount > 0)
-                              Positioned(
-                                right: 0,
-                                top: 0,
-                                child: Container(
-                                  padding: const EdgeInsets.all(1),
-                                  decoration: BoxDecoration(
-                                    color: Colors.red,
-                                    borderRadius: BorderRadius.circular(15),
-                                  ),
-                                  constraints: const BoxConstraints(
-                                    minWidth: 18,
-                                    minHeight: 18,
-                                  ),
-                                  child: Text(
-                                    notificationCount.toString(),
-                                    style: const TextStyle(
-                                      color: Colors.white,
-                                      fontSize: 12,
-                                      height: 1.3,
-                                    ),
-                                    textAlign: TextAlign.center,
-                                  ),
-                                ),
-                              )
-                          ],
-                        ),
+                          ),
+                        )
+                    ],
+                  ),
+                ),
+              if (config.showNotification)
+                Expanded(
+                  child: Stack(
+                    children: <Widget>[
+                      LogoIcon(
+                        menuIcon:
+                            config.notificationIcon ?? MenuIcon(name: 'bell'),
+                        onTap: onTapNotifications,
+                        config: config,
                       ),
-                    if (!config.showSearch &&
-                        !config.showCart &&
-                        !config.showNotification)
-                      const Spacer(),
-                  ],
+                      if (notificationCount > 0)
+                        Positioned(
+                          right: 0,
+                          top: 0,
+                          child: Container(
+                            padding: const EdgeInsets.all(1),
+                            decoration: BoxDecoration(
+                              color: Colors.red,
+                              borderRadius: BorderRadius.circular(15),
+                            ),
+                            constraints: const BoxConstraints(
+                              minWidth: 18,
+                              minHeight: 18,
+                            ),
+                            child: Text(
+                              notificationCount.toString(),
+                              style: const TextStyle(
+                                color: Colors.white,
+                                fontSize: 12,
+                                height: 1.3,
+                              ),
+                              textAlign: TextAlign.center,
+                            ),
+                          ),
+                        )
+                    ],
+                  ),
                 ),
-              ),
-            ),
+              if (!config.showSearch &&
+                  !config.showCart &&
+                  !config.showNotification)
+                const Spacer(),
+            ],
           ),
         );
       },
diff --git a/lib/modules/dynamic_layout/product/future_builder.dart b/lib/modules/dynamic_layout/product/future_builder.dart
index ec22457..7843027 100644
--- a/lib/modules/dynamic_layout/product/future_builder.dart
+++ b/lib/modules/dynamic_layout/product/future_builder.dart
@@ -32,6 +32,8 @@ class ProductFutureBuilder extends StatefulWidget {
 class _ProductListLayoutState extends State<ProductFutureBuilder> {
   ValueNotifier<List<Product>?> productsNotifier = ValueNotifier(null);
 
+  RecentModel? recentViewModel;
+
   @override
   void initState() {
     super.initState();
@@ -42,20 +44,28 @@ class _ProductListLayoutState extends State<ProductFutureBuilder> {
       if (mounted) {
         productsNotifier.value = await getProductLayout(context);
         if (!mounted) return;
-        Provider.of<RecentModel>(context, listen: false).addListener(() async {
-          if (widget.config.layout == Layout.recentView) {
-            productsNotifier.value = await getProductLayout(context);
-          }
-        });
+        recentViewModel = Provider.of<RecentModel>(context, listen: false);
+        recentViewModel?.addListener(_recentListener);
       }
     });
   }
 
+  @override
+  void dispose() {
+    recentViewModel?.removeListener(_recentListener);
+    super.dispose();
+  }
+
+  void _recentListener() async {
+    if (mounted && widget.config.layout == Layout.recentView) {
+      productsNotifier.value = await getProductLayout(context);
+    }
+  }
+
   Future<List<Product>?> getProductLayout(context) {
     // final startTime = DateTime.now();
     if (widget.config.layout == Layout.recentView) {
-      return Provider.of<RecentModel>(context, listen: false)
-          .getRecentProduct();
+      return recentViewModel?.getRecentProduct() ?? Future.value([]);
     }
     if (widget.config.layout == Layout.saleOff) {
       /// Fetch only onSale products for saleOff layout.
@@ -89,6 +99,9 @@ class _ProductListLayoutState extends State<ProductFutureBuilder> {
                   ? kMaxProductWidth
                   : constraint.maxWidth;
 
+              //Do not include HeaderView height
+              var maxHeight = constraint.maxHeight - 50;
+
               if (products == null) {
                 if (widget.waiting != null) return widget.waiting!;
 
@@ -98,6 +111,7 @@ class _ProductListLayoutState extends State<ProductFutureBuilder> {
                         ? EmptyProductGrid(
                             config: widget.config,
                             maxWidth: maxWidth,
+                            maxHeight: maxHeight,
                           )
                         : EmptyProductList(
                             config: widget.config,
@@ -119,6 +133,7 @@ class _ProductListLayoutState extends State<ProductFutureBuilder> {
 
               return widget.child(
                 maxWidth: maxWidth,
+                maxHeight: maxHeight,
                 products: products,
               );
             },
diff --git a/lib/modules/dynamic_layout/product/product_empty.dart b/lib/modules/dynamic_layout/product/product_empty.dart
index 84b8212..a4319cb 100644
--- a/lib/modules/dynamic_layout/product/product_empty.dart
+++ b/lib/modules/dynamic_layout/product/product_empty.dart
@@ -16,38 +16,49 @@ class EmptyProductList extends StatelessWidget {
 
   @override
   Widget build(BuildContext context) {
-    final defaultHeight =
-        config.height != null ? config.height! + 40.0 : maxWidth * 1.4;
+    var ratioProductImage = config.imageRatio;
+
+    var layout = config.layout ?? Layout.threeColumn;
+
+    var productWidth = Layout.buildProductWidth(
+      screenWidth: maxWidth,
+      layout: layout,
+    );
+    var productHeight =
+        productWidth * ratioProductImage + config.productListItemHeight;
+
+    if (ratioProductImage < 1) {
+      productHeight = productHeight * (ratioProductImage * 1.2);
+    }
 
     return Column(
       children: <Widget>[
         HeaderView(
           headerText: config.name ?? '',
           showSeeAll: false,
-          callback: () =>
-              ProductModel.showList(context: context, config: config.jsonData),
+          callback: () => ProductModel.showList(
+            config: config.jsonData,
+          ),
         ),
         ConstrainedBox(
           constraints: BoxConstraints(
-            minHeight: Layout.buildProductHeight(
-              layout: config.layout,
-              defaultHeight: defaultHeight,
-            ),
+            minHeight: productHeight,
           ),
           child: SingleChildScrollView(
             scrollDirection: Axis.horizontal,
             child: Row(
               children: [
                 const SizedBox(width: 10.0),
-                for (var i = 0; i < 4; i++)
+                for (var i = 0;
+                    i < Layout.getColumnCount(layout: config.layout);
+                    i++)
                   ProductCard(
                     item: Product.empty(i.toString()),
-                    width: Layout.buildProductWidth(
-                      layout: config.layout,
-                      screenWidth: maxWidth,
-                    ),
-                    config: ProductConfig.empty(),
-                    // tablet: constraint.maxWidth / MediaQuery.of(context).size.height > 1.2,
+                    width: productWidth,
+                    maxWidth: Layout.buildProductMaxWidth(
+                        context: context, layout: config.layout),
+                    config: ProductConfig.empty()
+                      ..imageRatio = ratioProductImage,
                   )
               ],
             ),
@@ -96,10 +107,14 @@ class EmptyProductTile extends StatelessWidget {
 class EmptyProductGrid extends StatelessWidget {
   final ProductConfig config;
   final double maxWidth;
+  final double maxHeight;
 
-  const EmptyProductGrid(
-      {Key? key, required this.config, required this.maxWidth})
-      : super(key: key);
+  const EmptyProductGrid({
+    Key? key,
+    required this.config,
+    required this.maxHeight,
+    required this.maxWidth,
+  }) : super(key: key);
 
   double getGridRatio() {
     switch (config.layout) {
@@ -111,35 +126,48 @@ class EmptyProductGrid extends StatelessWidget {
     }
   }
 
-  double getHeightRatio() {
-    switch (config.layout) {
-      case Layout.twoColumn:
-        return 1.7;
-      case Layout.threeColumn:
-      default:
-        return 1.3;
-    }
-  }
-
   @override
   Widget build(BuildContext context) {
-    final defaultHeight =
-        config.height != null ? config.height! + 40.0 : maxWidth * 1.4;
-    var ratioProductImage = 1.5;
     const padding = 12.0;
+    var ratioProductImage = config.imageRatio;
+    final gridWidth = maxWidth - padding;
+
     var rows = config.rows;
-    var productHeight = Layout.buildProductHeight(
+
+    var productWidth = Layout.buildProductWidth(
+      screenWidth: gridWidth,
       layout: config.layout,
-      defaultHeight: defaultHeight,
     );
+    var productHeight =
+        productWidth * ratioProductImage + config.productListItemHeight;
+
+    if (ratioProductImage < 1) {
+      productHeight = productHeight * (ratioProductImage * 1.2);
+    }
+
+    // Check if Gridview is overflowed
+    for (var i = config.rows; i > 0; i--) {
+      if (productHeight * i > maxHeight) {
+        rows = i - 1;
+      }
+    }
+
+    final numOfProduct = rows * Layout.getColumnCount(layout: config.layout);
+
+    /// Not create a new row until the item is out of the screen.
+    if (numOfProduct * productWidth * ratioProductImage <= gridWidth ||
+        rows < 1) {
+      rows = 1;
+    }
 
     return Column(
       children: <Widget>[
         HeaderView(
           headerText: config.name ?? '',
           showSeeAll: false,
-          callback: () =>
-              ProductModel.showList(context: context, config: config.jsonData),
+          callback: () => ProductModel.showList(
+            config: config.jsonData,
+          ),
         ),
         Container(
           padding: const EdgeInsets.only(left: padding, top: padding),
@@ -147,21 +175,25 @@ class EmptyProductGrid extends StatelessWidget {
             color: Theme.of(context).backgroundColor,
             borderRadius: BorderRadius.circular(2),
           ),
-          height: rows * productHeight * getHeightRatio(),
+          constraints: BoxConstraints(
+            minHeight: productHeight,
+            maxHeight: maxHeight,
+          ),
+          height: rows * productHeight,
           child: GridView.count(
-            childAspectRatio: ratioProductImage * getGridRatio(),
+            childAspectRatio:
+                (ratioProductImage * (ratioProductImage < 1 ? 1.5 : 1)) *
+                    getGridRatio(),
             scrollDirection: Axis.horizontal,
             crossAxisCount: rows,
             children: [
-              for (var i = 0; i < 12; i++)
+              for (var i = 0; i < numOfProduct; i++)
                 ProductCard(
                   item: Product.empty(i.toString()),
-                  width: Layout.buildProductWidth(
-                    layout: config.layout,
-                    screenWidth: maxWidth,
-                  ),
-                  config: ProductConfig.empty(),
-                  // tablet: constraint.maxWidth / MediaQuery.of(context).size.height > 1.2,
+                  width: productWidth,
+                  maxWidth: Layout.buildProductMaxWidth(
+                      context: context, layout: config.layout),
+                  config: ProductConfig.empty()..imageRatio = ratioProductImage,
                 )
             ],
           ),
diff --git a/lib/modules/dynamic_layout/product/product_grid.dart b/lib/modules/dynamic_layout/product/product_grid.dart
index 264eec5..bff1d16 100644
--- a/lib/modules/dynamic_layout/product/product_grid.dart
+++ b/lib/modules/dynamic_layout/product/product_grid.dart
@@ -8,12 +8,14 @@ import '../helper/helper.dart';
 class ProductGrid extends StatelessWidget {
   final products;
   final maxWidth;
+  final maxHeight;
   final ProductConfig config;
 
   const ProductGrid({
     Key? key,
     required this.products,
     required this.maxWidth,
+    required this.maxHeight,
     required this.config,
   }) : super(key: key);
 
@@ -26,20 +28,29 @@ class ProductGrid extends StatelessWidget {
     const padding = 12.0;
     final ratioProductImage = config.imageRatio;
     final gridWidth = maxWidth - padding;
-    final columns = getColumnCount();
 
     var rows = config.rows;
-    var productHeight = Layout.buildProductHeight(
+    var productWidth = Layout.buildProductWidth(
+      screenWidth: gridWidth,
       layout: config.layout,
-      defaultHeight: maxWidth,
     );
+    var productHeight =
+        productWidth * ratioProductImage + config.productListItemHeight;
 
     if (ratioProductImage < 1) {
       productHeight = productHeight * (ratioProductImage * 1.2);
     }
 
+    // Check if Gridview is overflowed
+    for (var i = config.rows; i > 0; i--) {
+      if (productHeight * i > maxHeight) {
+        rows = i - 1;
+      }
+    }
+
     /// Not create a new row until the item is out of the screen.
-    if (products.length <= columns) {
+    if (products.length * productWidth * ratioProductImage <= gridWidth ||
+        rows < 1) {
       rows = 1;
     }
 
@@ -49,7 +60,11 @@ class ProductGrid extends StatelessWidget {
         color: Theme.of(context).backgroundColor,
         borderRadius: BorderRadius.circular(2),
       ),
-      height: rows * productHeight * getHeightRatio(),
+      constraints: BoxConstraints(
+        minHeight: productHeight,
+        maxHeight: maxHeight,
+      ),
+      height: rows * productHeight,
       child: GridView.count(
         childAspectRatio:
             (ratioProductImage * (ratioProductImage < 1 ? 1.5 : 1)) *
@@ -67,10 +82,9 @@ class ProductGrid extends StatelessWidget {
         children: List.generate(productList.length, (i) {
           return Services().widget.renderProductCardView(
                 item: productList[i],
-                width: Layout.buildProductWidth(
-                    screenWidth: gridWidth, layout: config.layout),
-                maxWidth: Layout.buildProductMaxWidth(layout: config.layout),
-                height: productHeight,
+                width: productWidth,
+                maxWidth: Layout.buildProductMaxWidth(
+                    context: context, layout: config.layout),
                 ratioProductImage: ratioProductImage,
                 config: config,
               );
@@ -79,16 +93,6 @@ class ProductGrid extends StatelessWidget {
     );
   }
 
-  double getColumnCount() {
-    switch (config.layout) {
-      case Layout.twoColumn:
-        return 2;
-      case Layout.threeColumn:
-      default:
-        return 3;
-    }
-  }
-
   double getGridRatio() {
     switch (config.layout) {
       case Layout.twoColumn:
@@ -98,14 +102,4 @@ class ProductGrid extends StatelessWidget {
         return 1.7;
     }
   }
-
-  double getHeightRatio() {
-    switch (config.layout) {
-      case Layout.twoColumn:
-        return 1.7;
-      case Layout.threeColumn:
-      default:
-        return 1.3;
-    }
-  }
 }
diff --git a/lib/modules/dynamic_layout/product/product_list.dart b/lib/modules/dynamic_layout/product/product_list.dart
index d11cc55..094c3d5 100644
--- a/lib/modules/dynamic_layout/product/product_list.dart
+++ b/lib/modules/dynamic_layout/product/product_list.dart
@@ -37,7 +37,7 @@ class ProductList extends StatelessWidget {
     return 0;
   }
 
-  Widget getProductLayout({maxWidth, products}) {
+  Widget getProductLayout({maxWidth, maxHeight, products}) {
     switch (config.layout) {
       case Layout.listTile:
         return ProductListTitle(
@@ -54,6 +54,7 @@ class ProductList extends StatelessWidget {
         return config.rows > 1
             ? ProductGrid(
                 maxWidth: maxWidth,
+                maxHeight: maxHeight,
                 products: products,
                 config: config..showCountDown = isShowCountDown(),
               )
@@ -73,7 +74,7 @@ class ProductList extends StatelessWidget {
     return ProductFutureBuilder(
       config: config,
       cleanCache: cleanCache,
-      child: ({maxWidth, products}) {
+      child: ({maxWidth, maxHeight, products}) {
         final duration = getCountDownDuration(products, isSaleOffLayout);
 
         return Column(
@@ -93,7 +94,6 @@ class ProductList extends StatelessWidget {
               showSeeAll: isRecentLayout ? false : true,
               verticalMargin: config.image != null ? 6.0 : 10.0,
               callback: () => ProductModel.showList(
-                context: context,
                 config: config.jsonData,
                 products: products,
                 showCountdown: isShowCountDown() && duration > 0,
@@ -102,7 +102,11 @@ class ProductList extends StatelessWidget {
               showCountdown: isShowCountDown() && duration > 0,
               countdownDuration: Duration(milliseconds: duration),
             ),
-            getProductLayout(maxWidth: maxWidth, products: products),
+            getProductLayout(
+              maxWidth: maxWidth,
+              maxHeight: maxHeight,
+              products: products,
+            ),
           ],
         );
       },
diff --git a/lib/modules/dynamic_layout/product/product_list_default.dart b/lib/modules/dynamic_layout/product/product_list_default.dart
index 9a3dd0d..cadbcb2 100644
--- a/lib/modules/dynamic_layout/product/product_list_default.dart
+++ b/lib/modules/dynamic_layout/product/product_list_default.dart
@@ -34,52 +34,35 @@ class ProductListDefault extends StatelessWidget {
       ratioProductImage = config.imageRatio;
     }
 
-    final padding = enableBackground ? 0.0 : 12.0;
-    var width = maxWidth - padding;
     var layout = config.layout ?? Layout.threeColumn;
 
+    var width = Layout.buildProductWidth(
+      screenWidth: maxWidth,
+      layout: layout,
+    );
+
     return [
       if (enableBackground)
         SizedBox(
-          width: config.spaceWidth != null
-              ? config.spaceWidth?.toDouble()
-              : Layout.buildProductWidth(
-                  screenWidth: maxWidth,
-                  layout: layout,
-                ),
-          height: Layout.buildProductHeight(
-            layout: layout,
-            defaultHeight: width,
-          ),
+          width:
+              config.spaceWidth != null ? config.spaceWidth?.toDouble() : width,
         ),
       for (var i = 0; i < products.length; i++)
-        SizedBox(
-          width: Layout.buildProductWidth(
-            screenWidth: maxWidth,
-            layout: layout,
-          ),
-          child: Services().widget.renderProductCardView(
-                item: products[i],
-                width: Layout.buildProductWidth(
-                  screenWidth: maxWidth,
-                  layout: layout,
-                ),
-                maxWidth: Layout.buildProductMaxWidth(layout: layout),
-                height: Layout.buildProductHeight(
-                  layout: layout,
-                  defaultHeight: width,
-                ),
-                ratioProductImage: ratioProductImage,
-                config: config,
-              ),
-        )
+        Services().widget.renderProductCardView(
+              item: products[i],
+              width: width,
+              maxWidth:
+                  Layout.buildProductMaxWidth(context: context, layout: layout),
+              ratioProductImage: ratioProductImage,
+              config: config,
+            )
     ];
   }
 
   Widget renderHorizontal(BuildContext context,
       {bool enableBackground = false}) {
     final padding = enableBackground ? 0.0 : 12.0;
-    var width = maxWidth - padding;
+    var horizontalWidth = maxWidth - padding;
     var layout = config.layout ?? Layout.threeColumn;
 
     /// wrap the product for Desktop mode
@@ -98,17 +81,14 @@ class ProductListDefault extends StatelessWidget {
           .withOpacity(enableBackground ? 0.0 : 1.0),
       padding: EdgeInsets.only(left: padding),
       constraints: BoxConstraints(
-        minHeight: Layout.buildProductHeight(
-          layout: layout,
-          defaultHeight: width,
-        ),
+        minHeight: config.productListItemHeight,
       ),
       child: SingleChildScrollView(
         scrollDirection: Axis.horizontal,
         physics: config.isSnapping ?? false
             ? CustomScrollPhysic(
                 width: Layout.buildProductWidth(
-                    screenWidth: width, layout: layout))
+                    screenWidth: horizontalWidth, layout: layout))
             : const ScrollPhysics(),
         child: Row(
           crossAxisAlignment: CrossAxisAlignment.start,
@@ -126,7 +106,7 @@ class ProductListDefault extends StatelessWidget {
         config.backgroundImage != null || config.backgroundColor != null;
     var backgroundHeight = config.backgroundHeight?.toDouble();
     var backgroundWidth = (config.backgroundWidthMode ?? false)
-        ? MediaQuery.of(context).size.width
+        ? maxWidth
         : config.backgroundWidth?.toDouble();
 
     if (enableBackground) {
@@ -157,6 +137,7 @@ class ProductListDefault extends StatelessWidget {
                         fit: ImageTools.boxFit(config.backgroundBoxFit),
                         height: backgroundHeight,
                         ratio: config.parallaxImageRatio,
+                        width: backgroundWidth,
                       )
                     : FluxImage(
                         imageUrl: config.backgroundImage!,
diff --git a/lib/modules/dynamic_layout/product/product_list_large_card.dart b/lib/modules/dynamic_layout/product/product_list_large_card.dart
index 5f4f9d2..a702e0c 100644
--- a/lib/modules/dynamic_layout/product/product_list_large_card.dart
+++ b/lib/modules/dynamic_layout/product/product_list_large_card.dart
@@ -49,7 +49,7 @@ class ProductListLargeCard extends StatelessWidget {
           ),
         ),
       ),
-      child: ({maxWidth, products}) {
+      child: ({maxWidth, maxHeight, products}) {
         return Padding(
           padding: const EdgeInsets.only(top: 10.0, bottom: 10.0),
           child: Column(
@@ -79,6 +79,7 @@ class ProductListLargeCard extends StatelessWidget {
                       key: Key('imageWidth-${config.imageWidth}-$index'),
                       item: products[index],
                       width: Helper.formatDouble(config.imageWidth),
+                      maxWidth: maxWidth,
                     ),
                   ),
                 ),
@@ -95,14 +96,20 @@ class LargeProductCard extends StatelessWidget {
   final ProductConfig? config;
   final Product? item;
   final double? width;
+  final double? maxWidth;
 
-  const LargeProductCard({this.item, this.width, Key? key, this.config})
-      : super(key: key);
+  const LargeProductCard({
+    this.item,
+    this.width,
+    Key? key,
+    this.config,
+    this.maxWidth,
+  }) : super(key: key);
 
   @override
   Widget build(BuildContext context) {
     var screenWidth = MediaQuery.of(context).size.width;
-    var imageWidth = (width == null) ? screenWidth / 2.0 : width!;
+    var imageWidth = (width == null) ? (maxWidth ?? screenWidth) / 3.0 : width!;
     var priceFontSize = imageWidth / 12.0;
     var titleFontSize = imageWidth / 10.0;
 
@@ -124,7 +131,7 @@ class LargeProductCard extends StatelessWidget {
               borderRadius: const BorderRadius.all(
                 Radius.circular(20.0),
               ),
-              child: ImageTools.image(
+              child: ImageResize(
                 url: item!.imageFeature,
                 width: imageWidth,
                 size: kSize.medium,
@@ -151,9 +158,9 @@ class LargeProductCard extends StatelessWidget {
                 padding: const EdgeInsets.symmetric(horizontal: 10.0),
                 child: SizedBox(
                   width: imageWidth - 30,
-                  height: imageWidth * 0.4,
                   child: Column(
                     crossAxisAlignment: CrossAxisAlignment.start,
+                    mainAxisSize: MainAxisSize.min,
                     children: <Widget>[
                       Text(
                         item!.name!,
diff --git a/lib/modules/dynamic_layout/product/product_list_simple.dart b/lib/modules/dynamic_layout/product/product_list_simple.dart
index 3662a03..e065a8b 100644
--- a/lib/modules/dynamic_layout/product/product_list_simple.dart
+++ b/lib/modules/dynamic_layout/product/product_list_simple.dart
@@ -35,7 +35,8 @@ class SimpleVerticalProductList extends StatelessWidget {
             headerText: config.name ?? '',
             showSeeAll: true,
             callback: () => ProductModel.showList(
-                context: context, config: config.jsonData),
+              config: config.jsonData,
+            ),
           ),
           SingleChildScrollView(
             scrollDirection: Axis.vertical,
@@ -51,13 +52,12 @@ class SimpleVerticalProductList extends StatelessWidget {
           )
         ],
       ),
-      child: ({maxWidth, products}) => Column(
+      child: ({maxWidth, maxHeight, products}) => Column(
         children: <Widget>[
           HeaderView(
             headerText: config.name ?? '',
             showSeeAll: true,
             callback: () => ProductModel.showList(
-              context: context,
               config: config.jsonData,
               products: products,
             ),
diff --git a/lib/modules/dynamic_layout/product/product_list_tile.dart b/lib/modules/dynamic_layout/product/product_list_tile.dart
index a8be9c0..631e696 100644
--- a/lib/modules/dynamic_layout/product/product_list_tile.dart
+++ b/lib/modules/dynamic_layout/product/product_list_tile.dart
@@ -40,7 +40,10 @@ class ProductListTitle extends StatelessWidget {
 
     return LayoutBuilder(
       builder: (context, constraints) {
-        return SizedBox(
+        return Container(
+          constraints: BoxConstraints(
+            maxHeight: 220 * config.imageRatio * 3,
+          ),
           width: constraints.maxWidth,
           height: (constraints.maxWidth + 180) * config.imageRatio,
           child: PageView(
@@ -48,6 +51,7 @@ class ProductListTitle extends StatelessWidget {
               for (var i = 0; i < products!.length; i = i + 3)
                 Column(
                   crossAxisAlignment: CrossAxisAlignment.start,
+                  mainAxisSize: MainAxisSize.min,
                   children: <Widget>[
                     Expanded(
                       child: renderProductItemTileView(
diff --git a/lib/modules/dynamic_layout/slider_testimonial/index.dart b/lib/modules/dynamic_layout/slider_testimonial/index.dart
index 2bc8f1b..9f39486 100644
--- a/lib/modules/dynamic_layout/slider_testimonial/index.dart
+++ b/lib/modules/dynamic_layout/slider_testimonial/index.dart
@@ -16,7 +16,7 @@ class SliderTestimonial extends StatefulWidget {
 }
 
 class _StateSliderTestimonial extends State<SliderTestimonial> {
-  int position = 0;
+  ValueNotifier<int> position = ValueNotifier(0);
   PageController? _controller;
   Timer? timer;
   bool get autoPlay => widget.config.autoPlay;
@@ -37,12 +37,12 @@ class _StateSliderTestimonial extends State<SliderTestimonial> {
         timer?.cancel();
         return;
       }
-      if (position >= items.length - 1 && _controller!.hasClients) {
-        position = 0;
-        _controller!.jumpToPage(position);
+      if (position.value >= items.length - 1 && _controller!.hasClients) {
+        position.value = 0;
+        _controller!.jumpToPage(position.value);
       } else {
         if (_controller!.hasClients) {
-          _controller!.animateToPage(position + 1,
+          _controller!.animateToPage(position.value + 1,
               duration: const Duration(seconds: 1), curve: Curves.easeInOut);
         }
       }
@@ -53,6 +53,7 @@ class _StateSliderTestimonial extends State<SliderTestimonial> {
   void dispose() {
     timer?.cancel();
     _controller?.dispose();
+    position.dispose();
     super.dispose();
   }
 
@@ -66,9 +67,7 @@ class _StateSliderTestimonial extends State<SliderTestimonial> {
           PageView(
             controller: _controller,
             onPageChanged: (index) {
-              setState(() {
-                position = index;
-              });
+              position.value = index;
             },
             children: <Widget>[
               for (int i = 0; i < items.length; i++)
@@ -111,9 +110,7 @@ class _StateSliderTestimonial extends State<SliderTestimonial> {
       case 'swiper':
         return Swiper(
           onIndexChanged: (index) {
-            setState(() {
-              position = index;
-            });
+            position.value = index;
           },
           autoplay: autoPlay,
           itemBuilder: (BuildContext context, int index) {
@@ -127,9 +124,7 @@ class _StateSliderTestimonial extends State<SliderTestimonial> {
       case 'tinder':
         return Swiper(
           onIndexChanged: (index) {
-            setState(() {
-              position = index;
-            });
+            position.value = index;
           },
           autoplay: autoPlay,
           itemBuilder: (BuildContext context, int index) {
@@ -144,9 +139,7 @@ class _StateSliderTestimonial extends State<SliderTestimonial> {
       case 'stack':
         return Swiper(
           onIndexChanged: (index) {
-            setState(() {
-              position = index;
-            });
+            position.value = index;
           },
           autoplay: autoPlay,
           itemBuilder: (BuildContext context, int index) {
@@ -160,9 +153,7 @@ class _StateSliderTestimonial extends State<SliderTestimonial> {
       case 'custom':
         return Swiper(
           onIndexChanged: (index) {
-            setState(() {
-              position = index;
-            });
+            position.value = index;
           },
           autoplay: autoPlay,
           itemBuilder: (BuildContext context, int index) {
diff --git a/lib/modules/dynamic_layout/story/story_card.dart b/lib/modules/dynamic_layout/story/story_card.dart
index 2665662..5859dce 100644
--- a/lib/modules/dynamic_layout/story/story_card.dart
+++ b/lib/modules/dynamic_layout/story/story_card.dart
@@ -132,11 +132,9 @@ class _StoryCardState extends State<StoryCard> {
                                       config['tab_number'] != null ||
                                       config['screen'] != null;
                                   NavigateTools.onTapNavigateOptions(
-                                          context: popLayout
-                                              ? (widget.buildContext ?? context)
-                                              : context,
-                                          config: config)
-                                      .then((value) {
+                                    context: context,
+                                    config: config,
+                                  ).then((value) {
                                     if (popLayout &&
                                         Navigator.canPop(context)) {
                                       Navigator.pop(context);
diff --git a/lib/modules/dynamic_layout/tabbar/tab_indicator/dot_indicator.dart b/lib/modules/dynamic_layout/tabbar/tab_indicator/dot_indicator.dart
index f9beb98..4277cb0 100644
--- a/lib/modules/dynamic_layout/tabbar/tab_indicator/dot_indicator.dart
+++ b/lib/modules/dynamic_layout/tabbar/tab_indicator/dot_indicator.dart
@@ -58,10 +58,15 @@ class CustomDotIndicatorPainter extends BoxPainter {
 
   @override
   void paint(Canvas canvas, Offset offset, ImageConfiguration configuration) {
-    assert(configuration.size != null);
-    assert(strokeWidth >= 0 &&
-        strokeWidth < configuration.size!.width / 2 &&
-        strokeWidth < configuration.size!.height / 2);
+    try {
+      assert(configuration.size != null);
+      assert(strokeWidth >= 0 &&
+          strokeWidth < configuration.size!.width / 2 &&
+          strokeWidth < configuration.size!.height / 2);
+    } catch (_) {
+      // No indicator will be drawn.
+      return;
+    }
 
     //offset is the position from where the decoration should be drawn.
     //configuration.size tells us about the height and width of the tab.
diff --git a/lib/modules/dynamic_layout/tabbar/tab_indicator/material_indicator.dart b/lib/modules/dynamic_layout/tabbar/tab_indicator/material_indicator.dart
index 4e52d04..cc00966 100644
--- a/lib/modules/dynamic_layout/tabbar/tab_indicator/material_indicator.dart
+++ b/lib/modules/dynamic_layout/tabbar/tab_indicator/material_indicator.dart
@@ -43,6 +43,7 @@ class MaterialIndicator extends Decoration {
     this.paintingStyle = PaintingStyle.fill,
     this.strokeWidth = 2,
   });
+
   @override
   CustomMaterialIndicatorPainter createBoxPainter([VoidCallback? onChanged]) {
     return CustomMaterialIndicatorPainter(
@@ -92,13 +93,18 @@ class CustomMaterialIndicatorPainter extends BoxPainter {
 
   @override
   void paint(Canvas canvas, Offset offset, ImageConfiguration configuration) {
-    assert(horizontalPadding >= 0);
-    assert(horizontalPadding < configuration.size!.width / 2,
-        'Padding must be less than half of the size of the tab');
-    assert(height > 0);
-    assert(strokeWidth >= 0 &&
-        strokeWidth < configuration.size!.width / 2 &&
-        strokeWidth < configuration.size!.height / 2);
+    try {
+      assert(horizontalPadding >= 0);
+      assert(horizontalPadding < configuration.size!.width / 2,
+          'Padding must be less than half of the size of the tab');
+      assert(height > 0);
+      assert(strokeWidth >= 0 &&
+          strokeWidth < configuration.size!.width / 2 &&
+          strokeWidth < configuration.size!.height / 2);
+    } catch (_) {
+      // No indicator will be drawn.
+      return;
+    }
 
     //offset is the position from where the decoration should be drawn.
     //configuration.size tells us about the height and width of the tab.
diff --git a/lib/modules/dynamic_layout/tabbar/tab_indicator/rectangular_indicator.dart b/lib/modules/dynamic_layout/tabbar/tab_indicator/rectangular_indicator.dart
index cd9205b..45c2b7e 100644
--- a/lib/modules/dynamic_layout/tabbar/tab_indicator/rectangular_indicator.dart
+++ b/lib/modules/dynamic_layout/tabbar/tab_indicator/rectangular_indicator.dart
@@ -39,6 +39,7 @@ class RectangularIndicator extends Decoration {
     this.paintingStyle = PaintingStyle.fill,
     this.strokeWidth = 2,
   });
+
   @override
   CustomRectangularIndicatorPainter createBoxPainter(
       [VoidCallback? onChanged]) {
@@ -86,14 +87,19 @@ class CustomRectangularIndicatorPainter extends BoxPainter {
 
   @override
   void paint(Canvas canvas, Offset offset, ImageConfiguration configuration) {
-    assert(horizontalPadding >= 0);
-    assert(horizontalPadding < configuration.size!.width / 2,
-        'Padding must be less than half of the size of the tab');
-    assert(verticalPadding < configuration.size!.height / 2 &&
-        verticalPadding >= 0);
-    assert(strokeWidth >= 0 &&
-        strokeWidth < configuration.size!.width / 2 &&
-        strokeWidth < configuration.size!.height / 2);
+    try {
+      assert(horizontalPadding >= 0);
+      assert(horizontalPadding < configuration.size!.width / 2,
+          'Padding must be less than half of the size of the tab');
+      assert(verticalPadding < configuration.size!.height / 2 &&
+          verticalPadding >= 0);
+      assert(strokeWidth >= 0 &&
+          strokeWidth < configuration.size!.width / 2 &&
+          strokeWidth < configuration.size!.height / 2);
+    } catch (_) {
+      // No indicator will be drawn.
+      return;
+    }
 
     //offset is the position from where the decoration should be drawn.
     //configuration.size tells us about the height and width of the tab.
diff --git a/lib/modules/dynamic_layout/tabbar/tabbar.dart b/lib/modules/dynamic_layout/tabbar/tabbar.dart
new file mode 100644
index 0000000..ee9ca95
--- /dev/null
+++ b/lib/modules/dynamic_layout/tabbar/tabbar.dart
@@ -0,0 +1,1829 @@
+// ignore_for_file: type=lint, unnecessary_null_comparison
+import 'dart:math' as math;
+import 'dart:ui' show lerpDouble;
+
+import 'package:flutter/foundation.dart';
+import 'package:flutter/gestures.dart' show DragStartBehavior;
+import 'package:flutter/material.dart';
+import 'package:flutter/rendering.dart';
+
+const double _kTabHeight = 46.0;
+const double _kTextAndIconTabHeight = 72.0;
+
+/// A Material Design [TabBar] tab.
+///
+/// If both [icon] and [text] are provided, the text is displayed below
+/// the icon.
+///
+/// See also:
+///
+///  * [TabBar], which displays a row of tabs.
+///  * [TabBarView], which displays a widget for the currently selected tab.
+///  * [TabController], which coordinates tab selection between a [TabBar] and a [TabBarView].
+///  * <https://material.io/design/components/tabs.html>
+class Tab extends StatelessWidget implements PreferredSizeWidget {
+  /// Creates a Material Design [TabBar] tab.
+  ///
+  /// At least one of [text], [icon], and [child] must be non-null. The [text]
+  /// and [child] arguments must not be used at the same time. The
+  /// [iconMargin] is only useful when [icon] and either one of [text] or
+  /// [child] is non-null.
+  const Tab({
+    super.key,
+    this.text,
+    this.icon,
+    this.iconMargin = const EdgeInsets.only(bottom: 10.0),
+    this.height,
+    this.child,
+  })  : assert(text != null || child != null || icon != null),
+        assert(text == null || child == null);
+
+  /// The text to display as the tab's label.
+  ///
+  /// Must not be used in combination with [child].
+  final String? text;
+
+  /// The widget to be used as the tab's label.
+  ///
+  /// Usually a [Text] widget, possibly wrapped in a [Semantics] widget.
+  ///
+  /// Must not be used in combination with [text].
+  final Widget? child;
+
+  /// An icon to display as the tab's label.
+  final Widget? icon;
+
+  /// The margin added around the tab's icon.
+  ///
+  /// Only useful when used in combination with [icon], and either one of
+  /// [text] or [child] is non-null.
+  final EdgeInsetsGeometry iconMargin;
+
+  /// The height of the [Tab].
+  ///
+  /// If null, the height will be calculated based on the content of the [Tab].  When `icon` is not
+  /// null along with `child` or `text`, the default height is 72.0 pixels. Without an `icon`, the
+  /// height is 46.0 pixels.
+  final double? height;
+
+  Widget _buildLabelText() {
+    return child ?? Text(text!, softWrap: false, overflow: TextOverflow.fade);
+  }
+
+  @override
+  Widget build(BuildContext context) {
+    assert(debugCheckHasMaterial(context));
+
+    final double calculatedHeight;
+    final Widget label;
+    if (icon == null) {
+      calculatedHeight = _kTabHeight;
+      label = _buildLabelText();
+    } else if (text == null && child == null) {
+      calculatedHeight = _kTabHeight;
+      label = icon!;
+    } else {
+      calculatedHeight = _kTextAndIconTabHeight;
+      label = Column(
+        mainAxisAlignment: MainAxisAlignment.center,
+        children: <Widget>[
+          Container(
+            margin: iconMargin,
+            child: icon,
+          ),
+          _buildLabelText(),
+        ],
+      );
+    }
+
+    return SizedBox(
+      height: height ?? calculatedHeight,
+      child: Center(
+        widthFactor: 1.0,
+        child: label,
+      ),
+    );
+  }
+
+  @override
+  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
+    super.debugFillProperties(properties);
+    properties.add(StringProperty('text', text, defaultValue: null));
+    properties
+        .add(DiagnosticsProperty<Widget>('icon', icon, defaultValue: null));
+  }
+
+  @override
+  Size get preferredSize {
+    if (height != null) {
+      return Size.fromHeight(height!);
+    } else if ((text != null || child != null) && icon != null) {
+      return const Size.fromHeight(_kTextAndIconTabHeight);
+    } else {
+      return const Size.fromHeight(_kTabHeight);
+    }
+  }
+}
+
+class _TabStyle extends AnimatedWidget {
+  const _TabStyle({
+    required Animation<double> animation,
+    required this.selected,
+    required this.labelColor,
+    required this.unselectedLabelColor,
+    required this.labelStyle,
+    required this.unselectedLabelStyle,
+    required this.child,
+  }) : super(listenable: animation);
+
+  final TextStyle? labelStyle;
+  final TextStyle? unselectedLabelStyle;
+  final bool selected;
+  final Color? labelColor;
+  final Color? unselectedLabelColor;
+  final Widget child;
+
+  @override
+  Widget build(BuildContext context) {
+    final ThemeData themeData = Theme.of(context);
+    final TabBarTheme tabBarTheme = TabBarTheme.of(context);
+    final Animation<double> animation = listenable as Animation<double>;
+
+    // To enable TextStyle.lerp(style1, style2, value), both styles must have
+    // the same value of inherit. Force that to be inherit=true here.
+    final TextStyle defaultStyle = (labelStyle ??
+            tabBarTheme.labelStyle ??
+            themeData.primaryTextTheme.bodyText1!)
+        .copyWith(inherit: true);
+    final TextStyle defaultUnselectedStyle = (unselectedLabelStyle ??
+            tabBarTheme.unselectedLabelStyle ??
+            labelStyle ??
+            themeData.primaryTextTheme.bodyText1!)
+        .copyWith(inherit: true);
+    final TextStyle textStyle = selected
+        ? TextStyle.lerp(defaultStyle, defaultUnselectedStyle, animation.value)!
+        : TextStyle.lerp(
+            defaultUnselectedStyle, defaultStyle, animation.value)!;
+
+    final Color selectedColor = labelColor ??
+        tabBarTheme.labelColor ??
+        themeData.primaryTextTheme.bodyText1!.color!;
+    final Color unselectedColor = unselectedLabelColor ??
+        tabBarTheme.unselectedLabelColor ??
+        selectedColor.withAlpha(0xB2); // 70% alpha
+    final Color color = selected
+        ? Color.lerp(selectedColor, unselectedColor, animation.value)!
+        : Color.lerp(unselectedColor, selectedColor, animation.value)!;
+
+    return DefaultTextStyle(
+      style: textStyle.copyWith(color: color),
+      child: IconTheme.merge(
+        data: IconThemeData(
+          size: 24.0,
+          color: color,
+        ),
+        child: child,
+      ),
+    );
+  }
+}
+
+typedef _LayoutCallback = void Function(
+    List<double> xOffsets, TextDirection textDirection, double width);
+
+class _TabLabelBarRenderer extends RenderFlex {
+  _TabLabelBarRenderer({
+    required super.direction,
+    required super.mainAxisSize,
+    required super.mainAxisAlignment,
+    required super.crossAxisAlignment,
+    required TextDirection super.textDirection,
+    required super.verticalDirection,
+    required this.onPerformLayout,
+  })  : assert(onPerformLayout != null),
+        assert(textDirection != null);
+
+  _LayoutCallback onPerformLayout;
+
+  @override
+  void performLayout() {
+    super.performLayout();
+    // xOffsets will contain childCount+1 values, giving the offsets of the
+    // leading edge of the first tab as the first value, of the leading edge of
+    // the each subsequent tab as each subsequent value, and of the trailing
+    // edge of the last tab as the last value.
+    RenderBox? child = firstChild;
+    final List<double> xOffsets = <double>[];
+    while (child != null) {
+      final FlexParentData childParentData =
+          child.parentData! as FlexParentData;
+      xOffsets.add(childParentData.offset.dx);
+      assert(child.parentData == childParentData);
+      child = childParentData.nextSibling;
+    }
+    assert(textDirection != null);
+    switch (textDirection!) {
+      case TextDirection.rtl:
+        xOffsets.insert(0, size.width);
+        break;
+      case TextDirection.ltr:
+        xOffsets.add(size.width);
+        break;
+    }
+    onPerformLayout(xOffsets, textDirection!, size.width);
+  }
+}
+
+// This class and its renderer class only exist to report the widths of the tabs
+// upon layout. The tab widths are only used at paint time (see _IndicatorPainter)
+// or in response to input.
+class _TabLabelBar extends Flex {
+  _TabLabelBar({
+    super.children,
+    required this.onPerformLayout,
+  }) : super(
+          direction: Axis.horizontal,
+          mainAxisSize: MainAxisSize.max,
+          mainAxisAlignment: MainAxisAlignment.start,
+          crossAxisAlignment: CrossAxisAlignment.center,
+          verticalDirection: VerticalDirection.down,
+        );
+
+  final _LayoutCallback onPerformLayout;
+
+  @override
+  RenderFlex createRenderObject(BuildContext context) {
+    return _TabLabelBarRenderer(
+      direction: direction,
+      mainAxisAlignment: mainAxisAlignment,
+      mainAxisSize: mainAxisSize,
+      crossAxisAlignment: crossAxisAlignment,
+      textDirection: getEffectiveTextDirection(context)!,
+      verticalDirection: verticalDirection,
+      onPerformLayout: onPerformLayout,
+    );
+  }
+
+  @override
+  void updateRenderObject(
+      BuildContext context, _TabLabelBarRenderer renderObject) {
+    super.updateRenderObject(context, renderObject);
+    renderObject.onPerformLayout = onPerformLayout;
+  }
+}
+
+double _indexChangeProgress(TabController controller) {
+  final double controllerValue = controller.animation!.value;
+  final double previousIndex = controller.previousIndex.toDouble();
+  final double currentIndex = controller.index.toDouble();
+
+  // The controller's offset is changing because the user is dragging the
+  // TabBarView's PageView to the left or right.
+  if (!controller.indexIsChanging) {
+    return clampDouble((currentIndex - controllerValue).abs(), 0.0, 1.0);
+  }
+
+  // The TabController animation's value is changing from previousIndex to currentIndex.
+  return (controllerValue - currentIndex).abs() /
+      (currentIndex - previousIndex).abs();
+}
+
+class _IndicatorPainter extends CustomPainter {
+  _IndicatorPainter({
+    required this.controller,
+    required this.indicator,
+    required this.indicatorSize,
+    required this.tabKeys,
+    required _IndicatorPainter? old,
+    required this.indicatorPadding,
+  })  : assert(controller != null),
+        assert(indicator != null),
+        super(repaint: controller.animation) {
+    if (old != null) {
+      saveTabOffsets(old._currentTabOffsets, old._currentTextDirection);
+    }
+  }
+
+  final TabController controller;
+  final Decoration indicator;
+  final TabBarIndicatorSize? indicatorSize;
+  final EdgeInsetsGeometry indicatorPadding;
+  final List<GlobalKey> tabKeys;
+
+  // _currentTabOffsets and _currentTextDirection are set each time TabBar
+  // layout is completed. These values can be null when TabBar contains no
+  // tabs, since there are nothing to lay out.
+  List<double>? _currentTabOffsets;
+  TextDirection? _currentTextDirection;
+
+  Rect? _currentRect;
+  BoxPainter? _painter;
+  bool _needsPaint = false;
+  void markNeedsPaint() {
+    _needsPaint = true;
+  }
+
+  void dispose() {
+    _painter?.dispose();
+  }
+
+  void saveTabOffsets(List<double>? tabOffsets, TextDirection? textDirection) {
+    _currentTabOffsets = tabOffsets;
+    _currentTextDirection = textDirection;
+  }
+
+  // _currentTabOffsets[index] is the offset of the start edge of the tab at index, and
+  // _currentTabOffsets[_currentTabOffsets.length] is the end edge of the last tab.
+  int get maxTabIndex => _currentTabOffsets!.length - 2;
+
+  double centerOf(int tabIndex) {
+    assert(_currentTabOffsets != null);
+    assert(_currentTabOffsets!.isNotEmpty);
+    assert(tabIndex >= 0);
+    assert(tabIndex <= maxTabIndex);
+    return (_currentTabOffsets![tabIndex] + _currentTabOffsets![tabIndex + 1]) /
+        2.0;
+  }
+
+  Rect indicatorRect(Size tabBarSize, int tabIndex) {
+    assert(_currentTabOffsets != null);
+    assert(_currentTextDirection != null);
+    assert(_currentTabOffsets!.isNotEmpty);
+    assert(tabIndex >= 0);
+    assert(tabIndex <= maxTabIndex);
+    double tabLeft, tabRight;
+    switch (_currentTextDirection!) {
+      case TextDirection.rtl:
+        tabLeft = _currentTabOffsets![tabIndex + 1];
+        tabRight = _currentTabOffsets![tabIndex];
+        break;
+      case TextDirection.ltr:
+        tabLeft = _currentTabOffsets![tabIndex];
+        tabRight = _currentTabOffsets![tabIndex + 1];
+        break;
+    }
+
+    if (indicatorSize == TabBarIndicatorSize.label) {
+      final double tabWidth = tabKeys[tabIndex].currentContext!.size!.width;
+      final double delta = ((tabRight - tabLeft) - tabWidth) / 2.0;
+      tabLeft += delta;
+      tabRight -= delta;
+    }
+
+    final EdgeInsets insets = indicatorPadding.resolve(_currentTextDirection);
+    final Rect rect =
+        Rect.fromLTWH(tabLeft, 0.0, tabRight - tabLeft, tabBarSize.height);
+
+    if (!(rect.size >= insets.collapsedSize)) {
+      throw FlutterError(
+        'indicatorPadding insets should be less than Tab Size\n'
+        'Rect Size : ${rect.size}, Insets: $insets',
+      );
+    }
+    return insets.deflateRect(rect);
+  }
+
+  @override
+  void paint(Canvas canvas, Size size) {
+    _needsPaint = false;
+    _painter ??= indicator.createBoxPainter(markNeedsPaint);
+
+    final double index = controller.index.toDouble();
+    final double value = controller.animation!.value;
+    final bool ltr = index > value;
+    final int from = (ltr ? value.floor() : value.ceil())
+        .clamp(0, maxTabIndex); // ignore_clamp_double_lint
+    final int to = (ltr ? from + 1 : from - 1)
+        .clamp(0, maxTabIndex); // ignore_clamp_double_lint
+    final Rect fromRect = indicatorRect(size, from);
+    final Rect toRect = indicatorRect(size, to);
+    _currentRect = Rect.lerp(fromRect, toRect, (value - from).abs());
+    assert(_currentRect != null);
+
+    final ImageConfiguration configuration = ImageConfiguration(
+      size: _currentRect!.size,
+      textDirection: _currentTextDirection,
+    );
+    _painter!.paint(canvas, _currentRect!.topLeft, configuration);
+  }
+
+  @override
+  bool shouldRepaint(_IndicatorPainter old) {
+    return _needsPaint ||
+        controller != old.controller ||
+        indicator != old.indicator ||
+        tabKeys.length != old.tabKeys.length ||
+        (!listEquals(_currentTabOffsets, old._currentTabOffsets)) ||
+        _currentTextDirection != old._currentTextDirection;
+  }
+}
+
+class _ChangeAnimation extends Animation<double>
+    with AnimationWithParentMixin<double> {
+  _ChangeAnimation(this.controller);
+
+  final TabController controller;
+
+  @override
+  Animation<double> get parent => controller.animation!;
+
+  @override
+  void removeStatusListener(AnimationStatusListener listener) {
+    if (controller.animation != null) {
+      super.removeStatusListener(listener);
+    }
+  }
+
+  @override
+  void removeListener(VoidCallback listener) {
+    if (controller.animation != null) {
+      super.removeListener(listener);
+    }
+  }
+
+  @override
+  double get value => _indexChangeProgress(controller);
+}
+
+class _DragAnimation extends Animation<double>
+    with AnimationWithParentMixin<double> {
+  _DragAnimation(this.controller, this.index);
+
+  final TabController controller;
+  final int index;
+
+  @override
+  Animation<double> get parent => controller.animation!;
+
+  @override
+  void removeStatusListener(AnimationStatusListener listener) {
+    if (controller.animation != null) {
+      super.removeStatusListener(listener);
+    }
+  }
+
+  @override
+  void removeListener(VoidCallback listener) {
+    if (controller.animation != null) {
+      super.removeListener(listener);
+    }
+  }
+
+  @override
+  double get value {
+    assert(!controller.indexIsChanging);
+    final double controllerMaxValue = (controller.length - 1).toDouble();
+    final double controllerValue =
+        clampDouble(controller.animation!.value, 0.0, controllerMaxValue);
+    return clampDouble((controllerValue - index.toDouble()).abs(), 0.0, 1.0);
+  }
+}
+
+// This class, and TabBarScrollController, only exist to handle the case
+// where a scrollable TabBar has a non-zero initialIndex. In that case we can
+// only compute the scroll position's initial scroll offset (the "correct"
+// pixels value) after the TabBar viewport width and scroll limits are known.
+class _TabBarScrollPosition extends ScrollPositionWithSingleContext {
+  _TabBarScrollPosition({
+    required super.physics,
+    required super.context,
+    required super.oldPosition,
+    required this.tabBar,
+  }) : super(
+          initialPixels: null,
+        );
+
+  final _TabBarState tabBar;
+
+  bool? _initialViewportDimensionWasZero;
+
+  @override
+  bool applyContentDimensions(double minScrollExtent, double maxScrollExtent) {
+    bool result = true;
+    if (_initialViewportDimensionWasZero != true) {
+      // If the viewport never had a non-zero dimension, we just want to jump
+      // to the initial scroll position to avoid strange scrolling effects in
+      // release mode: In release mode, the viewport temporarily may have a
+      // dimension of zero before the actual dimension is calculated. In that
+      // scenario, setting the actual dimension would cause a strange scroll
+      // effect without this guard because the super call below would starts a
+      // ballistic scroll activity.
+      assert(viewportDimension != null);
+      _initialViewportDimensionWasZero = viewportDimension != 0.0;
+      correctPixels(tabBar._initialScrollOffset(
+          viewportDimension, minScrollExtent, maxScrollExtent));
+      result = false;
+    }
+    return super.applyContentDimensions(minScrollExtent, maxScrollExtent) &&
+        result;
+  }
+}
+
+// This class, and TabBarScrollPosition, only exist to handle the case
+// where a scrollable TabBar has a non-zero initialIndex.
+class _TabBarScrollController extends ScrollController {
+  _TabBarScrollController(this.tabBar);
+
+  final _TabBarState tabBar;
+
+  @override
+  ScrollPosition createScrollPosition(ScrollPhysics physics,
+      ScrollContext context, ScrollPosition? oldPosition) {
+    return _TabBarScrollPosition(
+      physics: physics,
+      context: context,
+      oldPosition: oldPosition,
+      tabBar: tabBar,
+    );
+  }
+}
+
+/// A Material Design widget that displays a horizontal row of tabs.
+///
+/// Typically created as the [AppBar.bottom] part of an [AppBar] and in
+/// conjunction with a [TabBarView].
+///
+/// {@youtube 560 315 https://www.youtube.com/watch?v=POtoEH-5l40}
+///
+/// If a [TabController] is not provided, then a [DefaultTabController] ancestor
+/// must be provided instead. The tab controller's [TabController.length] must
+/// equal the length of the [tabs] list and the length of the
+/// [TabBarView.children] list.
+///
+/// Requires one of its ancestors to be a [Material] widget.
+///
+/// Uses values from [TabBarTheme] if it is set in the current context.
+///
+/// {@tool dartpad}
+/// This sample shows the implementation of [TabBar] and [TabBarView] using a [DefaultTabController].
+/// Each [Tab] corresponds to a child of the [TabBarView] in the order they are written.
+///
+/// ** See code in examples/api/lib/material/tabs/tab_bar.0.dart **
+/// {@end-tool}
+///
+/// {@tool dartpad}
+/// [TabBar] can also be implemented by using a [TabController] which provides more options
+/// to control the behavior of the [TabBar] and [TabBarView]. This can be used instead of
+/// a [DefaultTabController], demonstrated below.
+///
+/// ** See code in examples/api/lib/material/tabs/tab_bar.1.dart **
+/// {@end-tool}
+///
+/// See also:
+///
+///  * [TabBarView], which displays page views that correspond to each tab.
+///  * [TabBar], which is used to display the [Tab] that corresponds to each page of the [TabBarView].
+class TabBar extends StatefulWidget implements PreferredSizeWidget {
+  /// Creates a Material Design tab bar.
+  ///
+  /// The [tabs] argument must not be null and its length must match the [controller]'s
+  /// [TabController.length].
+  ///
+  /// If a [TabController] is not provided, then there must be a
+  /// [DefaultTabController] ancestor.
+  ///
+  /// The [indicatorWeight] parameter defaults to 2, and must not be null.
+  ///
+  /// The [indicatorPadding] parameter defaults to [EdgeInsets.zero], and must not be null.
+  ///
+  /// If [indicator] is not null or provided from [TabBarTheme],
+  /// then [indicatorWeight], [indicatorPadding], and [indicatorColor] are ignored.
+  const TabBar({
+    super.key,
+    required this.tabs,
+    this.controller,
+    this.isScrollable = false,
+    this.padding,
+    this.indicatorColor,
+    this.automaticIndicatorColorAdjustment = true,
+    this.indicatorWeight = 2.0,
+    this.indicatorPadding = EdgeInsets.zero,
+    this.indicator,
+    this.indicatorSize,
+    this.labelColor,
+    this.labelStyle,
+    this.labelPadding,
+    this.unselectedLabelColor,
+    this.unselectedLabelStyle,
+    this.dragStartBehavior = DragStartBehavior.start,
+    this.overlayColor,
+    this.mouseCursor,
+    this.enableFeedback,
+    this.onTap,
+    this.physics,
+    this.splashFactory,
+    this.splashBorderRadius,
+  })  : assert(tabs != null),
+        assert(isScrollable != null),
+        assert(dragStartBehavior != null),
+        assert(indicator != null ||
+            (indicatorWeight != null && indicatorWeight > 0.0)),
+        assert(indicator != null || (indicatorPadding != null));
+
+  /// Typically a list of two or more [Tab] widgets.
+  ///
+  /// The length of this list must match the [controller]'s [TabController.length]
+  /// and the length of the [TabBarView.children] list.
+  final List<Widget> tabs;
+
+  /// This widget's selection and animation state.
+  ///
+  /// If [TabController] is not provided, then the value of [DefaultTabController.of]
+  /// will be used.
+  final TabController? controller;
+
+  /// Whether this tab bar can be scrolled horizontally.
+  ///
+  /// If [isScrollable] is true, then each tab is as wide as needed for its label
+  /// and the entire [TabBar] is scrollable. Otherwise each tab gets an equal
+  /// share of the available space.
+  final bool isScrollable;
+
+  /// The amount of space by which to inset the tab bar.
+  ///
+  /// When [isScrollable] is false, this will yield the same result as if you had wrapped your
+  /// [TabBar] in a [Padding] widget. When [isScrollable] is true, the scrollable itself is inset,
+  /// allowing the padding to scroll with the tab bar, rather than enclosing it.
+  final EdgeInsetsGeometry? padding;
+
+  /// The color of the line that appears below the selected tab.
+  ///
+  /// If this parameter is null, then the value of the Theme's indicatorColor
+  /// property is used.
+  ///
+  /// If [indicator] is specified or provided from [TabBarTheme],
+  /// this property is ignored.
+  final Color? indicatorColor;
+
+  /// The thickness of the line that appears below the selected tab.
+  ///
+  /// The value of this parameter must be greater than zero and its default
+  /// value is 2.0.
+  ///
+  /// If [indicator] is specified or provided from [TabBarTheme],
+  /// this property is ignored.
+  final double indicatorWeight;
+
+  /// Padding for indicator.
+  /// This property will now no longer be ignored even if indicator is declared
+  /// or provided by [TabBarTheme]
+  ///
+  /// For [isScrollable] tab bars, specifying [kTabLabelPadding] will align
+  /// the indicator with the tab's text for [Tab] widgets and all but the
+  /// shortest [Tab.text] values.
+  ///
+  /// The default value of [indicatorPadding] is [EdgeInsets.zero].
+  final EdgeInsetsGeometry indicatorPadding;
+
+  /// Defines the appearance of the selected tab indicator.
+  ///
+  /// If [indicator] is specified or provided from [TabBarTheme],
+  /// the [indicatorColor], and [indicatorWeight] properties are ignored.
+  ///
+  /// The default, underline-style, selected tab indicator can be defined with
+  /// [UnderlineTabIndicator].
+  ///
+  /// The indicator's size is based on the tab's bounds. If [indicatorSize]
+  /// is [TabBarIndicatorSize.tab] the tab's bounds are as wide as the space
+  /// occupied by the tab in the tab bar. If [indicatorSize] is
+  /// [TabBarIndicatorSize.label], then the tab's bounds are only as wide as
+  /// the tab widget itself.
+  ///
+  /// See also:
+  ///
+  ///  * [splashBorderRadius], which defines the clipping radius of the splash
+  ///    and is generally used with [BoxDecoration.borderRadius].
+  final Decoration? indicator;
+
+  /// Whether this tab bar should automatically adjust the [indicatorColor].
+  ///
+  /// If [automaticIndicatorColorAdjustment] is true,
+  /// then the [indicatorColor] will be automatically adjusted to [Colors.white]
+  /// when the [indicatorColor] is same as [Material.color] of the [Material] parent widget.
+  final bool automaticIndicatorColorAdjustment;
+
+  /// Defines how the selected tab indicator's size is computed.
+  ///
+  /// The size of the selected tab indicator is defined relative to the
+  /// tab's overall bounds if [indicatorSize] is [TabBarIndicatorSize.tab]
+  /// (the default) or relative to the bounds of the tab's widget if
+  /// [indicatorSize] is [TabBarIndicatorSize.label].
+  ///
+  /// The selected tab's location appearance can be refined further with
+  /// the [indicatorColor], [indicatorWeight], [indicatorPadding], and
+  /// [indicator] properties.
+  final TabBarIndicatorSize? indicatorSize;
+
+  /// The color of selected tab labels.
+  ///
+  /// Unselected tab labels are rendered with the same color rendered at 70%
+  /// opacity unless [unselectedLabelColor] is non-null.
+  ///
+  /// If this parameter is null, then the color of the [ThemeData.primaryTextTheme]'s
+  /// bodyText1 text color is used.
+  final Color? labelColor;
+
+  /// The color of unselected tab labels.
+  ///
+  /// If this property is null, unselected tab labels are rendered with the
+  /// [labelColor] with 70% opacity.
+  final Color? unselectedLabelColor;
+
+  /// The text style of the selected tab labels.
+  ///
+  /// If [unselectedLabelStyle] is null, then this text style will be used for
+  /// both selected and unselected label styles.
+  ///
+  /// If this property is null, then the text style of the
+  /// [ThemeData.primaryTextTheme]'s bodyText1 definition is used.
+  final TextStyle? labelStyle;
+
+  /// The padding added to each of the tab labels.
+  ///
+  /// If there are few tabs with both icon and text and few
+  /// tabs with only icon or text, this padding is vertically
+  /// adjusted to provide uniform padding to all tabs.
+  ///
+  /// If this property is null, then kTabLabelPadding is used.
+  final EdgeInsetsGeometry? labelPadding;
+
+  /// The text style of the unselected tab labels.
+  ///
+  /// If this property is null, then the [labelStyle] value is used. If [labelStyle]
+  /// is null, then the text style of the [ThemeData.primaryTextTheme]'s
+  /// bodyText1 definition is used.
+  final TextStyle? unselectedLabelStyle;
+
+  /// Defines the ink response focus, hover, and splash colors.
+  ///
+  /// If non-null, it is resolved against one of [MaterialState.focused],
+  /// [MaterialState.hovered], and [MaterialState.pressed].
+  ///
+  /// [MaterialState.pressed] triggers a ripple (an ink splash), per
+  /// the current Material Design spec.
+  ///
+  /// If the overlay color is null or resolves to null, then the default values
+  /// for [InkResponse.focusColor], [InkResponse.hoverColor], [InkResponse.splashColor],
+  /// and [InkResponse.highlightColor] will be used instead.
+  final MaterialStateProperty<Color?>? overlayColor;
+
+  /// {@macro flutter.widgets.scrollable.dragStartBehavior}
+  final DragStartBehavior dragStartBehavior;
+
+  /// {@template flutter.material.tabs.mouseCursor}
+  /// The cursor for a mouse pointer when it enters or is hovering over the
+  /// individual tab widgets.
+  ///
+  /// If [mouseCursor] is a [MaterialStateProperty<MouseCursor>],
+  /// [MaterialStateProperty.resolve] is used for the following [MaterialState]s:
+  ///
+  ///  * [MaterialState.selected].
+  /// {@endtemplate}
+  ///
+  /// If null, then the value of [TabBarTheme.mouseCursor] is used. If
+  /// that is also null, then [MaterialStateMouseCursor.clickable] is used.
+  ///
+  /// See also:
+  ///
+  ///  * [MaterialStateMouseCursor], which can be used to create a [MouseCursor]
+  ///    that is also a [MaterialStateProperty<MouseCursor>].
+  final MouseCursor? mouseCursor;
+
+  /// Whether detected gestures should provide acoustic and/or haptic feedback.
+  ///
+  /// For example, on Android a tap will produce a clicking sound and a long-press
+  /// will produce a short vibration, when feedback is enabled.
+  ///
+  /// Defaults to true.
+  final bool? enableFeedback;
+
+  /// An optional callback that's called when the [TabBar] is tapped.
+  ///
+  /// The callback is applied to the index of the tab where the tap occurred.
+  ///
+  /// This callback has no effect on the default handling of taps. It's for
+  /// applications that want to do a little extra work when a tab is tapped,
+  /// even if the tap doesn't change the TabController's index. TabBar [onTap]
+  /// callbacks should not make changes to the TabController since that would
+  /// interfere with the default tap handler.
+  final ValueChanged<int>? onTap;
+
+  /// How the [TabBar]'s scroll view should respond to user input.
+  ///
+  /// For example, determines how the scroll view continues to animate after the
+  /// user stops dragging the scroll view.
+  ///
+  /// Defaults to matching platform conventions.
+  final ScrollPhysics? physics;
+
+  /// Creates the tab bar's [InkWell] splash factory, which defines
+  /// the appearance of "ink" splashes that occur in response to taps.
+  ///
+  /// Use [NoSplash.splashFactory] to defeat ink splash rendering. For example
+  /// to defeat both the splash and the hover/pressed overlay, but not the
+  /// keyboard focused overlay:
+  /// ```dart
+  /// TabBar(
+  ///   splashFactory: NoSplash.splashFactory,
+  ///   overlayColor: MaterialStateProperty.resolveWith<Color?>(
+  ///     (Set<MaterialState> states) {
+  ///       return states.contains(MaterialState.focused) ? null : Colors.transparent;
+  ///     },
+  ///   ),
+  ///   ...
+  /// )
+  /// ```
+  final InteractiveInkFeatureFactory? splashFactory;
+
+  /// Defines the clipping radius of splashes that extend outside the bounds of the tab.
+  ///
+  /// This can be useful to match the [BoxDecoration.borderRadius] provided as [indicator].
+  /// ```dart
+  /// TabBar(
+  ///   indicator: BoxDecoration(
+  ///     borderRadius: BorderRadius.circular(40),
+  ///   ),
+  ///   splashBorderRadius: BorderRadius.circular(40),
+  ///   ...
+  /// )
+  /// ```
+  ///
+  /// If this property is null, it is interpreted as [BorderRadius.zero].
+  final BorderRadius? splashBorderRadius;
+
+  /// A size whose height depends on if the tabs have both icons and text.
+  ///
+  /// [AppBar] uses this size to compute its own preferred size.
+  @override
+  Size get preferredSize {
+    double maxHeight = _kTabHeight;
+    for (final Widget item in tabs) {
+      if (item is PreferredSizeWidget) {
+        final double itemHeight = item.preferredSize.height;
+        maxHeight = math.max(itemHeight, maxHeight);
+      }
+    }
+    return Size.fromHeight(maxHeight + indicatorWeight);
+  }
+
+  /// Returns whether the [TabBar] contains a tab with both text and icon.
+  ///
+  /// [TabBar] uses this to give uniform padding to all tabs in cases where
+  /// there are some tabs with both text and icon and some which contain only
+  /// text or icon.
+  bool get tabHasTextAndIcon {
+    for (final Widget item in tabs) {
+      if (item is PreferredSizeWidget) {
+        if (item.preferredSize.height == _kTextAndIconTabHeight) {
+          return true;
+        }
+      }
+    }
+    return false;
+  }
+
+  @override
+  State<TabBar> createState() => _TabBarState();
+}
+
+class _TabBarState extends State<TabBar> {
+  ScrollController? _scrollController;
+  TabController? _controller;
+  _IndicatorPainter? _indicatorPainter;
+  int? _currentIndex;
+  late double _tabStripWidth;
+  late List<GlobalKey> _tabKeys;
+  bool _debugHasScheduledValidTabsCountCheck = false;
+
+  @override
+  void initState() {
+    super.initState();
+    // If indicatorSize is TabIndicatorSize.label, _tabKeys[i] is used to find
+    // the width of tab widget i. See _IndicatorPainter.indicatorRect().
+    _tabKeys = widget.tabs.map((Widget tab) => GlobalKey()).toList();
+  }
+
+  Decoration get _indicator {
+    if (widget.indicator != null) {
+      return widget.indicator!;
+    }
+    final TabBarTheme tabBarTheme = TabBarTheme.of(context);
+    if (tabBarTheme.indicator != null) {
+      return tabBarTheme.indicator!;
+    }
+
+    Color color = widget.indicatorColor ?? Theme.of(context).indicatorColor;
+    // ThemeData tries to avoid this by having indicatorColor avoid being the
+    // primaryColor. However, it's possible that the tab bar is on a
+    // Material that isn't the primaryColor. In that case, if the indicator
+    // color ends up matching the material's color, then this overrides it.
+    // When that happens, automatic transitions of the theme will likely look
+    // ugly as the indicator color suddenly snaps to white at one end, but it's
+    // not clear how to avoid that any further.
+    //
+    // The material's color might be null (if it's a transparency). In that case
+    // there's no good way for us to find out what the color is so we don't.
+    //
+    // TODO(xu-baolin): Remove automatic adjustment to white color indicator
+    // with a better long-term solution.
+    // https://github.com/flutter/flutter/pull/68171#pullrequestreview-517753917
+    if (widget.automaticIndicatorColorAdjustment &&
+        color.value == Material.of(context)?.color?.value) {
+      color = Colors.white;
+    }
+
+    return UnderlineTabIndicator(
+      borderSide: BorderSide(
+        width: widget.indicatorWeight,
+        color: color,
+      ),
+    );
+  }
+
+  // If the TabBar is rebuilt with a new tab controller, the caller should
+  // dispose the old one. In that case the old controller's animation will be
+  // null and should not be accessed.
+  bool get _controllerIsValid => _controller?.animation != null;
+
+  void _updateTabController() {
+    final TabController? newController =
+        widget.controller ?? DefaultTabController.of(context);
+    assert(() {
+      if (newController == null) {
+        throw FlutterError(
+          'No TabController for ${widget.runtimeType}.\n'
+          'When creating a ${widget.runtimeType}, you must either provide an explicit '
+          'TabController using the "controller" property, or you must ensure that there '
+          'is a DefaultTabController above the ${widget.runtimeType}.\n'
+          'In this case, there was neither an explicit controller nor a default controller.',
+        );
+      }
+      return true;
+    }());
+
+    if (newController == _controller) {
+      return;
+    }
+
+    if (_controllerIsValid) {
+      _controller!.animation!.removeListener(_handleTabControllerAnimationTick);
+      _controller!.removeListener(_handleTabControllerTick);
+    }
+    _controller = newController;
+    if (_controller != null) {
+      _controller!.animation!.addListener(_handleTabControllerAnimationTick);
+      _controller!.addListener(_handleTabControllerTick);
+      _currentIndex = _controller!.index;
+    }
+  }
+
+  void _initIndicatorPainter() {
+    _indicatorPainter = !_controllerIsValid
+        ? null
+        : _IndicatorPainter(
+            controller: _controller!,
+            indicator: _indicator,
+            indicatorSize:
+                widget.indicatorSize ?? TabBarTheme.of(context).indicatorSize,
+            indicatorPadding: widget.indicatorPadding,
+            tabKeys: _tabKeys,
+            old: _indicatorPainter,
+          );
+  }
+
+  @override
+  void didChangeDependencies() {
+    super.didChangeDependencies();
+    assert(debugCheckHasMaterial(context));
+    _updateTabController();
+    _initIndicatorPainter();
+  }
+
+  @override
+  void didUpdateWidget(TabBar oldWidget) {
+    super.didUpdateWidget(oldWidget);
+    if (widget.controller != oldWidget.controller) {
+      _updateTabController();
+      _initIndicatorPainter();
+    } else if (widget.indicatorColor != oldWidget.indicatorColor ||
+        widget.indicatorWeight != oldWidget.indicatorWeight ||
+        widget.indicatorSize != oldWidget.indicatorSize ||
+        widget.indicator != oldWidget.indicator) {
+      _initIndicatorPainter();
+    }
+
+    if (widget.tabs.length > _tabKeys.length) {
+      final int delta = widget.tabs.length - _tabKeys.length;
+      _tabKeys.addAll(List<GlobalKey>.generate(delta, (int n) => GlobalKey()));
+    } else if (widget.tabs.length < _tabKeys.length) {
+      _tabKeys.removeRange(widget.tabs.length, _tabKeys.length);
+    }
+  }
+
+  @override
+  void dispose() {
+    _indicatorPainter!.dispose();
+    if (_controllerIsValid) {
+      _controller!.animation!.removeListener(_handleTabControllerAnimationTick);
+      _controller!.removeListener(_handleTabControllerTick);
+    }
+    _controller = null;
+    // We don't own the _controller Animation, so it's not disposed here.
+    super.dispose();
+  }
+
+  int get maxTabIndex => _indicatorPainter!.maxTabIndex;
+
+  double _tabScrollOffset(
+      int index, double viewportWidth, double minExtent, double maxExtent) {
+    if (!widget.isScrollable) {
+      return 0.0;
+    }
+    double tabCenter = _indicatorPainter!.centerOf(index);
+    switch (Directionality.of(context)) {
+      case TextDirection.rtl:
+        tabCenter = _tabStripWidth - tabCenter;
+        break;
+      case TextDirection.ltr:
+        break;
+    }
+    return clampDouble(tabCenter - viewportWidth / 2.0, minExtent, maxExtent);
+  }
+
+  double _tabCenteredScrollOffset(int index) {
+    final ScrollPosition position = _scrollController!.position;
+    return _tabScrollOffset(index, position.viewportDimension,
+        position.minScrollExtent, position.maxScrollExtent);
+  }
+
+  double _initialScrollOffset(
+      double viewportWidth, double minExtent, double maxExtent) {
+    return _tabScrollOffset(
+        _currentIndex!, viewportWidth, minExtent, maxExtent);
+  }
+
+  void _scrollToCurrentIndex() {
+    final double offset = _tabCenteredScrollOffset(_currentIndex!);
+    _scrollController!
+        .animateTo(offset, duration: kTabScrollDuration, curve: Curves.ease);
+  }
+
+  void _scrollToControllerValue() {
+    final double? leadingPosition = _currentIndex! > 0
+        ? _tabCenteredScrollOffset(_currentIndex! - 1)
+        : null;
+    final double middlePosition = _tabCenteredScrollOffset(_currentIndex!);
+    final double? trailingPosition = _currentIndex! < maxTabIndex
+        ? _tabCenteredScrollOffset(_currentIndex! + 1)
+        : null;
+
+    final double index = _controller!.index.toDouble();
+    final double value = _controller!.animation!.value;
+    final double offset;
+    if (value == index - 1.0) {
+      offset = leadingPosition ?? middlePosition;
+    } else if (value == index + 1.0) {
+      offset = trailingPosition ?? middlePosition;
+    } else if (value == index) {
+      offset = middlePosition;
+    } else if (value < index) {
+      offset = leadingPosition == null
+          ? middlePosition
+          : lerpDouble(middlePosition, leadingPosition, index - value)!;
+    } else {
+      offset = trailingPosition == null
+          ? middlePosition
+          : lerpDouble(middlePosition, trailingPosition, value - index)!;
+    }
+
+    _scrollController!.jumpTo(offset);
+  }
+
+  void _handleTabControllerAnimationTick() {
+    assert(mounted);
+    if (!_controller!.indexIsChanging && widget.isScrollable) {
+      // Sync the TabBar's scroll position with the TabBarView's PageView.
+      _currentIndex = _controller!.index;
+      _scrollToControllerValue();
+    }
+  }
+
+  void _handleTabControllerTick() {
+    if (_controller!.index != _currentIndex) {
+      _currentIndex = _controller!.index;
+      if (widget.isScrollable) {
+        _scrollToCurrentIndex();
+      }
+    }
+    setState(() {
+      // Rebuild the tabs after a (potentially animated) index change
+      // has completed.
+    });
+  }
+
+  // Called each time layout completes.
+  void _saveTabOffsets(
+      List<double> tabOffsets, TextDirection textDirection, double width) {
+    _tabStripWidth = width;
+    _indicatorPainter?.saveTabOffsets(tabOffsets, textDirection);
+  }
+
+  void _handleTap(int index) {
+    assert(index >= 0 && index < widget.tabs.length);
+    _controller!.animateTo(index);
+    widget.onTap?.call(index);
+  }
+
+  Widget _buildStyledTab(
+      Widget child, bool selected, Animation<double> animation) {
+    return _TabStyle(
+      animation: animation,
+      selected: selected,
+      labelColor: widget.labelColor,
+      unselectedLabelColor: widget.unselectedLabelColor,
+      labelStyle: widget.labelStyle,
+      unselectedLabelStyle: widget.unselectedLabelStyle,
+      child: child,
+    );
+  }
+
+  bool _debugScheduleCheckHasValidTabsCount() {
+    if (_debugHasScheduledValidTabsCountCheck) {
+      return true;
+    }
+    WidgetsBinding.instance.addPostFrameCallback((Duration duration) {
+      _debugHasScheduledValidTabsCountCheck = false;
+      if (!mounted) {
+        return;
+      }
+      assert(() {
+        if (_controller!.length != widget.tabs.length) {
+          throw FlutterError(
+            "Controller's length property (${_controller!.length}) does not match the "
+            "number of tabs (${widget.tabs.length}) present in TabBar's tabs property.",
+          );
+        }
+        return true;
+      }());
+    });
+    _debugHasScheduledValidTabsCountCheck = true;
+    return true;
+  }
+
+  @override
+  Widget build(BuildContext context) {
+    assert(debugCheckHasMaterialLocalizations(context));
+    assert(_debugScheduleCheckHasValidTabsCount());
+
+    final MaterialLocalizations localizations =
+        MaterialLocalizations.of(context);
+    if (_controller!.length == 0) {
+      return Container(
+        height: _kTabHeight + widget.indicatorWeight,
+      );
+    }
+
+    final TabBarTheme tabBarTheme = TabBarTheme.of(context);
+
+    final List<Widget> wrappedTabs =
+        List<Widget>.generate(widget.tabs.length, (int index) {
+      const double verticalAdjustment =
+          (_kTextAndIconTabHeight - _kTabHeight) / 2.0;
+      EdgeInsetsGeometry? adjustedPadding;
+
+      if (widget.tabs[index] is PreferredSizeWidget) {
+        final PreferredSizeWidget tab =
+            widget.tabs[index] as PreferredSizeWidget;
+        if (widget.tabHasTextAndIcon &&
+            tab.preferredSize.height == _kTabHeight) {
+          if (widget.labelPadding != null || tabBarTheme.labelPadding != null) {
+            adjustedPadding = (widget.labelPadding ?? tabBarTheme.labelPadding!)
+                .add(const EdgeInsets.symmetric(vertical: verticalAdjustment));
+          } else {
+            adjustedPadding = const EdgeInsets.symmetric(
+                vertical: verticalAdjustment, horizontal: 16.0);
+          }
+        }
+      }
+
+      return Center(
+        heightFactor: 1.0,
+        child: Padding(
+          padding: adjustedPadding ??
+              widget.labelPadding ??
+              tabBarTheme.labelPadding ??
+              kTabLabelPadding,
+          child: KeyedSubtree(
+            key: _tabKeys[index],
+            child: widget.tabs[index],
+          ),
+        ),
+      );
+    });
+
+    // If the controller was provided by DefaultTabController and we're part
+    // of a Hero (typically the AppBar), then we will not be able to find the
+    // controller during a Hero transition. See https://github.com/flutter/flutter/issues/213.
+    if (_controller != null) {
+      final int previousIndex = _controller!.previousIndex;
+
+      if (_controller!.indexIsChanging) {
+        // The user tapped on a tab, the tab controller's animation is running.
+        assert(_currentIndex != previousIndex);
+        final Animation<double> animation = _ChangeAnimation(_controller!);
+        wrappedTabs[_currentIndex!] =
+            _buildStyledTab(wrappedTabs[_currentIndex!], true, animation);
+        wrappedTabs[previousIndex] =
+            _buildStyledTab(wrappedTabs[previousIndex], false, animation);
+      } else {
+        // The user is dragging the TabBarView's PageView left or right.
+        final int tabIndex = _currentIndex!;
+        final Animation<double> centerAnimation =
+            _DragAnimation(_controller!, tabIndex);
+        wrappedTabs[tabIndex] =
+            _buildStyledTab(wrappedTabs[tabIndex], true, centerAnimation);
+        if (_currentIndex! > 0) {
+          final int tabIndex = _currentIndex! - 1;
+          final Animation<double> previousAnimation =
+              ReverseAnimation(_DragAnimation(_controller!, tabIndex));
+          wrappedTabs[tabIndex] =
+              _buildStyledTab(wrappedTabs[tabIndex], false, previousAnimation);
+        }
+        if (_currentIndex! < widget.tabs.length - 1) {
+          final int tabIndex = _currentIndex! + 1;
+          final Animation<double> nextAnimation =
+              ReverseAnimation(_DragAnimation(_controller!, tabIndex));
+          wrappedTabs[tabIndex] =
+              _buildStyledTab(wrappedTabs[tabIndex], false, nextAnimation);
+        }
+      }
+    }
+
+    // Add the tap handler to each tab. If the tab bar is not scrollable,
+    // then give all of the tabs equal flexibility so that they each occupy
+    // the same share of the tab bar's overall width.
+    final int tabCount = widget.tabs.length;
+    for (int index = 0; index < tabCount; index += 1) {
+      final Set<MaterialState> states = <MaterialState>{
+        if (index == _currentIndex) MaterialState.selected,
+      };
+
+      final MouseCursor effectiveMouseCursor =
+          MaterialStateProperty.resolveAs<MouseCursor?>(
+                  widget.mouseCursor, states) ??
+              tabBarTheme.mouseCursor?.resolve(states) ??
+              MaterialStateMouseCursor.clickable.resolve(states);
+
+      wrappedTabs[index] = InkWell(
+        mouseCursor: effectiveMouseCursor,
+        onTap: () {
+          _handleTap(index);
+        },
+        enableFeedback: widget.enableFeedback ?? true,
+        overlayColor: widget.overlayColor ?? tabBarTheme.overlayColor,
+        splashFactory: widget.splashFactory ?? tabBarTheme.splashFactory,
+        borderRadius: widget.splashBorderRadius,
+        child: Padding(
+          padding: EdgeInsets.only(bottom: widget.indicatorWeight),
+          child: Stack(
+            children: <Widget>[
+              wrappedTabs[index],
+              Semantics(
+                selected: index == _currentIndex,
+                label: localizations.tabLabel(
+                    tabIndex: index + 1, tabCount: tabCount),
+              ),
+            ],
+          ),
+        ),
+      );
+
+      /// InspireUI Customize
+      if (!widget.isScrollable) {
+        wrappedTabs[index] =
+            widget.tabs[index].runtimeType.toString() == 'SizedBox'
+                ? SizedBox(width: 0, child: wrappedTabs[index])
+                : Expanded(child: wrappedTabs[index]);
+      }
+    }
+
+    Widget tabBar = CustomPaint(
+      painter: _indicatorPainter,
+      child: _TabStyle(
+        animation: kAlwaysDismissedAnimation,
+        selected: false,
+        labelColor: widget.labelColor,
+        unselectedLabelColor: widget.unselectedLabelColor,
+        labelStyle: widget.labelStyle,
+        unselectedLabelStyle: widget.unselectedLabelStyle,
+        child: _TabLabelBar(
+          onPerformLayout: _saveTabOffsets,
+          children: wrappedTabs,
+        ),
+      ),
+    );
+
+    if (widget.isScrollable) {
+      _scrollController ??= _TabBarScrollController(this);
+      tabBar = SingleChildScrollView(
+        dragStartBehavior: widget.dragStartBehavior,
+        scrollDirection: Axis.horizontal,
+        controller: _scrollController,
+        padding: widget.padding,
+        physics: widget.physics,
+        child: tabBar,
+      );
+    } else if (widget.padding != null) {
+      tabBar = Padding(
+        padding: widget.padding!,
+        child: tabBar,
+      );
+    }
+
+    return tabBar;
+  }
+}
+
+/// A page view that displays the widget which corresponds to the currently
+/// selected tab.
+///
+/// This widget is typically used in conjunction with a [TabBar].
+///
+/// {@youtube 560 315 https://www.youtube.com/watch?v=POtoEH-5l40}
+///
+/// If a [TabController] is not provided, then there must be a [DefaultTabController]
+/// ancestor.
+///
+/// The tab controller's [TabController.length] must equal the length of the
+/// [children] list and the length of the [TabBar.tabs] list.
+///
+/// To see a sample implementation, visit the [TabController] documentation.
+class TabBarView extends StatefulWidget {
+  /// Creates a page view with one child per tab.
+  ///
+  /// The length of [children] must be the same as the [controller]'s length.
+  const TabBarView({
+    super.key,
+    required this.children,
+    this.controller,
+    this.physics,
+    this.dragStartBehavior = DragStartBehavior.start,
+    this.viewportFraction = 1.0,
+    this.clipBehavior = Clip.hardEdge,
+  })  : assert(children != null),
+        assert(dragStartBehavior != null);
+
+  /// This widget's selection and animation state.
+  ///
+  /// If [TabController] is not provided, then the value of [DefaultTabController.of]
+  /// will be used.
+  final TabController? controller;
+
+  /// One widget per tab.
+  ///
+  /// Its length must match the length of the [TabBar.tabs]
+  /// list, as well as the [controller]'s [TabController.length].
+  final List<Widget> children;
+
+  /// How the page view should respond to user input.
+  ///
+  /// For example, determines how the page view continues to animate after the
+  /// user stops dragging the page view.
+  ///
+  /// The physics are modified to snap to page boundaries using
+  /// [PageScrollPhysics] prior to being used.
+  ///
+  /// Defaults to matching platform conventions.
+  final ScrollPhysics? physics;
+
+  /// {@macro flutter.widgets.scrollable.dragStartBehavior}
+  final DragStartBehavior dragStartBehavior;
+
+  /// {@macro flutter.widgets.pageview.viewportFraction}
+  final double viewportFraction;
+
+  /// {@macro flutter.material.Material.clipBehavior}
+  ///
+  /// Defaults to [Clip.hardEdge].
+  final Clip clipBehavior;
+
+  @override
+  State<TabBarView> createState() => _TabBarViewState();
+}
+
+class _TabBarViewState extends State<TabBarView> {
+  TabController? _controller;
+  late PageController _pageController;
+  late List<Widget> _children;
+  late List<Widget> _childrenWithKey;
+  int? _currentIndex;
+  int _warpUnderwayCount = 0;
+  bool _debugHasScheduledValidChildrenCountCheck = false;
+
+  // If the TabBarView is rebuilt with a new tab controller, the caller should
+  // dispose the old one. In that case the old controller's animation will be
+  // null and should not be accessed.
+  bool get _controllerIsValid => _controller?.animation != null;
+
+  void _updateTabController() {
+    final TabController? newController =
+        widget.controller ?? DefaultTabController.of(context);
+    assert(() {
+      if (newController == null) {
+        throw FlutterError(
+          'No TabController for ${widget.runtimeType}.\n'
+          'When creating a ${widget.runtimeType}, you must either provide an explicit '
+          'TabController using the "controller" property, or you must ensure that there '
+          'is a DefaultTabController above the ${widget.runtimeType}.\n'
+          'In this case, there was neither an explicit controller nor a default controller.',
+        );
+      }
+      return true;
+    }());
+
+    if (newController == _controller) {
+      return;
+    }
+
+    if (_controllerIsValid) {
+      _controller!.animation!.removeListener(_handleTabControllerAnimationTick);
+    }
+    _controller = newController;
+    if (_controller != null) {
+      _controller!.animation!.addListener(_handleTabControllerAnimationTick);
+    }
+  }
+
+  @override
+  void initState() {
+    super.initState();
+    _updateChildren();
+  }
+
+  @override
+  void didChangeDependencies() {
+    super.didChangeDependencies();
+    _updateTabController();
+    _currentIndex = _controller!.index;
+    _pageController = PageController(
+      initialPage: _currentIndex!,
+      viewportFraction: widget.viewportFraction,
+    );
+  }
+
+  @override
+  void didUpdateWidget(TabBarView oldWidget) {
+    super.didUpdateWidget(oldWidget);
+    if (widget.controller != oldWidget.controller) {
+      _updateTabController();
+      _currentIndex = _controller!.index;
+      _warpUnderwayCount += 1;
+      _pageController.jumpToPage(_currentIndex!);
+      _warpUnderwayCount -= 1;
+    }
+    if (widget.children != oldWidget.children && _warpUnderwayCount == 0) {
+      _updateChildren();
+    }
+  }
+
+  @override
+  void dispose() {
+    if (_controllerIsValid) {
+      _controller!.animation!.removeListener(_handleTabControllerAnimationTick);
+    }
+    _controller = null;
+    // We don't own the _controller Animation, so it's not disposed here.
+    super.dispose();
+  }
+
+  void _updateChildren() {
+    _children = widget.children;
+    _childrenWithKey = KeyedSubtree.ensureUniqueKeysForList(widget.children);
+  }
+
+  void _handleTabControllerAnimationTick() {
+    if (_warpUnderwayCount > 0 || !_controller!.indexIsChanging) {
+      return;
+    } // This widget is driving the controller's animation.
+
+    if (_controller!.index != _currentIndex) {
+      _currentIndex = _controller!.index;
+      _warpToCurrentIndex();
+    }
+  }
+
+  Future<void> _warpToCurrentIndex() async {
+    if (!mounted) {
+      return Future<void>.value();
+    }
+
+    if (_pageController.page == _currentIndex!.toDouble()) {
+      return Future<void>.value();
+    }
+
+    final Duration duration = _controller!.animationDuration;
+    final int previousIndex = _controller!.previousIndex;
+
+    if ((_currentIndex! - previousIndex).abs() == 1) {
+      if (duration == Duration.zero) {
+        _pageController.jumpToPage(_currentIndex!);
+        return Future<void>.value();
+      }
+      _warpUnderwayCount += 1;
+      await _pageController.animateToPage(_currentIndex!,
+          duration: duration, curve: Curves.ease);
+      _warpUnderwayCount -= 1;
+      return Future<void>.value();
+    }
+
+    assert((_currentIndex! - previousIndex).abs() > 1);
+    final int initialPage = _currentIndex! > previousIndex
+        ? _currentIndex! - 1
+        : _currentIndex! + 1;
+    final List<Widget> originalChildren = _childrenWithKey;
+    setState(() {
+      _warpUnderwayCount += 1;
+
+      _childrenWithKey = List<Widget>.of(_childrenWithKey, growable: false);
+      final Widget temp = _childrenWithKey[initialPage];
+      _childrenWithKey[initialPage] = _childrenWithKey[previousIndex];
+      _childrenWithKey[previousIndex] = temp;
+    });
+    _pageController.jumpToPage(initialPage);
+
+    if (duration == Duration.zero) {
+      _pageController.jumpToPage(_currentIndex!);
+      return Future<void>.value();
+    }
+
+    await _pageController.animateToPage(_currentIndex!,
+        duration: duration, curve: Curves.ease);
+    if (!mounted) {
+      return Future<void>.value();
+    }
+    setState(() {
+      _warpUnderwayCount -= 1;
+      if (widget.children != _children) {
+        _updateChildren();
+      } else {
+        _childrenWithKey = originalChildren;
+      }
+    });
+  }
+
+  // Called when the PageView scrolls
+  bool _handleScrollNotification(ScrollNotification notification) {
+    if (_warpUnderwayCount > 0) {
+      return false;
+    }
+
+    if (notification.depth != 0) {
+      return false;
+    }
+
+    _warpUnderwayCount += 1;
+    if (notification is ScrollUpdateNotification &&
+        !_controller!.indexIsChanging) {
+      if ((_pageController.page! - _controller!.index).abs() > 1.0) {
+        _controller!.index = _pageController.page!.round();
+        _currentIndex = _controller!.index;
+      }
+      _controller!.offset =
+          clampDouble(_pageController.page! - _controller!.index, -1.0, 1.0);
+    } else if (notification is ScrollEndNotification) {
+      _controller!.index = _pageController.page!.round();
+      _currentIndex = _controller!.index;
+      if (!_controller!.indexIsChanging) {
+        _controller!.offset =
+            clampDouble(_pageController.page! - _controller!.index, -1.0, 1.0);
+      }
+    }
+    _warpUnderwayCount -= 1;
+
+    return false;
+  }
+
+  bool _debugScheduleCheckHasValidChildrenCount() {
+    if (_debugHasScheduledValidChildrenCountCheck) {
+      return true;
+    }
+    WidgetsBinding.instance.addPostFrameCallback((Duration duration) {
+      _debugHasScheduledValidChildrenCountCheck = false;
+      if (!mounted) {
+        return;
+      }
+      assert(() {
+        if (_controller!.length != widget.children.length) {
+          throw FlutterError(
+            "Controller's length property (${_controller!.length}) does not match the "
+            "number of children (${widget.children.length}) present in TabBarView's children property.",
+          );
+        }
+        return true;
+      }());
+    });
+    _debugHasScheduledValidChildrenCountCheck = true;
+    return true;
+  }
+
+  @override
+  Widget build(BuildContext context) {
+    assert(_debugScheduleCheckHasValidChildrenCount());
+
+    return NotificationListener<ScrollNotification>(
+      onNotification: _handleScrollNotification,
+      child: PageView(
+        dragStartBehavior: widget.dragStartBehavior,
+        clipBehavior: widget.clipBehavior,
+        controller: _pageController,
+        physics: widget.physics == null
+            ? const PageScrollPhysics().applyTo(const ClampingScrollPhysics())
+            : const PageScrollPhysics().applyTo(widget.physics),
+        children: _childrenWithKey,
+      ),
+    );
+  }
+}
+
+/// Displays a single circle with the specified size, border style, border color
+/// and background colors.
+///
+/// Used by [TabPageSelector] to indicate the selected page.
+class TabPageSelectorIndicator extends StatelessWidget {
+  /// Creates an indicator used by [TabPageSelector].
+  ///
+  /// The [backgroundColor], [borderColor], and [size] parameters must not be null.
+  const TabPageSelectorIndicator({
+    super.key,
+    required this.backgroundColor,
+    required this.borderColor,
+    required this.size,
+    this.borderStyle = BorderStyle.solid,
+  })  : assert(backgroundColor != null),
+        assert(borderColor != null),
+        assert(size != null);
+
+  /// The indicator circle's background color.
+  final Color backgroundColor;
+
+  /// The indicator circle's border color.
+  final Color borderColor;
+
+  /// The indicator circle's diameter.
+  final double size;
+
+  /// The indicator circle's border style.
+  ///
+  /// Defaults to [BorderStyle.solid] if value is not specified.
+  final BorderStyle borderStyle;
+
+  @override
+  Widget build(BuildContext context) {
+    return Container(
+      width: size,
+      height: size,
+      margin: const EdgeInsets.all(4.0),
+      decoration: BoxDecoration(
+        color: backgroundColor,
+        border: Border.all(color: borderColor, style: borderStyle),
+        shape: BoxShape.circle,
+      ),
+    );
+  }
+}
+
+/// Uses [TabPageSelectorIndicator] to display a row of small circular
+/// indicators, one per tab.
+///
+/// {@youtube 560 315 https://www.youtube.com/watch?v=Q628ue9Cq7U}
+///
+/// The selected tab's indicator is highlighted. Often used in conjunction with
+/// a [TabBarView].
+///
+/// If a [TabController] is not provided, then there must be a
+/// [DefaultTabController] ancestor.
+class TabPageSelector extends StatelessWidget {
+  /// Creates a compact widget that indicates which tab has been selected.
+  const TabPageSelector({
+    super.key,
+    this.controller,
+    this.indicatorSize = 12.0,
+    this.color,
+    this.selectedColor,
+    this.borderStyle,
+  }) : assert(indicatorSize != null && indicatorSize > 0.0);
+
+  /// This widget's selection and animation state.
+  ///
+  /// If [TabController] is not provided, then the value of
+  /// [DefaultTabController.of] will be used.
+  final TabController? controller;
+
+  /// The indicator circle's diameter (the default value is 12.0).
+  final double indicatorSize;
+
+  /// The indicator circle's fill color for unselected pages.
+  ///
+  /// If this parameter is null, then the indicator is filled with [Colors.transparent].
+  final Color? color;
+
+  /// The indicator circle's fill color for selected pages and border color
+  /// for all indicator circles.
+  ///
+  /// If this parameter is null, then the indicator is filled with the theme's
+  /// [ColorScheme.secondary].
+  final Color? selectedColor;
+
+  /// The indicator circle's border style.
+  ///
+  /// Defaults to [BorderStyle.solid] if value is not specified.
+  final BorderStyle? borderStyle;
+
+  Widget _buildTabIndicator(
+    int tabIndex,
+    TabController tabController,
+    ColorTween selectedColorTween,
+    ColorTween previousColorTween,
+  ) {
+    final Color background;
+    if (tabController.indexIsChanging) {
+      // The selection's animation is animating from previousValue to value.
+      final double t = 1.0 - _indexChangeProgress(tabController);
+      if (tabController.index == tabIndex) {
+        background = selectedColorTween.lerp(t)!;
+      } else if (tabController.previousIndex == tabIndex) {
+        background = previousColorTween.lerp(t)!;
+      } else {
+        background = selectedColorTween.begin!;
+      }
+    } else {
+      // The selection's offset reflects how far the TabBarView has / been dragged
+      // to the previous page (-1.0 to 0.0) or the next page (0.0 to 1.0).
+      final double offset = tabController.offset;
+      if (tabController.index == tabIndex) {
+        background = selectedColorTween.lerp(1.0 - offset.abs())!;
+      } else if (tabController.index == tabIndex - 1 && offset > 0.0) {
+        background = selectedColorTween.lerp(offset)!;
+      } else if (tabController.index == tabIndex + 1 && offset < 0.0) {
+        background = selectedColorTween.lerp(-offset)!;
+      } else {
+        background = selectedColorTween.begin!;
+      }
+    }
+    return TabPageSelectorIndicator(
+      backgroundColor: background,
+      borderColor: selectedColorTween.end!,
+      size: indicatorSize,
+      borderStyle: borderStyle ?? BorderStyle.solid,
+    );
+  }
+
+  @override
+  Widget build(BuildContext context) {
+    final Color fixColor = color ?? Colors.transparent;
+    final Color fixSelectedColor =
+        selectedColor ?? Theme.of(context).colorScheme.secondary;
+    final ColorTween selectedColorTween =
+        ColorTween(begin: fixColor, end: fixSelectedColor);
+    final ColorTween previousColorTween =
+        ColorTween(begin: fixSelectedColor, end: fixColor);
+    final TabController? tabController =
+        controller ?? DefaultTabController.of(context);
+    final MaterialLocalizations localizations =
+        MaterialLocalizations.of(context);
+    assert(() {
+      if (tabController == null) {
+        throw FlutterError(
+          'No TabController for $runtimeType.\n'
+          'When creating a $runtimeType, you must either provide an explicit TabController '
+          'using the "controller" property, or you must ensure that there is a '
+          'DefaultTabController above the $runtimeType.\n'
+          'In this case, there was neither an explicit controller nor a default controller.',
+        );
+      }
+      return true;
+    }());
+    final Animation<double> animation = CurvedAnimation(
+      parent: tabController!.animation!,
+      curve: Curves.fastOutSlowIn,
+    );
+    return AnimatedBuilder(
+      animation: animation,
+      builder: (BuildContext context, Widget? child) {
+        return Semantics(
+          label: localizations.tabLabel(
+              tabIndex: tabController.index + 1,
+              tabCount: tabController.length),
+          child: Row(
+            mainAxisSize: MainAxisSize.min,
+            children:
+                List<Widget>.generate(tabController.length, (int tabIndex) {
+              return _buildTabIndicator(tabIndex, tabController,
+                  selectedColorTween, previousColorTween);
+            }).toList(),
+          ),
+        );
+      },
+    );
+  }
+}
diff --git a/lib/modules/dynamic_layout/tabbar/tabbar_custom.dart b/lib/modules/dynamic_layout/tabbar/tabbar_custom.dart
index dd46312..cadd4ac 100644
--- a/lib/modules/dynamic_layout/tabbar/tabbar_custom.dart
+++ b/lib/modules/dynamic_layout/tabbar/tabbar_custom.dart
@@ -1,9 +1,11 @@
 import 'package:flutter/material.dart';
 
+import '../config/app_config.dart';
 import '../config/app_setting.dart';
 import '../config/tab_bar_config.dart';
 import '../helper/helper.dart';
 import 'tab_indicator/index.dart';
+import 'tabbar.dart' as custom;
 import 'tabbar_icon.dart';
 
 final _tweenOffset = Tween<Offset>(
@@ -14,7 +16,7 @@ final _tweenOffset = Tween<Offset>(
 class TabBarCustom extends StatelessWidget {
   final TabController tabController;
   final Function(int) onTap;
-  final List tabData;
+  final List<TabBarMenuConfig> tabData;
   final bool shouldHideTabBar;
   final AppSetting config;
 
@@ -94,20 +96,26 @@ class TabBarCustom extends StatelessWidget {
         ? position
         : (tabData.length / 2).floor();
 
-    return TabBar(
+    /// only disable visible tab icon and not the tabMenu
+    // var tabList =
+    //     tabData.where((e) => e.visible != false && e.tabMenu != true).toList();
+
+    return custom.TabBar(
       key: const Key('mainTabBar'),
       controller: tabController,
       onTap: onTap,
       tabs: [
         for (var i = 0; i < tabData.length; i++)
-          TabBarIcon(
-            key: Key('TabBarIcon-$i'),
-            item: tabData[i],
-            totalCart: totalCart,
-            isActive: i == tabController.index,
-            isEmptySpace: tabConfig.showFloating && i == floatingIndex,
-            config: tabConfig,
-          ),
+          tabData[i].visible == false || tabData[i].groupLayout == true
+              ? const SizedBox()
+              : TabBarIcon(
+                  key: Key('TabBarIcon-$i'),
+                  item: tabData[i],
+                  totalCart: totalCart,
+                  isActive: i == tabController.index,
+                  isEmptySpace: tabConfig.showFloating && i == floatingIndex,
+                  config: tabConfig,
+                ),
       ],
       isScrollable: false,
       labelColor: colorActiveIcon,
@@ -124,6 +132,9 @@ class TabBarCustom extends StatelessWidget {
   Widget build(BuildContext context) {
     var tabConfig = config.tabBarConfig;
 
+    /// error could happen on hide tab menu length
+    ErrorWidget.builder = (error) => const SizedBox();
+
     return AnimatedSwitcher(
       duration: const Duration(milliseconds: 500),
       transitionBuilder: (child, animation) {
diff --git a/lib/modules/dynamic_layout/tiktok/tiktok_videos.dart b/lib/modules/dynamic_layout/tiktok/tiktok_videos.dart
index 6600df2..8bf6779 100644
--- a/lib/modules/dynamic_layout/tiktok/tiktok_videos.dart
+++ b/lib/modules/dynamic_layout/tiktok/tiktok_videos.dart
@@ -33,19 +33,13 @@ class _StateTikTokVideos extends State<TikTokVideos> {
 
   int _requestedCount = 0;
 
-  @override
-  void initState() {
-    super.initState();
-
-    WidgetsBinding.instance.endOfFrame.then((_) {
-      if (mounted) {
-        loadInit();
-      }
-    });
-  }
-
   void loadInit() async {
-    await _service.init(config.username);
+    await _service.init(
+      config.username,
+      config.uid,
+      config.secUid,
+      config.avatarUrl,
+    );
     final url = _service.getRequestUrl();
     if (url.isEmpty) {
       _failed = true;
@@ -104,6 +98,11 @@ class _StateTikTokVideos extends State<TikTokVideos> {
             width: 1,
             child: InAppWebView(
               onWebViewCreated: (_) {
+                if (_controller == null) {
+                  _controller = _;
+                  loadInit();
+                  return;
+                }
                 _controller = _;
               },
               onLoadStop: (_, __) async {
@@ -230,8 +229,8 @@ class TikTokVideoItem extends StatelessWidget {
                     ),
                   ),
                 ),
-              if (item.text != null &&
-                  '${item.text}'.isNotEmpty &&
+              if (item.desc != null &&
+                  '${item.desc}'.isNotEmpty &&
                   !config.hideCaption)
                 Align(
                   alignment: Alignment.bottomLeft,
@@ -240,7 +239,7 @@ class TikTokVideoItem extends StatelessWidget {
                     padding:
                         const EdgeInsets.symmetric(horizontal: 4, vertical: 2),
                     child: Text(
-                      item.text ?? '',
+                      item.desc ?? '',
                       maxLines: 2,
                       style: Theme.of(context)
                           .textTheme
diff --git a/lib/modules/dynamic_layout/tiktok/widgets/story_item.dart b/lib/modules/dynamic_layout/tiktok/widgets/story_item.dart
index 08177d6..1f8bc94 100644
--- a/lib/modules/dynamic_layout/tiktok/widgets/story_item.dart
+++ b/lib/modules/dynamic_layout/tiktok/widgets/story_item.dart
@@ -9,12 +9,18 @@ class TikTokPlayerItem extends StatelessWidget {
 
   @override
   Widget build(BuildContext context) {
+    double? aspectRatio;
+    if (item.video != null &&
+        item.video!.width != null &&
+        item.video!.height != null) {
+      aspectRatio = item.video!.width! / item.video!.height!;
+    }
     return SizedBox(
       height: MediaQuery.of(context).size.height,
       child: FeatureVideoPlayer(
         '${item.videoUrl}&dummy=${DateTime.now().millisecondsSinceEpoch}',
         autoPlay: true,
-        forceLoad: true,
+        aspectRatio: aspectRatio,
       ),
     );
   }
diff --git a/lib/modules/dynamic_layout/vertical/menu_layout.dart b/lib/modules/dynamic_layout/vertical/menu_layout.dart
index 4b8f309..2957f93 100644
--- a/lib/modules/dynamic_layout/vertical/menu_layout.dart
+++ b/lib/modules/dynamic_layout/vertical/menu_layout.dart
@@ -5,11 +5,13 @@ import 'package:flutter_staggered_grid_view/flutter_staggered_grid_view.dart';
 import 'package:provider/provider.dart';
 
 import '../../../common/config.dart';
+import '../../../common/tools/tools.dart';
 import '../../../generated/l10n.dart';
 import '../../../models/index.dart'
-    show AppModel, Category, CategoryModel, Product, UserModel;
+    show AppModel, Category, CategoryModel, Product, ProductModel, UserModel;
 import '../../../services/index.dart';
 import '../config/product_config.dart';
+import '../helper/header_view.dart';
 
 class MenuLayout extends StatefulWidget {
   final ProductConfig config;
@@ -24,7 +26,6 @@ class _StateMenuLayout extends State<MenuLayout> {
   int position = 0;
   bool loading = true;
   Map<String, dynamic> productMap = <String, dynamic>{};
-  final ScrollController _controller = ScrollController();
   final StreamController productController = StreamController<List<Product>?>();
 
   @override
@@ -113,119 +114,162 @@ class _StateMenuLayout extends State<MenuLayout> {
       );
     }
 
-    return Column(
-      children: <Widget>[
-        Container(
-          height: 70,
-          padding: const EdgeInsets.only(top: 15),
-          child: ListView(
-            scrollDirection: Axis.horizontal,
-            children: List.generate(categories.length, (index) {
-              return GestureDetector(
-                onTap: () {
-                  setState(() {
-                    position = index;
-                  });
-                  getAllListProducts(
-                      category: categories[index],
-                      lang: Provider.of<AppModel>(context, listen: false)
-                          .langCode);
-                },
-                child: Padding(
-                  padding: const EdgeInsets.symmetric(horizontal: 20),
-                  child: Column(
-                    children: <Widget>[
-                      Padding(
-                        padding: const EdgeInsets.only(bottom: 8),
-                        child: Text(
-                          categories[index].name!.toUpperCase(),
-                          style: TextStyle(
-                              color: index == position
-                                  ? Theme.of(context).primaryColor
-                                  : Theme.of(context).colorScheme.secondary,
-                              fontWeight: FontWeight.w600),
-                        ),
-                      ),
-                      index == position
-                          ? Container(
-                              height: 4,
-                              decoration: BoxDecoration(
-                                  borderRadius: BorderRadius.circular(10),
-                                  color: Theme.of(context).primaryColor),
-                              width: 20,
-                            )
-                          : const SizedBox()
-                    ],
+    return LayoutBuilder(
+      builder: (_, constraints) {
+        final isTablet = Tools.isTablet(MediaQuery.of(context));
+
+        var widthScreen = constraints.maxWidth;
+
+        /// 2 columns on mobile, 3 columns on ipad
+        var crossAxisCount = isTablet ? 3 : 2;
+        var widthContent = isTablet ? widthScreen / 3 : (widthScreen / 2);
+
+        var itemHeight = widget.config.productListItemHeight;
+        if (widget.config.showQuantity) {
+          itemHeight += 30;
+        }
+        if (widget.config.showCartButton) {
+          itemHeight += 30;
+        }
+
+        var childAspectRatio = (isTablet ? 0.94 : 1) *
+            widthContent /
+            (widthContent * (widget.config.imageRatio) + itemHeight);
+
+        return LimitedBox(
+          maxHeight: constraints.maxHeight,
+          child: CustomScrollView(
+            cacheExtent: 1000,
+            slivers: <Widget>[
+              if (widget.config.name != null)
+                SliverToBoxAdapter(
+                  child: HeaderView(
+                    headerText: widget.config.name ?? '',
+                    showSeeAll: !ServerConfig().isListingType,
+                    callback: () => ProductModel.showList(
+                      config: widget.config.jsonData,
+                    ),
                   ),
                 ),
-              );
-            }),
-          ),
-        ),
-        StreamBuilder(
-          stream: productController.stream,
-          builder: (BuildContext context, AsyncSnapshot<dynamic> snapshot) {
-            return MediaQuery.removePadding(
-              removeTop: true,
-              context: context,
-              child: LayoutBuilder(builder: (context, constraints) {
-                if (loading) {
-                  return MasonryGridView.count(
-                    crossAxisCount: 2,
-                    padding: EdgeInsets.symmetric(
-                      horizontal: widget.config.hPadding,
-                      vertical: widget.config.vPadding,
-                    ),
-                    key: categories.isNotEmpty
-                        ? Key(categories[position].id.toString())
-                        : UniqueKey(),
-                    shrinkWrap: true,
-                    controller: _controller,
-                    itemCount: 4,
-                    itemBuilder: (context, value) {
-                      return Services().widget.renderProductCardView(
-                            item: Product.empty(value.toString()),
-                            width: MediaQuery.of(context).size.width / 2,
-                            config: ProductConfig.empty()
-                              ..imageRatio = widget.config.imageRatio,
-                          );
+              SliverToBoxAdapter(
+                child: Container(
+                  height: 70,
+                  padding: const EdgeInsets.only(top: 15),
+                  child: ListView.builder(
+                    scrollDirection: Axis.horizontal,
+                    itemCount: categories.length,
+                    itemBuilder: (context, index) {
+                      return GestureDetector(
+                        onTap: () {
+                          setState(() {
+                            position = index;
+                          });
+                          getAllListProducts(
+                              category: categories[index],
+                              lang:
+                                  Provider.of<AppModel>(context, listen: false)
+                                      .langCode);
+                        },
+                        child: Padding(
+                          padding: const EdgeInsets.symmetric(horizontal: 20),
+                          child: Column(
+                            children: <Widget>[
+                              Padding(
+                                padding: const EdgeInsets.only(bottom: 8),
+                                child: Text(
+                                  categories[index].name!.toUpperCase(),
+                                  style: TextStyle(
+                                      color: index == position
+                                          ? Theme.of(context).primaryColor
+                                          : Theme.of(context)
+                                              .colorScheme
+                                              .secondary,
+                                      fontWeight: FontWeight.w600),
+                                ),
+                              ),
+                              index == position
+                                  ? Container(
+                                      height: 4,
+                                      decoration: BoxDecoration(
+                                          borderRadius:
+                                              BorderRadius.circular(10),
+                                          color:
+                                              Theme.of(context).primaryColor),
+                                      width: 20,
+                                    )
+                                  : const SizedBox()
+                            ],
+                          ),
+                        ),
+                      );
                     },
-                    // staggeredTileBuilder: (index) => const StaggeredTile.fit(2),
-                  );
-                }
-                if (snapshot.hasData && snapshot.data.isNotEmpty) {
-                  return GridView.builder(
-                    shrinkWrap: true,
-                    cacheExtent: 1000,
-                    controller: _controller,
-                    itemCount: snapshot.data.length,
-                    gridDelegate:
-                        const SliverGridDelegateWithFixedCrossAxisCount(
-                      crossAxisCount: 2,
-                      crossAxisSpacing: 2.0,
-                      mainAxisSpacing: 6.0,
-                      childAspectRatio: 0.57,
+                  ),
+                ),
+              ),
+              StreamBuilder(
+                stream: productController.stream,
+                builder:
+                    (BuildContext context, AsyncSnapshot<dynamic> snapshot) {
+                  if (loading) {
+                    return SliverPadding(
+                      padding: EdgeInsets.symmetric(
+                        horizontal: widget.config.hPadding,
+                        vertical: widget.config.vPadding,
+                      ),
+                      sliver: SliverMasonryGrid.count(
+                        crossAxisCount: crossAxisCount,
+                        key: categories.isNotEmpty
+                            ? Key(categories[position].id.toString())
+                            : UniqueKey(),
+                        childCount: 4,
+                        itemBuilder: (context, value) {
+                          return Services().widget.renderProductCardView(
+                                item: Product.empty(value.toString()),
+                                width: widthContent,
+                                config: ProductConfig.empty()
+                                  ..imageRatio = widget.config.imageRatio,
+                              );
+                        },
+                        // staggeredTileBuilder: (index) => const StaggeredTile.fit(2),
+                      ),
+                    );
+                  }
+                  if (snapshot.hasData && snapshot.data.isNotEmpty) {
+                    return SliverGrid(
+                      gridDelegate: SliverGridDelegateWithFixedCrossAxisCount(
+                        crossAxisCount: crossAxisCount,
+                        crossAxisSpacing: 2.0,
+                        mainAxisSpacing: 6.0,
+                        childAspectRatio: childAspectRatio,
+                      ),
+                      delegate: SliverChildBuilderDelegate(
+                        addAutomaticKeepAlives: false,
+                        (BuildContext context, int index) {
+                          return Services().widget.renderProductCardView(
+                                item: snapshot.data[index],
+                                width: widthContent,
+                                config: widget.config,
+                                ratioProductImage: widget.config.imageRatio,
+                              );
+                        },
+                        childCount: snapshot.data.length,
+                      ),
+                    );
+                  }
+                  return SliverToBoxAdapter(
+                    child: SizedBox(
+                      height: MediaQuery.of(context).size.width / 2,
+                      child: Center(
+                        child: Text(S.of(context).noProduct),
+                      ),
                     ),
-                    itemBuilder: (context, index) =>
-                        Services().widget.renderProductCardView(
-                              item: snapshot.data[index],
-                              width: constraints.maxWidth / 2,
-                              config: widget.config,
-                              ratioProductImage: widget.config.imageRatio,
-                            ),
                   );
-                }
-                return SizedBox(
-                  height: MediaQuery.of(context).size.width / 2,
-                  child: Center(
-                    child: Text(S.of(context).noProduct),
-                  ),
-                );
-              }),
-            );
-          },
-        )
-      ],
+                },
+              )
+            ],
+          ),
+        );
+      },
     );
   }
 }
diff --git a/lib/modules/dynamic_layout/vertical/pinterest_card.dart b/lib/modules/dynamic_layout/vertical/pinterest_card.dart
index ea0acc6..5ebc645 100644
--- a/lib/modules/dynamic_layout/vertical/pinterest_card.dart
+++ b/lib/modules/dynamic_layout/vertical/pinterest_card.dart
@@ -62,7 +62,7 @@ class PinterestCard extends StatelessWidget {
             Column(
               mainAxisSize: MainAxisSize.min,
               children: <Widget>[
-                ImageTools.image(
+                ImageResize(
                   url: item.imageFeature,
                   width: width,
                   size: kSize.medium,
diff --git a/lib/modules/dynamic_layout/vertical/pinterest_layout.dart b/lib/modules/dynamic_layout/vertical/pinterest_layout.dart
index fd3e9bd..7857d7e 100644
--- a/lib/modules/dynamic_layout/vertical/pinterest_layout.dart
+++ b/lib/modules/dynamic_layout/vertical/pinterest_layout.dart
@@ -4,9 +4,11 @@ import 'package:provider/provider.dart';
 import 'package:visibility_detector/visibility_detector.dart';
 
 import '../../../generated/l10n.dart';
-import '../../../models/index.dart' show AppModel, Product;
-import '../../../services/index.dart' show Services;
+import '../../../models/index.dart' show AppModel, Product, ProductModel;
+import '../../../services/index.dart' show ServerConfig, Services;
 import '../config/product_config.dart';
+import '../helper/header_view.dart';
+import '../helper/helper.dart';
 import 'pinterest_card.dart';
 
 class PinterestLayout extends StatefulWidget {
@@ -24,6 +26,7 @@ class _PinterestLayoutState extends State<PinterestLayout> {
   int _page = 0;
   bool _isEnd = false;
   bool _isLoading = false;
+
   @override
   void initState() {
     super.initState();
@@ -61,40 +64,59 @@ class _PinterestLayoutState extends State<PinterestLayout> {
 
   @override
   Widget build(BuildContext context) {
-    return Column(
-      children: <Widget>[
-        MediaQuery.removePadding(
-          context: context,
-          removeTop: true,
-          child: MasonryGridView.count(
-            crossAxisCount: 2,
-            mainAxisSpacing: 4.0,
-            shrinkWrap: true,
-            primary: false,
+    final isTablet = Helper.isTablet(MediaQuery.of(context));
+
+    var column = isTablet ? 3 : 2;
+
+    //BUG: has problem when scroll the list products
+    final query = MediaQuery.of(context);
+    return LimitedBox(
+      maxHeight: query.size.height - query.padding.vertical,
+      child: CustomScrollView(
+        cacheExtent: 1000,
+        slivers: <Widget>[
+          if (widget.config.name != null)
+            SliverToBoxAdapter(
+              child: HeaderView(
+                headerText: widget.config.name ?? '',
+                showSeeAll: !ServerConfig().isListingType,
+                callback: () => ProductModel.showList(
+                  config: widget.config.jsonData,
+                ),
+              ),
+            ),
+          SliverPadding(
             padding: EdgeInsets.symmetric(
               vertical: widget.config.vPadding,
               horizontal: widget.config.hPadding,
             ),
-            crossAxisSpacing: 4.0,
-            itemCount: _products!.length,
-            itemBuilder: (context, index) => PinterestCard(
-              item: _products![index],
-              width: MediaQuery.of(context).size.width / 2,
-              config: widget.config,
+            sliver: SliverMasonryGrid.count(
+              crossAxisCount: column,
+              mainAxisSpacing: 4.0,
+              crossAxisSpacing: 4.0,
+              childCount: _products!.length,
+              itemBuilder: (context, index) => PinterestCard(
+                item: _products![index],
+                width: MediaQuery.of(context).size.width / 2,
+                config: widget.config,
+              ),
+              // staggeredTileBuilder: (index) => const StaggeredTile.fit(2),
             ),
-            // staggeredTileBuilder: (index) => const StaggeredTile.fit(2),
           ),
-        ),
-        _isEnd
-            ? Text(S.of(context).noData)
-            : VisibilityDetector(
-                key: const Key('loading_visible'),
-                onVisibilityChanged: (VisibilityInfo info) => _loadProduct(),
-                child: Center(
-                  child: Text(S.of(context).loading),
-                ),
-              )
-      ],
+          SliverToBoxAdapter(
+            child: _isEnd
+                ? Center(child: Text(S.of(context).noData))
+                : VisibilityDetector(
+                    key: const Key('loading_visible'),
+                    onVisibilityChanged: (VisibilityInfo info) =>
+                        _loadProduct(),
+                    child: Center(
+                      child: Text(S.of(context).loading),
+                    ),
+                  ),
+          ),
+        ],
+      ),
     );
   }
 }
diff --git a/lib/modules/dynamic_layout/vertical/product_select_card.dart b/lib/modules/dynamic_layout/vertical/product_select_card.dart
index 13b64e4..dacb07e 100644
--- a/lib/modules/dynamic_layout/vertical/product_select_card.dart
+++ b/lib/modules/dynamic_layout/vertical/product_select_card.dart
@@ -41,7 +41,7 @@ class ProductSelectCard extends StatelessWidget {
     Future<Widget> getImage() async {
       return ClipRRect(
         borderRadius: BorderRadius.circular(10),
-        child: ImageTools.image(
+        child: ImageResize(
           url: item!.imageFeature,
           width: width,
           size: kSize.medium,
diff --git a/lib/modules/dynamic_layout/vertical/vertical.dart b/lib/modules/dynamic_layout/vertical/vertical.dart
index 229d26e..f2f356c 100644
--- a/lib/modules/dynamic_layout/vertical/vertical.dart
+++ b/lib/modules/dynamic_layout/vertical/vertical.dart
@@ -1,9 +1,6 @@
 import 'package:flutter/material.dart';
 
-import '../../../models/product_model.dart';
-import '../../../services/service_config.dart';
 import '../config/product_config.dart';
-import '../helper/header_view.dart';
 import '../helper/helper.dart';
 import 'menu_layout.dart';
 import 'pinterest_layout.dart';
@@ -15,7 +12,8 @@ class VerticalLayout extends StatelessWidget {
 
   const VerticalLayout({this.config, Key? key}) : super(key: key);
 
-  Widget renderLayout() {
+  @override
+  Widget build(BuildContext context) {
     var productConfig = ProductConfig.fromJson(config ?? {});
     switch (config['layout']) {
       case Layout.menu:
@@ -26,28 +24,10 @@ class VerticalLayout extends StatelessWidget {
         return VerticalViewLayoutWithFilter(config: productConfig);
       case Layout.card:
       case Layout.listTile:
+      case Layout.list:
       case Layout.columns:
       default:
         return VerticalViewLayout(config: productConfig);
     }
   }
-
-  @override
-  Widget build(BuildContext context) {
-    return Column(
-      mainAxisAlignment: MainAxisAlignment.start,
-      children: <Widget>[
-        if (config['name'] != null)
-          HeaderView(
-            headerText: config['name'] ?? '',
-            showSeeAll: !ServerConfig().isListingType,
-            callback: () => ProductModel.showList(
-              context: context,
-              config: config,
-            ),
-          ),
-        renderLayout()
-      ],
-    );
-  }
 }
diff --git a/lib/modules/dynamic_layout/vertical/vertical_layout.dart b/lib/modules/dynamic_layout/vertical/vertical_layout.dart
index 9adde7e..ae71c3d 100644
--- a/lib/modules/dynamic_layout/vertical/vertical_layout.dart
+++ b/lib/modules/dynamic_layout/vertical/vertical_layout.dart
@@ -3,10 +3,11 @@ import 'package:provider/provider.dart';
 import 'package:visibility_detector/visibility_detector.dart';
 
 import '../../../generated/l10n.dart';
-import '../../../models/index.dart' show AppModel, Product;
+import '../../../models/index.dart' show AppModel, Product, ProductModel;
 import '../../../services/index.dart';
 import '../../../widgets/product/product_simple_view.dart';
 import '../config/product_config.dart';
+import '../helper/header_view.dart';
 import '../helper/helper.dart';
 
 class VerticalViewLayout extends StatefulWidget {
@@ -24,6 +25,7 @@ class _PinterestLayoutState extends State<VerticalViewLayout> {
   ValueNotifier<bool> canLoad = ValueNotifier(true);
   int _page = 0;
   bool loading = false;
+  final key = const Key('loading_vertical');
 
   void _loadProduct() async {
     if (loading) return;
@@ -42,6 +44,7 @@ class _PinterestLayoutState extends State<VerticalViewLayout> {
       products.value = [...products.value, ...newProducts];
     }
     loading = false;
+    // VisibilityDetectorController.instance.forget(key);
   }
 
   @override
@@ -54,37 +57,51 @@ class _PinterestLayoutState extends State<VerticalViewLayout> {
 
   @override
   Widget build(BuildContext context) {
-    var widthContent = 0;
+    var column = 1;
     final isTablet = Helper.isTablet(MediaQuery.of(context));
 
     if (widget.config.layout == 'card') {
-      widthContent = 1; //one column
+      column = 1;
     } else if (widget.config.layout == 'columns') {
-      widthContent = isTablet ? 4 : 3; //three columns
+      column = isTablet ? 4 : 3;
     } else {
       //layout is list
-      widthContent = isTablet ? 3 : 2; //two columns
+      column = isTablet ? 3 : 2;
     }
-    // ignore: division_optimization
 
-    return Column(
-      mainAxisAlignment: MainAxisAlignment.start,
-      children: [
-        ValueListenableBuilder<List<Product>>(
+    return CustomScrollView(
+      cacheExtent: 1000,
+      //BUG: cannot sroll when it is only vertical layout (list, columns, columnsWithFilter)
+      physics: const NeverScrollableScrollPhysics(),
+      controller: PrimaryScrollController.of(context),
+      slivers: [
+        if (widget.config.name != null)
+          SliverToBoxAdapter(
+            child: HeaderView(
+              headerText: widget.config.name ?? '',
+              showSeeAll: !ServerConfig().isListingType,
+              callback: () => ProductModel.showList(
+                config: widget.config.jsonData,
+              ),
+            ),
+          ),
+        SliverPadding(
+          padding: EdgeInsets.symmetric(
+            vertical: widget.config.vPadding,
+            horizontal: widget.config.hPadding,
+          ),
+          sliver: ValueListenableBuilder<List<Product>>(
             valueListenable: products,
             builder: (context, value, child) {
-              var rows = value.length ~/ widthContent;
-              if (rows * widthContent < value.length) rows++;
-              return ListView.builder(
-                  padding: EdgeInsets.symmetric(
-                    vertical: widget.config.vPadding,
-                    horizontal: widget.config.hPadding,
-                  ),
-                  cacheExtent: 1500,
-                  physics: const NeverScrollableScrollPhysics(),
-                  shrinkWrap: true,
-                  itemCount: value.length,
-                  itemBuilder: (context, index) {
+              var rows = widget.config.layout == 'list'
+                  ? value.length
+                  : value.length ~/ column;
+              if (rows * column < value.length) rows++;
+              return SliverList(
+                delegate: SliverChildBuilderDelegate(
+                  addAutomaticKeepAlives: false,
+                  childCount: rows,
+                  (context, index) {
                     if (widget.config.layout == 'list') {
                       return ProductSimpleView(
                         item: value[index],
@@ -94,42 +111,53 @@ class _PinterestLayoutState extends State<VerticalViewLayout> {
                     return Row(
                       mainAxisAlignment: MainAxisAlignment.start,
                       crossAxisAlignment: CrossAxisAlignment.start,
-                      children: List.generate(widthContent, (child) {
-                        return Expanded(
-                          child: index * widthContent + child < value.length
-                              ? LayoutBuilder(
-                                  builder: (context, constraints) {
-                                    return Padding(
-                                      padding: const EdgeInsets.only(bottom: 5),
-                                      child: Services()
-                                          .widget
-                                          .renderProductCardView(
-                                              item: value[
-                                                  index * widthContent + child],
-                                              width: constraints.maxWidth,
-                                              config: widget.config,
-                                              ratioProductImage:
-                                                  widget.config.imageRatio),
-                                    );
-                                  },
-                                )
-                              : const SizedBox(),
-                        );
-                      }),
+                      children: List.generate(
+                        column,
+                        (indexColumn) {
+                          return Expanded(
+                            child: index * column + indexColumn < value.length
+                                ? LayoutBuilder(
+                                    builder: (context, constraints) {
+                                      return Padding(
+                                        padding:
+                                            const EdgeInsets.only(bottom: 5),
+                                        child: Services()
+                                            .widget
+                                            .renderProductCardView(
+                                                item: value[index * column +
+                                                    indexColumn],
+                                                width: constraints.maxWidth,
+                                                config: widget.config,
+                                                ratioProductImage:
+                                                    widget.config.imageRatio),
+                                      );
+                                    },
+                                  )
+                                : const SizedBox(),
+                          );
+                        },
+                      ),
                     );
-                  });
-            }),
-        VisibilityDetector(
-          key: const Key('loading_vertical'),
-          onVisibilityChanged: (VisibilityInfo info) => _loadProduct(),
-          child: ValueListenableBuilder<bool>(
-            valueListenable: canLoad,
-            builder: (context, value, child) {
-              if (!value) return const SizedBox();
-              return child ?? const SizedBox();
+                  },
+                ),
+              );
             },
-            child: Center(
-              child: Text(S.of(context).loading),
+          ),
+        ),
+        SliverToBoxAdapter(
+          child: VisibilityDetector(
+            key: key,
+            onVisibilityChanged: (VisibilityInfo info) => _loadProduct(),
+            // BUG: always show loading so can't load product anymore in tablet
+            child: ValueListenableBuilder<bool>(
+              valueListenable: canLoad,
+              builder: (context, value, child) {
+                if (!value) return const SizedBox();
+                return child ?? const SizedBox();
+              },
+              child: Center(
+                child: Text(S.of(context).loading),
+              ),
             ),
           ),
         )
diff --git a/lib/modules/dynamic_layout/vertical/vertical_layout_with_filter.dart b/lib/modules/dynamic_layout/vertical/vertical_layout_with_filter.dart
index 3330460..3fa1a38 100644
--- a/lib/modules/dynamic_layout/vertical/vertical_layout_with_filter.dart
+++ b/lib/modules/dynamic_layout/vertical/vertical_layout_with_filter.dart
@@ -7,11 +7,13 @@ import '../../../common/constants.dart';
 import '../../../generated/l10n.dart';
 import '../../../models/category/category_model.dart';
 import '../../../models/filter_attribute_model.dart';
-import '../../../models/index.dart' show AppModel, Product, TagModel;
+import '../../../models/index.dart'
+    show AppModel, Product, ProductModel, TagModel;
 import '../../../screens/common/app_bar_mixin.dart';
 import '../../../screens/products/filter_mixin/products_filter_mixin.dart';
 import '../../../services/index.dart';
 import '../config/product_config.dart';
+import '../helper/header_view.dart';
 import '../helper/helper.dart';
 
 class VerticalViewLayoutWithFilter extends StatefulWidget {
@@ -89,108 +91,136 @@ class _VerticalViewLayoutWithFilterState
     });
   }
 
+  bool get hasAppbar => showAppBar(RouteList.home) && (appBar?.pinned ?? false);
+
   @override
   Widget build(BuildContext context) {
-    final isTablet = Helper.isTablet(MediaQuery.of(context));
-    var widthContent = isTablet ? 3 : 2; //two columns
+    final query = MediaQuery.of(context);
+    final isTablet = Helper.isTablet(query);
+    var column = isTablet ? 3 : 2;
+
     return StickyHeaderBuilder(
       builder: (BuildContext context, double stuckAmount) {
-        return AnimatedSize(
-          duration: const Duration(milliseconds: 200),
-          alignment: Alignment.bottomCenter,
-          child: Container(
-            decoration: BoxDecoration(
-              color: Theme.of(context).cardColor,
-              boxShadow: [
-                if (stuckAmount.isNegative)
-                  BoxShadow(
-                    color: Colors.grey.withOpacity(0.3),
-                    blurRadius: 8,
-                    spreadRadius: 4,
+        return SafeArea(
+          top: stuckAmount <= 0.0 ? true : false,
+          bottom: false,
+          //BUG: https://tppr.me/e7ugh, file https://www.dropbox.com/s/nsnp1piztle5ybp/18916%20Archivo%20comprimido.zip?dl=0
+          child: Column(
+            mainAxisSize: MainAxisSize.min,
+            children: [
+              if (widget.config.name != null)
+                HeaderView(
+                  headerText: widget.config.name ?? '',
+                  showSeeAll: !ServerConfig().isListingType,
+                  callback: () => ProductModel.showList(
+                    config: widget.config.jsonData,
                   ),
-              ],
-            ),
-            margin: EdgeInsets.only(
-              top: showAppBar(RouteList.home) &&
-                      (appBar?.pinned ?? false) &&
-                      stuckAmount.isNegative
-                  ? 56
-                  : 0,
-            ),
-            padding: const EdgeInsets.symmetric(horizontal: 16.0),
-            child: SafeArea(
-              top: stuckAmount.isNegative ? true : false,
-              child: SizedBox(
-                height: 56,
-                child: renderFilters(context),
+                ),
+              AnimatedSize(
+                duration: const Duration(milliseconds: 200),
+                alignment: Alignment.bottomCenter,
+                child: Container(
+                  decoration: BoxDecoration(
+                    color: Theme.of(context).cardColor,
+                    boxShadow: [
+                      if (stuckAmount <= 0.0)
+                        BoxShadow(
+                          color: Colors.grey.withOpacity(0.3),
+                          blurRadius: 1,
+                          spreadRadius: 1,
+                          offset: const Offset(0, 3),
+                        ),
+                    ],
+                  ),
+                  padding: const EdgeInsets.symmetric(horizontal: 16.0),
+                  child: SizedBox(
+                    height: kToolbarHeight,
+                    child: renderFilters(context),
+                  ),
+                ),
               ),
-            ),
+            ],
           ),
         );
       },
-      content: Padding(
-        padding: const EdgeInsets.only(top: 16.0),
-        child: Column(
-          mainAxisSize: MainAxisSize.min,
-          mainAxisAlignment: MainAxisAlignment.start,
-          children: [
-            ValueListenableBuilder<List<Product>>(
-                valueListenable: products,
-                builder: (context, value, child) {
-                  var rows = value.length ~/ widthContent;
-                  if (rows * widthContent < value.length) rows++;
-                  return ListView.builder(
-                      padding: EdgeInsets.symmetric(
-                        vertical: widget.config.vPadding,
-                        horizontal: widget.config.hPadding,
+      content: LimitedBox(
+        maxHeight: query.size.height - query.padding.vertical,
+        child: CustomScrollView(
+          slivers: <Widget>[
+            SliverPadding(
+              padding: const EdgeInsets.only(top: 16.0),
+              sliver: SliverPadding(
+                padding: EdgeInsets.symmetric(
+                  vertical: widget.config.vPadding,
+                  horizontal: widget.config.hPadding,
+                ),
+                sliver: ValueListenableBuilder<List<Product>>(
+                  valueListenable: products,
+                  builder: (context, value, child) {
+                    var rows = value.length ~/ column;
+                    if (rows * column < value.length) rows++;
+                    return SliverList(
+                      delegate: SliverChildBuilderDelegate(
+                        addAutomaticKeepAlives: false,
+                        childCount: rows,
+                        (context, index) {
+                          return Row(
+                            mainAxisAlignment: MainAxisAlignment.start,
+                            crossAxisAlignment: CrossAxisAlignment.start,
+                            children: List.generate(
+                              column,
+                              (indexColumn) {
+                                return Expanded(
+                                  child: index * column + indexColumn <
+                                          value.length
+                                      ? LayoutBuilder(
+                                          builder: (context, constraints) {
+                                            return Padding(
+                                              padding: const EdgeInsets.only(
+                                                  bottom: 5),
+                                              child: Services()
+                                                  .widget
+                                                  .renderProductCardView(
+                                                    item: value[index * column +
+                                                        indexColumn],
+                                                    width: constraints.maxWidth,
+                                                    config: widget.config,
+                                                    ratioProductImage: widget
+                                                        .config.imageRatio,
+                                                  ),
+                                            );
+                                          },
+                                        )
+                                      : const SizedBox(),
+                                );
+                              },
+                            ),
+                          );
+                        },
                       ),
-                      cacheExtent: 1500,
-                      physics: const NeverScrollableScrollPhysics(),
-                      shrinkWrap: true,
-                      itemCount: value.length,
-                      itemBuilder: (context, index) {
-                        return Row(
-                          mainAxisAlignment: MainAxisAlignment.start,
-                          crossAxisAlignment: CrossAxisAlignment.start,
-                          children: List.generate(widthContent, (child) {
-                            return Expanded(
-                              child: index * widthContent + child < value.length
-                                  ? LayoutBuilder(
-                                      builder: (context, constraints) {
-                                        return Padding(
-                                          padding:
-                                              const EdgeInsets.only(bottom: 5),
-                                          child: Services()
-                                              .widget
-                                              .renderProductCardView(
-                                                item: value[
-                                                    index * widthContent +
-                                                        child],
-                                                width: constraints.maxWidth,
-                                                config: widget.config,
-                                                ratioProductImage:
-                                                    widget.config.imageRatio,
-                                              ),
-                                        );
-                                      },
-                                    )
-                                  : const SizedBox(),
-                            );
-                          }),
-                        );
-                      });
-                }),
-            VisibilityDetector(
-              key: const Key('loading_vertical'),
-              onVisibilityChanged: (VisibilityInfo info) => _loadProduct(),
-              child: ValueListenableBuilder<bool>(
-                valueListenable: canLoad,
-                builder: (context, value, child) {
-                  if (!value) return const SizedBox();
-                  return child ?? const SizedBox();
-                },
-                child: Center(
-                  child: Text(S.of(context).loading),
+                    );
+                  },
+                ),
+              ),
+            ),
+            SliverPadding(
+              padding: const EdgeInsets.only(
+                bottom: kToolbarHeight * 3,
+              ),
+              sliver: SliverToBoxAdapter(
+                child: VisibilityDetector(
+                  key: const Key('loading_vertical'),
+                  onVisibilityChanged: (VisibilityInfo info) => _loadProduct(),
+                  child: ValueListenableBuilder<bool>(
+                    valueListenable: canLoad,
+                    builder: (context, value, child) {
+                      if (!value) return const SizedBox();
+                      return child ?? const SizedBox();
+                    },
+                    child: Center(
+                      child: Text(S.of(context).loading),
+                    ),
+                  ),
                 ),
               ),
             )
diff --git a/lib/modules/firebase/firebase_notification_service.dart b/lib/modules/firebase/firebase_notification_service.dart
index c857f5a..4738d89 100644
--- a/lib/modules/firebase/firebase_notification_service.dart
+++ b/lib/modules/firebase/firebase_notification_service.dart
@@ -75,7 +75,7 @@ class FirebaseNotificationService extends NotificationService {
                 icon: android.smallIcon,
                 // other properties...
               ),
-              iOS: const IOSNotificationDetails(),
+              iOS: const DarwinNotificationDetails(),
             ),
             // payload: 'Notification'
           );
diff --git a/lib/modules/firebase/firebase_service.dart b/lib/modules/firebase/firebase_service.dart
index 11aa97b..df8e16d 100644
--- a/lib/modules/firebase/firebase_service.dart
+++ b/lib/modules/firebase/firebase_service.dart
@@ -146,8 +146,8 @@ class FirebaseServices extends BaseFirebaseServices {
         await Services()
             .api
             .updateUserInfo({'deviceToken': token}, user!.cookie);
-      } catch (e) {
-        printLog(e);
+      } catch (err, trace) {
+        printError(err, trace);
       }
     }
   }
@@ -173,15 +173,17 @@ class FirebaseServices extends BaseFirebaseServices {
     required void Function(String?) verificationCompleted,
     void Function(FirebaseErrorException error)? verificationFailed,
     forceResendingToken,
+    Duration? timeout,
   }) async {
     await _auth!.verifyPhoneNumber(
-        phoneNumber: phoneNumber!,
-        codeAutoRetrievalTimeout: codeAutoRetrievalTimeout,
-        codeSent: codeSent,
-        timeout: const Duration(seconds: 120),
-        verificationCompleted: verificationCompleted,
-        verificationFailed: verificationFailed,
-        forceResendingToken: forceResendingToken);
+      phoneNumber: phoneNumber!,
+      codeAutoRetrievalTimeout: codeAutoRetrievalTimeout,
+      codeSent: codeSent,
+      timeout: timeout ?? const Duration(seconds: 120),
+      verificationCompleted: verificationCompleted,
+      verificationFailed: verificationFailed,
+      forceResendingToken: forceResendingToken,
+    );
   }
 
   @override
diff --git a/lib/modules/firebase/impl/dynamic_link_service_impl.dart b/lib/modules/firebase/impl/dynamic_link_service_impl.dart
index 3e3e5f9..7681d76 100644
--- a/lib/modules/firebase/impl/dynamic_link_service_impl.dart
+++ b/lib/modules/firebase/impl/dynamic_link_service_impl.dart
@@ -67,10 +67,10 @@ class DynamicLinkServiceImpl extends DynamicLinkService {
 
   @override
   Future<String> generateProductBrandUrl(dynamic brandCategoryId) async {
-    final cate = await _service.api.getBrandById(brandCategoryId);
+    final brand = await _service.api.getBrandById(brandCategoryId);
     var url;
-    if (cate != null) {
-      url = serverConfig['url'] + '/brand/' + cate.slug;
+    if (brand != null) {
+      url = serverConfig['url'] + '/brand/' + brand.slug;
     }
     return url;
   }
diff --git a/lib/modules/firebase/impl/firebase_remote_service_impl.dart b/lib/modules/firebase/impl/firebase_remote_service_impl.dart
index a765828..29d042c 100644
--- a/lib/modules/firebase/impl/firebase_remote_service_impl.dart
+++ b/lib/modules/firebase/impl/firebase_remote_service_impl.dart
@@ -1,5 +1,5 @@
 import 'package:firebase_remote_config/firebase_remote_config.dart';
-import 'package:inspireui/utils/logs.dart';
+import 'package:inspireui/inspireui.dart';
 
 import '../firebase_remote_service.dart';
 
diff --git a/lib/modules/firebase/realtime_chat/messages.dart b/lib/modules/firebase/realtime_chat/messages.dart
index fdd1989..30ed861 100755
--- a/lib/modules/firebase/realtime_chat/messages.dart
+++ b/lib/modules/firebase/realtime_chat/messages.dart
@@ -199,7 +199,7 @@ class MessageBubble extends StatelessWidget {
                           }),
                         );
                       },
-                      child: ImageTools.image(
+                      child: ImageResize(
                         url: data['image'],
                         width: 200,
                         height: 200,
@@ -285,14 +285,14 @@ class MessageBubble extends StatelessWidget {
                           }),
                         );
                       },
-                      child: ImageTools.image(
+                      child: ImageResize(
                         url: data['image'],
                         width: 200,
                         height: 200,
                         fit: BoxFit.cover,
                       ),
                     )
-//                  : ImageTools.image(
+//                  : ImageResize(
 //                      url: document.data['image'],
 //                      width: 200,
 //                      height: 200,
@@ -327,7 +327,7 @@ class DetailedImage extends StatelessWidget {
           },
         ),
       ),
-      body: ImageTools.image(
+      body: ImageResize(
         url: imageUrl,
         fit: BoxFit.fitWidth,
         height: double.infinity,
diff --git a/lib/modules/instagram/instagram_service.dart b/lib/modules/instagram/instagram_service.dart
index 6b1dba4..c319b7d 100644
--- a/lib/modules/instagram/instagram_service.dart
+++ b/lib/modules/instagram/instagram_service.dart
@@ -38,8 +38,7 @@ class InstagramService {
       await injector<SharedPreferences>().setString(key, jsonEncode(data));
       return Metadata.fromJson(data);
     } catch (e, trace) {
-      printLog(e.toString());
-      printLog(trace.toString());
+      printError(e, trace);
       return Metadata(loadFail: true);
     }
   }
diff --git a/lib/modules/native_payment/credit_card/credit_card_form.dart b/lib/modules/native_payment/credit_card/credit_card_form.dart
index 81d0c7e..fc09597 100644
--- a/lib/modules/native_payment/credit_card/credit_card_form.dart
+++ b/lib/modules/native_payment/credit_card/credit_card_form.dart
@@ -93,37 +93,20 @@ class _CreditCardFormState extends BaseScreen<CreditCardForm> {
 
     cvvFocusNode.addListener(textFieldFocusDidChange);
 
-    _cardNumberController.addListener(() {
-      setState(() {
-        cardNumber = _cardNumberController.text;
-        creditCardModel!.cardNumber = cardNumber;
-        onCreditCardModelChange(creditCardModel);
-      });
-    });
-
-    _expiryDateController.addListener(() {
-      setState(() {
-        expiryDate = _expiryDateController.text;
-        creditCardModel!.expiryDate = expiryDate;
-        onCreditCardModelChange(creditCardModel);
-      });
-    });
-
-    _cardHolderNameController.addListener(() {
-      setState(() {
-        cardHolderName = _cardHolderNameController.text;
-        creditCardModel!.cardHolderName = cardHolderName;
-        onCreditCardModelChange(creditCardModel);
-      });
-    });
+    _cardNumberController.addListener(_cardNumberListener);
+    _expiryDateController.addListener(_expiryDateListener);
+    _cardHolderNameController.addListener(_cardHolderNameListener);
+    _cvvCodeController.addListener(_cvvCodeListener);
+  }
 
-    _cvvCodeController.addListener(() {
-      setState(() {
-        cvvCode = _cvvCodeController.text;
-        creditCardModel!.cvv = cvvCode;
-        onCreditCardModelChange(creditCardModel);
-      });
-    });
+  @override
+  void dispose() {
+    cvvFocusNode.removeListener(textFieldFocusDidChange);
+    _cardHolderNameController.removeListener(_cardHolderNameListener);
+    _cardNumberController.removeListener(_cardNumberListener);
+    _expiryDateController.removeListener(_expiryDateListener);
+    _cvvCodeController.removeListener(_cvvCodeListener);
+    super.dispose();
   }
 
   @override
@@ -203,4 +186,36 @@ class _CreditCardFormState extends BaseScreen<CreditCardForm> {
       ),
     );
   }
+
+  void _cardNumberListener() {
+    setState(() {
+      cardNumber = _cardNumberController.text;
+      creditCardModel!.cardNumber = cardNumber;
+      onCreditCardModelChange(creditCardModel);
+    });
+  }
+
+  void _expiryDateListener() {
+    setState(() {
+      expiryDate = _expiryDateController.text;
+      creditCardModel!.expiryDate = expiryDate;
+      onCreditCardModelChange(creditCardModel);
+    });
+  }
+
+  void _cardHolderNameListener() {
+    setState(() {
+      cardHolderName = _cardHolderNameController.text;
+      creditCardModel!.cardHolderName = cardHolderName;
+      onCreditCardModelChange(creditCardModel);
+    });
+  }
+
+  void _cvvCodeListener() {
+    setState(() {
+      cvvCode = _cvvCodeController.text;
+      creditCardModel!.cvv = cvvCode;
+      onCreditCardModelChange(creditCardModel);
+    });
+  }
 }
diff --git a/lib/modules/native_payment/credit_card/credit_card_payment.dart b/lib/modules/native_payment/credit_card/credit_card_payment.dart
index feb1768..ad25eb0 100644
--- a/lib/modules/native_payment/credit_card/credit_card_payment.dart
+++ b/lib/modules/native_payment/credit_card/credit_card_payment.dart
@@ -27,22 +27,26 @@ class CreditCardPaymentState extends State<CreditCardPayment> {
   String cvv = '';
   bool showBack = false;
 
-  FocusNode? _focusNode;
+  late final FocusNode _focusNode = FocusNode();
 
   @override
   void initState() {
     super.initState();
-    _focusNode = FocusNode();
-    _focusNode!.addListener(() {
-      setState(() {
-        _focusNode!.hasFocus ? showBack = true : showBack = false;
-      });
-    });
+    _focusNode.addListener(_focusListener);
+  }
+
+  void _focusListener() {
+    if (!mounted) {
+      return;
+    }
+    _focusNode.hasFocus ? showBack = true : showBack = false;
+    setState(() {});
   }
 
   @override
   void dispose() {
-    _focusNode!.dispose();
+    _focusNode.removeListener(_focusListener);
+    _focusNode.dispose();
     super.dispose();
   }
 
diff --git a/lib/modules/native_payment/flutterwave/services.dart b/lib/modules/native_payment/flutterwave/services.dart
index d48777f..fd9d687 100644
--- a/lib/modules/native_payment/flutterwave/services.dart
+++ b/lib/modules/native_payment/flutterwave/services.dart
@@ -48,24 +48,12 @@ class FlutterwaveServices {
       Future.delayed(const Duration(milliseconds: 200), () {
         onLoading(true);
       });
-      final style = FlutterwaveStyle(
-          appBarText: paymentMethod,
-          buttonColor: Theme.of(context).primaryColor,
-          appBarColor: Theme.of(context).primaryColor,
-          appBarIcon: const Icon(Icons.arrow_back, color: Colors.white),
-          appBarTitleTextStyle: const TextStyle(
-              color: Colors.white, fontSize: 18, fontWeight: FontWeight.normal),
-          buttonTextStyle: const TextStyle(
-              color: Colors.white,
-              fontSize: 16,
-              fontWeight: FontWeight.normal));
 
       final customer = Customer(
           name: name ?? '', phoneNumber: phone ?? '', email: email ?? '');
 
       final flutterwave = Flutterwave(
           context: context,
-          style: style,
           publicKey: publicKey,
           currency: currency,
           redirectUrl: 'https://google.com',
diff --git a/lib/modules/native_payment/paystack/services.dart b/lib/modules/native_payment/paystack/services.dart
index 21aeef6..1eff08c 100644
--- a/lib/modules/native_payment/paystack/services.dart
+++ b/lib/modules/native_payment/paystack/services.dart
@@ -4,9 +4,11 @@ import 'dart:convert' as convert;
 import 'package:flutter/material.dart';
 import 'package:flutter/services.dart';
 import 'package:flutter_paystack/flutter_paystack.dart';
+import 'package:provider/provider.dart';
 
 import '../../../common/config.dart';
 import '../../../common/constants.dart';
+import '../../../models/app_model.dart';
 import '../../../services/services.dart';
 
 class PayStackServices {
@@ -58,6 +60,7 @@ class PayStackServices {
 
   Future openPayment(BuildContext context, Function(bool) onLoading) async {
     try {
+      final currency = Provider.of<AppModel>(context, listen: false).currency;
       Future.delayed(const Duration(milliseconds: 200), () {
         onLoading(true);
       });
@@ -67,7 +70,8 @@ class PayStackServices {
       var charge = Charge()
         ..amount = double.parse(amount).toInt() * 100
         ..accessCode = accessCode
-        ..email = email;
+        ..email = email
+        ..currency = currency;
       onLoading(false);
       var response = await _plugin.checkout(
         context,
diff --git a/lib/modules/onesignal/one_signal_notification_service.dart b/lib/modules/onesignal/one_signal_notification_service.dart
index eb3bdee..cf8d806 100644
--- a/lib/modules/onesignal/one_signal_notification_service.dart
+++ b/lib/modules/onesignal/one_signal_notification_service.dart
@@ -68,7 +68,7 @@ class OneSignalNotificationService extends NotificationService {
                   'ic_stat_onesignal_default',
               // other properties...
             ),
-            iOS: const IOSNotificationDetails(),
+            iOS: const DarwinNotificationDetails(),
           ),
           // payload: 'Notification'
         );
diff --git a/lib/modules/product_reviews/product_reviews_index.dart b/lib/modules/product_reviews/product_reviews_index.dart
index 8002518..6efb6d3 100644
--- a/lib/modules/product_reviews/product_reviews_index.dart
+++ b/lib/modules/product_reviews/product_reviews_index.dart
@@ -2,12 +2,13 @@ import 'package:flutter/material.dart';
 import 'package:provider/provider.dart';
 
 import '../../common/config.dart';
+import '../../models/entities/product.dart';
 import 'product_reviews_list.dart';
 import 'product_reviews_model.dart';
 
 class ProductReviewsIndex extends StatelessWidget {
-  final String productId;
-  const ProductReviewsIndex({Key? key, required this.productId})
+  final Product product;
+  const ProductReviewsIndex({Key? key, required this.product})
       : super(key: key);
 
   @override
@@ -16,7 +17,7 @@ class ProductReviewsIndex extends StatelessWidget {
       return const SizedBox();
     }
     return ChangeNotifierProvider<ProductReviewsModel>(
-        create: (_) => ProductReviewsModel(productId),
+        create: (_) => ProductReviewsModel(product),
         child: const ProductReviewsList());
   }
 }
diff --git a/lib/modules/product_reviews/product_reviews_list.dart b/lib/modules/product_reviews/product_reviews_list.dart
index 824b760..6687304 100644
--- a/lib/modules/product_reviews/product_reviews_list.dart
+++ b/lib/modules/product_reviews/product_reviews_list.dart
@@ -104,7 +104,7 @@ class ProductReviewsList extends StatelessWidget {
                                   },
                                   child: Padding(
                                     padding: const EdgeInsets.only(right: 10.0),
-                                    child: ImageTools.image(
+                                    child: ImageResize(
                                         url: model.reviews[index].images[i],
                                         fit: BoxFit.cover,
                                         height: 120.0),
diff --git a/lib/modules/product_reviews/product_reviews_model.dart b/lib/modules/product_reviews/product_reviews_model.dart
index b84202f..0dd60a7 100644
--- a/lib/modules/product_reviews/product_reviews_model.dart
+++ b/lib/modules/product_reviews/product_reviews_model.dart
@@ -15,9 +15,9 @@ class ProductReviewsModel extends ChangeNotifier {
   LoadState _state = LoadState.loaded;
   LoadState get state => _state;
 
-  final String _productId;
+  final Product _product;
 
-  ProductReviewsModel(this._productId) {
+  ProductReviewsModel(this._product) {
     getComments();
   }
 
@@ -34,18 +34,22 @@ class ProductReviewsModel extends ChangeNotifier {
     }
     _page = 1;
     _updateState(LoadState.loading);
-    final list = await _services.api
-        .getReviews(_productId, page: _page, perPage: _perPage);
-    if (list == null || list.isEmpty) {
+    try {
+      final list = await _services.api
+          .getReviews(_product.id, page: _page, perPage: _perPage);
+      if (list == null || list.isEmpty) {
+        _updateState(LoadState.noData);
+        return;
+      }
+      _reviews.addAll(list);
+      if (list.length < _perPage) {
+        _updateState(LoadState.noMore);
+        return;
+      }
+      _updateState(LoadState.loaded);
+    } catch (e) {
       _updateState(LoadState.noData);
-      return;
-    }
-    _reviews.addAll(list);
-    if (list.length < _perPage) {
-      _updateState(LoadState.noMore);
-      return;
     }
-    _updateState(LoadState.loaded);
   }
 
   Future<void> loadComments() async {
@@ -54,18 +58,22 @@ class ProductReviewsModel extends ChangeNotifier {
     }
     _page++;
     _updateState(LoadState.loadMore);
-    final list = await _services.api
-        .getReviews(_productId, page: _page, perPage: _perPage);
-    if (list == null || list.isEmpty) {
+    try {
+      final list = await _services.api
+          .getReviews(_product.id, page: _page, perPage: _perPage);
+      if (list == null || list.isEmpty) {
+        _updateState(LoadState.noData);
+        return;
+      }
+      _reviews.addAll(list);
+      if (list.length < _perPage) {
+        _updateState(LoadState.noMore);
+        return;
+      }
+      _updateState(LoadState.loaded);
+    } catch (e) {
       _updateState(LoadState.noData);
-      return;
-    }
-    _reviews.addAll(list);
-    if (list.length < _perPage) {
-      _updateState(LoadState.noMore);
-      return;
     }
-    _updateState(LoadState.loaded);
   }
 
   @override
diff --git a/lib/modules/re_order/widgets/re_order_item_list.dart b/lib/modules/re_order/widgets/re_order_item_list.dart
index ad2ef7c..6840f95 100644
--- a/lib/modules/re_order/widgets/re_order_item_list.dart
+++ b/lib/modules/re_order/widgets/re_order_item_list.dart
@@ -82,171 +82,169 @@ class _ReOrderItemListState extends State<ReOrderItemList> {
               controller: _pageController,
               physics: const NeverScrollableScrollPhysics(),
               children: [
-                Expanded(
-                  child: ListView.separated(
-                    padding: const EdgeInsets.only(
-                      bottom: kToolbarHeight,
-                      left: 16.0,
-                      right: 16.0,
-                    ),
-                    itemBuilder: (context, _) {
-                      final product = _products.values.elementAt(_);
-                      final productId = product.id;
-                      var addonsOptions = (product.addonsOptions ?? '')
-                          .split(', ')
-                          .map(Tools.getFileNameFromUrl)
-                          .join(', ');
+                ListView.separated(
+                  padding: const EdgeInsets.only(
+                    bottom: kToolbarHeight,
+                    left: 16.0,
+                    right: 16.0,
+                  ),
+                  itemBuilder: (context, _) {
+                    final product = _products.values.elementAt(_);
+                    final productId = product.id;
+                    var addonsOptions = (product.addonsOptions ?? '')
+                        .split(', ')
+                        .map(Tools.getFileNameFromUrl)
+                        .join(', ');
 
-                      final isBookingType =
-                          product.product!.type == 'appointment';
-                      final isBookingSet = _bookingProducts[productId] != null;
+                    final isBookingType =
+                        product.product!.type == 'appointment';
+                    final isBookingSet = _bookingProducts[productId] != null;
 
-                      if (isBookingType) {
-                        if (!isBookingSet) {
-                          addonsOptions = '';
-                        } else {
-                          addonsOptions =
-                              '${_bookingProducts[productId]!.month}/${_bookingProducts[productId]!.day}/${_bookingProducts[productId]!.year} ${DateFormat('jm', 'en').format(_bookingProducts[productId]!.timeStart!)}';
-                        }
+                    if (isBookingType) {
+                      if (!isBookingSet) {
+                        addonsOptions = '';
+                      } else {
+                        addonsOptions =
+                            '${_bookingProducts[productId]!.month}/${_bookingProducts[productId]!.day}/${_bookingProducts[productId]!.year} ${DateFormat('jm', 'en').format(_bookingProducts[productId]!.timeStart!)}';
                       }
-                      return Dismissible(
-                        key: ValueKey(productId),
-                        onDismissed: (_) {
-                          _products.remove(productId);
-                          _bookingProducts.remove(productId);
-                          _errorMessages.remove(productId);
-                          setState(() {});
-                          if (_products.isEmpty) {
-                            Navigator.of(context).pop();
-                          }
-                        },
-                        child: Column(
-                          mainAxisAlignment: MainAxisAlignment.start,
-                          children: [
-                            SizedBox(
-                              height: 120,
-                              width: MediaQuery.of(context).size.width,
-                              child: Row(
-                                crossAxisAlignment: CrossAxisAlignment.start,
-                                children: [
-                                  Center(
-                                    child: ClipRRect(
-                                      borderRadius: BorderRadius.circular(10.0),
-                                      child: Container(
-                                        width: 120,
-                                        height: 120,
-                                        color: Colors.grey.withOpacity(0.2),
-                                        child: ImageTools.image(
-                                          url: product.featuredImage,
-                                          fit: BoxFit.cover,
-                                        ),
+                    }
+                    return Dismissible(
+                      key: ValueKey(productId),
+                      onDismissed: (_) {
+                        _products.remove(productId);
+                        _bookingProducts.remove(productId);
+                        _errorMessages.remove(productId);
+                        setState(() {});
+                        if (_products.isEmpty) {
+                          Navigator.of(context).pop();
+                        }
+                      },
+                      child: Column(
+                        mainAxisAlignment: MainAxisAlignment.start,
+                        children: [
+                          SizedBox(
+                            height: 120,
+                            width: MediaQuery.of(context).size.width,
+                            child: Row(
+                              crossAxisAlignment: CrossAxisAlignment.start,
+                              children: [
+                                Center(
+                                  child: ClipRRect(
+                                    borderRadius: BorderRadius.circular(10.0),
+                                    child: Container(
+                                      width: 120,
+                                      height: 120,
+                                      color: Colors.grey.withOpacity(0.2),
+                                      child: ImageResize(
+                                        url: product.featuredImage,
+                                        fit: BoxFit.cover,
                                       ),
                                     ),
                                   ),
-                                  const SizedBox(
-                                    width: 10.0,
-                                  ),
-                                  Expanded(
-                                    child: Column(
-                                      mainAxisSize: MainAxisSize.min,
-                                      crossAxisAlignment:
-                                          CrossAxisAlignment.start,
-                                      children: [
-                                        Text(
-                                          product.name ?? '',
-                                          style: Theme.of(context)
-                                              .textTheme
-                                              .subtitle1!
-                                              .copyWith(
-                                                  fontWeight: FontWeight.w700),
-                                          maxLines: 2,
-                                          overflow: TextOverflow.ellipsis,
-                                        ),
-                                        const SizedBox(
-                                          height: 5.0,
-                                        ),
-                                        Text(
-                                          S
-                                              .of(context)
-                                              .qtyTotal(product.quantity ?? 0),
-                                          style: Theme.of(context)
-                                              .textTheme
-                                              .caption!
-                                              .copyWith(fontSize: 12.0),
-                                        ),
-                                        const SizedBox(
-                                          height: 5.0,
-                                        ),
-                                        if (isBookingType)
-                                          Flexible(
-                                            child: GestureDetector(
-                                              onTap: () {
-                                                if (productId != null) {
-                                                  _selectDatesTapped(productId);
-                                                }
-                                              },
-                                              child: Text(
-                                                isBookingSet
-                                                    ? addonsOptions
-                                                    : S.of(context).selectDates,
-                                                maxLines: 2,
-                                                style: Theme.of(context)
-                                                    .textTheme
-                                                    .caption!
-                                                    .copyWith(
-                                                        fontSize: 12.0,
-                                                        color: Theme.of(context)
-                                                            .primaryColor),
-                                              ),
-                                            ),
-                                          ),
-                                        if (!isBookingType)
-                                          Flexible(
+                                ),
+                                const SizedBox(
+                                  width: 10.0,
+                                ),
+                                Expanded(
+                                  child: Column(
+                                    mainAxisSize: MainAxisSize.min,
+                                    crossAxisAlignment:
+                                        CrossAxisAlignment.start,
+                                    children: [
+                                      Text(
+                                        product.name ?? '',
+                                        style: Theme.of(context)
+                                            .textTheme
+                                            .subtitle1!
+                                            .copyWith(
+                                                fontWeight: FontWeight.w700),
+                                        maxLines: 2,
+                                        overflow: TextOverflow.ellipsis,
+                                      ),
+                                      const SizedBox(
+                                        height: 5.0,
+                                      ),
+                                      Text(
+                                        S
+                                            .of(context)
+                                            .qtyTotal(product.quantity ?? 0),
+                                        style: Theme.of(context)
+                                            .textTheme
+                                            .caption!
+                                            .copyWith(fontSize: 12.0),
+                                      ),
+                                      const SizedBox(
+                                        height: 5.0,
+                                      ),
+                                      if (isBookingType)
+                                        Flexible(
+                                          child: GestureDetector(
+                                            onTap: () {
+                                              if (productId != null) {
+                                                _selectDatesTapped(productId);
+                                              }
+                                            },
                                             child: Text(
-                                              addonsOptions,
+                                              isBookingSet
+                                                  ? addonsOptions
+                                                  : S.of(context).selectDates,
                                               maxLines: 2,
                                               style: Theme.of(context)
                                                   .textTheme
                                                   .caption!
-                                                  .copyWith(fontSize: 12.0),
+                                                  .copyWith(
+                                                      fontSize: 12.0,
+                                                      color: Theme.of(context)
+                                                          .primaryColor),
                                             ),
                                           ),
-                                      ],
-                                    ),
+                                        ),
+                                      if (!isBookingType)
+                                        Flexible(
+                                          child: Text(
+                                            addonsOptions,
+                                            maxLines: 2,
+                                            style: Theme.of(context)
+                                                .textTheme
+                                                .caption!
+                                                .copyWith(fontSize: 12.0),
+                                          ),
+                                        ),
+                                    ],
                                   ),
-                                ],
-                              ),
+                                ),
+                              ],
                             ),
-                            if (_errorMessages[productId]?.isNotEmpty ?? false)
-                              Padding(
-                                padding: const EdgeInsets.only(top: 10.0),
-                                child: _errorMessages[productId] == 'added'
-                                    ? Text(
-                                        S.of(context).added,
-                                        style: Theme.of(context)
-                                            .textTheme
-                                            .caption!
-                                            .copyWith(
-                                                color: Colors.green,
-                                                fontSize: 10.0),
-                                      )
-                                    : Text(
-                                        _errorMessages[productId] ?? '',
-                                        style: Theme.of(context)
-                                            .textTheme
-                                            .caption!
-                                            .copyWith(
-                                                color: Colors.red,
-                                                fontSize: 10.0),
-                                      ),
-                              ),
-                          ],
-                        ),
-                      );
-                    },
-                    separatorBuilder: (context, index) => const Divider(),
-                    itemCount: _products.length,
-                  ),
+                          ),
+                          if (_errorMessages[productId]?.isNotEmpty ?? false)
+                            Padding(
+                              padding: const EdgeInsets.only(top: 10.0),
+                              child: _errorMessages[productId] == 'added'
+                                  ? Text(
+                                      S.of(context).added,
+                                      style: Theme.of(context)
+                                          .textTheme
+                                          .caption!
+                                          .copyWith(
+                                              color: Colors.green,
+                                              fontSize: 10.0),
+                                    )
+                                  : Text(
+                                      _errorMessages[productId] ?? '',
+                                      style: Theme.of(context)
+                                          .textTheme
+                                          .caption!
+                                          .copyWith(
+                                              color: Colors.red,
+                                              fontSize: 10.0),
+                                    ),
+                            ),
+                        ],
+                      ),
+                    );
+                  },
+                  separatorBuilder: (context, index) => const Divider(),
+                  itemCount: _products.length,
                 ),
                 if (_products[_currentProductId]?.product!.type ==
                     'appointment')
diff --git a/lib/modules/sms_login/sms_login.dart b/lib/modules/sms_login/sms_login.dart
index 2a10aa9..816b411 100644
--- a/lib/modules/sms_login/sms_login.dart
+++ b/lib/modules/sms_login/sms_login.dart
@@ -4,6 +4,7 @@ import 'package:provider/provider.dart';
 import '../../../../common/error_codes/error_codes.dart';
 import '../../../../generated/l10n.dart';
 import '../../../../models/entities/user.dart';
+import '../../models/entities/firebase_error_exception.dart';
 import '../../widgets/common/loading_body.dart';
 import 'sms_info.dart';
 import 'sms_model.dart';
@@ -67,32 +68,42 @@ class _SMSIndexState extends State<SMSIndex> {
       return;
     }
 
-    if (err == 'invalid-phone-number') {
-      ScaffoldMessenger.of(context).showSnackBar(SnackBar(
-        content: Text(S.of(context).invalidPhoneNumber),
-        duration: const Duration(seconds: 3),
-      ));
-      return;
-    }
+    if (err is FirebaseErrorException) {
+      if (err.code == 'invalid-phone-number') {
+        ScaffoldMessenger.of(context).showSnackBar(SnackBar(
+          content: Text(S.of(context).invalidPhoneNumber),
+          duration: const Duration(seconds: 3),
+        ));
+        return;
+      }
 
-    if (err == 'too-many-requests') {
-      ScaffoldMessenger.of(context).showSnackBar(SnackBar(
-        content: Text(S.of(context).requestTooMany),
-        duration: const Duration(seconds: 3),
-      ));
-      return;
-    }
+      if (err.code == 'too-many-requests') {
+        ScaffoldMessenger.of(context).showSnackBar(SnackBar(
+          content: Text(S.of(context).requestTooMany),
+          duration: const Duration(seconds: 3),
+        ));
+        return;
+      }
 
-    if (err == 'invalid-verification-code') {
-      ScaffoldMessenger.of(context).showSnackBar(SnackBar(
-        content: Text(S.of(context).invalidSMSCode),
-        duration: const Duration(seconds: 3),
-      ));
-      return;
+      if (err.code == 'invalid-verification-code') {
+        ScaffoldMessenger.of(context).showSnackBar(SnackBar(
+          content: Text(S.of(context).invalidSMSCode),
+          duration: const Duration(seconds: 3),
+        ));
+        return;
+      }
+
+      if (err.code == 'session-expired') {
+        ScaffoldMessenger.of(context).showSnackBar(SnackBar(
+          content: Text(S.of(context).smsCodeExpired),
+          duration: const Duration(seconds: 3),
+        ));
+        return;
+      }
     }
 
     ScaffoldMessenger.of(context).showSnackBar(SnackBar(
-      content: Text(err),
+      content: Text(err.toString()),
       duration: const Duration(seconds: 5),
     ));
   }
@@ -131,11 +142,14 @@ class _SMSIndexState extends State<SMSIndex> {
 
   @override
   Widget build(BuildContext context) {
+    var canPop = ModalRoute.of(context)?.canPop ?? false;
+
     final model = Provider.of<SMSModel>(context, listen: false);
     final theme = Theme.of(context);
     return Scaffold(
       backgroundColor: theme.backgroundColor,
       appBar: AppBar(
+        iconTheme: Theme.of(context).iconTheme,
         backgroundColor: theme.backgroundColor,
         elevation: 0.0,
         leading: AnimatedBuilder(
@@ -143,7 +157,14 @@ class _SMSIndexState extends State<SMSIndex> {
           builder: (context, child) {
             final index = _pageController.page ?? _inputPhonePage;
             if (index == _inputPhonePage) {
-              return const SizedBox();
+              if (!canPop) {
+                return const SizedBox();
+              }
+              return BackButton(
+                onPressed: () {
+                  Navigator.of(context).pop();
+                },
+              );
             }
             return BackButton(
               onPressed: () {
diff --git a/lib/modules/sms_login/sms_model.dart b/lib/modules/sms_login/sms_model.dart
index 34754df..c3cf158 100644
--- a/lib/modules/sms_login/sms_model.dart
+++ b/lib/modules/sms_login/sms_model.dart
@@ -1,6 +1,6 @@
 import 'package:country_code_picker/country_code_picker.dart';
 import 'package:flutter/cupertino.dart';
-import 'package:inspireui/utils/logs.dart';
+import 'package:inspireui/inspireui.dart';
 
 import '../../../../models/entities/user.dart';
 import '../../../../services/services.dart';
@@ -22,7 +22,7 @@ class SMSModel extends ChangeNotifier {
 
   String get phoneNumber => _phoneNumber;
 
-  String get phoneNumberWithoutZero => _phoneNumber.replaceFirst('0', '');
+  String get phoneNumberWithoutZero => _removeLeadingZeros(_phoneNumber);
 
   String get dialPhoneNumber => _countryCode.dialCode! + phoneNumberWithoutZero;
 
@@ -38,6 +38,16 @@ class SMSModel extends ChangeNotifier {
 
   bool get isValidPhoneNumber => _phoneNumber.isNotEmpty;
 
+  String _removeLeadingZeros(String num) {
+    for (var i = 0; i < num.length; i++) {
+      if (num[i] != '0') {
+        var res = num.substring(i);
+        return res;
+      }
+    }
+    return '0';
+  }
+
   void updateCountryCode(CountryCode countryCode) {
     _countryCode = countryCode;
     notifyListeners();
@@ -51,7 +61,7 @@ class SMSModel extends ChangeNotifier {
 
   Future<void> sendOTP({
     VoidCallback? onPageChanged,
-    Function(String)? onMessage,
+    Function(FirebaseErrorException)? onMessage,
     VoidCallback? onVerify,
   }) async {
     try {
@@ -63,7 +73,7 @@ class SMSModel extends ChangeNotifier {
               onVerify?.call();
             },
             verificationFailed: (FirebaseErrorException e) {
-              onMessage?.call(e.code);
+              onMessage?.call(e);
               _updateState(SMSModelState.complete);
             },
             codeSent: (String verificationId, int? resendToken) {
@@ -80,7 +90,7 @@ class SMSModel extends ChangeNotifier {
             codeAutoRetrievalTimeout: (String verificationId) {},
           );
     } catch (err) {
-      printLog(err);
+      printLog(err.toString());
       _updateState(SMSModelState.complete);
     }
   }
@@ -99,8 +109,8 @@ class SMSModel extends ChangeNotifier {
         return true;
       }
     } on FirebaseErrorException catch (err) {
-      printLog(err.message);
-      showMessage(err.code);
+      printLog(err.toString());
+      showMessage(err);
     }
     _updateState(SMSModelState.complete);
     return false;
diff --git a/lib/modules/sms_login/v2/sms_input_phone_v2.dart b/lib/modules/sms_login/v2/sms_input_phone_v2.dart
index e6c908b..ace1845 100644
--- a/lib/modules/sms_login/v2/sms_input_phone_v2.dart
+++ b/lib/modules/sms_login/v2/sms_input_phone_v2.dart
@@ -9,7 +9,6 @@ import 'package:provider/provider.dart';
 import '../../../../../generated/l10n.dart';
 import '../../../common/config.dart';
 import '../../../common/tools/tools.dart';
-import '../../../routes/flux_navigate.dart';
 import '../../../screens/common/select_country_mixin.dart';
 import '../../../screens/home/privacy_term_screen.dart';
 import '../../../widgets/common/common_safe_area.dart';
@@ -166,14 +165,14 @@ class _SMSInputPhoneV2State extends State<SMSInputPhoneV2>
                                 color: Theme.of(context).primaryColor,
                                 decoration: TextDecoration.underline),
                             recognizer: TapGestureRecognizer()
-                              ..onTap = () => FluxNavigate.push(
+                              ..onTap = () => Navigator.push(
+                                    context,
                                     MaterialPageRoute(
                                       builder: (context) =>
                                           const PrivacyTermScreen(
                                         showAgreeButton: false,
                                       ),
                                     ),
-                                    forceRootNavigator: true,
                                   ),
                           ),
                         ],
diff --git a/lib/modules/sms_login/v2/sms_verify_v2.dart b/lib/modules/sms_login/v2/sms_verify_v2.dart
index c6b5fa6..f6d572b 100644
--- a/lib/modules/sms_login/v2/sms_verify_v2.dart
+++ b/lib/modules/sms_login/v2/sms_verify_v2.dart
@@ -85,7 +85,7 @@ class _SMSVerifyV2State extends State<SMSVerifyV2> with CountdownMixin {
                       children: [
                         TextSpan(
                             text:
-                                '(${model.countryDialCode}) ${model.phoneNumberWithoutZero}',
+                                ' (${model.countryDialCode}) ${model.phoneNumberWithoutZero}',
                             style: Theme.of(context)
                                 .textTheme
                                 .bodyLarge
diff --git a/lib/modules/tera_wallet/views/my_wallet_screen.dart b/lib/modules/tera_wallet/views/my_wallet_screen.dart
index 22571fc..3b30a04 100644
--- a/lib/modules/tera_wallet/views/my_wallet_screen.dart
+++ b/lib/modules/tera_wallet/views/my_wallet_screen.dart
@@ -78,7 +78,7 @@ class _MyWalletScreenState extends State<MyWalletScreen> {
                     ),
                   ),
                   Selector<WalletTransactionModel, List<Transaction>?>(
-                    selector: (_, model) => model.data?.take(10).toList(),
+                    selector: (_, model) => model.data.take(10).toList(),
                     builder: (context, listTransaction, child) {
                       if (listTransaction == null) {
                         return ListView.separated(
diff --git a/lib/modules/tera_wallet/views/partial_payment.dart b/lib/modules/tera_wallet/views/partial_payment.dart
index 24ff348..bd729f1 100644
--- a/lib/modules/tera_wallet/views/partial_payment.dart
+++ b/lib/modules/tera_wallet/views/partial_payment.dart
@@ -53,10 +53,10 @@ class _PayPartialPaymentState extends State<PayPartialPayment> {
 
     return Consumer<WalletModel>(
       builder: (context, value, child) {
+        final total = (cartModel.getTotal() ?? 0) + cartModel.walletAmount;
         if (value.balance == 0.0 ||
             cartModel.isWalletCart() ||
-            (value.balance >= cartModel.getTotal()! &&
-                cartModel.walletAmount == 0.0)) {
+            (value.balance >= total && cartModel.walletAmount == 0.0)) {
           return const SizedBox();
         }
 
diff --git a/lib/modules/tera_wallet/views/widgets/payment_method_item.dart b/lib/modules/tera_wallet/views/widgets/payment_method_item.dart
index 519532d..4edc1a1 100644
--- a/lib/modules/tera_wallet/views/widgets/payment_method_item.dart
+++ b/lib/modules/tera_wallet/views/widgets/payment_method_item.dart
@@ -24,14 +24,16 @@ class PaymentMethodItem extends StatelessWidget {
 
   @override
   Widget build(BuildContext context) {
-    final currencyCode = Provider.of<AppModel>(context, listen: false).currencyCode;
+    final currencyCode =
+        Provider.of<AppModel>(context, listen: false).currencyCode;
     final cartModel = Provider.of<CartModel>(context, listen: false);
     final defaultCurrency = kAdvanceConfig.defaultCurrency?.currencyCode;
     final disablePayment = defaultCurrency.toString().toLowerCase() !=
         currencyCode.toString().toLowerCase();
 
     return Consumer<WalletModel>(builder: (context, model, child) {
-      if (model.balance > 0 && (cartModel.getTotal() ?? 0) <= model.balance) {
+      final total = (cartModel.getTotal() ?? 0) + cartModel.walletAmount;
+      if (model.balance > 0 && total <= model.balance) {
         return base.PaymentMethodItem(
             paymentMethod: paymentMethod,
             onSelected: disablePayment == true ? null : onSelected,
diff --git a/lib/modules/tiktok/constants/endpoint.dart b/lib/modules/tiktok/constants/endpoint.dart
index 8403d95..5b25d7f 100644
--- a/lib/modules/tiktok/constants/endpoint.dart
+++ b/lib/modules/tiktok/constants/endpoint.dart
@@ -2,15 +2,10 @@ import 'dart:core';
 
 class TikTokEndPoints {
   static const String _domain = 'https://www.tiktok.com';
-  static const String _user = '$_domain/node/share/user/@';
 
   /// This endpoint requires to request 20 times 😭😭 to get data.
   static const String _userAlt = '$_domain/api/user/detail/?uniqueId=';
-  static const String _videos = '$_domain/share/item/list';
-
-  static String getUserEndpoint(String username) {
-    return '$_user$username';
-  }
+  static const String _videos = '$_domain/api/item_list';
 
   static String getUserEndpointAlt(String username) {
     return '$_userAlt$username';
@@ -23,7 +18,7 @@ class TikTokEndPoints {
     int minCursor = 0,
     int maxCursor = 0,
   }) {
-    var endpoint = '$_videos?type=1';
+    var endpoint = '$_videos?type=1&sourceType=8';
     endpoint += '&count=$count';
     endpoint += '&minCursor=$minCursor';
     endpoint += '&maxCursor=$maxCursor';
diff --git a/lib/modules/tiktok/models/extensions.dart b/lib/modules/tiktok/models/extensions.dart
index c014fc9..5bf0063 100644
--- a/lib/modules/tiktok/models/extensions.dart
+++ b/lib/modules/tiktok/models/extensions.dart
@@ -3,11 +3,15 @@ import 'tiktok_video_info.dart';
 
 extension TikTokVideoExtension on TikTokVideo {
   String get url {
-    final urlList = urls;
-    if (urlList == null || urlList.isEmpty) {
-      return '';
+    var videoUrl = playAddr;
+    if (videoUrl != null && videoUrl.isNotEmpty) {
+      return videoUrl;
     }
-    return urlList.first;
+    videoUrl = downloadAddr;
+    if (videoUrl != null && videoUrl.isNotEmpty) {
+      return videoUrl;
+    }
+    return '';
   }
 }
 
@@ -17,20 +21,20 @@ extension TikTokVideoInfoExtension on TikTokVideoInfo {
   }
 
   int get duration {
-    return video?.videoMeta?.duration ?? 0;
+    return video?.duration ?? 0;
   }
 
   String get videoThumbnail {
-    var urls = covers;
-    if (urls != null && urls.isNotEmpty) {
-      return urls.last;
+    var url = video?.cover;
+    if (url != null && url.isNotEmpty) {
+      return url;
     }
 
-    urls = coversOrigin;
-    if (urls != null && urls.isNotEmpty) {
-      return urls.last;
+    url = video?.originCover;
+    if (url != null && url.isNotEmpty) {
+      return url;
     }
-    urls = shareCover;
+    final urls = video?.shareCover;
     if (urls != null && urls.isNotEmpty) {
       return urls.last;
     }
diff --git a/lib/modules/tiktok/models/index.dart b/lib/modules/tiktok/models/index.dart
index add75da..8c42dc7 100644
--- a/lib/modules/tiktok/models/index.dart
+++ b/lib/modules/tiktok/models/index.dart
@@ -1,4 +1,3 @@
 export 'extensions.dart';
 export 'tiktok_video.dart';
 export 'tiktok_video_info.dart';
-export 'tiktok_video_meta.dart';
diff --git a/lib/modules/tiktok/models/tiktok_video.dart b/lib/modules/tiktok/models/tiktok_video.dart
index cad0e67..38cbf32 100644
--- a/lib/modules/tiktok/models/tiktok_video.dart
+++ b/lib/modules/tiktok/models/tiktok_video.dart
@@ -1,29 +1,89 @@
-import 'tiktok_video_meta.dart';
-
 class TikTokVideo {
-  List<String>? urls;
-  TikTokVideoMeta? videoMeta;
+  int? bitrate;
+  String? codecType;
+  String? cover;
+  String? definition;
+  String? downloadAddr;
+  int? duration;
+  String? dynamicCover;
+  String? encodeUserTag;
+  String? encodedType;
+  String? format;
+  int? height;
+  String? id;
+  String? originCover;
+  String? playAddr;
+  String? ratio;
+  String? reflowCover;
+  List<String>? shareCover;
+  String? videoQuality;
+  int? width;
 
-  TikTokVideo({this.urls, this.videoMeta});
+  TikTokVideo({
+    this.bitrate,
+    this.codecType,
+    this.cover,
+    this.definition,
+    this.downloadAddr,
+    this.duration,
+    this.dynamicCover,
+    this.encodeUserTag,
+    this.encodedType,
+    this.format,
+    this.height,
+    this.id,
+    this.originCover,
+    this.playAddr,
+    this.ratio,
+    this.reflowCover,
+    this.shareCover,
+    this.videoQuality,
+    this.width,
+  });
 
-  TikTokVideo.fromJson(Map<String, dynamic> json) {
-    urls = <String>[];
-    for (var item in json['urls']) {
-      if (item is String && item.isNotEmpty) {
-        urls?.add(item);
-      }
-    }
-    videoMeta = json['videoMeta'] != null
-        ? TikTokVideoMeta.fromJson(json['videoMeta'])
-        : null;
+  TikTokVideo.fromJson(Map json) {
+    bitrate = json['bitrate'];
+    codecType = json['codecType'];
+    cover = json['cover'];
+    definition = json['definition'];
+    downloadAddr = json['downloadAddr'];
+    duration = json['duration'];
+    dynamicCover = json['dynamicCover'];
+    encodeUserTag = json['encodeUserTag'];
+    encodedType = json['encodedType'];
+    format = json['format'];
+    height = json['height'];
+    id = json['id'];
+    originCover = json['originCover'];
+    playAddr = json['playAddr'];
+    ratio = json['ratio'];
+    reflowCover = json['reflowCover'];
+    shareCover = json['shareCover'].cast<String>();
+    videoQuality = json['videoQuality'];
+    width = json['width'];
   }
 
   Map<String, dynamic> toJson() {
     final data = <String, dynamic>{};
-    data['urls'] = urls;
-    if (videoMeta != null) {
-      data['videoMeta'] = videoMeta!.toJson();
-    }
+    data['bitrate'] = bitrate;
+    data['codecType'] = codecType;
+    data['cover'] = cover;
+    data['definition'] = definition;
+    data['downloadAddr'] = downloadAddr;
+    data['duration'] = duration;
+    data['dynamicCover'] = dynamicCover;
+    data['encodeUserTag'] = encodeUserTag;
+    data['encodedType'] = encodedType;
+    data['format'] = format;
+    data['height'] = height;
+    data['id'] = id;
+    data['originCover'] = originCover;
+    data['playAddr'] = playAddr;
+    data['ratio'] = ratio;
+    data['reflowCover'] = reflowCover;
+    data['shareCover'] = shareCover;
+    data['videoQuality'] = videoQuality;
+    data['width'] = width;
     return data;
   }
 }
diff --git a/lib/modules/tiktok/models/tiktok_video_info.dart b/lib/modules/tiktok/models/tiktok_video_info.dart
index 87e4a3f..87cdb52 100644
--- a/lib/modules/tiktok/models/tiktok_video_info.dart
+++ b/lib/modules/tiktok/models/tiktok_video_info.dart
@@ -1,148 +1,108 @@
 import 'tiktok_video.dart';
 
 class TikTokVideoInfo {
-  String? id;
-  String? text;
-  bool? stitchEnabled;
-  bool? shareEnabled;
-  String? createTime;
-  String? authorId;
+  // Custom.
   String authorAvatar = '';
-  String? musicId;
-  List<String>? covers;
-  List<String>? coversOrigin;
-  List<String>? shareCover;
-  List<String>? coversDynamic;
-  TikTokVideo? video;
-  int? diggCount;
-  int? shareCount;
-  int? playCount;
-  int? commentCount;
-  bool? isOriginal;
-  bool? isOfficial;
-  bool? isActivityItem;
-  bool? secret;
+
+  bool? adAuthorization;
+  int? adLabelVersion;
+  int? createTime;
+  String? desc;
+  bool? digged;
+  int? duetDisplay;
+  bool? duetEnabled;
   bool? forFriend;
-  bool? vl1;
-  bool? liked;
-  int? commentStatus;
-  bool? showNotPass;
+  String? id;
   bool? isAd;
+  int? itemCommentStatus;
   bool? itemMute;
+  bool? officalItem;
+  bool? originalItem;
+  bool? privateItem;
+  bool? secret;
+  bool? shareEnabled;
+  bool? showNotPass;
+  int? stitchDisplay;
+  bool? stitchEnabled;
+  TikTokVideo? video;
+  bool? vl1;
 
   TikTokVideoInfo({
-    this.id,
-    this.text,
-    this.stitchEnabled,
-    this.shareEnabled,
+    this.adAuthorization,
+    this.adLabelVersion,
     this.createTime,
-    this.authorId,
-    this.musicId,
-    this.covers,
-    this.coversOrigin,
-    this.shareCover,
-    this.coversDynamic,
-    this.video,
-    this.diggCount,
-    this.shareCount,
-    this.playCount,
-    this.commentCount,
-    this.isOriginal,
-    this.isOfficial,
-    this.isActivityItem,
-    this.secret,
+    this.desc,
+    this.digged,
+    this.duetDisplay,
+    this.duetEnabled,
     this.forFriend,
-    this.vl1,
-    this.liked,
-    this.commentStatus,
-    this.showNotPass,
+    this.id,
     this.isAd,
+    this.itemCommentStatus,
     this.itemMute,
+    this.officalItem,
+    this.originalItem,
+    this.privateItem,
+    this.secret,
+    this.shareEnabled,
+    this.showNotPass,
+    this.stitchDisplay,
+    this.stitchEnabled,
+    this.video,
+    this.vl1,
   });
 
   TikTokVideoInfo.fromJson(Map<String, dynamic> json) {
-    id = json['id'];
-    text = json['text'];
-    stitchEnabled = json['stitchEnabled'];
-    shareEnabled = json['shareEnabled'];
+    adAuthorization = json['adAuthorization'];
+    adLabelVersion = json['adLabelVersion'];
     createTime = json['createTime'];
-    authorId = json['authorId'];
-    authorAvatar = json['authorAvatar'] ?? '';
-    musicId = json['musicId'];
-    covers = <String>[];
-    for (var item in json['covers']) {
-      if (item is String && item.isNotEmpty) {
-        covers?.add(item);
-      }
-    }
-    coversOrigin = <String>[];
-    for (var item in json['coversOrigin']) {
-      if (item is String && item.isNotEmpty) {
-        coversOrigin?.add(item);
-      }
-    }
-    shareCover = <String>[];
-    for (var item in json['shareCover']) {
-      if (item is String && item.isNotEmpty) {
-        shareCover?.add(item);
-      }
-    }
-    coversDynamic = <String>[];
-    for (var item in json['coversDynamic']) {
-      if (item is String && item.isNotEmpty) {
-        coversDynamic?.add(item);
-      }
-    }
-    video = json['video'] != null ? TikTokVideo.fromJson(json['video']) : null;
-    diggCount = json['diggCount'];
-    shareCount = json['shareCount'];
-    playCount = json['playCount'];
-    commentCount = json['commentCount'];
-    isOriginal = json['isOriginal'];
-    isOfficial = json['isOfficial'];
-    isActivityItem = json['isActivityItem'];
-    secret = json['secret'];
+    desc = json['desc'];
+    digged = json['digged'];
+    duetDisplay = json['duetDisplay'];
+    duetEnabled = json['duetEnabled'];
     forFriend = json['forFriend'];
-    vl1 = json['vl1'];
-    liked = json['liked'];
-    commentStatus = json['commentStatus'];
-    showNotPass = json['showNotPass'];
+    id = json['id'];
     isAd = json['isAd'];
+    itemCommentStatus = json['itemCommentStatus'];
     itemMute = json['itemMute'];
+    officalItem = json['officalItem'];
+    originalItem = json['originalItem'];
+    privateItem = json['privateItem'];
+    secret = json['secret'];
+    shareEnabled = json['shareEnabled'];
+    showNotPass = json['showNotPass'];
+    stitchDisplay = json['stitchDisplay'];
+    stitchEnabled = json['stitchEnabled'];
+    video = json['video'] != null ? TikTokVideo.fromJson(json['video']) : null;
+    vl1 = json['vl1'];
   }
 
   Map<String, dynamic> toJson() {
     final data = <String, dynamic>{};
+    data['adAuthorization'] = adAuthorization;
+    data['adLabelVersion'] = adLabelVersion;
+    data['createTime'] = createTime;
+    data['desc'] = desc;
+    data['digged'] = digged;
+    data['duetDisplay'] = duetDisplay;
+    data['duetEnabled'] = duetEnabled;
+    data['forFriend'] = forFriend;
     data['id'] = id;
-    data['text'] = text;
-    data['stitchEnabled'] = stitchEnabled;
+    data['isAd'] = isAd;
+    data['itemCommentStatus'] = itemCommentStatus;
+    data['itemMute'] = itemMute;
+    data['officalItem'] = officalItem;
+    data['originalItem'] = originalItem;
+    data['privateItem'] = privateItem;
+    data['secret'] = secret;
     data['shareEnabled'] = shareEnabled;
-    data['createTime'] = createTime;
-    data['authorId'] = authorId;
-    data['authorAvatar'] = authorAvatar;
-    data['musicId'] = musicId;
-    data['covers'] = covers;
-    data['coversOrigin'] = coversOrigin;
-    data['shareCover'] = shareCover;
-    data['coversDynamic'] = coversDynamic;
+    data['showNotPass'] = showNotPass;
+    data['stitchDisplay'] = stitchDisplay;
+    data['stitchEnabled'] = stitchEnabled;
     if (video != null) {
       data['video'] = video!.toJson();
     }
-    data['diggCount'] = diggCount;
-    data['shareCount'] = shareCount;
-    data['playCount'] = playCount;
-    data['commentCount'] = commentCount;
-    data['isOriginal'] = isOriginal;
-    data['isOfficial'] = isOfficial;
-    data['isActivityItem'] = isActivityItem;
-    data['secret'] = secret;
-    data['forFriend'] = forFriend;
     data['vl1'] = vl1;
-    data['liked'] = liked;
-    data['commentStatus'] = commentStatus;
-    data['showNotPass'] = showNotPass;
-    data['isAd'] = isAd;
-    data['itemMute'] = itemMute;
     return data;
   }
 }
diff --git a/lib/modules/tiktok/models/tiktok_video_meta.dart b/lib/modules/tiktok/models/tiktok_video_meta.dart
deleted file mode 100644
index 8d840ce..0000000
--- a/lib/modules/tiktok/models/tiktok_video_meta.dart
+++ /dev/null
@@ -1,24 +0,0 @@
-class TikTokVideoMeta {
-  int? width;
-  int? height;
-  int? ratio;
-  int? duration;
-
-  TikTokVideoMeta({this.width, this.height, this.ratio, this.duration});
-
-  TikTokVideoMeta.fromJson(Map<String, dynamic> json) {
-    width = json['width'];
-    height = json['height'];
-    ratio = json['ratio'];
-    duration = json['duration'];
-  }
-
-  Map<String, dynamic> toJson() {
-    final data = <String, dynamic>{};
-    data['width'] = width;
-    data['height'] = height;
-    data['ratio'] = ratio;
-    data['duration'] = duration;
-    return data;
-  }
-}
diff --git a/lib/modules/tiktok/services/tiktok_base_service.dart b/lib/modules/tiktok/services/tiktok_base_service.dart
index 8ebc727..bc0d7ae 100644
--- a/lib/modules/tiktok/services/tiktok_base_service.dart
+++ b/lib/modules/tiktok/services/tiktok_base_service.dart
@@ -1,7 +1,8 @@
 import '../models/index.dart';
 
 class TikTokBaseService {
-  Future<void> init(String username) async {}
+  Future<void> init(
+      String username, String uid, String secUid, String avatarUrl) async {}
 
   Future<void> reInit(String response) async {}
 
diff --git a/lib/modules/tiktok/services/tiktok_service.dart b/lib/modules/tiktok/services/tiktok_service.dart
index 1a78761..41a137c 100644
--- a/lib/modules/tiktok/services/tiktok_service.dart
+++ b/lib/modules/tiktok/services/tiktok_service.dart
@@ -12,23 +12,12 @@ class TikTokService extends TikTokBaseService {
   String _userAvatar = '';
 
   @override
-  Future<void> init(String username) async {
+  Future<void> init(
+      String username, String uid, String secUid, String avatarUrl) async {
     _username = username;
-    _userId = '';
-    _secUserId = '';
-    _userAvatar = '';
-
-    try {
-      final endpoint = TikTokEndPoints.getUserEndpoint(username);
-      var response = await httpGet(
-        Uri.parse(endpoint),
-      );
-      var body = response.body;
-      await reInit(body);
-    } catch (err, trace) {
-      printLog(err);
-      printLog(trace);
-    }
+    _userId = uid;
+    _secUserId = secUid;
+    _userAvatar = avatarUrl;
   }
 
   @override
@@ -54,8 +43,7 @@ class TikTokService extends TikTokBaseService {
         }
       }
     } catch (err, trace) {
-      printLog(err);
-      printLog(trace);
+      printError(err, trace);
     }
   }
 
@@ -85,19 +73,14 @@ class TikTokService extends TikTokBaseService {
     try {
       var data = jsonDecode(response);
 
-      final videos = data['body']?['itemListData'] ?? [];
+      final videos = data['items'] ?? [];
       for (var videoInfo in videos) {
-        if (videoInfo is Map &&
-            videoInfo.isNotEmpty &&
-            videoInfo['itemInfos'] != null) {
-          final item = TikTokVideoInfo.fromJson(videoInfo['itemInfos']);
-          item.authorAvatar = _userAvatar;
-          result.add(item);
-        }
+        final item = TikTokVideoInfo.fromJson(videoInfo);
+        item.authorAvatar = _userAvatar;
+        result.add(item);
       }
     } catch (err, trace) {
-      printLog(err);
-      printLog(trace);
+      printError(err, trace);
     }
     return result;
   }
diff --git a/lib/modules/vendor_on_boarding/screen_index.dart b/lib/modules/vendor_on_boarding/screen_index.dart
index 32bf6a0..f09a40b 100644
--- a/lib/modules/vendor_on_boarding/screen_index.dart
+++ b/lib/modules/vendor_on_boarding/screen_index.dart
@@ -21,32 +21,31 @@ class VendorOnBoarding extends StatefulWidget {
 class _VendorOnBoardingState extends State<VendorOnBoarding> {
   var _hasClickedDone = false;
 
-  List<Slide> getSlides(List<dynamic> data) {
-    final slides = <Slide>[];
+  List<ContentConfig> getSlides(List<dynamic> data) {
+    final slides = <ContentConfig>[];
 
     for (var i = 0; i < data.length; i++) {
-      var slide = Slide(
-        title: data[i]['title'],
-        description: data[i]['desc'],
-        marginTitle: const EdgeInsets.only(
-          top: 125.0,
-          bottom: 50.0,
-        ),
-        maxLineTextDescription: 2,
-        styleTitle: const TextStyle(
-          fontWeight: FontWeight.bold,
-          fontSize: 25.0,
-          color: kGrey900,
-        ),
-        backgroundColor: Colors.white,
-        marginDescription: const EdgeInsets.fromLTRB(20.0, 75.0, 20.0, 0),
-        styleDescription: const TextStyle(
-          fontSize: 15.0,
-          color: kGrey600,
-        ),
-        foregroundImageFit: BoxFit.fitWidth,
-      );
-      slide.pathImage = data[i]['image'];
+      var slide = ContentConfig(
+          title: data[i]['title'],
+          description: data[i]['desc'],
+          marginTitle: const EdgeInsets.only(
+            top: 125.0,
+            bottom: 50.0,
+          ),
+          maxLineTextDescription: 2,
+          styleTitle: const TextStyle(
+            fontWeight: FontWeight.bold,
+            fontSize: 25.0,
+            color: kGrey900,
+          ),
+          backgroundColor: Colors.white,
+          marginDescription: const EdgeInsets.fromLTRB(20.0, 75.0, 20.0, 0),
+          styleDescription: const TextStyle(
+            fontSize: 15.0,
+            color: kGrey600,
+          ),
+          foregroundImageFit: BoxFit.fitWidth,
+          pathImage: data[i]['image']);
       slides.add(slide);
     }
     return slides;
@@ -68,7 +67,7 @@ class _VendorOnBoardingState extends State<VendorOnBoarding> {
       child: Scaffold(
         backgroundColor: Colors.white,
         body: IntroSlider(
-          slides: getSlides(data),
+          listContentConfig: getSlides(data),
           renderSkipBtn: Text(
             S.of(context).skip,
             style: TextStyle(color: Theme.of(context).primaryColor),
@@ -85,7 +84,7 @@ class _VendorOnBoardingState extends State<VendorOnBoarding> {
             S.of(context).next,
             style: TextStyle(color: Theme.of(context).primaryColor),
           ),
-          showDoneBtn: true,
+          isShowDoneBtn: true,
           onDonePress: _onNextScreen,
         ),
       ),
diff --git a/lib/modules/vendor_on_boarding/vendor_information/vendor_information_index.dart b/lib/modules/vendor_on_boarding/vendor_information/vendor_information_index.dart
index ad9b2d5..21263a7 100644
--- a/lib/modules/vendor_on_boarding/vendor_information/vendor_information_index.dart
+++ b/lib/modules/vendor_on_boarding/vendor_information/vendor_information_index.dart
@@ -11,6 +11,7 @@ import 'export.dart';
 class VendorIndex extends StatelessWidget {
   final String userCookie;
   final VoidCallback onFinish;
+
   const VendorIndex(
       {Key? key, required this.userCookie, required this.onFinish})
       : super(key: key);
@@ -28,6 +29,7 @@ class VendorIndex extends StatelessWidget {
 
 class VendorInformation extends StatefulWidget {
   final VoidCallback onFinish;
+
   const VendorInformation({Key? key, required this.onFinish}) : super(key: key);
 
   @override
@@ -55,18 +57,7 @@ class _VendorInformationState extends State<VendorInformation> {
             Provider.of<VendorOnBoardingModel>(context, listen: false);
 
         _onStartUpdating();
-        model.updateProfile().then((value) => _onEndUpdating(() {
-              Future.delayed(const Duration(seconds: 2)).then((value) {
-                model.onFinish();
-                _artboard.removeController(_riveController!);
-                Future.delayed(const Duration(seconds: 1)).then((value) {
-                  if (mounted) {
-                    Navigator.of(context).pop();
-                  }
-                });
-                widget.onFinish();
-              });
-            }));
+        model.updateProfile().then((value) => _onEndUpdating(_onFinished));
         return;
       }
     }
@@ -79,6 +70,20 @@ class _VendorInformationState extends State<VendorInformation> {
     );
   }
 
+  void _onFinished() {
+    final model = Provider.of<VendorOnBoardingModel>(context, listen: false);
+    Future.delayed(const Duration(seconds: 2)).then((value) {
+      model.onFinish();
+      _artboard.removeController(_riveController!);
+      Future.delayed(const Duration(seconds: 1)).then((value) {
+        if (mounted) {
+          Navigator.of(context).pop();
+        }
+      });
+      widget.onFinish();
+    });
+  }
+
   void _loadRiveFile() async {
     final bytes = await rootBundle.load(_rivePath);
     _rFile = RiveFile.import(bytes);
@@ -98,12 +103,7 @@ class _VendorInformationState extends State<VendorInformation> {
     _artboard = _rFile.mainArtboard
       ..addController(_riveController = SimpleAnimation('light_tick'));
 
-    _riveController!.isActiveChanged.addListener(() {
-      if (!_riveController!.isActive) {
-        // _artboard.removeController(_riveController!);
-        onFinish();
-      }
-    });
+    _riveController!.isActiveChanged.addListener(_riveListener);
   }
 
   @override
@@ -134,8 +134,16 @@ class _VendorInformationState extends State<VendorInformation> {
     super.initState();
   }
 
+  void _riveListener() {
+    if (!_riveController!.isActive) {
+      // _artboard.removeController(_riveController!);
+      _onFinished();
+    }
+  }
+
   @override
   void dispose() {
+    _riveController?.isActiveChanged.removeListener(_riveListener);
     _riveController?.dispose();
     super.dispose();
   }
@@ -158,7 +166,13 @@ class _VendorInformationState extends State<VendorInformation> {
             appBar: AppBar(
               backgroundColor: Theme.of(context).backgroundColor,
               leading: const SizedBox(width: 50),
-              title: Text(titles[_currentSlide - 1]),
+              title: Text(
+                titles[_currentSlide - 1],
+                style: Theme.of(context)
+                    .textTheme
+                    .headline5
+                    ?.copyWith(fontWeight: FontWeight.w700),
+              ),
               actions: [
                 TextButton(
                   onPressed: () => widget.onFinish(),
diff --git a/lib/routes/aware.dart b/lib/routes/aware.dart
deleted file mode 100644
index 5421f89..0000000
--- a/lib/routes/aware.dart
+++ /dev/null
@@ -1,44 +0,0 @@
-import 'package:flutter/material.dart';
-
-import '../common/constants.dart';
-
-final RouteObserver<PageRoute> routeObserver = RouteObserver<PageRoute>();
-
-class RouteAwareWidget extends StatefulWidget {
-  final String name;
-  final Widget child;
-
-  const RouteAwareWidget(this.name, {required this.child});
-
-  @override
-  State<RouteAwareWidget> createState() => RouteAwareWidgetState();
-}
-
-class RouteAwareWidgetState extends State<RouteAwareWidget> with RouteAware {
-  @override
-  void didChangeDependencies() {
-    super.didChangeDependencies();
-    routeObserver.subscribe(this, ModalRoute.of(context) as PageRoute<dynamic>);
-  }
-
-  @override
-  void dispose() {
-    routeObserver.unsubscribe(this);
-    super.dispose();
-  }
-
-  @override
-  // Called when the current route has been pushed.
-  void didPush() {
-    printLog('didPush ${widget.name}');
-  }
-
-  @override
-  // Called when the top route has been popped off, and the current route shows up.
-  void didPopNext() {
-    printLog('didPopNext ${widget.name}');
-  }
-
-  @override
-  Widget build(BuildContext context) => widget.child;
-}
diff --git a/lib/routes/route.dart b/lib/routes/route.dart
index 07cedcf..98894ca 100644
--- a/lib/routes/route.dart
+++ b/lib/routes/route.dart
@@ -20,18 +20,18 @@ import '../modules/dynamic_layout/helper/helper.dart';
 import '../modules/dynamic_layout/index.dart';
 import '../modules/sms_login/sms_login.dart';
 import '../screens/brand/brand_backdrop.dart';
-import '../screens/categories/main_category_screen.dart';
+import '../screens/dynamic/dynamic_scrollable_screen.dart';
+import '../screens/dynamic/dynamic_tabmenu_screen.dart';
 import '../screens/index.dart';
 import '../screens/login_sms/login_sms_viewmodel.dart';
 import '../screens/order_history/index.dart';
+import '../screens/page_tab_screen.dart';
 import '../screens/pages/static_page.dart';
 import '../screens/subcategories/models/subcategory_model.dart';
 import '../screens/user_update/user_update_screen.dart';
 import '../screens/user_update/user_update_woo_screen.dart';
 import '../services/index.dart';
 
-export 'route_observer.dart';
-
 class Routes {
   static Map<String, WidgetBuilder> getAll() => _routes;
 
@@ -247,8 +247,7 @@ class Routes {
                 listingLocation: listingLocationId,
               );
             } catch (e, trace) {
-              printLog(e.toString());
-              printLog(trace.toString());
+              printError(e, trace);
               return const ProductsScreen();
             }
           });
@@ -284,12 +283,6 @@ class Routes {
       case RouteList.category:
         final data = settings.arguments;
         if (data is TabBarMenuConfig) {
-          if (kAdvanceConfig.categoryConfig.enableLargeCategories) {
-            return _buildRoute(
-              settings,
-              (_) => const MainCategoryScreen(),
-            );
-          }
           return _buildRoute(
             settings,
             (_) => CategoriesScreen(
@@ -335,8 +328,8 @@ class Routes {
               return ChangeNotifierProvider<OrderHistoryDetailModel>.value(
                 value: arguments.model,
                 child: OrderHistoryDetailScreen(
-                  enableReorder: arguments.enableReorder,
-                ),
+                    enableReorder: arguments.enableReorder,
+                    disableReview: arguments.disableReview),
               );
             },
           );
@@ -492,6 +485,33 @@ class Routes {
           );
         }
         return _errorRoute(data.toString());
+      case RouteList.tabMenu:
+        final data = settings.arguments;
+        if (data is List<TabBarMenuConfig>) {
+          return _buildRoute(
+            settings,
+            (context) => DynamicTabMenuScreen(data: data),
+          );
+        }
+        return _errorRoute(data.toString());
+      case RouteList.scrollable:
+        final data = settings.arguments;
+        if (data is List<TabBarMenuConfig>) {
+          return _buildRoute(
+            settings,
+            (context) => DynamicScrollableScreen(data: data),
+          );
+        }
+        return _errorRoute(data.toString());
+      case RouteList.pageTab:
+        final data = settings.arguments;
+        if (data is TabBarMenuConfig) {
+          return _buildRoute(
+            settings,
+            (context) => PageTabScreen(data),
+          );
+        }
+        return _errorRoute(data.toString());
       case RouteList.home:
         return _buildRoute(
           settings,
@@ -544,7 +564,10 @@ class Routes {
               value: subcategoryModel,
               child: ChangeNotifierProvider.value(
                 value: subcategoryModel.listSubcategoryModel,
-                child: SubcategoryScreen(categoryName: arguments.categoryName),
+                child: SubcategoryScreen(
+                  categoryName: arguments.categoryName,
+                  level: arguments.level,
+                ),
               ),
             ),
           );
diff --git a/lib/routes/route_observer.dart b/lib/routes/route_observer.dart
deleted file mode 100644
index 587ff5d..0000000
--- a/lib/routes/route_observer.dart
+++ /dev/null
@@ -1,36 +0,0 @@
-import 'package:flutter/material.dart';
-
-class MyRouteObserver extends RouteObserver<PageRoute<dynamic>> {
-  final Function(String?) action;
-  MyRouteObserver({required this.action});
-
-  void _sendScreenView(PageRoute<dynamic> route) {
-    var screenName = route.settings.name;
-    action.call(screenName);
-    // do something with it, ie. send it to your analytics service collector
-  }
-
-  @override
-  void didPush(Route<dynamic> route, Route<dynamic>? previousRoute) {
-    super.didPush(route, previousRoute);
-    if (route is PageRoute) {
-      _sendScreenView(route);
-    }
-  }
-
-  @override
-  void didReplace({Route<dynamic>? newRoute, Route<dynamic>? oldRoute}) {
-    super.didReplace(newRoute: newRoute, oldRoute: oldRoute);
-    if (newRoute is PageRoute) {
-      _sendScreenView(newRoute);
-    }
-  }
-
-  @override
-  void didPop(Route<dynamic> route, Route<dynamic>? previousRoute) {
-    super.didPop(route, previousRoute);
-    if (previousRoute is PageRoute && route is PageRoute) {
-      _sendScreenView(previousRoute);
-    }
-  }
-}
diff --git a/lib/screens/blog/views/blog_detail_screen.dart b/lib/screens/blog/views/blog_detail_screen.dart
index 8142c9a..9ef5a30 100644
--- a/lib/screens/blog/views/blog_detail_screen.dart
+++ b/lib/screens/blog/views/blog_detail_screen.dart
@@ -90,7 +90,7 @@ class _BlogDetailScreenState extends BaseScreen<BlogDetailScreen>
   Widget build(BuildContext context) {
     return renderScaffold(
       routeName: RouteList.detailBlog,
-      body: Builder(
+      child: Builder(
         builder: (context) {
           if (listBlog.isEmpty) {
             return _buildDetailScreen(blog);
diff --git a/lib/screens/blog/views/list_blog_screen.dart b/lib/screens/blog/views/list_blog_screen.dart
index 16a1ec7..a1e9d3b 100644
--- a/lib/screens/blog/views/list_blog_screen.dart
+++ b/lib/screens/blog/views/list_blog_screen.dart
@@ -18,33 +18,41 @@ class ListBlogScreen extends StatefulWidget {
 }
 
 class _ListBlogScreenState extends BaseScreen<ListBlogScreen> with AppBarMixin {
+  final ScrollController _scrollController = ScrollController();
+
+  @override
+  void initState() {
+    super.initState();
+    screenScrollController = _scrollController;
+  }
+
   @override
   Widget build(BuildContext context) {
     return renderScaffold(
       routeName: RouteList.listBlog,
-      body: Scaffold(
-        appBar: Navigator.canPop(context)
-            ? AppBar(
-                elevation: 0.1,
-                backgroundColor: Theme.of(context).backgroundColor,
-                title: Text(
-                  S.of(context).blog,
-                  style: Theme.of(context)
-                      .textTheme
-                      .headline5
-                      ?.copyWith(fontWeight: FontWeight.w700),
-                ),
-                leading: Center(
+      secondAppBar: AppBar(
+          elevation: 0.1,
+          backgroundColor: Theme.of(context).backgroundColor,
+          title: Text(
+            S.of(context).blog,
+            style: Theme.of(context)
+                .textTheme
+                .headline5
+                ?.copyWith(fontWeight: FontWeight.w700),
+          ),
+          leading: !(ModalRoute.of(context)?.canPop ?? false)
+              ? null
+              : Center(
                   child: GestureDetector(
                     onTap: () => Navigator.pop(context),
                     child: const Icon(
                       Icons.arrow_back_ios,
                     ),
                   ),
-                ),
-              )
-            : null,
+                )),
+      child: Scaffold(
         body: PagingList<ListBlogModel, Blog>(
+          scrollController: _scrollController,
           itemBuilder: (context, blog, _) => BlogListItem(
               blog: blog,
               onTap: () {
@@ -59,6 +67,7 @@ class _ListBlogScreenState extends BaseScreen<ListBlogScreen> with AppBarMixin {
               }),
           loadingWidget: _buildSkeleton(),
           lengthLoadingWidget: 3,
+          autoInitData: false,
         ),
       ),
     );
diff --git a/lib/screens/blog/views/widgets/blog_list_item.dart b/lib/screens/blog/views/widgets/blog_list_item.dart
index 50e818b..7e93cc0 100644
--- a/lib/screens/blog/views/widgets/blog_list_item.dart
+++ b/lib/screens/blog/views/widgets/blog_list_item.dart
@@ -27,7 +27,7 @@ class BlogListItem extends StatelessWidget {
             const SizedBox(height: 20.0),
             ClipRRect(
               borderRadius: BorderRadius.circular(3.0),
-              child: ImageTools.image(
+              child: ImageResize(
                 url: blog.imageFeature,
                 width: screenWidth,
                 height: screenWidth * 0.5,
diff --git a/lib/screens/brand/brand_backdrop.dart b/lib/screens/brand/brand_backdrop.dart
index b70cc4f..0004e46 100644
--- a/lib/screens/brand/brand_backdrop.dart
+++ b/lib/screens/brand/brand_backdrop.dart
@@ -10,7 +10,7 @@ import '../../models/app_model.dart';
 import '../../models/brand_model.dart';
 import '../../models/entities/filter_sorty_by.dart';
 import '../../models/entities/product.dart';
-import '../../modules/firebase/dynamic_link_service.dart';
+import '../../modules/firebase/firebase_service.dart';
 import '../../services/services.dart';
 import '../../widgets/backdrop/backdrop.dart';
 import '../../widgets/backdrop/backdrop_menu.dart';
@@ -179,13 +179,22 @@ class _BrandPageState extends State<BrandPage>
                   duration: const Duration(seconds: 2),
                 ),
               );
-              var currentCateId =
+              var currentBrandId =
                   Provider.of<BrandModel>(context, listen: false).brandId;
-              var cateUrl = await DynamicLinkService()
-                  .generateProductBrandUrl(currentCateId);
-              Services().firebase.shareDynamicLinkProduct(
-                    itemUrl: cateUrl,
-                  );
+              var brandUrl = await FirebaseServices()
+                  .dynamicLinks
+                  ?.generateProductBrandUrl(currentBrandId);
+              if (brandUrl?.isNotEmpty ?? false) {
+                Services().firebase.shareDynamicLinkProduct(itemUrl: brandUrl);
+              } else {
+                unawaited(
+                  FlashHelper.errorMessage(
+                    context,
+                    message: S.of(context).failedToGenerateLink,
+                    duration: const Duration(seconds: 2),
+                  ),
+                );
+              }
             },
           ),
         );
diff --git a/lib/screens/cart/cart_screen.dart b/lib/screens/cart/cart_screen.dart
index e6773fd..86edc91 100644
--- a/lib/screens/cart/cart_screen.dart
+++ b/lib/screens/cart/cart_screen.dart
@@ -32,13 +32,21 @@ class CartScreen extends StatefulWidget {
 }
 
 class _CartScreenState extends State<CartScreen> with AppBarMixin {
+  final ScrollController _scrollController = ScrollController();
+
+  @override
+  void initState() {
+    super.initState();
+    screenScrollController = _scrollController;
+  }
+
   @override
   Widget build(BuildContext context) {
     return renderScaffold(
       routeName: RouteList.cart,
       hideNewAppBar: widget.hideNewAppBar,
       backgroundColor: Theme.of(context).backgroundColor,
-      body: Selector<CartModel, bool>(
+      child: Selector<CartModel, bool>(
         selector: (_, cartModel) => cartModel.calculatingDiscount,
         builder: (context, calculatingDiscount, child) {
           return LoadingBody(
@@ -49,6 +57,8 @@ class _CartScreenState extends State<CartScreen> with AppBarMixin {
         child: MyCart(
           isBuyNow: widget.isBuyNow,
           isModal: widget.isModal,
+          scrollController: _scrollController,
+          hasNewAppBar: showAppBar(RouteList.cart),
         ),
       ),
     );
diff --git a/lib/screens/cart/my_cart_screen.dart b/lib/screens/cart/my_cart_screen.dart
index 8014b0a..692d2ed 100644
--- a/lib/screens/cart/my_cart_screen.dart
+++ b/lib/screens/cart/my_cart_screen.dart
@@ -79,10 +79,14 @@ List<Widget> createShoppingCartRows(CartModel model, BuildContext context) {
 class MyCart extends StatefulWidget {
   final bool? isModal;
   final bool? isBuyNow;
+  final bool hasNewAppBar;
+  final ScrollController? scrollController;
 
   const MyCart({
     this.isModal,
     this.isBuyNow = false,
+    this.hasNewAppBar = false,
+    this.scrollController,
   });
 
   @override
@@ -127,65 +131,13 @@ class _MyCartState extends State<MyCart> with SingleTickerProviderStateMixin {
     final ModalRoute<dynamic>? parentRoute = ModalRoute.of(context);
     final canPop = parentRoute?.canPop ?? false;
 
-    return Scaffold(
-      backgroundColor: Theme.of(context).backgroundColor,
-      floatingActionButton: Selector<CartModel, bool>(
-        selector: (_, cartModel) => cartModel.calculatingDiscount,
-        builder: (context, calculatingDiscount, child) {
-          return FloatingActionButton.extended(
-            heroTag: null,
-            onPressed: calculatingDiscount
-                ? null
-                : () {
-                    if (kAdvanceConfig.alwaysShowTabBar) {
-                      MainTabControlDelegate.getInstance()
-                          .changeTab(RouteList.cart, allowPush: false);
-                      // return;
-                    }
-                    onCheckout(cartModel);
-                  },
-            elevation: 0,
-            isExtended: true,
-            extendedTextStyle: const TextStyle(
-              letterSpacing: 0.8,
-              fontSize: 11,
-              fontWeight: FontWeight.w600,
-            ),
-            extendedPadding:
-                const EdgeInsets.symmetric(vertical: 0, horizontal: 10),
-            backgroundColor: Theme.of(context).primaryColor,
-            foregroundColor: Colors.white,
-            shape: RoundedRectangleBorder(
-              borderRadius: BorderRadius.circular(9.0),
-            ),
-            materialTapTargetSize: MaterialTapTargetSize.shrinkWrap,
-            label: child!,
-          );
-        },
-        child: Selector<CartModel, int>(
-          selector: (_, carModel) => cartModel.totalCartQuantity,
-          builder: (context, totalCartQuantity, child) {
-            // if (totalCartQuantity == 0) {
-            //   return const SizedBox();
-            // }
-            return Row(
-              children: [
-                totalCartQuantity > 0
-                    ? (isLoading
-                        ? Text(S.of(context).loading.toUpperCase())
-                        : Text(S.of(context).checkout.toUpperCase()))
-                    : Text(S.of(context).startShopping.toUpperCase()),
-                const SizedBox(width: 3),
-                const Icon(CupertinoIcons.right_chevron, size: 12),
-              ],
-            );
-          },
-        ),
-      ),
-      floatingActionButtonLocation: FloatingActionButtonLocation.endTop,
-      body: CustomScrollView(
-        slivers: [
-          SliverAppBar(
+    return CustomScrollView(
+      controller: widget.scrollController,
+      slivers: [
+        MediaQuery.removePadding(
+          context: context,
+          removeTop: widget.hasNewAppBar && widget.isModal != true,
+          child: SliverAppBar(
             pinned: true,
             centerTitle: false,
             leading: widget.isModal == true
@@ -216,169 +168,229 @@ class _MyCartState extends State<MyCart> with SingleTickerProviderStateMixin {
                   .headline5!
                   .copyWith(fontWeight: FontWeight.w700),
             ),
+            actions: [
+              Padding(
+                padding: const EdgeInsets.symmetric(
+                  vertical: 4,
+                  horizontal: 16,
+                ),
+                child: Selector<CartModel, bool>(
+                  selector: (_, cartModel) => cartModel.calculatingDiscount,
+                  builder: (context, calculatingDiscount, child) {
+                    return TextButton(
+                      onPressed: calculatingDiscount
+                          ? null
+                          : () {
+                              if (kAdvanceConfig.alwaysShowTabBar) {
+                                MainTabControlDelegate.getInstance().changeTab(
+                                    RouteList.cart,
+                                    allowPush: false);
+                                // return;
+                              }
+                              onCheckout(cartModel);
+                            },
+                      style: TextButton.styleFrom(
+                        backgroundColor: Theme.of(context).primaryColor,
+                        foregroundColor: Colors.white,
+                        shape: RoundedRectangleBorder(
+                          borderRadius: BorderRadius.circular(9.0),
+                        ),
+                        padding: const EdgeInsets.symmetric(
+                          vertical: 0,
+                          horizontal: 10,
+                        ),
+                        textStyle: const TextStyle(
+                          letterSpacing: 0.8,
+                          fontSize: 11,
+                          fontWeight: FontWeight.w600,
+                        ),
+                        elevation: 0,
+                      ),
+                      child: child!,
+                    );
+                  },
+                  child: Selector<CartModel, int>(
+                    selector: (_, carModel) => cartModel.totalCartQuantity,
+                    builder: (context, totalCartQuantity, child) {
+                      // if (totalCartQuantity == 0) {
+                      //   return const SizedBox();
+                      // }
+                      return Row(
+                        children: [
+                          totalCartQuantity > 0
+                              ? (isLoading
+                                  ? Text(S.of(context).loading.toUpperCase())
+                                  : Text(S.of(context).checkout.toUpperCase()))
+                              : Text(S.of(context).startShopping.toUpperCase()),
+                          const SizedBox(width: 3),
+                          const Icon(CupertinoIcons.right_chevron, size: 12),
+                        ],
+                      );
+                    },
+                  ),
+                ),
+              ),
+            ],
           ),
-          SliverToBoxAdapter(
-            child: Selector<CartModel, int>(
-              selector: (_, cartModel) => cartModel.totalCartQuantity,
-              builder: (context, totalCartQuantity, child) {
-                return AutoHideKeyboard(
-                  child: Container(
-                    decoration:
-                        BoxDecoration(color: Theme.of(context).backgroundColor),
-                    child: SingleChildScrollView(
-                      child: Padding(
-                        padding: const EdgeInsets.only(bottom: 80.0),
-                        child: Column(
-                          children: [
-                            if (totalCartQuantity > 0)
-                              Container(
-                                // decoration: BoxDecoration(
-                                //     color: Theme.of(context).primaryColorLight),
-                                padding: const EdgeInsets.only(
-                                  right: 15.0,
-                                  top: 4.0,
-                                ),
+        ),
+        SliverToBoxAdapter(
+          child: Selector<CartModel, int>(
+            selector: (_, cartModel) => cartModel.totalCartQuantity,
+            builder: (context, totalCartQuantity, child) {
+              return AutoHideKeyboard(
+                child: Container(
+                  decoration:
+                      BoxDecoration(color: Theme.of(context).backgroundColor),
+                  child: SingleChildScrollView(
+                    child: Padding(
+                      padding: const EdgeInsets.only(bottom: 80.0),
+                      child: Column(
+                        children: [
+                          if (totalCartQuantity > 0)
+                            Container(
+                              // decoration: BoxDecoration(
+                              //     color: Theme.of(context).primaryColorLight),
+                              padding: const EdgeInsets.only(
+                                right: 15.0,
+                                top: 4.0,
+                              ),
+                              child: SizedBox(
+                                width: screenSize.width,
                                 child: SizedBox(
-                                  width: screenSize.width,
-                                  child: SizedBox(
-                                    width: screenSize.width /
-                                        (2 /
-                                            (screenSize.height /
-                                                screenSize.width)),
-                                    child: Row(
-                                      children: [
-                                        const SizedBox(width: 25.0),
-                                        Text(
-                                          S.of(context).total.toUpperCase(),
-                                          style: localTheme.textTheme.subtitle1!
-                                              .copyWith(
-                                            fontWeight: FontWeight.w600,
-                                            color:
-                                                Theme.of(context).primaryColor,
-                                            fontSize: 14,
-                                          ),
-                                        ),
-                                        const SizedBox(width: 8.0),
-                                        Text(
-                                          '$totalCartQuantity ${S.of(context).items}',
-                                          style: TextStyle(
-                                              color: Theme.of(context)
-                                                  .primaryColor),
+                                  width: screenSize.width /
+                                      (2 /
+                                          (screenSize.height /
+                                              screenSize.width)),
+                                  child: Row(
+                                    children: [
+                                      const SizedBox(width: 25.0),
+                                      Text(
+                                        S.of(context).total.toUpperCase(),
+                                        style: localTheme.textTheme.subtitle1!
+                                            .copyWith(
+                                          fontWeight: FontWeight.w600,
+                                          color: Theme.of(context).primaryColor,
+                                          fontSize: 14,
                                         ),
-                                        Expanded(
-                                          child: Align(
-                                            alignment: Tools.isRTL(context)
-                                                ? Alignment.centerLeft
-                                                : Alignment.centerRight,
-                                            child: TextButton(
-                                              onPressed: () {
-                                                if (totalCartQuantity > 0) {
-                                                  showDialog(
-                                                    context: context,
-                                                    useRootNavigator: false,
-                                                    builder:
-                                                        (BuildContext context) {
-                                                      return AlertDialog(
-                                                        content: Text(S
-                                                            .of(context)
-                                                            .confirmClearTheCart),
-                                                        actions: [
-                                                          TextButton(
-                                                            onPressed: () {
-                                                              Navigator.of(
-                                                                      context)
-                                                                  .pop();
-                                                            },
-                                                            child: Text(S
-                                                                .of(context)
-                                                                .keep),
-                                                          ),
-                                                          ElevatedButton(
-                                                            onPressed: () {
-                                                              Navigator.of(
-                                                                      context)
-                                                                  .pop();
-                                                              cartModel
-                                                                  .clearCart();
-                                                            },
-                                                            child: Text(
-                                                              S
-                                                                  .of(context)
-                                                                  .clear,
-                                                              style:
-                                                                  const TextStyle(
-                                                                color: Colors
-                                                                    .white,
-                                                              ),
+                                      ),
+                                      const SizedBox(width: 8.0),
+                                      Text(
+                                        '$totalCartQuantity ${S.of(context).items}',
+                                        style: TextStyle(
+                                            color:
+                                                Theme.of(context).primaryColor),
+                                      ),
+                                      Expanded(
+                                        child: Align(
+                                          alignment: Tools.isRTL(context)
+                                              ? Alignment.centerLeft
+                                              : Alignment.centerRight,
+                                          child: TextButton(
+                                            onPressed: () {
+                                              if (totalCartQuantity > 0) {
+                                                showDialog(
+                                                  context: context,
+                                                  useRootNavigator: false,
+                                                  builder:
+                                                      (BuildContext context) {
+                                                    return AlertDialog(
+                                                      content: Text(S
+                                                          .of(context)
+                                                          .confirmClearTheCart),
+                                                      actions: [
+                                                        TextButton(
+                                                          onPressed: () {
+                                                            Navigator.of(
+                                                                    context)
+                                                                .pop();
+                                                          },
+                                                          child: Text(S
+                                                              .of(context)
+                                                              .keep),
+                                                        ),
+                                                        ElevatedButton(
+                                                          onPressed: () {
+                                                            Navigator.of(
+                                                                    context)
+                                                                .pop();
+                                                            cartModel
+                                                                .clearCart();
+                                                          },
+                                                          child: Text(
+                                                            S.of(context).clear,
+                                                            style:
+                                                                const TextStyle(
+                                                              color:
+                                                                  Colors.white,
                                                             ),
                                                           ),
-                                                        ],
-                                                      );
-                                                    },
-                                                  );
-                                                }
-                                              },
-                                              child: Text(
-                                                S
-                                                    .of(context)
-                                                    .clearCart
-                                                    .toUpperCase(),
-                                                style: const TextStyle(
-                                                  color: Colors.redAccent,
-                                                  fontSize: 12,
-                                                ),
+                                                        ),
+                                                      ],
+                                                    );
+                                                  },
+                                                );
+                                              }
+                                            },
+                                            child: Text(
+                                              S
+                                                  .of(context)
+                                                  .clearCart
+                                                  .toUpperCase(),
+                                              style: const TextStyle(
+                                                color: Colors.redAccent,
+                                                fontSize: 12,
                                               ),
                                             ),
                                           ),
-                                        )
-                                      ],
-                                    ),
+                                        ),
+                                      )
+                                    ],
                                   ),
                                 ),
                               ),
-                            if (totalCartQuantity > 0)
-                              const Divider(
-                                height: 1,
-                                // indent: 25,
-                              ),
-                            Column(
-                              crossAxisAlignment: CrossAxisAlignment.center,
-                              children: <Widget>[
-                                const SizedBox(height: 16.0),
-                                if (totalCartQuantity > 0)
-                                  Column(
-                                    children: createShoppingCartRows(
-                                        cartModel, context),
+                            ),
+                          if (totalCartQuantity > 0)
+                            const Divider(
+                              height: 1,
+                              // indent: 25,
+                            ),
+                          Column(
+                            crossAxisAlignment: CrossAxisAlignment.center,
+                            children: <Widget>[
+                              const SizedBox(height: 16.0),
+                              if (totalCartQuantity > 0)
+                                Column(
+                                  children: createShoppingCartRows(
+                                      cartModel, context),
+                                ),
+                              const ShoppingCartSummary(),
+                              if (totalCartQuantity == 0) EmptyCart(),
+                              if (errMsg.isNotEmpty)
+                                Padding(
+                                  padding: const EdgeInsets.symmetric(
+                                    horizontal: 15,
+                                    vertical: 10,
                                   ),
-                                const ShoppingCartSummary(),
-                                if (totalCartQuantity == 0) EmptyCart(),
-                                if (errMsg.isNotEmpty)
-                                  Padding(
-                                    padding: const EdgeInsets.symmetric(
-                                      horizontal: 15,
-                                      vertical: 10,
-                                    ),
-                                    child: Text(
-                                      errMsg,
-                                      style: const TextStyle(color: Colors.red),
-                                      textAlign: TextAlign.center,
-                                    ),
+                                  child: Text(
+                                    errMsg,
+                                    style: const TextStyle(color: Colors.red),
+                                    textAlign: TextAlign.center,
                                   ),
-                                const SizedBox(height: 4.0),
-                                WishList()
-                              ],
-                            )
-                          ],
-                        ),
+                                ),
+                              const SizedBox(height: 4.0),
+                              WishList()
+                            ],
+                          )
+                        ],
                       ),
                     ),
                   ),
-                );
-              },
-            ),
-          )
-        ],
-      ),
+                ),
+              );
+            },
+          ),
+        )
+      ],
     );
   }
 
@@ -404,7 +416,7 @@ class _MyCartState extends State<MyCart> with SingleTickerProviderStateMixin {
       }
     }
 
-    if ((kVendorConfig['DisableMultiVendorCheckout'] ?? false) &&
+    if (kVendorConfig.disableMultiVendorCheckout &&
         ServerConfig().isVendorType()) {
       if (!model.isDisableMultiVendorCheckoutValid(
           model.productsInCart, model.getProductById)) {
diff --git a/lib/screens/cart/widgets/shopping_cart_sumary.dart b/lib/screens/cart/widgets/shopping_cart_sumary.dart
index a874e8a..935909a 100644
--- a/lib/screens/cart/widgets/shopping_cart_sumary.dart
+++ b/lib/screens/cart/widgets/shopping_cart_sumary.dart
@@ -15,7 +15,9 @@ import 'coupon_list.dart';
 import 'point_reward.dart';
 
 class ShoppingCartSummary extends StatefulWidget {
-  const ShoppingCartSummary();
+  final bool showPrice;
+
+  const ShoppingCartSummary({this.showPrice = true});
 
   @override
   State<ShoppingCartSummary> createState() => _ShoppingCartSummaryState();
@@ -190,6 +192,7 @@ class _ShoppingCartSummaryState extends State<ShoppingCartSummary> {
                             top: 20.0,
                             bottom: 20.0,
                           ),
+                          padding: const EdgeInsets.symmetric(vertical: 2),
                           decoration: !isApplyCouponSuccess
                               ? BoxDecoration(
                                   color: Theme.of(context).backgroundColor)
@@ -287,86 +290,87 @@ class _ShoppingCartSummaryState extends State<ShoppingCartSummary> {
                   ),
                 ),
               if (enablePointReward) const PointReward(),
-              Padding(
-                padding: const EdgeInsets.symmetric(
-                  horizontal: 15.0,
-                  vertical: 10.0,
-                ),
-                child: Container(
-                  decoration:
-                      BoxDecoration(color: Theme.of(context).primaryColorLight),
-                  child: Padding(
-                    padding: const EdgeInsets.symmetric(
-                      vertical: 12.0,
-                      horizontal: 15.0,
-                    ),
-                    child: Column(
-                      children: [
-                        Row(
-                          children: [
-                            Expanded(
-                              child: Text(
-                                S.of(context).products,
+              if (widget.showPrice)
+                Padding(
+                  padding: const EdgeInsets.symmetric(
+                    horizontal: 15.0,
+                    vertical: 10.0,
+                  ),
+                  child: Container(
+                    decoration: BoxDecoration(
+                        color: Theme.of(context).primaryColorLight),
+                    child: Padding(
+                      padding: const EdgeInsets.symmetric(
+                        vertical: 12.0,
+                        horizontal: 15.0,
+                      ),
+                      child: Column(
+                        children: [
+                          Row(
+                            children: [
+                              Expanded(
+                                child: Text(
+                                  S.of(context).products,
+                                  style: smallAmountStyle,
+                                ),
+                              ),
+                              Text(
+                                'x${cartModel.totalCartQuantity}',
                                 style: smallAmountStyle,
                               ),
-                            ),
-                            Text(
-                              'x${cartModel.totalCartQuantity}',
-                              style: smallAmountStyle,
+                            ],
+                          ),
+                          if (cartModel.rewardTotal > 0) ...[
+                            const SizedBox(height: 10),
+                            Row(
+                              children: [
+                                Expanded(
+                                  child: Text(S.of(context).cartDiscount,
+                                      style: smallAmountStyle),
+                                ),
+                                Text(
+                                  PriceTools.getCurrencyFormatted(
+                                      cartModel.rewardTotal, currencyRate,
+                                      currency: currency)!,
+                                  style: smallAmountStyle,
+                                ),
+                              ],
                             ),
                           ],
-                        ),
-                        if (cartModel.rewardTotal > 0) ...[
                           const SizedBox(height: 10),
                           Row(
                             children: [
                               Expanded(
-                                child: Text(S.of(context).cartDiscount,
-                                    style: smallAmountStyle),
-                              ),
-                              Text(
-                                PriceTools.getCurrencyFormatted(
-                                    cartModel.rewardTotal, currencyRate,
-                                    currency: currency)!,
-                                style: smallAmountStyle,
+                                child: Text(
+                                  '${S.of(context).total}:',
+                                  style: largeAmountStyle,
+                                ),
                               ),
+                              cartModel.calculatingDiscount
+                                  ? const SizedBox(
+                                      width: 20,
+                                      height: 20,
+                                      child: CircularProgressIndicator(
+                                        strokeWidth: 2.0,
+                                      ),
+                                    )
+                                  : Text(
+                                      PriceTools.getCurrencyFormatted(
+                                          cartModel.getTotal()! -
+                                              cartModel.getShippingCost()!,
+                                          currencyRate,
+                                          currency: cartModel.isWalletCart()
+                                              ? defaultCurrency?.currencyCode
+                                              : currency)!,
+                                      style: largeAmountStyle,
+                                    ),
                             ],
                           ),
                         ],
-                        const SizedBox(height: 10),
-                        Row(
-                          children: [
-                            Expanded(
-                              child: Text(
-                                '${S.of(context).total}:',
-                                style: largeAmountStyle,
-                              ),
-                            ),
-                            cartModel.calculatingDiscount
-                                ? const SizedBox(
-                                    width: 20,
-                                    height: 20,
-                                    child: CircularProgressIndicator(
-                                      strokeWidth: 2.0,
-                                    ),
-                                  )
-                                : Text(
-                                    PriceTools.getCurrencyFormatted(
-                                        cartModel.getTotal()! -
-                                            cartModel.getShippingCost()!,
-                                        currencyRate,
-                                        currency: cartModel.isWalletCart()
-                                            ? defaultCurrency?.currencyCode
-                                            : currency)!,
-                                    style: largeAmountStyle,
-                                  ),
-                          ],
-                        ),
-                      ],
+                      ),
                     ),
                   ),
                 ),
-              ),
               Services().widget.renderRecurringTotals(context)
             ],
           ),
diff --git a/lib/screens/categories/categories_screen.dart b/lib/screens/categories/categories_screen.dart
index 81dab60..96da96b 100644
--- a/lib/screens/categories/categories_screen.dart
+++ b/lib/screens/categories/categories_screen.dart
@@ -2,16 +2,15 @@ import 'package:flutter/cupertino.dart';
 import 'package:flutter/material.dart';
 import 'package:provider/provider.dart';
 
-import '../../common/config.dart';
 import '../../common/constants.dart';
 import '../../generated/l10n.dart';
-import '../../menu/appbar.dart';
-import '../../models/index.dart' show AppModel, Category, CategoryModel;
-import '../../modules/dynamic_layout/config/app_config.dart';
+import '../../models/index.dart' show AppModel;
 import '../../services/index.dart';
+import '../common/app_bar_mixin.dart';
 import 'layouts/card.dart';
 import 'layouts/column.dart';
 import 'layouts/grid.dart';
+import 'layouts/multi_level.dart';
 import 'layouts/parallax.dart';
 import 'layouts/side_menu.dart';
 import 'layouts/side_menu_with_group.dart';
@@ -37,142 +36,80 @@ class CategoriesScreen extends StatefulWidget {
 }
 
 class CategoriesScreenState extends State<CategoriesScreen>
-    with AutomaticKeepAliveClientMixin, SingleTickerProviderStateMixin {
+    with
+        AutomaticKeepAliveClientMixin,
+        SingleTickerProviderStateMixin,
+        AppBarMixin {
   @override
   bool get wantKeepAlive => true;
 
-  late FocusNode _focus;
-  bool isVisibleSearch = false;
-  String? searchText;
-  var textController = TextEditingController();
-
-  late Animation<double> animation;
-  late AnimationController controller;
-
-  AppBarConfig? get appBar =>
-      context.select((AppModel model) => model.appConfig?.appBar);
+  final ScrollController _scrollController = ScrollController();
 
   @override
   void initState() {
     super.initState();
-    controller = AnimationController(
-        duration: const Duration(milliseconds: 300), vsync: this);
-    animation = Tween<double>(begin: 0, end: 60).animate(controller);
-    animation.addListener(() {
-      setState(() {});
-    });
-
-    _focus = FocusNode();
-    _focus.addListener(_onFocusChange);
-  }
-
-  void _onFocusChange() {
-    if (_focus.hasFocus && animation.value == 0) {
-      controller.forward();
-      setState(() {
-        isVisibleSearch = true;
-      });
-    }
+    screenScrollController = _scrollController;
   }
 
   @override
   Widget build(BuildContext context) {
     super.build(context);
 
-    final category = Provider.of<CategoryModel>(context);
     final appModel = Provider.of<AppModel>(context);
-
-    return Scaffold(
-      appBar: (appBar?.shouldShowOn(RouteList.category) ?? false)
-          ? AppBar(
-              titleSpacing: 0,
-              elevation: 0,
-              automaticallyImplyLeading: false,
-              backgroundColor: Theme.of(context).backgroundColor,
-              title: const FluxAppBar(),
-            )
-          : null,
+    final categoryLayout = appModel.categoryLayout;
+    // final categoryLayout = 'sideMenuWithGroup';
+    return renderScaffold(
+      routeName: RouteList.category,
       backgroundColor: Theme.of(context).backgroundColor,
-      body: ListenableProvider.value(
-        value: category,
-        child: Consumer<CategoryModel>(
-          builder: (context, value, child) {
-            if (value.isLoading) {
-              return kLoadingWidget(context);
-            }
-
-            if (value.categories == null) {
-              return Container(
-                width: double.infinity,
-                height: double.infinity,
-                alignment: Alignment.center,
-                child: Text(S.of(context).dataEmpty),
-              );
-            }
-
-            var categories = value.categories;
-
-            return SafeArea(
-              bottom: false,
-              child: [
-                GridCategory.type,
-                ColumnCategories.type,
-                SideMenuCategories.type,
-                SubCategories.type,
-                SideMenuSubCategories.type,
-                SideMenuGroupCategories.type,
-                ParallaxCategories.type,
-                CardCategories.type
-              ].contains(appModel.categoryLayout)
-                  ? Column(
-                      children: <Widget>[
-                        _HeaderCategory(showSearch: widget.showSearch),
-                        Expanded(
-                          child: renderCategories(
-                            categories,
-                            appModel.categoryLayout,
-                            widget.enableParallax,
-                            widget.parallaxImageRatio,
-                          ),
-                        )
-                      ],
-                    )
-                  : ListView(
-                      children: <Widget>[
-                        _HeaderCategory(showSearch: widget.showSearch),
-                        renderCategories(
-                          categories,
-                          appModel.categoryLayout,
-                          widget.enableParallax,
-                          widget.parallaxImageRatio,
-                        )
-                      ],
-                    ),
-            );
-          },
-        ),
-      ),
+      child: [
+        GridCategory.type,
+        ColumnCategories.type,
+        SideMenuCategories.type,
+        SubCategories
+            .type, // Not support enableLargeCategory (pls check again, I think it works)
+        SideMenuSubCategories.type, // Not support enableLargeCategory
+        SideMenuGroupCategories.type,
+        ParallaxCategories
+            .type, // Not support enableLargeCategory (pls check again, I think it works)
+        CardCategories.type,
+        MultiLevelCategories.type, // Only work for enableLargeCategory
+      ].contains(categoryLayout)
+          ? Column(
+              children: <Widget>[
+                HeaderCategory(showSearch: widget.showSearch),
+                Expanded(
+                  child: renderCategories(
+                    categoryLayout,
+                    widget.enableParallax,
+                    widget.parallaxImageRatio,
+                    _scrollController,
+                  ),
+                )
+              ],
+            )
+          : renderCategories(
+              categoryLayout,
+              widget.enableParallax,
+              widget.parallaxImageRatio,
+              _scrollController,
+            ),
     );
   }
 
-  Widget renderCategories(List<Category>? categories, String layout,
-      bool enableParallax, double? parallaxImageRatio) {
+  Widget renderCategories(
+      String layout, bool enableParallax, double? parallaxImageRatio,
+      [ScrollController? scrollController]) {
     return Services().widget.renderCategoryLayout(
-        categories: categories,
-        layout: layout,
-        enableParallax: enableParallax,
-        parallaxImageRatio: parallaxImageRatio);
-  }
-
-  @override
-  void dispose() {
-    controller.dispose();
-    super.dispose();
+          layout: layout,
+          enableParallax: enableParallax,
+          parallaxImageRatio: parallaxImageRatio,
+          scrollController: scrollController,
+        );
   }
 }
 
-class _HeaderCategory extends StatelessWidget {
-  const _HeaderCategory({Key? key, required this.showSearch}) : super(key: key);
+class HeaderCategory extends StatelessWidget {
+  const HeaderCategory({Key? key, required this.showSearch}) : super(key: key);
   final bool showSearch;
 
   @override
@@ -180,51 +117,41 @@ class _HeaderCategory extends StatelessWidget {
     final screenSize = MediaQuery.of(context).size;
     return SizedBox(
       width: screenSize.width,
-      child: FittedBox(
-        fit: BoxFit.cover,
-        child: SizedBox(
-          width:
-              screenSize.width / (2 / (screenSize.height / screenSize.width)),
-          child: Row(
-            mainAxisAlignment: MainAxisAlignment.spaceBetween,
-            children: [
-              if (Navigator.canPop(context))
-                GestureDetector(
-                  onTap: () => Navigator.pop(context),
-                  child: const Padding(
-                    padding: EdgeInsets.symmetric(horizontal: 10),
-                    child: Icon(
-                      Icons.arrow_back_ios,
-                    ),
-                  ),
-                ),
-              Padding(
-                padding: const EdgeInsets.only(
-                    top: 10, left: 10, bottom: 10, right: 10),
-                child: Text(
-                  S.of(context).category,
-                  style: Theme.of(context)
-                      .textTheme
-                      .headline5!
-                      .copyWith(fontWeight: FontWeight.w700),
+      child: Row(
+        mainAxisAlignment: MainAxisAlignment.spaceBetween,
+        children: [
+          if (ModalRoute.of(context)?.canPop ?? false)
+            GestureDetector(
+              onTap: () => Navigator.pop(context),
+              child: const Padding(
+                padding: EdgeInsets.symmetric(horizontal: 10),
+                child: Icon(
+                  Icons.arrow_back_ios,
                 ),
               ),
-              if (showSearch)
-                IconButton(
-                  icon: Icon(
-                    CupertinoIcons.search,
-                    color: Theme.of(context)
-                        .colorScheme
-                        .secondary
-                        .withOpacity(0.6),
-                  ),
-                  onPressed: () {
-                    Navigator.of(context).pushNamed(RouteList.categorySearch);
-                  },
-                ),
-            ],
+            ),
+          Padding(
+            padding:
+                const EdgeInsets.only(top: 10, left: 10, bottom: 10, right: 10),
+            child: Text(
+              S.of(context).category,
+              style: Theme.of(context)
+                  .textTheme
+                  .headline5!
+                  .copyWith(fontWeight: FontWeight.w700),
+            ),
           ),
-        ),
+          if (showSearch)
+            IconButton(
+              icon: Icon(
+                CupertinoIcons.search,
+                color: Theme.of(context).colorScheme.secondary.withOpacity(0.6),
+              ),
+              onPressed: () {
+                Navigator.of(context).pushNamed(RouteList.categorySearch);
+              },
+            ),
+        ],
       ),
     );
   }
diff --git a/lib/screens/categories/category_search_screen.dart b/lib/screens/categories/category_search_screen.dart
index 21bca37..04609d6 100644
--- a/lib/screens/categories/category_search_screen.dart
+++ b/lib/screens/categories/category_search_screen.dart
@@ -6,6 +6,7 @@ import '../../common/constants.dart';
 import '../../models/index.dart'
     show BackDropArguments, Category, CategoryModel;
 import '../../routes/flux_navigate.dart';
+import '../common/app_bar_mixin.dart';
 import '../index.dart' show SearchBox;
 
 class CategorySearch extends StatefulWidget {
@@ -15,12 +16,20 @@ class CategorySearch extends StatefulWidget {
   State<StatefulWidget> createState() => _CategorySearchState();
 }
 
-class _CategorySearchState<T> extends State<CategorySearch> {
+class _CategorySearchState<T> extends State<CategorySearch> with AppBarMixin {
   final _searchFieldNode = FocusNode();
   final _searchFieldController = TextEditingController();
 
+  final ScrollController _scrollController = ScrollController();
+
   List<Category> categories = [];
 
+  @override
+  void initState() {
+    super.initState();
+    screenScrollController = _scrollController;
+  }
+
   @override
   void dispose() {
     _searchFieldNode.dispose();
@@ -36,7 +45,7 @@ class _CategorySearchState<T> extends State<CategorySearch> {
       return;
     }
 
-    if (_searchFieldNode.hasFocus) {
+    if (_searchFieldNode.hasFocus || value.isNotEmpty) {
       final categoryModel = Provider.of<CategoryModel>(context, listen: false);
       categories = categoryModel.categories!
           .where((e) => e.name!.toLowerCase().contains(value.toLowerCase()))
@@ -62,17 +71,19 @@ class _CategorySearchState<T> extends State<CategorySearch> {
       scopesRoute: true,
       namesRoute: true,
       label: routeName,
-      child: Scaffold(
+      child: renderScaffold(
+        routeName: RouteList.categorySearch,
         backgroundColor: theme.backgroundColor,
         resizeToAvoidBottomInset: false,
-        appBar: AppBar(
-          automaticallyImplyLeading: false,
+        secondAppBar: AppBar(
+          automaticallyImplyLeading: true,
           backgroundColor: theme.backgroundColor,
           iconTheme: theme.primaryIconTheme,
           // textTheme: theme.primaryTextTheme,
           // brightness: theme.primaryColorBrightness,
+          centerTitle: false,
+          leadingWidth: 24,
           titleSpacing: 0,
-          leading: null,
           title: SearchBox(
             showQRCode: false,
             showSearchIcon: false,
@@ -83,7 +94,7 @@ class _CategorySearchState<T> extends State<CategorySearch> {
             onChanged: _onSearchTextChange,
           ),
         ),
-        body: AutoHideKeyboard(
+        child: AutoHideKeyboard(
           child: Column(
             children: [
               Expanded(
@@ -102,6 +113,7 @@ class _CategorySearchState<T> extends State<CategorySearch> {
 
   Widget buildResult() {
     return ListView.separated(
+      controller: _scrollController,
       itemCount: categories.length,
       itemBuilder: (context, index) {
         var item = categories[index];
diff --git a/lib/screens/categories/layouts/card.dart b/lib/screens/categories/layouts/card.dart
index e818e9b..b43370b 100644
--- a/lib/screens/categories/layouts/card.dart
+++ b/lib/screens/categories/layouts/card.dart
@@ -1,61 +1,51 @@
-import 'package:cached_network_image/cached_network_image.dart';
 import 'package:flutter/material.dart';
 import 'package:inspireui/inspireui.dart' show Skeleton;
+import 'package:provider/provider.dart';
 import 'package:transparent_image/transparent_image.dart';
 
+import '../../../common/config.dart';
 import '../../../common/constants.dart';
 import '../../../generated/l10n.dart';
+import '../../../models/category/category_model.dart';
 import '../../../models/index.dart' show BackDropArguments, Category;
 import '../../../routes/flux_navigate.dart';
+import '../../../widgets/common/index.dart';
 import '../../../widgets/common/parallax_image.dart';
-import '../../../widgets/common/tree_view.dart';
-import '../../base_screen.dart';
+import '../../../widgets/common/refresh_scroll_physics.dart';
 import '../../index.dart';
 
 class CardCategories extends StatefulWidget {
   static const String type = 'card';
   final bool enableParallax;
   final double? parallaxImageRatio;
+  final ScrollController? scrollController;
 
-  final List<Category>? categories;
-
-  const CardCategories(
-      {this.categories, required this.enableParallax, this.parallaxImageRatio});
+  const CardCategories({
+    required this.enableParallax,
+    this.parallaxImageRatio,
+    this.scrollController,
+  });
 
   @override
   BaseScreen<CardCategories> createState() => _StateCardCategories();
 }
 
 class _StateCardCategories extends BaseScreen<CardCategories> {
-  ScrollController controller = ScrollController();
-  late double page;
+  late final ScrollController _scrollController =
+      widget.scrollController ?? ScrollController();
 
-  @override
-  void initState() {
-    page = 0.0;
-    super.initState();
-  }
-
-  @override
-  void afterFirstLayout(BuildContext context) {
-    final screenSize = MediaQuery.of(context).size;
-    controller.addListener(() {
-      setState(() {
-        page = _getPage(controller.position, screenSize.width * 0.30 + 10);
-      });
-    });
-  }
+  CategoryModel get categoryModel =>
+      Provider.of<CategoryModel>(context, listen: false);
 
   bool hasChildren(id) {
-    return widget.categories!.where((o) => o.parent == id).toList().isNotEmpty;
-  }
-
-  double _getPage(ScrollPosition position, double width) {
-    return position.pixels / width;
+    return categoryModel.categories!
+        .where((o) => o.parent == id)
+        .toList()
+        .isNotEmpty;
   }
 
   List<Category> getSubCategories(id) {
-    return widget.categories!.where((o) => o.parent == id).toList();
+    return categoryModel.getCategory(parentId: id) ?? <Category>[];
   }
 
   void navigateToBackDrop(Category category) {
@@ -68,7 +58,7 @@ class _StateCardCategories extends BaseScreen<CardCategories> {
     );
   }
 
-  Widget getChildCategoryList(category) {
+  ChildList getChildCategoryList(category) {
     return ChildList(
       children: [
         GestureDetector(
@@ -130,49 +120,104 @@ class _StateCardCategories extends BaseScreen<CardCategories> {
 
   @override
   Widget build(BuildContext context) {
-    var categories =
-        widget.categories!.where((item) => item.parent == '0').toList();
-    if (categories.isEmpty) {
-      categories = widget.categories!;
+    if (kEnableLargeCategories) {
+      return PagingList<CategoryModel, Category>(
+        lengthLoadingWidget: 6,
+        loadingWidget: const _CardSkeleton(),
+        itemBuilder: (_, category, index) {
+          return _CategoryCardItem(
+            category,
+            onTap: () {
+              if (category.hasChildren ?? false) {
+                FluxNavigate.pushNamed(
+                  RouteList.subCategories,
+                  arguments: SubcategoryArguments(
+                    parentId: category.id!.toString(),
+                    categoryName: category.name,
+                  ),
+                );
+                return;
+              }
+              FluxNavigate.pushNamed(
+                RouteList.backdrop,
+                arguments: BackDropArguments(
+                  cateId: category.id,
+                  cateName: category.name,
+                ),
+              );
+            },
+            enableParallax: widget.enableParallax,
+            parallaxImageRatio: widget.parallaxImageRatio,
+          );
+        },
+      );
     }
 
-    return SingleChildScrollView(
-      controller: controller,
-      scrollDirection: Axis.vertical,
-      child: TreeView(
-        parentList: List.generate(
-          categories.length,
-          (index) {
+    return Consumer<CategoryModel>(
+      builder: (context, provider, child) {
+        if (provider.isFirstLoad) {
+          return ListView.builder(
+            itemBuilder: (_, __) => const _CardSkeleton(),
+            itemCount: 8,
+          );
+        }
+
+        var categories = provider.rootCategories ?? <Category>[];
+        if (categories.isEmpty) {
+          categories = provider.categories!;
+        }
+
+        if (categories.isEmpty) {
+          return Center(
+            child: Text(S.of(context).noData),
+          );
+        }
+
+        return ListView.builder(
+          controller: _scrollController,
+          padding: const EdgeInsets.symmetric(vertical: 8),
+          physics: const RefreshScrollPhysics(),
+          scrollDirection: Axis.vertical,
+          itemCount: categories.length,
+          itemBuilder: (_, index) {
+            final category = categories[index];
             return Parent(
               parent: _CategoryCardItem(
-                categories[index],
-                hasChildren: hasChildren(categories[index].id),
-                offset: page - index,
+                category,
+                onTap: hasChildren(category.id)
+                    ? null
+                    : () {
+                        FluxNavigate.pushNamed(
+                          RouteList.backdrop,
+                          arguments: BackDropArguments(
+                            cateId: category.id,
+                            cateName: category.name,
+                          ),
+                        );
+                      },
                 enableParallax: widget.enableParallax,
                 parallaxImageRatio: widget.parallaxImageRatio,
               ),
-              childList: getChildCategoryList(categories[index]) as ChildList,
+              childList: getChildCategoryList(category),
             );
           },
-        ),
-      ),
+        );
+      },
     );
   }
 }
 
 class _CategoryCardItem extends StatelessWidget {
   final Category category;
-  final bool hasChildren;
   final bool enableParallax;
   final double? parallaxImageRatio;
-  final offset;
+  final VoidCallback? onTap;
 
   const _CategoryCardItem(
     this.category, {
-    this.hasChildren = false,
-    this.offset,
     this.enableParallax = false,
     this.parallaxImageRatio,
+    this.onTap,
   });
 
   /// Render category Image support caching on ios/android
@@ -193,47 +238,12 @@ class _CategoryCardItem extends StatelessWidget {
       );
     }
 
-    return image.contains('http')
-        ? CachedNetworkImage(
-            imageUrl: category.image!,
-            fit: BoxFit.cover,
-            alignment: Alignment(
-              0.0,
-              (offset >= -1 && offset <= 1)
-                  ? offset
-                  : (offset > 0)
-                      ? 1.0
-                      : -1.0,
-            ),
-            // fadeInCurve: Curves.easeIn,
-            errorWidget: (context, url, error) => const SizedBox(),
-            imageBuilder:
-                (BuildContext context, ImageProvider<dynamic> imageProvider) {
-              return Image(
-                width: maxWidth,
-                image: imageProvider as ImageProvider<Object>,
-                fit: BoxFit.cover,
-              );
-            },
-            placeholder: (context, url) => Skeleton(
-              width: maxWidth,
-              height: maxWidth * 0.35,
-            ),
-          )
-        : Image.asset(
-            category.image!,
-            fit: BoxFit.cover,
-            width: maxWidth,
-            height: maxWidth * 0.35,
-            alignment: Alignment(
-              0.0,
-              (offset >= -1 && offset <= 1)
-                  ? offset
-                  : (offset > 0)
-                      ? 1.0
-                      : -1.0,
-            ),
-          );
+    return FluxImage(
+      imageUrl: category.image!,
+      fit: BoxFit.cover,
+      width: maxWidth,
+      height: maxWidth * 0.35,
+    );
   }
 
   @override
@@ -241,17 +251,7 @@ class _CategoryCardItem extends StatelessWidget {
     final screenSize = MediaQuery.of(context).size;
 
     return GestureDetector(
-      onTap: hasChildren
-          ? null
-          : () {
-              FluxNavigate.pushNamed(
-                RouteList.backdrop,
-                arguments: BackDropArguments(
-                  cateId: category.id,
-                  cateName: category.name,
-                ),
-              );
-            },
+      onTap: onTap,
       child: LayoutBuilder(
         builder: (context, constraints) {
           if (enableParallax) {
@@ -285,6 +285,7 @@ class _CategoryCardItem extends StatelessWidget {
                 Container(
                   width: constraints.maxWidth,
                   height: constraints.maxWidth * 0.35,
+                  padding: const EdgeInsets.all(16),
                   decoration: BoxDecoration(
                     color: const Color.fromRGBO(0, 0, 0, 0.3),
                     borderRadius: BorderRadius.circular(3.0),
@@ -313,6 +314,27 @@ class _CategoryCardItem extends StatelessWidget {
   }
 }
 
+class _CardSkeleton extends StatelessWidget {
+  const _CardSkeleton({Key? key}) : super(key: key);
+
+  @override
+  Widget build(BuildContext context) {
+    return LayoutBuilder(
+      builder: (context, constraints) {
+        return Container(
+          height: constraints.maxWidth * 0.35,
+          padding: const EdgeInsets.only(left: 10, right: 10),
+          margin: const EdgeInsets.only(bottom: 10),
+          child: const Skeleton(
+            width: double.infinity,
+            height: double.infinity,
+          ),
+        );
+      },
+    );
+  }
+}
+
 class SubItem extends StatelessWidget {
   final Category category;
   final String seeAll;
diff --git a/lib/screens/categories/layouts/column.dart b/lib/screens/categories/layouts/column.dart
index b9b398c..765052e 100644
--- a/lib/screens/categories/layouts/column.dart
+++ b/lib/screens/categories/layouts/column.dart
@@ -1,15 +1,33 @@
-import 'package:flutter/material.dart';
+import 'package:flutter/cupertino.dart';
+import 'package:inspireui/inspireui.dart';
+import 'package:provider/provider.dart';
 
-import '../../../models/entities/index.dart';
-import '../../../models/index.dart' show Category;
+import '../../../common/constants.dart';
+import '../../../generated/l10n.dart';
+import '../../../models/index.dart'
+    show BackDropArguments, Category, CategoryModel;
+import '../../../routes/flux_navigate.dart';
+import '../../../widgets/common/paging_mixin.dart';
+import '../../../widgets/common/refresh_scroll_physics.dart';
 import '../widgets/category_column_item.dart';
 
+const _kCrossAxisCount = 3;
+
+const _kDefaultGridDelegate = SliverGridDelegateWithFixedCrossAxisCount(
+  crossAxisCount: _kCrossAxisCount,
+  mainAxisSpacing: 4.0,
+  crossAxisSpacing: 4.0,
+  childAspectRatio: 0.75,
+);
+
 class ColumnCategories extends StatefulWidget {
   static const String type = 'column';
 
-  final List<Category>? categories;
+  final ScrollController? scrollController;
 
-  const ColumnCategories(this.categories);
+  const ColumnCategories({
+    this.scrollController,
+  });
 
   @override
   State<ColumnCategories> createState() {
@@ -17,33 +35,101 @@ class ColumnCategories extends StatefulWidget {
   }
 }
 
-class _ColumnCategoriesState extends State<ColumnCategories> {
+class _ColumnCategoriesState extends State<ColumnCategories> with PagingMixin {
+  CategoryModel get categoryModel =>
+      Provider.of<CategoryModel>(context, listen: false);
+
+  @override
+  late final ScrollController scrollController = widget.scrollController ?? ScrollController();
+
+  @override
+  Future<void> getData() {
+    return categoryModel.getData();
+  }
+
   @override
   Widget build(BuildContext context) {
-    return GridView.builder(
-      itemCount: widget.categories!.length,
-      // physics: const NeverScrollableScrollPhysics(),
-      // shrinkWrap: true,
-      padding: const EdgeInsets.symmetric(vertical: 4.0),
-      gridDelegate: const SliverGridDelegateWithFixedCrossAxisCount(
-        crossAxisCount: 3,
-        mainAxisSpacing: 4.0,
-        crossAxisSpacing: 4.0,
-        childAspectRatio: 0.75,
-      ),
-      itemBuilder: (context, index) {
-        return CategoryColumnItem(widget.categories![index]);
-      },
+    return Stack(
+      children: [
+        Consumer<CategoryModel>(
+          builder: (context, model, child) {
+            final data = model.categories ?? <Category>[];
+            return CustomScrollView(
+              controller: scrollController,
+              physics: const RefreshScrollPhysics(),
+              slivers: [
+                CupertinoSliverRefreshControl(
+                  onRefresh: () async {
+                    await model.refresh();
+                  },
+                ),
+                model.isFirstLoad
+                    ? SliverGrid(
+                        gridDelegate: _kDefaultGridDelegate,
+                        delegate: SliverChildBuilderDelegate(
+                          (context, index) {
+                            return const Skeleton(
+                              width: double.infinity,
+                              height: double.infinity,
+                            );
+                          },
+                          childCount: _kCrossAxisCount * 4,
+                        ),
+                      )
+                    : SliverGrid(
+                        gridDelegate: _kDefaultGridDelegate,
+                        delegate: SliverChildBuilderDelegate(
+                          (BuildContext context, int index) {
+                            if (index >= data.length) {
+                              if (model.isLoadMore) {
+                                if (!model.hasNext) {
+                                  return Center(
+                                      child: Text(S.of(context).noData));
+                                }
+                                return const Skeleton(
+                                  width: double.infinity,
+                                  height: double.infinity,
+                                );
+                              }
+                              return const SizedBox();
+                            }
+                            final category = data[index];
+                            return GestureDetector(
+                              onTap: () {
+                                FluxNavigate.pushNamed(
+                                  RouteList.backdrop,
+                                  arguments: BackDropArguments(
+                                    cateId: category.id,
+                                    cateName: category.name,
+                                  ),
+                                );
+                              },
+                              child: CategoryColumnItem(category),
+                            );
+                          },
+                          childCount: data.length +
+                              (data.length % _kCrossAxisCount == 0
+                                  ? _kCrossAxisCount
+                                  : _kCrossAxisCount -
+                                      (data.length % _kCrossAxisCount)),
+                        ),
+                      ),
+              ],
+            );
+          },
+        ),
+        scrollToTopButton,
+      ],
     );
   }
 
-  // EdgeInsets _edgeInsetsForIndex(int index) {
-  //   if (index % 2 == 0) {
-  //     return const EdgeInsets.only(
-  //         top: 4.0, left: 8.0, right: 4.0, bottom: 4.0);
-  //   } else {
-  //     return const EdgeInsets.only(
-  //         top: 4.0, left: 4.0, right: 8.0, bottom: 4.0);
-  //   }
-  // }
+// EdgeInsets _edgeInsetsForIndex(int index) {
+//   if (index % 2 == 0) {
+//     return const EdgeInsets.only(
+//         top: 4.0, left: 8.0, right: 4.0, bottom: 4.0);
+//   } else {
+//     return const EdgeInsets.only(
+//         top: 4.0, left: 4.0, right: 8.0, bottom: 4.0);
+//   }
+// }
 }
diff --git a/lib/screens/categories/layouts/grid.dart b/lib/screens/categories/layouts/grid.dart
index 83e423b..f1e2c9d 100644
--- a/lib/screens/categories/layouts/grid.dart
+++ b/lib/screens/categories/layouts/grid.dart
@@ -1,26 +1,34 @@
+import 'package:flutter/cupertino.dart';
 import 'package:flutter/material.dart';
 import 'package:inspireui/icons/icon_picker.dart';
+import 'package:inspireui/widgets/skeleton_widget/skeleton_widget.dart';
 import 'package:provider/provider.dart';
 
 import '../../../common/config.dart';
 import '../../../common/constants.dart';
+import '../../../generated/l10n.dart';
 import '../../../models/entities/index.dart';
-import '../../../models/index.dart' show Category, AppModel;
+import '../../../models/index.dart' show AppModel, Category, CategoryModel;
 import '../../../routes/flux_navigate.dart';
 import '../../../widgets/common/flux_image.dart';
+import '../../../widgets/common/paging_mixin.dart';
+import '../../../widgets/common/refresh_scroll_physics.dart';
+import '../../subcategories/views/subcategories_screen.dart';
 
 class GridCategory extends StatefulWidget {
   static const String type = 'grid';
 
-  final List<Category>? categories;
+  final ScrollController? scrollController;
 
-  const GridCategory(this.categories);
+  const GridCategory({
+    this.scrollController,
+  });
 
   @override
   State<GridCategory> createState() => _StateGridCategory();
 }
 
-class _StateGridCategory extends State<GridCategory> {
+class _StateGridCategory extends State<GridCategory> with PagingMixin {
   Widget renderIcon(String categoryId, Map icons) {
     var icon = icons[categoryId];
     if (icon is Map) {
@@ -36,64 +44,144 @@ class _StateGridCategory extends State<GridCategory> {
     return const Icon(Icons.category, size: 30);
   }
 
+  int get gridCount => kAdvanceConfig.gridCount;
+
+  CategoryModel get categoryModel =>
+      Provider.of<CategoryModel>(context, listen: false);
+
+  @override
+  late final ScrollController scrollController = widget.scrollController ?? ScrollController();
+
+  @override
+  Future<void> getData() {
+    return categoryModel.getData();
+  }
+
   @override
   Widget build(BuildContext context) {
-    var categories = widget.categories;
     var categoriesIcons =
         Provider.of<AppModel>(context, listen: true).categoriesIcons;
     var icons = categoriesIcons ?? kGridIconsCategories;
 
-    if (categories == null) {
-      return Container(
-        child: kLoadingWidget(context),
-      );
-    }
-
-    return LayoutBuilder(
-      builder: (context, constraints) {
-        return SingleChildScrollView(
-          child: Wrap(
-            alignment: WrapAlignment.spaceBetween,
-            children: <Widget>[
-              for (int i = 0; i < categories.length; i++)
-                GestureDetector(
-                  onTap: () => FluxNavigate.pushNamed(
-                    RouteList.backdrop,
-                    arguments: BackDropArguments(
-                      cateId: categories[i].id,
-                      cateName: categories[i].name,
-                    ),
-                  ),
-                  child: Container(
-                    width: constraints.maxWidth / kAdvanceConfig.gridCount -
-                        8 * kAdvanceConfig.gridCount,
-                    margin: const EdgeInsets.symmetric(
-                      horizontal: 8.0,
-                      vertical: 20,
-                    ),
-                    child: Padding(
-                      padding: const EdgeInsets.symmetric(vertical: 10),
-                      child: Column(
-                        children: <Widget>[
-                          renderIcon(categories[i].id!, icons),
-                          const SizedBox(height: 8.0),
-                          Text(
-                            categories[i].name!,
-                            style: TextStyle(
-                              color: Theme.of(context).primaryColor,
-                              fontSize: 13,
-                              fontWeight: FontWeight.w600,
-                            ),
-                          ),
-                        ],
+    return Stack(
+      children: [
+        Consumer<CategoryModel>(
+          builder: (context, model, child) {
+            final data = model.categories ?? <Category>[];
+            return CustomScrollView(
+              controller: scrollController,
+              physics: const RefreshScrollPhysics(),
+              slivers: [
+                CupertinoSliverRefreshControl(
+                  onRefresh: () async {
+                    await model.refresh();
+                  },
+                ),
+                model.isFirstLoad
+                    ? SliverGrid(
+                        gridDelegate: SliverGridDelegateWithFixedCrossAxisCount(
+                          crossAxisCount: gridCount,
+                          mainAxisSpacing: 4.0,
+                          crossAxisSpacing: 4.0,
+                          childAspectRatio: 1.0,
+                        ),
+                        delegate: SliverChildBuilderDelegate(
+                          (context, index) {
+                            return const Skeleton(
+                              width: double.infinity,
+                              height: double.infinity,
+                            );
+                          },
+                          childCount: gridCount * 6,
+                        ),
+                      )
+                    : SliverGrid(
+                        gridDelegate: SliverGridDelegateWithFixedCrossAxisCount(
+                          crossAxisCount: kAdvanceConfig.gridCount,
+                          mainAxisSpacing: 4.0,
+                          crossAxisSpacing: 4.0,
+                          childAspectRatio: 1.0,
+                        ),
+                        delegate: SliverChildBuilderDelegate(
+                          (BuildContext context, int index) {
+                            if (index >= data.length) {
+                              if (model.isLoadMore) {
+                                if (!model.hasNext) {
+                                  return Center(
+                                      child: Text(S.of(context).noData));
+                                }
+                                return const Skeleton(
+                                  width: double.infinity,
+                                  height: double.infinity,
+                                );
+                              }
+                              return const SizedBox();
+                            }
+                            final category = data[index];
+                            return GestureDetector(
+                              onTap: () {
+                                if (category.hasChildren ?? false) {
+                                  FluxNavigate.pushNamed(
+                                    RouteList.subCategories,
+                                    arguments: SubcategoryArguments(
+                                      parentId: category.id!.toString(),
+                                      categoryName: category.name,
+                                    ),
+                                  );
+                                  return;
+                                }
+                                FluxNavigate.pushNamed(
+                                  RouteList.backdrop,
+                                  arguments: BackDropArguments(
+                                    cateId: category.id,
+                                    cateName: category.name,
+                                  ),
+                                );
+                              },
+                              child: LayoutBuilder(
+                                  builder: (context, constraints) {
+                                return Container(
+                                  width: constraints.maxWidth,
+                                  margin: const EdgeInsets.symmetric(
+                                    horizontal: 8.0,
+                                    vertical: 10,
+                                  ),
+                                  child: Padding(
+                                    padding: const EdgeInsets.symmetric(
+                                        vertical: 10),
+                                    child: Column(
+                                      children: <Widget>[
+                                        renderIcon(category.id!, icons),
+                                        const SizedBox(height: 8.0),
+                                        Text(
+                                          category.name!,
+                                          textAlign: TextAlign.center,
+                                          style: TextStyle(
+                                            color:
+                                                Theme.of(context).primaryColor,
+                                            fontSize: 13,
+                                            fontWeight: FontWeight.w600,
+                                          ),
+                                        ),
+                                      ],
+                                    ),
+                                  ),
+                                );
+                              }),
+                            );
+                          },
+                          childCount: data.length +
+                              (data.length % gridCount == 0
+                                  ? gridCount
+                                  : gridCount - (data.length % gridCount)),
+                        ),
                       ),
-                    ),
-                  ),
-                )
-            ],
-          ),
-        );
-      },
+              ],
+            );
+          },
+        ),
+        scrollToTopButton,
+      ],
     );
   }
 }
diff --git a/lib/screens/categories/layouts/multi_level.dart b/lib/screens/categories/layouts/multi_level.dart
new file mode 100644
index 0000000..c751def
--- /dev/null
+++ b/lib/screens/categories/layouts/multi_level.dart
@@ -0,0 +1,144 @@
+import 'dart:math' as math;
+
+import 'package:flutter/material.dart';
+import 'package:provider/provider.dart';
+
+import '../../../common/config.dart';
+import '../../../generated/l10n.dart';
+import '../../../models/category/category_model.dart';
+import '../../../models/category/detail_category_model.dart';
+import '../widgets/list_category.dart';
+import '../widgets/list_product.dart';
+
+const _numberOfTabPreload = 3;
+
+class MultiLevelCategories extends StatefulWidget {
+  const MultiLevelCategories({Key? key}) : super(key: key);
+
+  static const type = 'multi-level';
+
+  @override
+  State<MultiLevelCategories> createState() => _MultiLevelCategoriesState();
+}
+
+class _MultiLevelCategoriesState extends State<MultiLevelCategories>
+    with SingleTickerProviderStateMixin {
+  CategoryModel get model => Provider.of<CategoryModel>(context, listen: false);
+
+  TabController? _tabController;
+
+  void _onChanged([int? index]) {
+    final data = model.categories;
+    if (data == null) return;
+    final selectedIndex = index ?? _tabController?.index;
+    if (selectedIndex == null) return;
+    final element = data[selectedIndex];
+    model.getDetailCategoryModel(element.id!)?.initData();
+  }
+
+  @override
+  void dispose() {
+    _tabController?.removeListener(_onChanged);
+    _tabController?.dispose();
+    super.dispose();
+  }
+
+  @override
+  Widget build(BuildContext context) {
+    return Consumer<CategoryModel>(
+      builder: (context, model, child) {
+        if (model.isFirstLoad) {
+          return Center(child: kLoadingWidget(context));
+        }
+        if (model.categories!.isEmpty) {
+          return Center(child: Text(S.of(context).noData));
+        }
+        final data = model.categories!;
+        for (var i = 0; i < data.length; i++) {
+          final element = data[i];
+          model.initSubcategory(element,
+              fetchData: i <
+                  math.min(
+                    data.length,
+                    _numberOfTabPreload,
+                  ));
+        }
+        _tabController ??= TabController(
+          length: data.length,
+          vsync: this,
+        )..addListener(_onChanged);
+        return Column(
+          crossAxisAlignment: CrossAxisAlignment.start,
+          children: [
+            SizedBox(
+              height: 50,
+              child: TabBar(
+                  controller: _tabController,
+                  isScrollable: true,
+                  onTap: _onChanged,
+                  labelPadding: const EdgeInsets.symmetric(
+                    horizontal: 12,
+                  ),
+                  indicatorPadding: const EdgeInsets.symmetric(
+                    horizontal: 8,
+                  ),
+                  indicatorColor: Theme.of(context).primaryColor,
+                  unselectedLabelStyle: const TextStyle(
+                    fontSize: 15,
+                    color: Colors.grey,
+                  ),
+                  labelStyle: const TextStyle(
+                    fontSize: 15,
+                    fontWeight: FontWeight.bold,
+                  ),
+                  tabs: data
+                      .map((e) => Tab(
+                            text: e.displayName.toUpperCase(),
+                          ))
+                      .toList()),
+            ),
+            Expanded(
+              child: TabBarView(
+                controller: _tabController,
+                children: data.map(
+                  (e) {
+                    final detailCategoryModel =
+                        model.getDetailCategoryModel(e.id!);
+                    if (detailCategoryModel == null) {
+                      return const SizedBox();
+                    }
+                    return ChangeNotifierProvider.value(
+                      value: detailCategoryModel,
+                      child: Selector<DetailCategoryModel, bool?>(
+                        shouldRebuild: (previous, next) {
+                          return previous != next;
+                        },
+                        selector: (context, provider) => provider.hasChildren,
+                        builder: (context, hasChildren, child) {
+                          if (hasChildren == null) {
+                            return const Center(
+                                child: CircularProgressIndicator());
+                          }
+                          if (hasChildren) {
+                            return ChangeNotifierProvider.value(
+                              value: detailCategoryModel.subcategoryModel,
+                              child: ListCategory(category: e),
+                            );
+                          }
+                          return ChangeNotifierProvider.value(
+                            value: detailCategoryModel.listProductModel,
+                            child: const ListProduct(),
+                          );
+                        },
+                      ),
+                    );
+                  },
+                ).toList(),
+              ),
+            ),
+          ],
+        );
+      },
+    );
+  }
+}
diff --git a/lib/screens/categories/layouts/parallax.dart b/lib/screens/categories/layouts/parallax.dart
index 0ef5659..1e51422 100644
--- a/lib/screens/categories/layouts/parallax.dart
+++ b/lib/screens/categories/layouts/parallax.dart
@@ -1,6 +1,8 @@
 import 'package:flutter/material.dart';
+import 'package:provider/provider.dart';
 
 import '../../../common/constants.dart';
+import '../../../models/category/category_model.dart';
 import '../../../models/index.dart' show BackDropArguments, Category;
 import '../../../routes/flux_navigate.dart';
 import '../../../widgets/common/parallax_image.dart';
@@ -10,9 +12,7 @@ import '../../index.dart';
 class ParallaxCategories extends StatefulWidget {
   static const String type = 'parallax';
 
-  final List<Category>? categories;
-
-  const ParallaxCategories(this.categories);
+  const ParallaxCategories();
 
   @override
   BaseScreen<ParallaxCategories> createState() => _StateCardCategories();
@@ -31,37 +31,36 @@ class _StateCardCategories extends BaseScreen<ParallaxCategories> {
 
   @override
   Widget build(BuildContext context) {
-    var categories =
-        widget.categories!.where((item) => item.parent == '0').toList();
-    if (categories.isEmpty) {
-      categories = widget.categories!;
-    }
-
-    return SingleChildScrollView(
-      scrollDirection: Axis.vertical,
-      child: Column(
-        children: List.generate(
-          categories.length,
-          (index) {
-            var category = categories[index];
-            return GestureDetector(
-              onTap: () {
-                FluxNavigate.pushNamed(
-                  RouteList.backdrop,
-                  arguments: BackDropArguments(
-                    cateId: category.id,
-                    cateName: category.name,
+    return Consumer<CategoryModel>(
+      builder: (context, provider, child) {
+        final categories = provider.rootCategories ?? <Category>[];
+        return SingleChildScrollView(
+          scrollDirection: Axis.vertical,
+          child: Column(
+            children: List.generate(
+              categories.length,
+              (index) {
+                var category = categories[index];
+                return GestureDetector(
+                  onTap: () {
+                    FluxNavigate.pushNamed(
+                      RouteList.backdrop,
+                      arguments: BackDropArguments(
+                        cateId: category.id,
+                        cateName: category.name,
+                      ),
+                    );
+                  },
+                  child: ParallaxImage(
+                    image: category.image ?? '',
+                    name: category.name ?? '',
                   ),
                 );
               },
-              child: ParallaxImage(
-                image: category.image ?? '',
-                name: category.name ?? '',
-              ),
-            );
-          },
-        ),
-      ),
+            ),
+          ),
+        );
+      },
     );
   }
 }
diff --git a/lib/screens/categories/layouts/side_menu.dart b/lib/screens/categories/layouts/side_menu.dart
index 46d7de9..1566127 100644
--- a/lib/screens/categories/layouts/side_menu.dart
+++ b/lib/screens/categories/layouts/side_menu.dart
@@ -3,113 +3,153 @@ import 'package:flutter/material.dart';
 import 'package:provider/provider.dart';
 
 import '../../../common/config.dart';
-import '../../../models/index.dart' show AppModel, Category, Product;
+import '../../../generated/l10n.dart';
+import '../../../models/index.dart'
+    show AppModel, Category, CategoryModel, Product;
 import '../../../modules/dynamic_layout/index.dart';
 import '../../../services/index.dart';
+import '../../../widgets/common/paging_list.dart';
 import '../../../widgets/product/product_list.dart';
 import '../../base_screen.dart';
 
 class SideMenuCategories extends StatefulWidget {
   static const String type = 'sideMenu';
 
-  final List<Category>? categories;
-
-  const SideMenuCategories(this.categories);
+  const SideMenuCategories();
 
   @override
   State<StatefulWidget> createState() => SideMenuCategoriesState();
 }
 
 class SideMenuCategoriesState extends State<SideMenuCategories> {
-  int selectedIndex = 0;
+  ValueNotifier<int> selectedIndex = ValueNotifier(0);
+
+  CategoryModel get categoryModel =>
+      Provider.of<CategoryModel>(context, listen: false);
 
   List<Category> getSubCategories(id) {
-    return widget.categories!.where((o) => o.parent == id).toList();
+    return categoryModel.getCategory(parentId: id) ?? <Category>[];
   }
 
   @override
-  void initState() {
-    super.initState();
+  void dispose() {
+    selectedIndex.dispose();
+    super.dispose();
   }
 
   @override
-  void didUpdateWidget(covariant SideMenuCategories oldWidget) {
-    super.didUpdateWidget(oldWidget);
-    if (oldWidget.categories?.length != widget.categories?.length) {
-      setState(() {
-        selectedIndex = 0;
-      });
-    }
+  Widget build(BuildContext context) {
+    return Consumer<CategoryModel>(
+      builder: (context, provider, child) {
+        if (provider.isFirstLoad) {
+          return Center(
+            child: kLoadingWidget(context),
+          );
+        }
+
+        final categories =
+            provider.rootCategories ?? provider.categories ?? <Category>[];
+
+        if (categories.isEmpty) {
+          return Center(
+            child: Text(S.of(context).noData),
+          );
+        }
+
+        return Row(
+          children: <Widget>[
+            Expanded(
+              flex: 2,
+              child: ValueListenableBuilder<int>(
+                valueListenable: selectedIndex,
+                builder: (context, currentIndex, child) {
+                  return PagingList<CategoryModel, Category>(
+                    selectorData: (model) =>
+                        model.rootCategories ?? <Category>[],
+                    itemBuilder: (context, category, index) {
+                      return _CategoryName(
+                        onTap: () => selectedIndex.value = index,
+                        isSelected: selectedIndex.value == index,
+                        category: category,
+                      );
+                    },
+                  );
+                },
+              ),
+            ),
+            Expanded(
+              flex: 6,
+              child: ValueListenableBuilder<int>(
+                valueListenable: selectedIndex,
+                builder: (context, index, child) {
+                  return _FetchProductLayout(
+                    key: ValueKey(index),
+                    category: categories[index],
+                    subCategories: getSubCategories(categories[index].id),
+                  );
+                },
+              ),
+            )
+          ],
+        );
+      },
+    );
   }
+}
+
+class _CategoryName extends StatelessWidget {
+  const _CategoryName({
+    Key? key,
+    this.onTap,
+    required this.isSelected,
+    required this.category,
+  }) : super(key: key);
+
+  final VoidCallback? onTap;
+  final Category category;
+  final bool isSelected;
 
   @override
   Widget build(BuildContext context) {
     final theme = Theme.of(context);
-    var categories =
-        widget.categories!.where((item) => item.parent == '0').toList();
-    if (categories.isEmpty) {
-      categories = widget.categories!;
-    }
-
-    if (categories.isEmpty) return const SizedBox();
-    return Row(
-      children: <Widget>[
-        SizedBox(
-          width: 100,
-          child: ListView.builder(
-            itemCount: categories.length,
-            itemBuilder: (context, index) {
-              return GestureDetector(
-                onTap: () {
-                  setState(() {
-                    selectedIndex = index;
-                  });
-                },
-                child: Padding(
-                  padding: const EdgeInsets.only(
-                      top: 15, bottom: 15, left: 4, right: 4),
-                  child: Center(
-                    child: Text(
-                      categories[index].name != null
-                          ? categories[index].name!.toUpperCase()
-                          : '',
-                      style: TextStyle(
-                        fontSize: 10,
-                        color: selectedIndex == index
-                            ? theme.primaryColor
-                            : theme.colorScheme.secondary,
-                      ),
-                      textAlign: TextAlign.center,
-                    ),
-                  ),
-                ),
-              );
-            },
+    return GestureDetector(
+      onTap: onTap,
+      behavior: HitTestBehavior.opaque,
+      child: Padding(
+        padding: const EdgeInsets.only(
+          top: 15,
+          bottom: 15,
+          left: 4,
+          right: 4,
+        ),
+        child: Center(
+          child: Text(
+            category.displayName.toUpperCase(),
+            style: TextStyle(
+              fontSize: 10,
+              color:
+                  isSelected ? theme.primaryColor : theme.colorScheme.secondary,
+            ),
+            textAlign: TextAlign.center,
           ),
         ),
-        Expanded(
-            child: FetchProductLayout(
-          key: Key(categories[selectedIndex].toString()),
-          category: categories[selectedIndex],
-          subCategories: getSubCategories(categories[selectedIndex].id),
-        ))
-      ],
+      ),
     );
   }
 }
 
-class FetchProductLayout extends StatefulWidget {
+class _FetchProductLayout extends StatefulWidget {
   final Category? category;
   final List<Category>? subCategories;
 
-  const FetchProductLayout({this.category, this.subCategories, Key? key})
+  const _FetchProductLayout({this.category, this.subCategories, Key? key})
       : super(key: key);
 
   @override
-  BaseScreen<FetchProductLayout> createState() => _StateFetchProductLayout();
+  BaseScreen<_FetchProductLayout> createState() => _StateFetchProductLayout();
 }
 
-class _StateFetchProductLayout extends BaseScreen<FetchProductLayout> {
+class _StateFetchProductLayout extends BaseScreen<_FetchProductLayout> {
   int selectedIndex = 0;
   int page = 1;
   bool isEnd = false;
@@ -216,19 +256,21 @@ class _StateFetchProductLayout extends BaseScreen<FetchProductLayout> {
 
   @override
   Widget build(BuildContext context) {
-    final screenSize = MediaQuery.of(context).size;
-
-    return ProductList(
-      isFetching: isFetching,
-      onRefresh: onRefresh,
-      onLoadMore: onLoadMore,
-      isEnd: isEnd,
-      products: products,
-      width: screenSize.width - 100,
-      padding: 4.0,
-      layout: 'list',
-      ratioProductImage: ProductConfig.empty().imageRatio,
-      productListItemHeight: kProductDetail.productListItemHeight,
+    return LayoutBuilder(
+      builder: (_, constraints) {
+        return ProductList(
+          isFetching: isFetching,
+          onRefresh: onRefresh,
+          onLoadMore: onLoadMore,
+          isEnd: isEnd,
+          products: products,
+          width: constraints.maxWidth,
+          padding: 4.0,
+          layout: 'list',
+          ratioProductImage: ProductConfig.empty().imageRatio,
+          productListItemHeight: kProductDetail.productListItemHeight,
+        );
+      },
     );
   }
 }
diff --git a/lib/screens/categories/layouts/side_menu_with_group.dart b/lib/screens/categories/layouts/side_menu_with_group.dart
index 24129d1..2be3fb2 100644
--- a/lib/screens/categories/layouts/side_menu_with_group.dart
+++ b/lib/screens/categories/layouts/side_menu_with_group.dart
@@ -1,19 +1,21 @@
 import 'package:flutter/material.dart';
+import 'package:provider/provider.dart';
 
 import '../../../common/config.dart';
 import '../../../common/constants.dart';
 import '../../../generated/l10n.dart';
+import '../../../models/category/category_model.dart';
 import '../../../models/entities/index.dart';
 import '../../../routes/flux_navigate.dart';
 import '../../../services/services.dart';
+import '../../../widgets/common/paging_list.dart';
 
 class SideMenuGroupCategories extends StatefulWidget {
   static const String type = 'sideMenuWithGroup';
 
-  final List<Category>? categories;
   final Map<String, dynamic>? icons;
 
-  const SideMenuGroupCategories(this.categories, {this.icons});
+  const SideMenuGroupCategories({this.icons});
 
   @override
   State<StatefulWidget> createState() => SideMenuGroupCategoriesState();
@@ -22,23 +24,16 @@ class SideMenuGroupCategories extends StatefulWidget {
 class SideMenuGroupCategoriesState extends State<SideMenuGroupCategories> {
   int selectedIndex = 0;
 
-  @override
-  void didUpdateWidget(covariant SideMenuGroupCategories oldWidget) {
-    super.didUpdateWidget(oldWidget);
-    if (oldWidget.categories?.length != widget.categories?.length) {
-      setState(() {
-        selectedIndex = 0;
-      });
-    }
-  }
+  CategoryModel get categoryModel =>
+      Provider.of<CategoryModel>(context, listen: false);
 
   List<Category> getSubCategories(id) {
-    return widget.categories!.where((o) => o.parent == id).toList();
+    return categoryModel.categories!.where((o) => o.parent == id).toList();
   }
 
-  Map<String, dynamic> getListIcons() {
+  Map<String, dynamic> getListIcons(List<Category> categories) {
     var icons = <String?, dynamic>{};
-    for (var cat in widget.categories!) {
+    for (var cat in categories) {
       if (cat.image != null && cat.image!.isNotEmpty) {
         icons[cat.id] = cat.image;
       }
@@ -46,101 +41,98 @@ class SideMenuGroupCategoriesState extends State<SideMenuGroupCategories> {
     return Map<String, dynamic>.from(icons);
   }
 
-  List<Category> getListCategories() {
-    var categories = <Category>[];
-    for (var cat in widget.categories!) {
-      if (cat.parent == '0') {
-        categories.add(cat);
-      }
-    }
-    return categories;
-  }
-
   @override
   Widget build(BuildContext context) {
     final theme = Theme.of(context);
 
-    if (widget.categories == null) {
-      return Container(
-        child: kLoadingWidget(context),
-      );
-    }
+    return Consumer<CategoryModel>(
+      builder: (context, provider, child) {
+        if (provider.isFirstLoad) {
+          return Container(
+            child: kLoadingWidget(context),
+          );
+        }
 
-    var categories = getListCategories();
-    var icons = getListIcons();
+        final categories = provider.rootCategories ?? <Category>[];
 
-    if (categories.isEmpty) {
-      return const SizedBox();
-    }
+        if (categories.isEmpty) {
+          return Center(
+            child: Text(S.of(context).noData),
+          );
+        }
 
-    return Row(
-      crossAxisAlignment: CrossAxisAlignment.start,
-      children: <Widget>[
-        SizedBox(
-          width: 70,
-          child: ListView.builder(
-            shrinkWrap: true,
-            itemCount: categories.length,
-            itemBuilder: (context, index) {
-              return GestureDetector(
-                onTap: () {
-                  setState(() {
-                    selectedIndex = index;
-                  });
-                },
-                child: Container(
-                  padding: const EdgeInsets.symmetric(
-                    horizontal: 6.0,
-                    vertical: 20.0,
-                  ),
-                  decoration: BoxDecoration(
-                    color: selectedIndex == index
-                        ? theme.primaryColorLight
-                        : Colors.transparent,
-                    borderRadius: const BorderRadius.only(
-                      topRight: Radius.circular(2),
-                      bottomRight: Radius.circular(2),
-                    ),
-                  ),
-                  child: Padding(
-                    padding: const EdgeInsets.only(
-                      top: 4.0,
-                      left: 6,
-                    ),
-                    child: AnimatedDefaultTextStyle(
-                      style: selectedIndex == index
-                          ? TextStyle(
-                              fontSize: 12,
-                              color: theme.primaryColor,
-                              fontWeight: FontWeight.w600,
-                            )
-                          : TextStyle(
-                              fontSize: 12,
-                              color: theme.colorScheme.secondary,
-                            ),
-                      maxLines: 2,
-                      softWrap: true,
-                      duration: const Duration(milliseconds: 200),
-                      child: Text(categories[index].name ?? ''),
+        var icons = getListIcons(categories);
+
+        return Row(
+          crossAxisAlignment: CrossAxisAlignment.start,
+          children: <Widget>[
+            Expanded(
+              flex: 2,
+              child: PagingList<CategoryModel, Category>(
+                selectorData: (_) => categories,
+                itemBuilder: (context, category, index) {
+                  return GestureDetector(
+                    onTap: () {
+                      setState(() {
+                        selectedIndex = index;
+                      });
+                    },
+                    child: Container(
+                      padding: const EdgeInsets.symmetric(
+                        horizontal: 6.0,
+                        vertical: 20.0,
+                      ),
+                      decoration: BoxDecoration(
+                        color: selectedIndex == index
+                            ? theme.primaryColorLight
+                            : Colors.transparent,
+                        borderRadius: const BorderRadius.only(
+                          topRight: Radius.circular(2),
+                          bottomRight: Radius.circular(2),
+                        ),
+                      ),
+                      child: Padding(
+                        padding: const EdgeInsets.only(
+                          top: 4.0,
+                          left: 6,
+                        ),
+                        child: AnimatedDefaultTextStyle(
+                          style: selectedIndex == index
+                              ? TextStyle(
+                                  fontSize: 12,
+                                  color: theme.primaryColor,
+                                  fontWeight: FontWeight.w600,
+                                )
+                              : TextStyle(
+                                  fontSize: 12,
+                                  color: theme.colorScheme.secondary,
+                                ),
+                          maxLines: 2,
+                          softWrap: true,
+                          duration: const Duration(milliseconds: 200),
+                          child: Text(categories[index].name ?? ''),
+                        ),
+                      ),
                     ),
-                  ),
-                ),
-              );
-            },
-          ),
-        ),
-        Expanded(
-          child: GridSubCategory(
-            getSubCategories(categories[selectedIndex].id),
-            key: Key('${categories[selectedIndex]}'),
-            parentCategory: categories[selectedIndex],
-            parentCategoryImage: kGridIconsCategories[
-                    int.tryParse(categories[selectedIndex].id!) ?? -1] ??
-                icons[categories[selectedIndex].id!],
-            icons: icons,
-          ),
-        ),
-      ],
+                  );
+                },
+              ),
+            ),
+            Expanded(
+              flex: 7,
+              child: GridSubCategory(
+                getSubCategories(categories[selectedIndex].id),
+                key: Key('${categories[selectedIndex]}'),
+                parentCategory: categories[selectedIndex],
+                parentCategoryImage: kGridIconsCategories[
+                        int.tryParse(categories[selectedIndex].id!) ?? -1] ??
+                    icons[categories[selectedIndex].id!],
+                icons: icons,
+              ),
+            ),
+          ],
+        );
+      },
     );
   }
 }
diff --git a/lib/screens/categories/layouts/side_menu_with_sub.dart b/lib/screens/categories/layouts/side_menu_with_sub.dart
index 39eb8af..347079a 100644
--- a/lib/screens/categories/layouts/side_menu_with_sub.dart
+++ b/lib/screens/categories/layouts/side_menu_with_sub.dart
@@ -1,19 +1,21 @@
 import 'package:flutter/material.dart';
+import 'package:provider/provider.dart';
 
 import '../../../common/config.dart';
 import '../../../common/constants.dart';
 import '../../../generated/l10n.dart';
+import '../../../models/category/category_model.dart';
 import '../../../models/entities/index.dart';
 import '../../../routes/flux_navigate.dart';
 import '../../../widgets/common/flux_image.dart';
+import '../../../widgets/common/paging_list.dart';
 
 class SideMenuSubCategories extends StatefulWidget {
   static const String type = 'sideMenuWithSub';
 
-  final List<Category>? categories;
   final Map<String, dynamic>? icons;
 
-  const SideMenuSubCategories(this.categories, {this.icons});
+  const SideMenuSubCategories({this.icons});
 
   @override
   State<StatefulWidget> createState() => SideMenuSubCategoriesState();
@@ -22,23 +24,16 @@ class SideMenuSubCategories extends StatefulWidget {
 class SideMenuSubCategoriesState extends State<SideMenuSubCategories> {
   int selectedIndex = 0;
 
-  @override
-  void didUpdateWidget(covariant SideMenuSubCategories oldWidget) {
-    super.didUpdateWidget(oldWidget);
-    if (oldWidget.categories?.length != widget.categories?.length) {
-      setState(() {
-        selectedIndex = 0;
-      });
-    }
-  }
+  CategoryModel get categoryModel =>
+      Provider.of<CategoryModel>(context, listen: false);
 
   List<Category> getSubCategories(id) {
-    return widget.categories!.where((o) => o.parent == id).toList();
+    return categoryModel.getCategory(parentId: id) ?? <Category>[];
   }
 
-  Map<String, dynamic> getListIcons() {
+  Map<String, dynamic> getListIcons(categories) {
     var icons = <String?, dynamic>{};
-    for (var cat in widget.categories!) {
+    for (var cat in categories) {
       if (cat.image != null && cat.image!.isNotEmpty) {
         icons[cat.id] = cat.image;
       }
@@ -48,7 +43,7 @@ class SideMenuSubCategoriesState extends State<SideMenuSubCategories> {
 
   List<Category> getListCategories() {
     var categories = <Category>[];
-    for (var cat in widget.categories!) {
+    for (var cat in categoryModel.categories!) {
       if (cat.parent == '0') {
         categories.add(cat);
       }
@@ -60,87 +55,94 @@ class SideMenuSubCategoriesState extends State<SideMenuSubCategories> {
   Widget build(BuildContext context) {
     final theme = Theme.of(context);
 
-    if (widget.categories == null) {
-      return Container(
-        child: kLoadingWidget(context),
-      );
-    }
+    return Consumer<CategoryModel>(
+      builder: (context, provider, child) {
+        if (provider.isFirstLoad) {
+          return Center(
+            child: kLoadingWidget(context),
+          );
+        }
 
-    var categories = getListCategories();
-    var icons = getListIcons();
+        final categories = provider.rootCategories ?? <Category>[];
 
-    if (categories.isEmpty) {
-      return const SizedBox();
-    }
+        if (categories.isEmpty) {
+          return Center(
+            child: Text(S.of(context).noData),
+          );
+        }
 
-    return Row(
-      crossAxisAlignment: CrossAxisAlignment.start,
-      children: <Widget>[
-        Expanded(
-          flex: 3,
-          child: ListView.builder(
-            shrinkWrap: true,
-            itemCount: categories.length,
-            itemBuilder: (context, index) {
-              return GestureDetector(
-                onTap: () {
-                  setState(() {
-                    selectedIndex = index;
-                  });
-                },
-                child: Container(
-                  padding: const EdgeInsets.symmetric(
-                    horizontal: 6.0,
-                    vertical: 12.0,
-                  ),
-                  decoration: BoxDecoration(
-                    color: selectedIndex == index
-                        ? theme.primaryColor.withOpacity(0.1)
-                        : Colors.transparent,
-                    borderRadius: const BorderRadius.only(
-                      topRight: Radius.circular(12),
-                      bottomRight: Radius.circular(12),
-                    ),
-                  ),
-                  child: Padding(
-                    padding: const EdgeInsets.only(
-                      top: 4.0,
-                      left: 6,
-                    ),
-                    child: AnimatedDefaultTextStyle(
-                      style: selectedIndex == index
-                          ? TextStyle(
-                              fontSize: 11,
-                              color: theme.primaryColor,
-                              fontWeight: FontWeight.w600,
-                            )
-                          : TextStyle(
-                              fontSize: 11,
-                              color: theme.colorScheme.secondary,
-                            ),
-                      maxLines: 2,
-                      overflow: TextOverflow.ellipsis,
-                      duration: const Duration(milliseconds: 200),
-                      child: Text(categories[index].name?.toUpperCase() ?? ''),
+        var icons = getListIcons(categories);
+
+        return Row(
+          crossAxisAlignment: CrossAxisAlignment.start,
+          children: <Widget>[
+            Expanded(
+              flex: 3,
+              child: PagingList<CategoryModel, Category>(
+                selectorData: (_) => categories,
+                itemBuilder: (context, category, index) {
+                  return GestureDetector(
+                    onTap: () {
+                      setState(() {
+                        selectedIndex = index;
+                      });
+                    },
+                    child: Container(
+                      padding: const EdgeInsets.symmetric(
+                        horizontal: 6.0,
+                        vertical: 12.0,
+                      ),
+                      decoration: BoxDecoration(
+                        color: selectedIndex == index
+                            ? theme.primaryColor.withOpacity(0.1)
+                            : Colors.transparent,
+                        borderRadius: const BorderRadius.only(
+                          topRight: Radius.circular(8),
+                          bottomRight: Radius.circular(8),
+                        ),
+                      ),
+                      child: Padding(
+                        padding: const EdgeInsets.only(
+                          top: 4.0,
+                          left: 6,
+                        ),
+                        child: AnimatedDefaultTextStyle(
+                          style: selectedIndex == index
+                              ? TextStyle(
+                                  fontSize: 11,
+                                  color: theme.primaryColor,
+                                  fontWeight: FontWeight.w600,
+                                )
+                              : TextStyle(
+                                  fontSize: 11,
+                                  color: theme.colorScheme.secondary,
+                                ),
+                          maxLines: 2,
+                          overflow: TextOverflow.ellipsis,
+                          duration: const Duration(milliseconds: 200),
+                          child:
+                              Text(categories[index].name?.toUpperCase() ?? ''),
+                        ),
+                      ),
                     ),
-                  ),
-                ),
-              );
-            },
-          ),
-        ),
-        Expanded(
-          flex: 7,
-          child: GridSubCategory(
-            getSubCategories(categories[selectedIndex].id),
-            parentCategory: categories[selectedIndex],
-            parentCategoryImage: kGridIconsCategories[
-                    int.tryParse(categories[selectedIndex].id!) ?? -1] ??
-                icons[categories[selectedIndex].id!],
-            icons: icons,
-          ),
-        ),
-      ],
+                  );
+                },
+              ),
+            ),
+            Expanded(
+              flex: 7,
+              child: GridSubCategory(
+                getSubCategories(categories[selectedIndex].id),
+                parentCategory: categories[selectedIndex],
+                parentCategoryImage: kGridIconsCategories[
+                        int.tryParse(categories[selectedIndex].id!) ?? -1] ??
+                    icons[categories[selectedIndex].id!],
+                icons: icons,
+              ),
+            ),
+          ],
+        );
+      },
     );
   }
 }
diff --git a/lib/screens/categories/layouts/sub.dart b/lib/screens/categories/layouts/sub.dart
index b4f753e..8a5d115 100644
--- a/lib/screens/categories/layouts/sub.dart
+++ b/lib/screens/categories/layouts/sub.dart
@@ -3,7 +3,8 @@ import 'package:flutter/material.dart';
 import 'package:provider/provider.dart';
 
 import '../../../common/config.dart';
-import '../../../models/index.dart' show AppModel, Category, Product, UserModel;
+import '../../../models/index.dart'
+    show AppModel, Category, CategoryModel, Product, UserModel;
 import '../../../services/index.dart';
 import '../../../widgets/product/product_list.dart';
 import '../../base_screen.dart';
@@ -11,24 +12,27 @@ import '../../base_screen.dart';
 class SubCategories extends StatelessWidget {
   static const String type = 'subCategories';
 
-  final List<Category>? categories;
+  final ScrollController? scrollController;
 
-  const SubCategories(this.categories);
+  const SubCategories({
+    this.scrollController,
+  });
 
   @override
   Widget build(BuildContext context) {
-    var key = (categories != null && categories!.isNotEmpty)
-        ? categories.toString()
-        : SubCategories.type;
-
-    return SubCategoriesLayout(categories, key: Key(key));
+    return SubCategoriesLayout(
+      scrollController: scrollController,
+    );
   }
 }
 
 class SubCategoriesLayout extends StatefulWidget {
-  final List<Category>? categories;
+  final ScrollController? scrollController;
 
-  const SubCategoriesLayout(this.categories, {Key? key}) : super(key: key);
+  const SubCategoriesLayout({
+    this.scrollController,
+    Key? key,
+  }) : super(key: key);
 
   @override
   BaseScreen<SubCategoriesLayout> createState() => _StateSubCategoriesLayout();
@@ -43,6 +47,9 @@ class _StateSubCategoriesLayout extends BaseScreen<SubCategoriesLayout> {
   CancelableCompleter completer = CancelableCompleter();
   final Services _service = Services();
 
+  CategoryModel get categoryModel =>
+      Provider.of<CategoryModel>(context, listen: false);
+
   @override
   void afterFirstLayout(BuildContext context) {
     onRefresh();
@@ -57,7 +64,7 @@ class _StateSubCategoriesLayout extends BaseScreen<SubCategoriesLayout> {
     final userId = Provider.of<UserModel>(context, listen: false).user?.id;
     completer.complete(_service.api.fetchProductsByCategory(
         lang: Provider.of<AppModel>(context, listen: false).langCode,
-        categoryId: widget.categories![selectedIndex].id,
+        categoryId: categoryModel.categories![selectedIndex].id,
         page: page + 1,
         userId: userId));
     completer.operation.then((value) {
@@ -84,7 +91,7 @@ class _StateSubCategoriesLayout extends BaseScreen<SubCategoriesLayout> {
       final userId = Provider.of<UserModel>(context, listen: false).user?.id;
       completer.complete(_service.api.fetchProductsByCategory(
           lang: Provider.of<AppModel>(context, listen: false).langCode,
-          categoryId: widget.categories![selectedIndex].id,
+          categoryId: categoryModel.categories![selectedIndex].id,
           page: 1,
           userId: userId));
       completer.operation.then((value) {
@@ -107,69 +114,76 @@ class _StateSubCategoriesLayout extends BaseScreen<SubCategoriesLayout> {
   @override
   Widget build(BuildContext context) {
     final theme = Theme.of(context);
-    if (widget.categories!.isEmpty) {
-      return const SizedBox();
-    }
 
-    if ((products == null) && !isFetching) {
-      return const SizedBox();
-    }
-
-    return Column(
-      children: <Widget>[
-        SizedBox(
-          height: 60,
-          child: ListView.builder(
-            scrollDirection: Axis.horizontal,
-            itemCount: widget.categories!.length,
-            itemBuilder: (context, index) {
-              return GestureDetector(
-                onTap: () {
-                  setState(() {
-                    selectedIndex = index;
-                    page = 1;
-                    isFetching = true;
-                    isEnd = false;
-                    products = [];
-                    completer.operation.cancel();
-                  });
-                  onRefresh();
+    return Consumer<CategoryModel>(
+      builder: (context, provider, child) {
+        final categories = provider.categories ?? <Category>[];
+        if (categories.isEmpty) {
+          return const SizedBox();
+        }
+
+        if ((products == null) && !isFetching) {
+          return const SizedBox();
+        }
+        return Column(
+          children: <Widget>[
+            SizedBox(
+              height: 60,
+              child: ListView.builder(
+                scrollDirection: Axis.horizontal,
+                itemCount: categoryModel.categories!.length,
+                itemBuilder: (context, index) {
+                  return GestureDetector(
+                    onTap: () {
+                      setState(() {
+                        selectedIndex = index;
+                        page = 1;
+                        isFetching = true;
+                        isEnd = false;
+                        products = [];
+                        completer.operation.cancel();
+                      });
+                      onRefresh();
+                    },
+                    child: Padding(
+                      padding: const EdgeInsets.only(left: 10, right: 10),
+                      child: Center(
+                        child: Text(categories[index].name!,
+                            style: TextStyle(
+                                fontSize: 18,
+                                color: selectedIndex == index
+                                    ? theme.primaryColor
+                                    : theme.hintColor)),
+                      ),
+                    ),
+                  );
+                },
+              ),
+            ),
+            Expanded(
+              child: LayoutBuilder(
+                builder: (context, constraints) {
+                  return ProductList(
+                    scrollController: widget.scrollController,
+                    width: constraints.maxWidth,
+                    products: products,
+                    isEnd: isEnd,
+                    isFetching: isFetching,
+                    onLoadMore: onLoadMore,
+                    onRefresh: onRefresh,
+                    layout: Provider.of<AppModel>(context, listen: false)
+                        .productListLayout,
+                    ratioProductImage:
+                        Provider.of<AppModel>(context, listen: false)
+                            .ratioProductImage,
+                    productListItemHeight: kProductDetail.productListItemHeight,
+                  );
                 },
-                child: Padding(
-                  padding: const EdgeInsets.only(left: 10, right: 10),
-                  child: Center(
-                    child: Text(widget.categories![index].name!,
-                        style: TextStyle(
-                            fontSize: 18,
-                            color: selectedIndex == index
-                                ? theme.primaryColor
-                                : theme.hintColor)),
-                  ),
-                ),
-              );
-            },
-          ),
-        ),
-        Expanded(
-          child: LayoutBuilder(
-            builder: (context, constraints) {
-              return ProductList(
-                width: constraints.maxWidth,
-                products: products,
-                isEnd: isEnd,
-                isFetching: isFetching,
-                onLoadMore: onLoadMore,
-                onRefresh: onRefresh,
-                layout: Provider.of<AppModel>(context, listen: false)
-                    .productListLayout,
-                ratioProductImage: Provider.of<AppModel>(context, listen: false)
-                    .ratioProductImage,
-                productListItemHeight: kProductDetail.productListItemHeight,
-              );
-            },
-          ),
-        )
-      ],
+              ),
+            )
+          ],
+        );
+      },
     );
   }
 }
diff --git a/lib/screens/categories/main_category_screen.dart b/lib/screens/categories/main_category_screen.dart
deleted file mode 100644
index 368f12c..0000000
--- a/lib/screens/categories/main_category_screen.dart
+++ /dev/null
@@ -1,157 +0,0 @@
-import 'dart:math' as math;
-
-import 'package:flutter/material.dart';
-import 'package:provider/provider.dart';
-
-import '../../common/config.dart';
-import '../../generated/l10n.dart';
-import '../../models/category/category_model.dart';
-import '../../models/category/detail_category_model.dart';
-import 'widgets/list_category.dart';
-import 'widgets/list_product.dart';
-
-const _numberOfTabPreload = 3;
-
-class MainCategoryScreen extends StatefulWidget {
-  const MainCategoryScreen({Key? key}) : super(key: key);
-
-  @override
-  State<MainCategoryScreen> createState() => _MainCategoryScreenState();
-}
-
-class _MainCategoryScreenState extends State<MainCategoryScreen>
-    with SingleTickerProviderStateMixin {
-  CategoryModel get model => Provider.of<CategoryModel>(context, listen: false);
-
-  TabController? _tabController;
-
-  void _onChanged([int? index]) {
-    final data = model.categories;
-    if (data == null) return;
-    final selectedIndex = index ?? _tabController?.index;
-    if (selectedIndex == null) return;
-    final element = data[selectedIndex];
-    model.getDetailCategoryModel(element.id!)?.initData();
-  }
-
-  @override
-  void dispose() {
-    _tabController?.removeListener(_onChanged);
-    _tabController?.dispose();
-    super.dispose();
-  }
-
-  @override
-  Widget build(BuildContext context) {
-    return Scaffold(
-      appBar: AppBar(
-        elevation: 0.5,
-        backgroundColor: Theme.of(context).backgroundColor,
-        title: Text(
-          S.of(context).category,
-          style: Theme.of(context)
-              .textTheme
-              .headline5
-              ?.copyWith(fontWeight: FontWeight.w700),
-        ),
-      ),
-      backgroundColor: Theme.of(context).backgroundColor,
-      body: Consumer<CategoryModel>(
-        builder: (context, model, child) {
-          if (model.categories == null) {
-            if (model.isLoading) {
-              return Center(child: kLoadingWidget(context));
-            } else {
-              return const Center(child: Text('No data'));
-            }
-          }
-          final data = model.categories!;
-          for (var i = 0; i < data.length; i++) {
-            final element = data[i];
-            model.initSubcategory(element,
-                fetchData: i <
-                    math.min(
-                      data.length,
-                      _numberOfTabPreload,
-                    ));
-          }
-          _tabController ??= TabController(
-            length: data.length,
-            vsync: this,
-          )..addListener(_onChanged);
-          return Column(
-            crossAxisAlignment: CrossAxisAlignment.start,
-            children: [
-              SizedBox(
-                height: 50,
-                child: TabBar(
-                    controller: _tabController,
-                    isScrollable: true,
-                    onTap: _onChanged,
-                    labelPadding: const EdgeInsets.symmetric(
-                      horizontal: 12,
-                    ),
-                    indicatorPadding: const EdgeInsets.symmetric(
-                      horizontal: 8,
-                    ),
-                    indicatorColor: Theme.of(context).primaryColor,
-                    unselectedLabelStyle: const TextStyle(
-                      fontSize: 15,
-                      color: Colors.grey,
-                    ),
-                    labelStyle: const TextStyle(
-                      fontSize: 15,
-                      fontWeight: FontWeight.bold,
-                    ),
-                    tabs: data
-                        .map((e) => Tab(
-                              text: e.displayName.toUpperCase(),
-                            ))
-                        .toList()),
-              ),
-              Expanded(
-                child: TabBarView(
-                  controller: _tabController,
-                  children: data.map(
-                    (e) {
-                      final detailCategoryModel =
-                          model.getDetailCategoryModel(e.id!);
-                      if (detailCategoryModel == null) {
-                        return const SizedBox();
-                      }
-                      return ChangeNotifierProvider.value(
-                        value: detailCategoryModel,
-                        child: Selector<DetailCategoryModel, bool?>(
-                          shouldRebuild: (previous, next) {
-                            return previous != next;
-                          },
-                          selector: (context, provider) => provider.hasChildren,
-                          builder: (context, hasChildren, child) {
-                            if (hasChildren == null) {
-                              return const Center(
-                                  child: CircularProgressIndicator());
-                            }
-                            if (hasChildren) {
-                              return ChangeNotifierProvider.value(
-                                value: detailCategoryModel.subcategoryModel,
-                                child: ListCategory(category: e),
-                              );
-                            }
-                            return ChangeNotifierProvider.value(
-                              value: detailCategoryModel.listProductModel,
-                              child: const ListProduct(),
-                            );
-                          },
-                        ),
-                      );
-                    },
-                  ).toList(),
-                ),
-              ),
-            ],
-          );
-        },
-      ),
-    );
-  }
-}
diff --git a/lib/screens/categories/widgets/category_column_item.dart b/lib/screens/categories/widgets/category_column_item.dart
index 9b8d395..c8955c8 100644
--- a/lib/screens/categories/widgets/category_column_item.dart
+++ b/lib/screens/categories/widgets/category_column_item.dart
@@ -1,8 +1,7 @@
 import 'package:flutter/material.dart';
 
-import '../../../common/constants.dart';
 import '../../../models/entities/index.dart';
-import '../../../routes/flux_navigate.dart';
+import '../../../widgets/common/flux_image.dart';
 
 class CategoryColumnItem extends StatelessWidget {
   final Category category;
@@ -11,37 +10,30 @@ class CategoryColumnItem extends StatelessWidget {
 
   @override
   Widget build(BuildContext context) {
-    return GestureDetector(
-      onTap: () => FluxNavigate.pushNamed(
-        RouteList.backdrop,
-        arguments: BackDropArguments(
-          cateId: category.id,
-          cateName: category.name,
-        ),
-      ),
-      child: Stack(
-        children: <Widget>[
-          Container(
-            decoration: BoxDecoration(
-              image: DecorationImage(
-                  image: NetworkImage(category.image!), fit: BoxFit.cover),
+    return Stack(
+      fit: StackFit.expand,
+      children: <Widget>[
+        LayoutBuilder(builder: (context, constraints) {
+          return FluxImage(
+            imageUrl: category.image!,
+            fit: BoxFit.cover,
+            width: constraints.maxWidth,
+          );
+        }),
+        Container(
+          color: const Color.fromRGBO(0, 0, 0, 0.4),
+          child: Center(
+            child: Text(
+              category.name!,
+              style: const TextStyle(
+                  color: Colors.white,
+                  fontSize: 20,
+                  fontWeight: FontWeight.bold),
+              textAlign: TextAlign.center,
             ),
           ),
-          Container(
-            color: const Color.fromRGBO(0, 0, 0, 0.4),
-            child: Center(
-              child: Text(
-                category.name!,
-                style: const TextStyle(
-                    color: Colors.white,
-                    fontSize: 20,
-                    fontWeight: FontWeight.bold),
-                textAlign: TextAlign.center,
-              ),
-            ),
-          )
-        ],
-      ),
+        )
+      ],
     );
   }
 }
diff --git a/lib/screens/chat/bottom_sheet_smart_chat.dart b/lib/screens/chat/bottom_sheet_smart_chat.dart
index 5f3b13e..42f170e 100644
--- a/lib/screens/chat/bottom_sheet_smart_chat.dart
+++ b/lib/screens/chat/bottom_sheet_smart_chat.dart
@@ -4,6 +4,7 @@ import 'package:url_launcher/url_launcher.dart';
 
 import '../../common/config.dart' as config;
 import '../../common/constants.dart';
+import '../../common/tools/tools.dart';
 import '../../generated/l10n.dart';
 import '../../models/user_model.dart';
 import '../../services/index.dart';
@@ -131,7 +132,8 @@ class _BottomSheetSmartChatState extends State<BottomSheetSmartChat>
         option['app'],
       );
       return Align(
-        alignment: Alignment.bottomRight,
+        alignment:
+            Tools.isRTL(context) ? Alignment.bottomLeft : Alignment.bottomRight,
         child: Padding(
           padding: const EdgeInsets.all(16.0),
           child: FloatingActionButton(
@@ -145,7 +147,8 @@ class _BottomSheetSmartChatState extends State<BottomSheetSmartChat>
     }
 
     return Align(
-      alignment: Alignment.bottomRight,
+      alignment:
+          Tools.isRTL(context) ? Alignment.bottomLeft : Alignment.bottomRight,
       child: Padding(
         padding: const EdgeInsets.all(14.0),
         child: ScaleTransition(
diff --git a/lib/screens/chat/fab_circle_smart_chat.dart b/lib/screens/chat/fab_circle_smart_chat.dart
index 754237f..22790e5 100644
--- a/lib/screens/chat/fab_circle_smart_chat.dart
+++ b/lib/screens/chat/fab_circle_smart_chat.dart
@@ -4,6 +4,7 @@ import 'package:url_launcher/url_launcher.dart';
 import '../../common/config.dart' as config;
 import '../../generated/l10n.dart';
 import '../../services/services.dart';
+import '../../widgets/common/flux_image.dart';
 import 'chat_mixin.dart';
 import 'fab_circle_menu.dart';
 
@@ -31,7 +32,7 @@ class _FabCircleSmartChatState extends State<FabCircleSmartChat>
   ) {
     return IconButton(
       icon: (imageData?.isNotEmpty ?? false)
-          ? Image.network(imageData!, width: 35, fit: BoxFit.contain)
+          ? FluxImage(imageUrl: imageData!, width: 35, fit: BoxFit.contain)
           : iconData != null
               ? Icon(
                   iconData,
diff --git a/lib/screens/checkout/review_screen.dart b/lib/screens/checkout/review_screen.dart
index 7f8e252..aa219c5 100644
--- a/lib/screens/checkout/review_screen.dart
+++ b/lib/screens/checkout/review_screen.dart
@@ -12,6 +12,7 @@ import '../../widgets/common/common_safe_area.dart';
 import '../../widgets/common/expansion_info.dart';
 import '../../widgets/product/cart_item.dart';
 import '../base_screen.dart';
+import '../cart/widgets/shopping_cart_sumary.dart';
 
 class ReviewScreen extends StatefulWidget {
   final Function? onBack;
@@ -87,6 +88,7 @@ class _ReviewState extends BaseScreen<ReviewScreen> {
                             style: const TextStyle(fontSize: 18)),
                       ),
                       ...getProducts(model, context),
+                      const ShoppingCartSummary(showPrice: false),
                       const SizedBox(height: 20),
                       Padding(
                         padding: const EdgeInsets.symmetric(
@@ -129,11 +131,14 @@ class _ReviewState extends BaseScreen<ReviewScreen> {
                             children: <Widget>[
                               Text(
                                 S.of(context).discount,
-                                style: TextStyle(
-                                  fontSize: 14,
-                                  color:
-                                      Theme.of(context).colorScheme.secondary,
-                                ),
+                                style: Theme.of(context)
+                                    .textTheme
+                                    .bodyText1!
+                                    .copyWith(
+                                      color: Theme.of(context)
+                                          .colorScheme
+                                          .secondary,
+                                    ),
                               ),
                               Text(
                                 model.getCoupon(),
diff --git a/lib/screens/checkout/widgets/payment_methods.dart b/lib/screens/checkout/widgets/payment_methods.dart
index 755eb83..e9bae67 100644
--- a/lib/screens/checkout/widgets/payment_methods.dart
+++ b/lib/screens/checkout/widgets/payment_methods.dart
@@ -1,6 +1,7 @@
 import 'dart:async';
 import 'dart:convert' as convert;
 
+import 'package:collection/collection.dart';
 import 'package:flutter/cupertino.dart';
 import 'package:flutter/material.dart';
 import 'package:provider/provider.dart';
@@ -14,6 +15,7 @@ import '../../../generated/l10n.dart';
 import '../../../models/booking/booking_model.dart';
 import '../../../models/index.dart'
     show AppModel, CartModel, Order, PaymentMethodModel, TaxModel, UserModel;
+import '../../../models/tera_wallet/wallet_model.dart';
 import '../../../modules/native_payment/credit_card/index.dart';
 import '../../../modules/native_payment/flutterwave/services.dart';
 import '../../../modules/native_payment/mercado_pago/index.dart';
@@ -23,6 +25,7 @@ import '../../../modules/native_payment/paytm/services.dart';
 import '../../../modules/native_payment/razorpay/services.dart';
 import '../../../services/index.dart';
 import '../../../widgets/common/common_safe_area.dart';
+import '../../cart/widgets/shopping_cart_sumary.dart';
 
 class PaymentMethods extends StatefulWidget {
   final Function? onBack;
@@ -73,16 +76,16 @@ class _PaymentMethodsState extends State<PaymentMethods> with RazorDelegate {
     final paymentMethodModel = Provider.of<PaymentMethodModel>(context);
     final taxModel = Provider.of<TaxModel>(context);
 
-    return Column(
-      children: [
-        Expanded(
-          child: Padding(
-            padding: const EdgeInsets.symmetric(
-              horizontal: 16.0,
-              vertical: 8.0,
-            ),
-            child: ListenableProvider.value(
-              value: paymentMethodModel,
+    return ListenableProvider.value(
+      value: paymentMethodModel,
+      child: Column(
+        children: [
+          Expanded(
+            child: Padding(
+              padding: const EdgeInsets.symmetric(
+                horizontal: 16.0,
+                vertical: 8.0,
+              ),
               child: SingleChildScrollView(
                 child: Column(
                   crossAxisAlignment: CrossAxisAlignment.start,
@@ -102,8 +105,8 @@ class _PaymentMethodsState extends State<PaymentMethods> with RazorDelegate {
                     ),
                     Services().widget.renderPayByWallet(context),
                     const SizedBox(height: 20),
-                    Consumer<PaymentMethodModel>(
-                        builder: (context, model, child) {
+                    Consumer2<PaymentMethodModel, WalletModel>(
+                        builder: (context, model, walletModel, child) {
                       if (model.isLoading) {
                         return SizedBox(
                             height: 100, child: kLoadingWidget(context));
@@ -118,11 +121,26 @@ class _PaymentMethodsState extends State<PaymentMethods> with RazorDelegate {
                         );
                       }
 
+                      var ignoreWallet = false;
+                      final isWalletExisted = model.paymentMethods
+                              .firstWhereOrNull((e) => e.id == 'wallet') !=
+                          null;
+                      if (isWalletExisted) {
+                        final total = (cartModel.getTotal() ?? 0) +
+                            cartModel.walletAmount;
+                        ignoreWallet = total > walletModel.balance;
+                      }
+
                       if (selectedId == null &&
                           model.paymentMethods.isNotEmpty) {
-                        selectedId = model.paymentMethods
-                            .firstWhere((item) => item.enabled!)
-                            .id;
+                        selectedId =
+                            model.paymentMethods.firstWhereOrNull((item) {
+                          if (ignoreWallet) {
+                            return item.id != 'wallet' && item.enabled!;
+                          } else {
+                            return item.enabled!;
+                          }
+                        })?.id;
                       }
 
                       return Column(
@@ -143,6 +161,7 @@ class _PaymentMethodsState extends State<PaymentMethods> with RazorDelegate {
                         ],
                       );
                     }),
+                    const ShoppingCartSummary(showPrice: false),
                     const SizedBox(height: 20),
                     Padding(
                       padding: const EdgeInsets.symmetric(
@@ -242,13 +261,15 @@ class _PaymentMethodsState extends State<PaymentMethods> with RazorDelegate {
               ),
             ),
           ),
-        ),
-        _buildBottom(paymentMethodModel, cartModel),
-      ],
+          Consumer<PaymentMethodModel>(builder: (context, model, child) {
+            return _buildBottom(model, cartModel);
+          })
+        ],
+      ),
     );
   }
 
-  Widget _buildBottom(paymentMethodModel, cartModel) {
+  Widget _buildBottom(PaymentMethodModel paymentMethodModel, cartModel) {
     return CommonSafeArea(
       child: Row(
         mainAxisSize: MainAxisSize.min,
@@ -286,9 +307,11 @@ class _PaymentMethodsState extends State<PaymentMethods> with RazorDelegate {
                   backgroundColor: Theme.of(context).primaryColor,
                   elevation: 0,
                 ),
-                onPressed: () => isPaying || selectedId == null
-                    ? showSnackbar
-                    : placeOrder(paymentMethodModel, cartModel),
+                onPressed: (paymentMethodModel.message?.isNotEmpty ?? false)
+                    ? null
+                    : () => isPaying || selectedId == null
+                        ? showSnackbar
+                        : placeOrder(paymentMethodModel, cartModel),
                 icon: const Icon(
                   CupertinoIcons.check_mark_circled_solid,
                   size: 20,
diff --git a/lib/screens/checkout/widgets/shipping_address.dart b/lib/screens/checkout/widgets/shipping_address.dart
index 2e71fb7..645149f 100644
--- a/lib/screens/checkout/widgets/shipping_address.dart
+++ b/lib/screens/checkout/widgets/shipping_address.dart
@@ -3,6 +3,7 @@ import 'package:country_pickers/country.dart' as picker_country;
 import 'package:country_pickers/country_pickers.dart' as picker;
 import 'package:flutter/cupertino.dart' show CupertinoIcons;
 import 'package:flutter/material.dart';
+import 'package:intl_phone_number_input/intl_phone_number_input.dart';
 import 'package:localstorage/localstorage.dart';
 import 'package:provider/provider.dart';
 
@@ -427,6 +428,62 @@ class _ShippingAddressState extends State<ShippingAddress> {
                           }
                           nextFieldIndex++;
                         }
+
+                        if (currentFieldType == AddressFieldType.phoneNumber &&
+                            kPhoneNumberConfig.enablePhoneNumberValidation) {
+                          return InternationalPhoneNumberInput(
+                            /// Auto focus first field if it's empty.
+                            autoFocus: index == 0 &&
+                                (currentFieldController?.text.isEmpty ?? false),
+                            textFieldController: currentFieldController,
+                            focusNode: currentFieldFocusNode,
+                            isReadOnly: isFieldReadOnly(index),
+                            autofillHints: currentFieldType.autofillHint != null
+                                ? ['${currentFieldType.autofillHint}']
+                                : null,
+                            inputDecoration: InputDecoration(
+                              labelText: getFieldLabel(currentFieldType),
+                            ),
+                            keyboardType: getKeyboardType(currentFieldType),
+                            keyboardAction: hasNext
+                                ? TextInputAction.next
+                                : TextInputAction.done,
+                            onFieldSubmitted: (_) {
+                              if (hasNext) {
+                                nextFieldFocus?.requestFocus();
+                              }
+                            },
+                            onSaved: (value) {
+                              onTextFieldSaved(
+                                value.phoneNumber,
+                                currentFieldType,
+                              );
+                            },
+                            onInputChanged: (PhoneNumber number) {},
+                            onInputValidated: (value) => {},
+                            spaceBetweenSelectorAndTextField: 0,
+                            selectorConfig: SelectorConfig(
+                              enable: kPhoneNumberConfig.useInternationalFormat,
+                              showFlags: kPhoneNumberConfig.showCountryFlag,
+                              selectorType: kPhoneNumberConfig.selectorType,
+                              setSelectorButtonAsPrefixIcon:
+                                  kPhoneNumberConfig.selectorFlagAsPrefixIcon,
+                              leadingPadding: 0,
+                              trailingSpace: false,
+                            ),
+                            selectorTextStyle:
+                                Theme.of(context).textTheme.subtitle1,
+                            ignoreBlank: !(_configs[index]?.required ?? true),
+                            initialValue: PhoneNumber(
+                              dialCode: kPhoneNumberConfig.dialCodeDefault,
+                              isoCode: kPhoneNumberConfig.countryCodeDefault,
+                              phoneNumber: currentFieldController?.text,
+                            ),
+                            formatInput: kPhoneNumberConfig.formatInput,
+                            countries: kPhoneNumberConfig.customCountryList,
+                          );
+                        }
+
                         return TextFormField(
                           /// Auto focus first field if it's empty.
                           autofocus: index == 0 &&
diff --git a/lib/screens/common/app_bar_mixin.dart b/lib/screens/common/app_bar_mixin.dart
index 636cac3..94f0bfc 100644
--- a/lib/screens/common/app_bar_mixin.dart
+++ b/lib/screens/common/app_bar_mixin.dart
@@ -1,6 +1,7 @@
 import 'package:flutter/material.dart';
 import 'package:provider/provider.dart';
 
+import '../../common/constants.dart';
 import '../../menu/index.dart' show FluxAppBar;
 import '../../models/index.dart' show AppModel;
 import '../../modules/dynamic_layout/index.dart' show AppBarConfig;
@@ -8,6 +9,42 @@ import '../../modules/dynamic_layout/index.dart' show AppBarConfig;
 mixin AppBarMixin<T extends StatefulWidget> on State<T> {
   AppBarConfig? get appBar => context.read<AppModel>().appConfig?.appBar;
 
+  final ValueNotifier<bool> _isAtTopNotifier = ValueNotifier(true);
+
+  bool _shouldShowAppBarBottomItems(bool isAtTop) =>
+      isAtTop && (appBar?.bottomItems?.isNotEmpty ?? false);
+
+  ScrollController? screenScrollController;
+
+  @override
+  void initState() {
+    super.initState();
+    WidgetsBinding.instance.addPostFrameCallback((_) {
+      screenScrollController ??= PrimaryScrollController.of(context);
+      screenScrollController?.addListener(_scrollListener);
+    });
+  }
+
+  @override
+  void dispose() {
+    screenScrollController?.removeListener(_scrollListener);
+    screenScrollController = null;
+    super.dispose();
+  }
+
+  void _scrollListener() {
+    if (screenScrollController == null ||
+        !(screenScrollController?.hasClients ?? false) ||
+        screenScrollController?.positions.length != 1) {
+      return;
+    }
+    if ((screenScrollController?.offset ?? 0.0) > 0.0) {
+      _isAtTopNotifier.value = false;
+    } else {
+      _isAtTopNotifier.value = true;
+    }
+  }
+
   bool showAppBar(String routeName) {
     if (appBar?.enable ?? false) {
       return appBar?.shouldShowOn(routeName) ?? false;
@@ -15,39 +52,106 @@ mixin AppBarMixin<T extends StatefulWidget> on State<T> {
     return false;
   }
 
-  AppBar get appBarWidget => AppBar(
-        titleSpacing: 0,
-        elevation: appBar?.elevation.toDouble() ?? 0,
-        automaticallyImplyLeading: false,
-        backgroundColor: Theme.of(context).backgroundColor,
-        title: const FluxAppBar(),
+  Widget _getFluxAppBar(bool isAtTop) => Column(
+        children: [
+          FluxAppBar(
+            isBottom: false,
+            showBottom: isAtTop,
+          ),
+          if (_shouldShowAppBarBottomItems(isAtTop))
+            FluxAppBar(
+              isBottom: true,
+              showBottom: isAtTop,
+            ),
+        ],
       );
 
+  double _getFluxAppBarHeight(bool isAtTop) =>
+      _shouldShowAppBarBottomItems(isAtTop)
+          ? kToolbarHeight * 2 + 8
+          : kToolbarHeight;
+
+  Widget get appBarWidget => getAppBarWidget(appBar: appBar);
+
   /// [snap] is always false if [float] is false.
-  SliverAppBar get sliverAppBarWidget => SliverAppBar(
-        snap: (appBar?.floating ?? true) ? appBar?.snap ?? true : false,
-        pinned: appBar?.pinned ?? true,
-        floating: appBar?.floating ?? true,
-        titleSpacing: 0,
-        elevation: appBar?.elevation.toDouble() ?? 0,
-        forceElevated: true,
-        automaticallyImplyLeading: false,
-        backgroundColor: Theme.of(context).backgroundColor,
-        title: const FluxAppBar(),
+  Widget get sliverAppBarWidget => getSliverAppBarWidget(appBar: appBar);
+
+  Widget getAppBarWidget({
+    AppBarConfig? appBar,
+    Color? backgroundColor,
+  }) =>
+      ValueListenableBuilder(
+        valueListenable: _isAtTopNotifier,
+        builder: (context, bool isAtTop, _) {
+          return AppBar(
+            titleSpacing: 0,
+            elevation: appBar?.elevation.toDouble() ?? 0,
+            automaticallyImplyLeading: false,
+            backgroundColor:
+                backgroundColor ?? Theme.of(context).backgroundColor,
+            title: _getFluxAppBar(isAtTop),
+            toolbarHeight: _getFluxAppBarHeight(isAtTop),
+          );
+        },
       );
 
+  Widget getSliverAppBarWidget({
+    AppBarConfig? appBar,
+    Color? backgroundColor,
+  }) =>
+      ValueListenableBuilder(
+          valueListenable: _isAtTopNotifier,
+          builder: (context, bool isAtTop, _) {
+            return SliverAppBar(
+              snap: (appBar?.floating ?? true) ? appBar?.snap ?? true : false,
+              pinned: appBar?.pinned ?? true,
+              floating: appBar?.floating ?? true,
+              titleSpacing: 0,
+              elevation: appBar?.elevation.toDouble() ?? 0,
+              forceElevated: true,
+              automaticallyImplyLeading: false,
+              backgroundColor:
+                  backgroundColor ?? Theme.of(context).backgroundColor,
+              title: _getFluxAppBar(isAtTop),
+              toolbarHeight: _getFluxAppBarHeight(isAtTop),
+            );
+          });
+
   Widget renderScaffold({
     required String routeName,
-    required Widget body,
+    required Widget child,
     bool? resizeToAvoidBottomInset,
     Color? backgroundColor,
     bool hideNewAppBar = false,
     Widget? floatingActionButton,
+    AppBarConfig? appBarConfig,
+    AppBar? secondAppBar,
   }) {
-    if (showAppBar(routeName) && !hideNewAppBar) {
+    if (child is Scaffold) {
+      printLog(
+        '[renderScaffold] Warning: Duplicate Scaffold can cause AppBar issue on iOS.',
+      );
+    }
+    final appBar = appBarConfig ?? this.appBar;
+    final showNewAppBar =
+        (appBar?.shouldShowOn(routeName) ?? false) && !hideNewAppBar;
+    if (showNewAppBar) {
       return Scaffold(
-        appBar: appBarWidget,
-        body: body,
+        body: Column(
+          children: [
+            getAppBarWidget(
+              appBar: appBar,
+              backgroundColor: backgroundColor,
+            ),
+            if (secondAppBar != null)
+              MediaQuery.removePadding(
+                context: context,
+                removeTop: showNewAppBar,
+                child: secondAppBar,
+              ),
+            Expanded(child: child),
+          ],
+        ),
         resizeToAvoidBottomInset: resizeToAvoidBottomInset,
         backgroundColor: backgroundColor,
         floatingActionButton: floatingActionButton,
@@ -55,14 +159,21 @@ mixin AppBarMixin<T extends StatefulWidget> on State<T> {
     }
     if (resizeToAvoidBottomInset != null ||
         backgroundColor != null ||
-        floatingActionButton != null) {
+        floatingActionButton != null ||
+        secondAppBar != null) {
       return Scaffold(
+        appBar: secondAppBar,
         resizeToAvoidBottomInset: resizeToAvoidBottomInset,
         backgroundColor: backgroundColor,
-        body: body,
+        body: SafeArea(
+          left: false,
+          right: false,
+          bottom: false,
+          child: child,
+        ),
         floatingActionButton: floatingActionButton,
       );
     }
-    return body;
+    return child;
   }
 }
diff --git a/lib/screens/custom/static_site.dart b/lib/screens/custom/static_site.dart
index d10a221..80f0e4e 100644
--- a/lib/screens/custom/static_site.dart
+++ b/lib/screens/custom/static_site.dart
@@ -19,7 +19,7 @@ class _StaticSiteState extends State<StaticSite> with AppBarMixin {
   Widget build(BuildContext context) {
     return renderScaffold(
       routeName: RouteList.html,
-      body: !isMobile
+      child: !isMobile
           ? const PlatformError()
           : SafeArea(
               child: WebView(
diff --git a/lib/screens/custom/webview_screen.dart b/lib/screens/custom/webview_screen.dart
index 8223d02..c7436f2 100644
--- a/lib/screens/custom/webview_screen.dart
+++ b/lib/screens/custom/webview_screen.dart
@@ -3,7 +3,6 @@ import 'package:flutter/material.dart';
 import '../../common/config.dart';
 import '../../common/constants.dart';
 import '../../widgets/common/index.dart';
-import '../common/app_bar_mixin.dart';
 
 class WebViewScreen extends StatefulWidget {
   final String? title;
@@ -30,7 +29,7 @@ class WebViewScreen extends StatefulWidget {
   State<WebViewScreen> createState() => _StateWebViewScreen();
 }
 
-class _StateWebViewScreen extends State<WebViewScreen> with AppBarMixin {
+class _StateWebViewScreen extends State<WebViewScreen> {
   @override
   Widget build(BuildContext context) {
     return WebView(
diff --git a/lib/screens/custom/welcome_screen.dart b/lib/screens/custom/welcome_screen.dart
index ee672b2..de78164 100644
--- a/lib/screens/custom/welcome_screen.dart
+++ b/lib/screens/custom/welcome_screen.dart
@@ -1,6 +1,7 @@
 import 'package:flutter/material.dart';
 
 import '../../generated/l10n.dart';
+import '../../widgets/common/flux_image.dart';
 
 class WelcomeScreen extends StatefulWidget {
   @override
@@ -19,10 +20,10 @@ class _WelcomeScreenState extends State<WelcomeScreen> {
           crossAxisAlignment: CrossAxisAlignment.stretch,
           children: <Widget>[
             Row(
-              children: <Widget>[
+              children: const <Widget>[
                 SizedBox(
                   height: 60.0,
-                  child: Image.asset('assets/images/logo.png'),
+                  child: FluxImage(imageUrl: 'assets/images/logo.png'),
                 ),
               ],
             ),
diff --git a/lib/screens/detail/product_detail_screen.dart b/lib/screens/detail/product_detail_screen.dart
index 011f2a0..1d71ca8 100644
--- a/lib/screens/detail/product_detail_screen.dart
+++ b/lib/screens/detail/product_detail_screen.dart
@@ -83,16 +83,27 @@ class ProductDetailScreen extends StatefulWidget {
                 title:
                     Text(S.of(modalContext).share, textAlign: TextAlign.center),
                 onTap: () {
-                  unawaited(
-                    FlashHelper.message(
-                      context,
-                      message: S.of(context).generatingLink,
-                      duration: const Duration(seconds: 1),
-                    ),
-                  );
-                  Services().firebase.shareDynamicLinkProduct(
-                        itemUrl: product?.permalink,
-                      );
+                  var url = product?.permalink;
+                  if (url?.isNotEmpty ?? false) {
+                    unawaited(
+                      FlashHelper.message(
+                        context,
+                        message: S.of(context).generatingLink,
+                        duration: const Duration(seconds: 1),
+                      ),
+                    );
+                    Services().firebase.shareDynamicLinkProduct(
+                          itemUrl: url,
+                        );
+                  } else {
+                    unawaited(
+                      FlashHelper.errorMessage(
+                        context,
+                        message: S.of(context).failedToGenerateLink,
+                        duration: const Duration(seconds: 1),
+                      ),
+                    );
+                  }
                 },
               ),
             Container(
@@ -124,12 +135,14 @@ class _ProductDetailPageState extends BaseScreen<ProductDetailScreen>
   bool isLoading = true;
   bool _isChecking = Services().widget.enableMembershipUltimate;
   String? _checkingErrorMessage;
+  final ScrollController _scrollController = ScrollController();
 
   @override
   Future<void> afterFirstLayout(BuildContext context) async {}
 
   @override
   void initState() {
+    screenScrollController = _scrollController;
     WidgetsBinding.instance.endOfFrame.then((_) async {
       if (mounted) {
         if (widget.product is Product) {
@@ -231,14 +244,17 @@ class _ProductDetailPageState extends BaseScreen<ProductDetailScreen>
           product!,
           layoutType,
           isLoading,
+          scrollController: _scrollController,
         );
 
-    if (showAppBar(RouteList.productDetail)) {
-      layout = Scaffold(
-        appBar: appBarWidget,
-        body: layout,
-      );
-    }
+    layout = Scaffold(
+      body: Column(
+        children: [
+          if (showAppBar(RouteList.productDetail)) appBarWidget,
+          Expanded(child: layout),
+        ],
+      ),
+    );
 
     return GestureDetector(
       onTap: () {
diff --git a/lib/screens/detail/themes/full_size_image_type.dart b/lib/screens/detail/themes/full_size_image_type.dart
index 49ffced..1d5eaff 100644
--- a/lib/screens/detail/themes/full_size_image_type.dart
+++ b/lib/screens/detail/themes/full_size_image_type.dart
@@ -8,6 +8,8 @@ import 'package:smooth_page_indicator/smooth_page_indicator.dart';
 import '../../../models/index.dart' show Product, ProductModel;
 import '../product_detail_screen.dart';
 import '../widgets/index.dart';
+import '../widgets/product_common_info.dart';
+import '../widgets/product_image_slider.dart';
 
 class FullSizeLayout extends StatefulWidget {
   final Product? product;
@@ -22,97 +24,88 @@ class FullSizeLayout extends StatefulWidget {
 class _FullSizeLayoutState extends State<FullSizeLayout>
     with SingleTickerProviderStateMixin {
   Map<String, String> mapAttribute = HashMap();
-  late final PageController _pageController = PageController();
 
   Widget _getLowerLayer({width, height}) {
     final heightVal = height ?? MediaQuery.of(context).size.height;
     final widthVal = width ?? MediaQuery.of(context).size.width;
-    return Material(
-      child: Stack(
-        children: <Widget>[
-          Positioned(
-            top: 0,
-            child: SizedBox(
-              width: widthVal,
-              height: heightVal,
-              child: PageView(
-                allowImplicitScrolling: true,
-                controller: _pageController,
-                children: [
-                  Image.network(
-                    widget.product?.imageFeature ?? '',
-                    fit: BoxFit.fitHeight,
+    return ProductImageSlider(
+      product: widget.product!,
+      customBuilder: (BuildContext context, Widget pageView,
+          PageController pageController, List<String> items, bool hasVideo) {
+        return Material(
+          child: Stack(
+            children: <Widget>[
+              Positioned(
+                top: 0,
+                child: SizedBox(
+                  width: widthVal,
+                  height: heightVal,
+                  child: pageView,
+                ),
+              ),
+              Positioned(
+                top: 0,
+                left: 0,
+                right: 0,
+                child: Container(
+                  padding: const EdgeInsets.only(bottom: 20),
+                  decoration: const BoxDecoration(
+                    gradient: LinearGradient(
+                      begin: Alignment.topCenter,
+                      end: Alignment.bottomCenter,
+                      colors: [
+                        Colors.black45,
+                        Colors.transparent,
+                      ],
+                    ),
                   ),
-                  for (var i = 1; i < (widget.product?.images.length ?? 0); i++)
-                    Image.network(
-                      widget.product?.images[i] ?? '',
-                      fit: BoxFit.fitHeight,
+                  child: SafeArea(
+                    child: SmoothPageIndicator(
+                      controller: pageController,
+                      count: items.length,
+                      effect: const ScrollingDotsEffect(
+                        dotWidth: 5.0,
+                        dotHeight: 5.0,
+                        spacing: 15.0,
+                        fixedCenter: true,
+                        dotColor: Colors.black45,
+                        activeDotColor: Colors.white,
+                      ),
                     ),
-                ],
-              ),
-            ),
-          ),
-          Positioned(
-            top: 0,
-            left: 0,
-            right: 0,
-            child: Container(
-              padding: const EdgeInsets.only(bottom: 20),
-              decoration: const BoxDecoration(
-                gradient: LinearGradient(
-                  begin: Alignment.topCenter,
-                  end: Alignment.bottomCenter,
-                  colors: [
-                    Colors.black45,
-                    Colors.transparent,
-                  ],
+                  ),
                 ),
               ),
-              child: SafeArea(
-                child: SmoothPageIndicator(
-                  controller: _pageController,
-                  count: widget.product?.images.length ?? 0,
-                  effect: const ScrollingDotsEffect(
-                    dotWidth: 5.0,
-                    dotHeight: 5.0,
-                    spacing: 15.0,
-                    fixedCenter: true,
-                    dotColor: Colors.black45,
-                    activeDotColor: Colors.white,
+              Positioned(
+                top: 40,
+                left: 20,
+                child: CircleAvatar(
+                  backgroundColor: Colors.black.withOpacity(0.2),
+                  child: IconButton(
+                    icon: const Icon(
+                      Icons.close,
+                      size: 18,
+                    ),
+                    onPressed: () {
+                      context.read<ProductModel>().clearProductVariations();
+                      Navigator.pop(context);
+                    },
                   ),
                 ),
               ),
-            ),
-          ),
-          Positioned(
-            top: 40,
-            left: 20,
-            child: CircleAvatar(
-              backgroundColor: Colors.black.withOpacity(0.2),
-              child: IconButton(
-                icon: const Icon(
-                  Icons.close,
-                  size: 18,
+              Positioned(
+                top: 30,
+                right: 10,
+                child: IconButton(
+                  icon: const Icon(Icons.more_vert),
+                  onPressed: () => ProductDetailScreen.showMenu(
+                      context, widget.product,
+                      isLoading: widget.isLoading),
                 ),
-                onPressed: () {
-                  context.read<ProductModel>().clearProductVariations();
-                  Navigator.pop(context);
-                },
               ),
-            ),
-          ),
-          Positioned(
-            top: 30,
-            right: 10,
-            child: IconButton(
-              icon: const Icon(Icons.more_vert),
-              onPressed: () => ProductDetailScreen.showMenu(
-                  context, widget.product,
-                  isLoading: widget.isLoading),
-            ),
+            ],
           ),
-        ],
-      ),
+        );
+      },
     );
   }
 
@@ -124,46 +117,54 @@ class _FullSizeLayoutState extends State<FullSizeLayout>
 
     return Material(
       color: Colors.transparent,
-      child: Container(
-        width: widthVal * 0.85,
-        height: heightVal * 0.55,
-        margin: EdgeInsets.only(left: widthVal * 0.2),
-        child: ClipRRect(
-          borderRadius: const BorderRadius.all(Radius.circular(24)),
-          child: BackdropFilter(
-            filter: ImageFilter.blur(sigmaX: 10.0, sigmaY: 10.0),
-            child: Container(
-              padding: const EdgeInsets.symmetric(vertical: 30, horizontal: 20),
-              decoration: BoxDecoration(
-                  color: Theme.of(context).backgroundColor.withOpacity(0.7),
-                  borderRadius: BorderRadius.circular(10.0)),
-              child: ChangeNotifierProvider(
-                create: (_) => ProductModel(),
-                child: LayoutBuilder(builder: (context, constraints) {
-                  double? heightTitle;
-                  if (constraints.maxHeight < maxHeightTitleWidget) {
-                    heightTitle = constraints.maxHeight;
-                  }
+      child: LimitedBox(
+        maxWidth: widthVal * 0.85,
+        maxHeight: heightVal * 0.55,
+        child: Padding(
+          padding: EdgeInsets.only(left: widthVal * 0.2),
+          child: ClipRRect(
+            borderRadius: const BorderRadius.all(Radius.circular(24)),
+            child: BackdropFilter(
+              filter: ImageFilter.blur(sigmaX: 10.0, sigmaY: 10.0),
+              child: Container(
+                padding:
+                    const EdgeInsets.symmetric(vertical: 30, horizontal: 20),
+                decoration: BoxDecoration(
+                    color: Theme.of(context).backgroundColor.withOpacity(0.7),
+                    borderRadius: BorderRadius.circular(10.0)),
+                child: ChangeNotifierProvider(
+                  create: (_) => ProductModel(),
+                  child: LayoutBuilder(builder: (context, constraints) {
+                    double? heightTitle;
+                    if (constraints.maxHeight < maxHeightTitleWidget) {
+                      heightTitle = constraints.maxHeight;
+                    }
 
-                  return Column(
-                    crossAxisAlignment: CrossAxisAlignment.center,
-                    children: <Widget>[
-                      Container(
-                        height: heightTitle,
-                        padding: const EdgeInsets.only(bottom: 5),
-                        child: SingleChildScrollView(
-                          physics: const NeverScrollableScrollPhysics(),
-                          child: ProductTitle(widget.product),
-                        ),
-                      ),
-                      Expanded(
-                        child: SingleChildScrollView(
-                          child: ProductVariant(widget.product),
+                    return Column(
+                      crossAxisAlignment: CrossAxisAlignment.center,
+                      children: <Widget>[
+                        if (!(widget.product?.isGroupedProduct ?? false))
+                          Container(
+                            height: heightTitle,
+                            padding: const EdgeInsets.only(bottom: 5),
+                            child: SingleChildScrollView(
+                              physics: const NeverScrollableScrollPhysics(),
+                              child: ProductTitle(widget.product),
+                            ),
+                          ),
+                        Expanded(
+                          child: SingleChildScrollView(
+                            child: ProductCommonInfo(
+                              product: widget.product,
+                              isLoading: widget.isLoading,
+                              wrapSliver: false,
+                            ),
+                          ),
                         ),
-                      ),
-                    ],
-                  );
-                }),
+                      ],
+                    );
+                  }),
+                ),
               ),
             ),
           ),
diff --git a/lib/screens/detail/themes/half_size_image_type.dart b/lib/screens/detail/themes/half_size_image_type.dart
index 63ed46f..beb29da 100644
--- a/lib/screens/detail/themes/half_size_image_type.dart
+++ b/lib/screens/detail/themes/half_size_image_type.dart
@@ -11,6 +11,8 @@ import '../../../services/services.dart';
 import '../../cart/cart_screen.dart';
 import '../product_detail_screen.dart';
 import '../widgets/index.dart';
+import '../widgets/product_common_info.dart';
+import '../widgets/product_image_slider.dart';
 
 class HalfSizeLayout extends StatefulWidget {
   final Product? product;
@@ -35,140 +37,131 @@ class _HalfSizeLayoutState extends State<HalfSizeLayout>
     final widthVal = width ?? MediaQuery.of(context).size.width;
     var totalCart = Provider.of<CartModel>(context).totalCartQuantity;
 
-    return Material(
-      child: Stack(
-        children: <Widget>[
-          if (widget.product?.imageFeature != null)
-            Positioned(
-              top: 0,
-              child: SizedBox(
-                width: widthVal,
-                height: heightVal,
-                child: PageView(
-                  allowImplicitScrolling: true,
-                  controller: _pageController,
-                  children: [
-                    Image.network(
-                      widget.product?.imageFeature ?? '',
-                      fit: BoxFit.fitHeight,
+    return ProductImageSlider(
+      product: widget.product!,
+      customBuilder: (BuildContext context, Widget pageView,
+          PageController pageController, List<String> items, bool hasVideo) {
+        return Material(
+          child: Stack(
+            children: <Widget>[
+              if (widget.product?.imageFeature != null)
+                Positioned(
+                  top: 0,
+                  child: SizedBox(
+                    width: widthVal,
+                    height: heightVal,
+                    child: pageView,
+                  ),
+                ),
+              if (widget.product?.imageFeature != null)
+                Positioned(
+                  top: 0,
+                  left: 0,
+                  right: 0,
+                  child: Container(
+                    padding: const EdgeInsets.only(bottom: 20),
+                    decoration: const BoxDecoration(
+                      gradient: LinearGradient(
+                        begin: Alignment.topCenter,
+                        end: Alignment.bottomCenter,
+                        colors: [
+                          Colors.black45,
+                          Colors.transparent,
+                        ],
+                      ),
                     ),
-                    for (var i = 1;
-                        i < (widget.product?.images.length ?? 0);
-                        i++)
-                      Image.network(
-                        widget.product?.images[i] ?? '',
-                        fit: BoxFit.fitHeight,
+                    child: SafeArea(
+                      child: SmoothPageIndicator(
+                        controller: _pageController,
+                        count: widget.product?.images.length ?? 0,
+                        effect: const ScrollingDotsEffect(
+                          dotWidth: 5.0,
+                          dotHeight: 5.0,
+                          spacing: 15.0,
+                          fixedCenter: true,
+                          dotColor: Colors.black45,
+                          activeDotColor: Colors.white,
+                        ),
                       ),
-                  ],
-                ),
-              ),
-            ),
-          if (widget.product?.imageFeature != null)
-            Positioned(
-              top: 0,
-              left: 0,
-              right: 0,
-              child: Container(
-                padding: const EdgeInsets.only(bottom: 20),
-                decoration: const BoxDecoration(
-                  gradient: LinearGradient(
-                    begin: Alignment.topCenter,
-                    end: Alignment.bottomCenter,
-                    colors: [
-                      Colors.black45,
-                      Colors.transparent,
-                    ],
+                    ),
                   ),
                 ),
-                child: SafeArea(
-                  child: SmoothPageIndicator(
-                    controller: _pageController,
-                    count: widget.product?.images.length ?? 0,
-                    effect: const ScrollingDotsEffect(
-                      dotWidth: 5.0,
-                      dotHeight: 5.0,
-                      spacing: 15.0,
-                      fixedCenter: true,
-                      dotColor: Colors.black45,
-                      activeDotColor: Colors.white,
+              Positioned(
+                top: 40,
+                left: 20,
+                child: CircleAvatar(
+                  backgroundColor: Colors.black.withOpacity(0.2),
+                  child: IconButton(
+                    icon: const Icon(
+                      Icons.close,
+                      size: 18,
                     ),
+                    onPressed: () {
+                      context.read<ProductModel>().clearProductVariations();
+                      Navigator.pop(context);
+                    },
                   ),
                 ),
               ),
-            ),
-          Positioned(
-            top: 40,
-            left: 20,
-            child: CircleAvatar(
-              backgroundColor: Colors.black.withOpacity(0.2),
-              child: IconButton(
-                icon: const Icon(
-                  Icons.close,
-                  size: 18,
+              Positioned(
+                top: 30,
+                right: 4,
+                child: IconButton(
+                  icon: const Icon(Icons.more_vert),
+                  onPressed: () => ProductDetailScreen.showMenu(
+                      context, widget.product,
+                      isLoading: widget.isLoading),
                 ),
-                onPressed: () {
-                  context.read<ProductModel>().clearProductVariations();
-                  Navigator.pop(context);
-                },
               ),
-            ),
-          ),
-          Positioned(
-            top: 30,
-            right: 4,
-            child: IconButton(
-              icon: const Icon(Icons.more_vert),
-              onPressed: () => ProductDetailScreen.showMenu(
-                  context, widget.product,
-                  isLoading: widget.isLoading),
-            ),
-          ),
-          Positioned(
-            top: 30,
-            right: 40,
-            child: IconButton(
-                icon: const Icon(
-                  Icons.shopping_cart,
-                  size: 22,
-                ),
-                onPressed: () {
-                  Navigator.push(
-                    context,
-                    MaterialPageRoute<void>(
-                      builder: (BuildContext context) => Scaffold(
-                        backgroundColor: Theme.of(context).backgroundColor,
-                        body: const CartScreen(isModal: true),
-                      ),
-                      fullscreenDialog: true,
+              Positioned(
+                top: 30,
+                right: 40,
+                child: IconButton(
+                    icon: const Icon(
+                      Icons.shopping_cart,
+                      size: 22,
                     ),
-                  );
-                }),
-          ),
-          Positioned(
-            top: 36,
-            right: 44,
-            child: Container(
-              padding: const EdgeInsets.symmetric(vertical: 2, horizontal: 4),
-              decoration: BoxDecoration(
-                color: Colors.red,
-                borderRadius: BorderRadius.circular(9),
-              ),
-              constraints: const BoxConstraints(
-                minWidth: 18,
-                minHeight: 18,
+                    onPressed: () {
+                      Navigator.push(
+                        context,
+                        MaterialPageRoute<void>(
+                          builder: (BuildContext context) => Scaffold(
+                            backgroundColor: Theme.of(context).backgroundColor,
+                            body: const CartScreen(isModal: true),
+                          ),
+                          fullscreenDialog: true,
+                        ),
+                      );
+                    }),
               ),
-              child: Text(
-                totalCart.toString(),
-                style: const TextStyle(
-                    color: Colors.white,
-                    fontSize: 12,
-                    fontWeight: FontWeight.w600),
-                textAlign: TextAlign.center,
-              ),
-            ),
-          )
-        ],
-      ),
+              Positioned(
+                top: 36,
+                right: 44,
+                child: Container(
+                  padding:
+                      const EdgeInsets.symmetric(vertical: 2, horizontal: 4),
+                  decoration: BoxDecoration(
+                    color: Colors.red,
+                    borderRadius: BorderRadius.circular(9),
+                  ),
+                  constraints: const BoxConstraints(
+                    minWidth: 18,
+                    minHeight: 18,
+                  ),
+                  child: Text(
+                    totalCart.toString(),
+                    style: const TextStyle(
+                        color: Colors.white,
+                        fontSize: 12,
+                        fontWeight: FontWeight.w600),
+                    textAlign: TextAlign.center,
+                  ),
+                ),
+              )
+            ],
+          ),
+        );
+      },
     );
   }
 
@@ -205,17 +198,40 @@ class _HalfSizeLayoutState extends State<HalfSizeLayout>
                   child: Column(
                     crossAxisAlignment: CrossAxisAlignment.center,
                     children: <Widget>[
-                      ProductTitle(widget.product),
-                      ProductVariant(widget.product),
+                      if (!(widget.product?.isGroupedProduct ?? false))
+                        ProductTitle(widget.product),
+                      ProductCommonInfo(
+                        product: widget.product,
+                        isLoading: widget.isLoading,
+                        wrapSliver: false,
+                      ),
+                      if (!Services().widget.enableShoppingCart(
+                              widget.product?.copyWith(isRestricted: false)) &&
+                          widget.product?.shortDescription != null &&
+                          (widget.product?.shortDescription?.isNotEmpty ??
+                              false))
+                        Padding(
+                          padding: const EdgeInsets.symmetric(horizontal: 15.0),
+                          child: ProductShortDescription(widget.product!),
+                        ),
+                      Services().widget.renderVendorInfo(widget.product),
                       ProductDescription(widget.product),
-                      Services()
-                          .widget
-                          .productReviewWidget(widget.product!.id!),
+                      if (kProductDetail.showProductCategories)
+                        ProductDetailCategories(widget.product),
+                      if (kProductDetail.showProductTags)
+                        ProductTag(widget.product),
+                      Services().widget.productReviewWidget(widget.product!),
                       if (kProductDetail.showRelatedProductFromSameStore &&
                           widget.product?.store?.id != null)
-                        RelatedProductFromSameStore(widget.product),
+                        RelatedProductFromSameStore(
+                          widget.product,
+                          padding: EdgeInsets.zero,
+                        ),
                       if (kProductDetail.showRelatedProduct)
-                        RelatedProduct(widget.product),
+                        RelatedProduct(
+                          widget.product,
+                          padding: EdgeInsets.zero,
+                        ),
                       const SizedBox(
                         height: 100,
                       )
diff --git a/lib/screens/detail/themes/simple_type.dart b/lib/screens/detail/themes/simple_type.dart
index ef4ed67..2b6fbd3 100644
--- a/lib/screens/detail/themes/simple_type.dart
+++ b/lib/screens/detail/themes/simple_type.dart
@@ -6,6 +6,7 @@ import 'package:provider/provider.dart';
 
 import '../../../common/config.dart';
 import '../../../common/constants.dart';
+import '../../../common/tools/tools.dart';
 import '../../../models/index.dart' show Product, ProductModel, UserModel;
 import '../../../services/index.dart';
 import '../../../widgets/product/product_bottom_sheet.dart';
@@ -13,13 +14,20 @@ import '../../../widgets/product/widgets/heart_button.dart';
 import '../../chat/vendor_chat.dart';
 import '../product_detail_screen.dart';
 import '../widgets/index.dart';
+import '../widgets/product_common_info.dart';
+import '../widgets/product_image_list.dart';
 import '../widgets/product_image_slider.dart';
 
 class SimpleLayout extends StatefulWidget {
   final Product product;
   final bool isLoading;
+  final ScrollController? scrollController;
 
-  const SimpleLayout({required this.product, this.isLoading = false});
+  const SimpleLayout({
+    required this.product,
+    this.isLoading = false,
+    this.scrollController,
+  });
 
   @override
   // ignore: no_logic_in_create_state
@@ -28,8 +36,8 @@ class SimpleLayout extends StatefulWidget {
 
 class _SimpleLayoutState extends State<SimpleLayout>
     with SingleTickerProviderStateMixin {
-  final _scrollController = ScrollController();
-  int _selectIndex = 0;
+  late final _scrollController = widget.scrollController ?? ScrollController();
+  final ValueNotifier<int> _selectIndexNotifier = ValueNotifier(0);
 
   late Product product;
 
@@ -59,36 +67,11 @@ class _SimpleLayoutState extends State<SimpleLayout>
     super.didUpdateWidget(oldWidget);
   }
 
-  /// Render product default: booking, group, variant, simple, booking
-  Widget renderProductInfo() {
-    var body;
-
-    if (widget.isLoading == true) {
-      body = kLoadingWidget(context);
-    } else {
-      switch (product.type) {
-        case 'appointment':
-          return Services().getBookingLayout(product: product);
-        case 'booking':
-          body = ListingBooking(product);
-          break;
-        case 'grouped':
-          body = GroupedProduct(product);
-          break;
-        default:
-          body = ProductVariant(product);
-      }
-    }
-
-    return SliverToBoxAdapter(
-      child: Padding(
-        padding: const EdgeInsets.symmetric(horizontal: 15.0),
-        child: AnimatedSize(
-          duration: const Duration(milliseconds: 300),
-          child: body,
-        ),
-      ),
-    );
+  @override
+  void dispose() {
+    _hideController.dispose();
+    _selectIndexNotifier.dispose();
+    super.dispose();
   }
 
   @override
@@ -176,22 +159,32 @@ class _SimpleLayoutState extends State<SimpleLayout>
                       ],
                       flexibleSpace: kIsWeb
                           ? const SizedBox()
-                          : ProductImageSlider(
-                              product: product,
-                              onChange: (index) => setState(() {
-                                _selectIndex = index;
-                              }),
-                            ),
+                          : kProductDetail.productImageLayout.isList
+                              ? ProductImageList(
+                                  product: product,
+                                  onChange: (index) {
+                                    _selectIndexNotifier.value = index;
+                                  })
+                              : ProductImageSlider(
+                                  product: product,
+                                  onChange: (index) {
+                                    _selectIndexNotifier.value = index;
+                                  },
+                                ),
                     ),
                     SliverList(
                       delegate: SliverChildListDelegate(
                         <Widget>[
                           const SizedBox(height: 2),
                           if (kIsWeb)
-                            ProductGallery(
-                              product: widget.product,
-                              selectIndex: _selectIndex,
-                            ),
+                            ValueListenableBuilder<int>(
+                                valueListenable: _selectIndexNotifier,
+                                builder: (context, index, child) {
+                                  return ProductGallery(
+                                    product: widget.product,
+                                    selectIndex: index,
+                                  );
+                                }),
                           Padding(
                             padding: const EdgeInsets.only(
                               top: 8.0,
@@ -199,7 +192,7 @@ class _SimpleLayoutState extends State<SimpleLayout>
                               left: 15,
                               right: 15,
                             ),
-                            child: product.type == 'grouped'
+                            child: widget.product.isGroupedProduct
                                 ? const SizedBox()
                                 : ProductTitle(product),
                           ),
@@ -208,7 +201,19 @@ class _SimpleLayoutState extends State<SimpleLayout>
                     ),
                     if (Services().widget.enableShoppingCart(
                         product.copyWith(isRestricted: false)))
-                      renderProductInfo(),
+                      SliverToBoxAdapter(
+                        child: Padding(
+                          padding: const EdgeInsets.symmetric(horizontal: 15.0),
+                          child: AnimatedSize(
+                            duration: const Duration(milliseconds: 300),
+                            child: ProductCommonInfo(
+                              product: widget.product,
+                              isLoading: widget.isLoading,
+                              wrapSliver: false,
+                            ),
+                          ),
+                        ),
+                      ),
                     if (!Services().widget.enableShoppingCart(
                             product.copyWith(isRestricted: false)) &&
                         product.shortDescription != null &&
@@ -242,7 +247,7 @@ class _SimpleLayoutState extends State<SimpleLayout>
                                     ProductTag(product),
                                   Services()
                                       .widget
-                                      .productReviewWidget(product.id!),
+                                      .productReviewWidget(product),
                                 ],
                               ),
                             ),
@@ -264,7 +269,9 @@ class _SimpleLayoutState extends State<SimpleLayout>
                       product.copyWith(isRestricted: false)) &&
                   kAdvanceConfig.showBottomCornerCart)
                 Align(
-                  alignment: Alignment.bottomRight,
+                  alignment: Tools.isRTL(context)
+                      ? Alignment.bottomLeft
+                      : Alignment.bottomRight,
                   child: ExpandingBottomSheet(
                     hideController: _hideController,
                   ),
diff --git a/lib/screens/detail/widgets/image_feature.dart b/lib/screens/detail/widgets/image_feature.dart
index cf0ab24..d611b37 100644
--- a/lib/screens/detail/widgets/image_feature.dart
+++ b/lib/screens/detail/widgets/image_feature.dart
@@ -38,7 +38,7 @@ class ImageFeature extends StatelessWidget {
               children: <Widget>[
                 Positioned(
                   top: double.parse(kProductDetail.marginTop.toString()),
-                  child: ImageTools.image(
+                  child: ImageResize(
                     url: imageFeature,
                     fit: BoxFit.contain,
                     isResize: true,
@@ -50,7 +50,7 @@ class ImageFeature extends StatelessWidget {
                 ),
                 Positioned(
                   top: double.parse(kProductDetail.marginTop.toString()),
-                  child: ImageTools.image(
+                  child: ImageResize(
                       url: imageFeature,
                       fit: BoxFit.contain,
                       width: constraints.maxWidth,
diff --git a/lib/screens/detail/widgets/image_galery.dart b/lib/screens/detail/widgets/image_galery.dart
index eb0eee0..cbac9ba 100644
--- a/lib/screens/detail/widgets/image_galery.dart
+++ b/lib/screens/detail/widgets/image_galery.dart
@@ -6,6 +6,9 @@ import 'package:extended_image/extended_image.dart';
 import 'package:flutter/material.dart';
 import 'package:flutter/material.dart' hide Image;
 
+import '../../../common/constants.dart';
+import '../../../common/tools.dart';
+
 class ImageGalery extends StatelessWidget {
   final List? images;
   final int? index;
@@ -55,7 +58,7 @@ class _PicSwiperState extends State<PicSwiper>
   var rebuildSwiper = StreamController<bool>.broadcast();
   AnimationController? _animationController;
   Animation<double>? _animation;
-  late Function animationListener;
+  VoidCallback? animationListener;
 
   List<double> doubleTapScales = <double>[1.0, 2.0];
 
@@ -72,6 +75,9 @@ class _PicSwiperState extends State<PicSwiper>
 
   @override
   void dispose() {
+    if (animationListener != null) {
+      _animation?.removeListener(animationListener!);
+    }
     rebuildIndex.close();
     rebuildSwiper.close();
     _animationController?.dispose();
@@ -102,12 +108,34 @@ class _PicSwiperState extends State<PicSwiper>
               children: <Widget>[
                 ExtendedImageGesturePageView.builder(
                   itemBuilder: (BuildContext context, int index) {
-                    var item = widget.pics[index].picUrl!;
+                    final thumbnailImage = widget.pics[index].picUrl!;
+                    var item =
+                        ImageTools.formatImage(thumbnailImage, kSize.large)!;
+                    printLog('Image: $item');
                     Widget image = ExtendedImage.network(
                       item,
                       fit: BoxFit.contain,
                       enableSlideOutPage: true,
                       mode: ExtendedImageMode.gesture,
+                      loadStateChanged: (ExtendedImageState state) {
+                        switch (state.extendedImageLoadState) {
+                          case LoadState.loading:
+
+                            /// Use thumbnail image has loaded as loading image
+                            /// Waiting the larger image show
+                            printLog('loading thumbnailImage: $thumbnailImage');
+                            return ExtendedImage.network(thumbnailImage);
+                          case LoadState.completed:
+                            return state.completedWidget;
+                          case LoadState.failed:
+                            return Container(
+                              color: Theme.of(context).backgroundColor,
+                              child: const Center(
+                                child: Icon(Icons.error),
+                              ),
+                            );
+                        }
+                      },
                       initGestureConfigHandler: (state) {
                         double? initialScale = 1.0;
 
@@ -185,7 +213,6 @@ class _PicSwiperState extends State<PicSwiper>
                     initialPage: currentIndex!,
                   ),
                   scrollDirection: Axis.horizontal,
-                  physics: const BouncingScrollPhysics(),
                   //physics: ClampingScrollPhysics(),
                 ),
                 StreamBuilder<bool>(
@@ -206,10 +233,15 @@ class _PicSwiperState extends State<PicSwiper>
                 Positioned(
                   top: 10,
                   right: 10,
-                  child: IconButton(
-                      icon: const Icon(Icons.close),
-                      onPressed: () {
-                        Navigator.pop(context);
+                  child: StreamBuilder<Object>(
+                      stream: rebuildIndex.stream,
+                      initialData: currentIndex ?? 0,
+                      builder: (context, snapshot) {
+                        return IconButton(
+                            icon: const Icon(Icons.close),
+                            onPressed: () async {
+                              Navigator.of(context).pop(snapshot.data);
+                            });
                       }),
                 )
               ],
diff --git a/lib/screens/detail/widgets/product_common_info.dart b/lib/screens/detail/widgets/product_common_info.dart
new file mode 100644
index 0000000..81ebfd6
--- /dev/null
+++ b/lib/screens/detail/widgets/product_common_info.dart
@@ -0,0 +1,45 @@
+import 'package:flutter/material.dart';
+
+import '../../../common/config.dart';
+import '../../../models/entities/product.dart';
+import '../../../services/index.dart';
+import 'index.dart';
+
+class ProductCommonInfo extends StatelessWidget {
+  final bool isLoading;
+  final Product? product;
+  final bool wrapSliver;
+
+  const ProductCommonInfo({
+    super.key,
+    required this.isLoading,
+    this.product,
+    this.wrapSliver = true,
+  });
+
+  @override
+  Widget build(BuildContext context) {
+    final product = this.product;
+    if (product == null) {
+      return const SizedBox();
+    }
+    if (isLoading) {
+      return kLoadingWidget(context);
+    }
+    switch (product.type) {
+      case 'appointment':
+        return Services().getBookingLayout(
+          product: product,
+          wrapSliver: wrapSliver,
+        );
+      case 'booking':
+        return ListingBooking(product);
+      case 'grouped':
+        return GroupedProduct(product);
+      case 'simple':
+      case 'variable':
+      default:
+        return ProductVariant(product);
+    }
+  }
+}
diff --git a/lib/screens/detail/widgets/product_detail_categories.dart b/lib/screens/detail/widgets/product_detail_categories.dart
index 877dec4..3243ece 100644
--- a/lib/screens/detail/widgets/product_detail_categories.dart
+++ b/lib/screens/detail/widgets/product_detail_categories.dart
@@ -30,7 +30,6 @@ class ProductDetailCategories extends StatelessWidget {
                 return TextButton(
                   onPressed: () {
                     ProductModel.showList(
-                      context: context,
                       cateName: category.name,
                       cateId: category.id,
                     );
diff --git a/lib/screens/detail/widgets/product_gallery.dart b/lib/screens/detail/widgets/product_gallery.dart
index dd70ee2..84f908b 100644
--- a/lib/screens/detail/widgets/product_gallery.dart
+++ b/lib/screens/detail/widgets/product_gallery.dart
@@ -122,7 +122,7 @@ class ProductGallery extends StatelessWidget {
                           width: selectIndex == i ? 2 : 0.2,
                         ),
                       ),
-                      child: ImageTools.image(
+                      child: ImageResize(
                         url: product!.images[i],
                         height: dimension * (kIsWeb ? 1.2 : 1),
                         width: dimension,
diff --git a/lib/screens/detail/widgets/product_image_list.dart b/lib/screens/detail/widgets/product_image_list.dart
new file mode 100644
index 0000000..5f0bb35
--- /dev/null
+++ b/lib/screens/detail/widgets/product_image_list.dart
@@ -0,0 +1,341 @@
+import 'dart:async';
+import 'dart:ui';
+
+import 'package:easy_debounce/easy_debounce.dart';
+import 'package:flutter/cupertino.dart';
+import 'package:flutter/material.dart';
+import 'package:infinite_carousel/infinite_carousel.dart';
+import 'package:provider/provider.dart';
+import 'package:smooth_page_indicator/smooth_page_indicator.dart';
+
+import '../../../common/config.dart';
+import '../../../common/config/models/index.dart';
+import '../../../common/constants.dart';
+import '../../../common/tools/image_tools.dart';
+import '../../../models/entities/index.dart';
+import '../../../models/product_model.dart';
+import 'image_galery.dart';
+import 'product_image_thumbnail.dart';
+import 'video_feature.dart';
+
+class ProductImageList extends StatefulWidget {
+  final Product product;
+  final Function onChange;
+
+  const ProductImageList({
+    Key? key,
+    required this.product,
+    required this.onChange,
+  }) : super(key: key);
+
+  @override
+  State<ProductImageList> createState() => _ProductImageListState();
+}
+
+class _ProductImageListState extends State<ProductImageList> {
+  final InfiniteScrollController _infiniteController =
+      InfiniteScrollController();
+
+  bool initialized = false;
+  bool hasVideo = false;
+  bool variationLoaded = false;
+
+  late final String _videoUrl;
+  final List<String> _images = [];
+  final List<String> _variationImages = [];
+
+  final ValueNotifier<int> _currentPage = ValueNotifier(0);
+
+  List<String> get itemList => {
+        if (hasVideo) _videoUrl,
+        ..._images,
+        ..._variationImages,
+      }.toList();
+
+  List<String> get imagesList => {..._images, ..._variationImages}.toList();
+
+  StreamSubscription? _subChangeSelectedVariation;
+
+  void updateVariationImages(List<String> newImages) {
+    if (!widget.product.isVariableProduct ||
+        _variationImages.isNotEmpty ||
+        newImages.isEmpty ||
+        newImages.length == _variationImages.length) {
+      return;
+    }
+    for (var url in newImages) {
+      if (!_variationImages.contains(url)) {
+        _variationImages.add(url);
+      }
+    }
+    initialized = true;
+    if (!mounted) {
+      setState(() {});
+    }
+  }
+
+  @override
+  void initState() {
+    super.initState();
+    WidgetsBinding.instance.endOfFrame.then((_) {
+      if (mounted) {
+        afterFirstLayout(context);
+      }
+    });
+
+    final url = widget.product.videoUrl;
+    if (url != null && url.isNotEmpty) {
+      _videoUrl = url.replaceAll('http://', 'https://');
+      hasVideo = true;
+    }
+
+    _images.addAll(widget.product.images);
+
+    if (kProductDetail.showSelectedImageVariant) {
+      _subChangeSelectedVariation =
+          eventBus.on<EventChangeSelectedVariation>().listen((event) {
+        if (!mounted) {
+          return;
+        }
+
+        /// Skip first time when variation loaded.
+        if (!variationLoaded) {
+          variationLoaded = true;
+          return;
+        }
+
+        final image = event.productVariation?.imageFeature;
+        _infiniteController.goToUrl(image, imagesList);
+      });
+    }
+  }
+
+  @override
+  void dispose() {
+    _infiniteController.dispose();
+    _currentPage.dispose();
+    _subChangeSelectedVariation?.cancel();
+    super.dispose();
+  }
+
+  void afterFirstLayout(BuildContext context) {
+    if (widget.product.isVariableProduct) {
+      updateVariationImages(
+          context.read<ProductModel>().variationsFeatureImages);
+    }
+  }
+
+  @override
+  Widget build(BuildContext context) {
+    if (!initialized) {
+      updateVariationImages(
+          context.select((ProductModel _) => _.variationsFeatureImages));
+    }
+
+    if (itemList.isEmpty) {
+      return const SizedBox();
+    }
+
+    return LayoutBuilder(
+      builder: (BuildContext context, BoxConstraints constraints) {
+        return FlexibleSpaceBar(
+          background: Stack(
+            children: [
+              Positioned.fill(
+                top: kProductDetail.marginTop,
+                child: InfiniteCarousel.builder(
+                  controller: _infiniteController,
+                  itemCount: itemList.length,
+                  itemExtent: 400,
+                  loop: true,
+                  velocityFactor: 1,
+                  axisDirection: Axis.vertical,
+                  onIndexChanged: _onPageChange,
+                  anchor: 0.5,
+                  itemBuilder: (BuildContext context, int index, _) {
+                    final item = itemList[index];
+                    if (hasVideo && index == 0) {
+                      return FeatureVideoPlayer(
+                        item,
+                        autoPlay: true,
+                      );
+                    }
+
+                    return GestureDetector(
+                      onTap: () => _onShowGallery(context, index),
+                      child: ImageResize(
+                        url: item,
+                        fit: ImageTools.boxFit(kProductDetail.boxFit),
+                        size: kSize.large,
+                        width: constraints.maxWidth,
+                        hidePlaceHolder: true,
+                        forceWhiteBackground:
+                            kProductDetail.forceWhiteBackground,
+                      ),
+                    );
+                  },
+                ),
+              ),
+              if (kProductDetail.showImageGallery &&
+                  kProductDetail.sliderIndicatorType ==
+                      SliderIndicatorType.number)
+                Positioned(
+                  bottom: 0.0,
+                  left: 0.0,
+                  child: ClipRRect(
+                    child: BackdropFilter(
+                      filter: ImageFilter.blur(sigmaX: 10.0, sigmaY: 10.0),
+                      child: Container(
+                        height: 55,
+                        width: constraints.maxWidth,
+                        color: Colors.transparent,
+                      ),
+                    ),
+                  ),
+                ),
+              if (_currentPage.value != 0 &&
+                  kProductDetail.sliderShowGoBackButton)
+                Positioned(
+                  bottom: 4.0,
+                  left: 2.0,
+                  child: GestureDetector(
+                    onTap: () {
+                      // _infiniteController.goTo(0);
+                      widget.onChange(0);
+                    },
+                    child: Padding(
+                      padding: const EdgeInsets.symmetric(
+                        vertical: 10,
+                        horizontal: 4,
+                      ),
+                      child: Icon(
+                        CupertinoIcons.arrow_left_square_fill,
+                        color: Theme.of(context).primaryColor,
+                        size: 25,
+                      ),
+                    ),
+                  ),
+                ),
+              if (kProductDetail.sliderIndicatorType ==
+                  SliderIndicatorType.number) ...[
+                Positioned(
+                  bottom: 8.0,
+                  right: 4.0,
+                  child: Container(
+                    decoration: BoxDecoration(
+                      color: Colors.white12,
+                      borderRadius: BorderRadius.circular(6.0),
+                    ),
+                    padding: const EdgeInsets.symmetric(
+                      horizontal: 6.0,
+                      vertical: 2.0,
+                    ),
+                    child: ValueListenableBuilder<int>(
+                      valueListenable: _currentPage,
+                      builder: (context, currentPage, child) {
+                        return Text(
+                          '${currentPage + 1}/${itemList.length}',
+                          style: TextStyle(
+                            color: Theme.of(context).primaryColor,
+                            fontWeight: FontWeight.w700,
+                          ),
+                        );
+                      },
+                    ),
+                  ),
+                ),
+              ],
+              if (kProductDetail.showImageGallery) ...[
+                Positioned(
+                  bottom: 4.0,
+                  left: 44,
+                  child: ValueListenableBuilder<int>(
+                    valueListenable: _currentPage,
+                    builder: (context, currentPage, child) {
+                      return ProductImageThumbnail(
+                        itemList: itemList,
+                        onSelect: ({required int index, bool? fullScreen}) {
+                          if (fullScreen ?? false) {
+                            _onShowGallery(context, index);
+                          }
+                          _infiniteController.animateToItem(index);
+                        },
+                        selectIndex: currentPage,
+                      );
+                    },
+                  ),
+                )
+              ],
+              if (!kProductDetail.showImageGallery &&
+                  kProductDetail.sliderIndicatorType == SliderIndicatorType.dot)
+                Align(
+                  alignment: Alignment.centerRight,
+                  child: Padding(
+                    padding: const EdgeInsets.only(right: 8.0),
+                    child: ValueListenableBuilder<int>(
+                      valueListenable: _currentPage,
+                      builder: (context, currentPage, child) {
+                        return AnimatedSmoothIndicator(
+                          count: itemList.length,
+                          activeIndex: currentPage,
+                          axisDirection: Axis.vertical,
+                          effect: const ScrollingDotsEffect(
+                            dotWidth: 8.0,
+                            dotHeight: 8.0,
+                            spacing: 15.0,
+                            fixedCenter: true,
+                            dotColor: Colors.black45,
+                            activeDotColor: Colors.white,
+                          ),
+                        );
+                      },
+                    ),
+                  ),
+                ),
+            ],
+          ),
+        );
+      },
+    );
+  }
+
+  void _onShowGallery(BuildContext context, [index = 0]) async {
+    final currentIndex = await Navigator.push(
+      context,
+      PageRouteBuilder(pageBuilder: (context, __, ___) {
+        return ImageGalery(
+          images: imagesList,
+          index: hasVideo ? index - 1 : index,
+          heroTagPrefix: 'slider_hero_tag_',
+        );
+      }),
+    );
+    if (currentIndex == null) return;
+    await _infiniteController.animateToItem(currentIndex);
+  }
+
+  void _onPageChange(int index) {
+    EasyDebounce.debounce(
+      'slider_page_change',
+      const Duration(milliseconds: 200),
+      () {
+        _currentPage.value = index;
+        widget.onChange(index);
+      },
+    );
+  }
+}
+
+extension on InfiniteScrollController {
+  Future<void> goToUrl(String? url, List<String> urls) async {
+    if (url == null || urls.isEmpty) {
+      return;
+    }
+
+    final index = urls.indexOf(url);
+    if (index == -1) {
+      return;
+    }
+    return animateToItem(index);
+  }
+}
diff --git a/lib/screens/detail/widgets/product_image_slider.dart b/lib/screens/detail/widgets/product_image_slider.dart
index 77b3833..e76f167 100644
--- a/lib/screens/detail/widgets/product_image_slider.dart
+++ b/lib/screens/detail/widgets/product_image_slider.dart
@@ -18,11 +18,20 @@ import 'video_feature.dart';
 
 class ProductImageSlider extends StatefulWidget {
   final Product product;
-  final Function onChange;
-
-  const ProductImageSlider(
-      {Key? key, required this.product, required this.onChange})
-      : super(key: key);
+  final Function(int index)? onChange;
+  final Function(
+      BuildContext context,
+      Widget pageView,
+      PageController pageController,
+      List<String> items,
+      bool hasVideo)? customBuilder;
+
+  const ProductImageSlider({
+    Key? key,
+    required this.product,
+    this.onChange,
+    this.customBuilder,
+  }) : super(key: key);
 
   @override
   State<ProductImageSlider> createState() => _ProductImageSliderState();
@@ -81,6 +90,8 @@ class _ProductImageSliderState extends State<ProductImageSlider> {
 
   List<String> get imagesList => {..._images, ..._variationImages}.toList();
 
+  StreamSubscription? _subChangeSelectedVariation;
+
   void updateVariationImages(List<String> newImages) {
     if (!widget.product.isVariableProduct ||
         _variationImages.isNotEmpty ||
@@ -102,7 +113,7 @@ class _ProductImageSliderState extends State<ProductImageSlider> {
   @override
   void initState() {
     super.initState();
-    WidgetsBinding.instance.endOfFrame.then((_) {
+    WidgetsBinding.instance.endOfFrame.then((_) async {
       if (mounted) {
         afterFirstLayout(context);
       }
@@ -117,7 +128,8 @@ class _ProductImageSliderState extends State<ProductImageSlider> {
     _images.addAll(widget.product.images);
 
     if (kProductDetail.showSelectedImageVariant) {
-      eventBus.on<EventChangeSelectedVariation>().listen((event) {
+      _subChangeSelectedVariation =
+          eventBus.on<EventChangeSelectedVariation>().listen((event) {
         if (!mounted) {
           return;
         }
@@ -137,6 +149,7 @@ class _ProductImageSliderState extends State<ProductImageSlider> {
   @override
   void dispose() {
     _cancelTimer();
+    _subChangeSelectedVariation?.cancel();
     super.dispose();
   }
 
@@ -187,151 +200,159 @@ class _ProductImageSliderState extends State<ProductImageSlider> {
       return const SizedBox();
     }
 
-    return LayoutBuilder(
-      builder: (BuildContext context, BoxConstraints constraints) {
-        return FlexibleSpaceBar(
-          background: Stack(
-            children: [
-              Positioned.fill(
-                top: kProductDetail.marginTop,
-                child: Listener(
-                  onPointerDown: (_) => _updateLastInteraction(),
-                  onPointerMove: (_) => _updateLastInteraction(),
-                  onPointerHover: (_) => _updateLastInteraction(),
-                  child: PageView.builder(
-                    controller: _pageController,
-                    itemCount: itemList.length,
-                    onPageChanged: (index) {
-                      _currentPage = index;
-                      widget.onChange(index);
-                      setState(() {});
-                    },
-                    itemBuilder: (BuildContext context, int index) {
-                      if (hasVideo && index == 0) {
-                        return FeatureVideoPlayer(
-                          itemList[index],
-                          autoPlay: true,
-                        );
-                      }
-                      return GestureDetector(
-                        onTap: () => _onShowGallery(context, index),
-                        child: Hero(
-                          tag: 'slider_hero_tag_${itemList[index]}',
-                          child: ImageTools.image(
-                            url: itemList[index],
-                            fit: ImageTools.boxFit(kProductDetail.boxFit),
-                            size: kSize.large,
-                            width: constraints.maxWidth,
-                            hidePlaceHolder: true,
-                            forceWhiteBackground:
-                                kProductDetail.forceWhiteBackground,
-                          ),
-                        ),
-                      );
-                    },
+    final size = MediaQuery.of(context).size;
+
+    final pageView = PageView.builder(
+      controller: _pageController,
+      itemCount: itemList.length,
+      onPageChanged: (index) {
+        _currentPage = index;
+        widget.onChange?.call(index);
+        setState(() {});
+      },
+      itemBuilder: (BuildContext context, int index) {
+        if (hasVideo && index == 0) {
+          return FeatureVideoPlayer(
+            itemList[index],
+            autoPlay: true,
+          );
+        }
+        return GestureDetector(
+          onTap: () => _onShowGallery(context, index),
+          child: Hero(
+            tag: 'slider_hero_tag_${itemList[index]}',
+            child: ImageResize(
+              url: itemList[index],
+              fit: ImageTools.boxFit(kProductDetail.boxFit),
+              size: kSize.large,
+              width: size.width,
+              hidePlaceHolder: true,
+              forceWhiteBackground: kProductDetail.forceWhiteBackground,
+            ),
+          ),
+        );
+      },
+    );
+
+    if (widget.customBuilder != null) {
+      return widget.customBuilder?.call(
+        context,
+        pageView,
+        _pageController,
+        itemList,
+        hasVideo,
+      );
+    }
+
+    return FlexibleSpaceBar(
+      background: Stack(
+        children: [
+          Positioned.fill(
+            top: kProductDetail.marginTop,
+            child: Listener(
+              onPointerDown: (_) => _updateLastInteraction(),
+              onPointerMove: (_) => _updateLastInteraction(),
+              onPointerHover: (_) => _updateLastInteraction(),
+              child: pageView,
+            ),
+          ),
+          if (kProductDetail.showImageGallery &&
+              kProductDetail.sliderIndicatorType == SliderIndicatorType.number)
+            Positioned(
+              bottom: 0.0,
+              left: 0.0,
+              child: ClipRRect(
+                child: BackdropFilter(
+                  filter: ImageFilter.blur(sigmaX: 10.0, sigmaY: 10.0),
+                  child: Container(
+                    height: 55,
+                    width: size.width,
+                    color: Colors.transparent,
                   ),
                 ),
               ),
-              if (kProductDetail.showImageGallery &&
-                  kProductDetail.sliderIndicatorType ==
-                      SliderIndicatorType.number)
-                Positioned(
-                  bottom: 0.0,
-                  left: 0.0,
-                  child: ClipRRect(
-                    child: BackdropFilter(
-                      filter: ImageFilter.blur(sigmaX: 10.0, sigmaY: 10.0),
-                      child: Container(
-                        height: 55,
-                        width: constraints.maxWidth,
-                        color: Colors.transparent,
-                      ),
-                    ),
+            ),
+          if (_currentPage != 0 && kProductDetail.sliderShowGoBackButton)
+            Positioned(
+              bottom: 4.0,
+              left: 2.0,
+              child: GestureDetector(
+                onTap: () {
+                  _pageController.goTo(0);
+                  widget.onChange?.call(0);
+                },
+                child: Padding(
+                  padding: const EdgeInsets.symmetric(
+                    vertical: 10,
+                    horizontal: 4,
                   ),
-                ),
-              if (_currentPage != 0 && kProductDetail.sliderShowGoBackButton)
-                Positioned(
-                  bottom: 4.0,
-                  left: 2.0,
-                  child: GestureDetector(
-                    onTap: () {
-                      _pageController.goTo(0);
-                      widget.onChange(0);
-                    },
-                    child: Padding(
-                      padding: const EdgeInsets.symmetric(
-                        vertical: 10,
-                        horizontal: 4,
-                      ),
-                      child: Icon(
-                        CupertinoIcons.arrow_left_square_fill,
-                        color: Theme.of(context).primaryColor,
-                        size: 25,
-                      ),
-                    ),
+                  child: Icon(
+                    CupertinoIcons.arrow_left_square_fill,
+                    color: Theme.of(context).primaryColor,
+                    size: 25,
                   ),
                 ),
-              if (kProductDetail.sliderIndicatorType ==
-                  SliderIndicatorType.number) ...[
-                Positioned(
-                  bottom: 8.0,
-                  right: 4.0,
-                  child: Container(
-                    decoration: BoxDecoration(
-                      color: Colors.white12,
-                      borderRadius: BorderRadius.circular(6.0),
-                    ),
-                    padding: const EdgeInsets.symmetric(
-                        horizontal: 6.0, vertical: 2.0),
-                    child: Text(
-                      '${_currentPage + 1}/${itemList.length}',
-                      style: TextStyle(
-                        color: Theme.of(context).primaryColor,
-                        fontWeight: FontWeight.w700,
-                      ),
-                    ),
-                  ),
+              ),
+            ),
+          if (kProductDetail.sliderIndicatorType ==
+              SliderIndicatorType.number) ...[
+            Positioned(
+              bottom: 8.0,
+              right: 4.0,
+              child: Container(
+                decoration: BoxDecoration(
+                  color: Colors.white12,
+                  borderRadius: BorderRadius.circular(6.0),
                 ),
-              ],
-              if (kProductDetail.showImageGallery) ...[
-                Positioned(
-                  bottom: 4.0,
-                  left: 44,
-                  child: ProductImageThumbnail(
-                    itemList: itemList,
-                    onSelect: ({required int index, bool? fullScreen}) {
-                      if (fullScreen ?? false) {
-                        _onShowGallery(context, index);
-                      }
-                      _pageController.goTo(index);
-                    },
-                    selectIndex: _currentPage,
-                  ),
-                )
-              ],
-              if (!kProductDetail.showImageGallery &&
-                  kProductDetail.sliderIndicatorType == SliderIndicatorType.dot)
-                Positioned(
-                  bottom: 16.0,
-                  right: 16.0,
-                  left: 16.0,
-                  child: SmoothPageIndicator(
-                    controller: _pageController,
-                    count: itemList.length,
-                    effect: const ScrollingDotsEffect(
-                      dotWidth: 5.0,
-                      dotHeight: 5.0,
-                      spacing: 15.0,
-                      fixedCenter: true,
-                      dotColor: Colors.black45,
-                      activeDotColor: Colors.white,
-                    ),
+                padding:
+                    const EdgeInsets.symmetric(horizontal: 6.0, vertical: 2.0),
+                child: Text(
+                  '${_currentPage + 1}/${itemList.length}',
+                  style: TextStyle(
+                    color: Theme.of(context).primaryColor,
+                    fontWeight: FontWeight.w700,
                   ),
                 ),
-            ],
-          ),
-        );
-      },
+              ),
+            ),
+          ],
+          if (kProductDetail.showImageGallery) ...[
+            Positioned(
+              bottom: 4.0,
+              left: 44,
+              child: ProductImageThumbnail(
+                itemList: itemList,
+                onSelect: ({required int index, bool? fullScreen}) {
+                  if (fullScreen ?? false) {
+                    _onShowGallery(context, index);
+                  }
+                  _pageController.goTo(index);
+                },
+                selectIndex: _currentPage,
+              ),
+            )
+          ],
+          if (!kProductDetail.showImageGallery &&
+              kProductDetail.sliderIndicatorType == SliderIndicatorType.dot)
+            Positioned(
+              bottom: 16.0,
+              right: 16.0,
+              left: 16.0,
+              child: SmoothPageIndicator(
+                controller: _pageController,
+                count: itemList.length,
+                effect: const ScrollingDotsEffect(
+                  dotWidth: 5.0,
+                  dotHeight: 5.0,
+                  spacing: 15.0,
+                  fixedCenter: true,
+                  dotColor: Colors.black45,
+                  activeDotColor: Colors.white,
+                ),
+              ),
+            ),
+        ],
+      ),
     );
   }
 
@@ -362,7 +383,7 @@ extension on PageController {
     );
   }
 
-  Future<void> goToUrl(String? url, List<String> urls) async {
+  void goToUrl(String? url, List<String> urls) {
     if (url == null || urls.isEmpty) {
       return;
     }
@@ -371,7 +392,7 @@ extension on PageController {
     if (index == -1) {
       return;
     }
-    return animateToPage(
+    animateToPage(
       index,
       duration: const Duration(milliseconds: 200),
       curve: Curves.easeOut,
diff --git a/lib/screens/detail/widgets/product_image_thumbnail.dart b/lib/screens/detail/widgets/product_image_thumbnail.dart
index 121f3ba..29d7808 100644
--- a/lib/screens/detail/widgets/product_image_thumbnail.dart
+++ b/lib/screens/detail/widgets/product_image_thumbnail.dart
@@ -48,7 +48,7 @@ class ProductImageThumbnail extends StatelessWidget {
                       width: 2,
                     ),
                   ),
-                  child: ImageTools.image(
+                  child: ImageResize(
                     url: itemList[i],
                     height: height * (kIsWeb ? 1.2 : 1),
                     width: height,
diff --git a/lib/screens/detail/widgets/product_short_description.dart b/lib/screens/detail/widgets/product_short_description.dart
index 52adf29..4d9f798 100644
--- a/lib/screens/detail/widgets/product_short_description.dart
+++ b/lib/screens/detail/widgets/product_short_description.dart
@@ -1,7 +1,7 @@
 import 'dart:convert';
 
 import 'package:flutter/material.dart';
-import 'package:inspireui/utils/logs.dart';
+import 'package:inspireui/inspireui.dart';
 
 import '../../../generated/l10n.dart';
 import '../../../models/index.dart' show Product;
diff --git a/lib/screens/detail/widgets/product_tag.dart b/lib/screens/detail/widgets/product_tag.dart
index d20c6da..6a30bc5 100644
--- a/lib/screens/detail/widgets/product_tag.dart
+++ b/lib/screens/detail/widgets/product_tag.dart
@@ -29,7 +29,6 @@ class ProductTag extends StatelessWidget {
               return TextButton(
                 onPressed: () {
                   ProductModel.showList(
-                    context: context,
                     tag: '${tag.id}',
                   );
                 },
diff --git a/lib/screens/detail/widgets/product_title.dart b/lib/screens/detail/widgets/product_title.dart
index 88f2986..74e3780 100644
--- a/lib/screens/detail/widgets/product_title.dart
+++ b/lib/screens/detail/widgets/product_title.dart
@@ -69,8 +69,7 @@ class _ProductTitleState extends BaseScreen<ProductTitle> {
             .toInt();
       }
     } catch (e, trace) {
-      printLog(trace);
-      printLog(e);
+      printError(e, trace);
     }
   }
 
diff --git a/lib/screens/detail/widgets/related_product.dart b/lib/screens/detail/widgets/related_product.dart
index c18f211..1ebce3b 100644
--- a/lib/screens/detail/widgets/related_product.dart
+++ b/lib/screens/detail/widgets/related_product.dart
@@ -11,8 +11,12 @@ import '../../../widgets/product/product_card_view.dart';
 
 class RelatedProduct extends StatefulWidget {
   final Product? product;
+  final EdgeInsets? padding;
 
-  const RelatedProduct(this.product);
+  const RelatedProduct(
+    this.product, {
+    this.padding,
+  });
 
   @override
   State<RelatedProduct> createState() => _RelatedProductState();
@@ -70,11 +74,14 @@ class _RelatedProductState extends State<RelatedProduct> {
                     return Column(
                       crossAxisAlignment: CrossAxisAlignment.start,
                       children: <Widget>[
-                        Padding(
-                          padding: const EdgeInsets.symmetric(
+                        Container(
+                          margin: const EdgeInsets.symmetric(
                             vertical: 18.0,
-                            horizontal: 16.0,
                           ),
+                          padding: widget.padding ??
+                              const EdgeInsets.symmetric(
+                                horizontal: 16.0,
+                              ),
                           child: Text(
                             S.of(context).youMightAlsoLike,
                             style: const TextStyle(
@@ -82,7 +89,8 @@ class _RelatedProductState extends State<RelatedProduct> {
                           ),
                         ),
                         SingleChildScrollView(
-                          padding: const EdgeInsets.symmetric(horizontal: 16),
+                          padding: widget.padding ??
+                              const EdgeInsets.symmetric(horizontal: 16),
                           scrollDirection: Axis.horizontal,
                           child: Row(
                             children: [
diff --git a/lib/screens/detail/widgets/related_product_from_same_store.dart b/lib/screens/detail/widgets/related_product_from_same_store.dart
index 8a8a5f0..3336d48 100644
--- a/lib/screens/detail/widgets/related_product_from_same_store.dart
+++ b/lib/screens/detail/widgets/related_product_from_same_store.dart
@@ -11,8 +11,12 @@ import '../../../widgets/product/product_card_view.dart';
 
 class RelatedProductFromSameStore extends StatefulWidget {
   final Product? product;
+  final EdgeInsets? padding;
 
-  const RelatedProductFromSameStore(this.product);
+  const RelatedProductFromSameStore(
+    this.product, {
+    this.padding,
+  });
 
   @override
   State<RelatedProductFromSameStore> createState() =>
@@ -79,11 +83,14 @@ class _RelatedProductFromSameStoreState
                     return Column(
                       crossAxisAlignment: CrossAxisAlignment.start,
                       children: <Widget>[
-                        Padding(
-                          padding: const EdgeInsets.symmetric(
+                        Container(
+                          margin: const EdgeInsets.symmetric(
                             vertical: 18.0,
-                            horizontal: 16.0,
                           ),
+                          padding: widget.padding ??
+                              const EdgeInsets.symmetric(
+                                horizontal: 16.0,
+                              ),
                           child: Text(
                             S.of(context).moreFromStore(storeName),
                             style: const TextStyle(
@@ -91,9 +98,10 @@ class _RelatedProductFromSameStoreState
                           ),
                         ),
                         SizedBox(
-                          height: constraint.maxWidth * 0.9,
+                          height: constraint.maxWidth * 0.75,
                           child: ListView(
-                            padding: const EdgeInsets.symmetric(horizontal: 16),
+                            shrinkWrap: true,
+                            padding: widget.padding ?? const EdgeInsets.symmetric(horizontal: 16),
                             cacheExtent: MediaQuery.of(context).size.width,
                             scrollDirection: Axis.horizontal,
                             children: [
diff --git a/lib/screens/detail/widgets/review.dart b/lib/screens/detail/widgets/review.dart
index b160ca1..20ca1fb 100644
--- a/lib/screens/detail/widgets/review.dart
+++ b/lib/screens/detail/widgets/review.dart
@@ -338,7 +338,7 @@ class _StateReviews extends BaseScreen<Reviews> {
                       },
                       child: Padding(
                         padding: const EdgeInsets.only(right: 10.0),
-                        child: ImageTools.image(
+                        child: ImageResize(
                           url: review.images[i],
                           fit: BoxFit.cover,
                           height: 80.0,
diff --git a/lib/screens/detail/widgets/variant_image_feature.dart b/lib/screens/detail/widgets/variant_image_feature.dart
index 1c65feb..7f20fc7 100644
--- a/lib/screens/detail/widgets/variant_image_feature.dart
+++ b/lib/screens/detail/widgets/variant_image_feature.dart
@@ -38,7 +38,7 @@ class VariantImageFeature extends StatelessWidget {
               children: <Widget>[
                 Positioned(
                   top: double.parse(kProductDetail.marginTop.toString()),
-                  child: ImageTools.image(
+                  child: ImageResize(
                     url: imageFeature,
                     fit: BoxFit.contain,
                     isResize: true,
@@ -50,7 +50,7 @@ class VariantImageFeature extends StatelessWidget {
                 ),
                 Positioned(
                   top: double.parse(kProductDetail.marginTop.toString()),
-                  child: ImageTools.image(
+                  child: ImageResize(
                     url: imageFeature,
                     fit: BoxFit.contain,
                     width: constraints.maxWidth,
diff --git a/lib/screens/detail/widgets/video_feature.dart b/lib/screens/detail/widgets/video_feature.dart
index 0204468..d88dd11 100644
--- a/lib/screens/detail/widgets/video_feature.dart
+++ b/lib/screens/detail/widgets/video_feature.dart
@@ -9,13 +9,13 @@ import '../../../common/constants.dart';
 class FeatureVideoPlayer extends StatefulWidget {
   final String url;
   final bool? autoPlay;
-  final bool forceLoad;
+  final double? aspectRatio;
 
   const FeatureVideoPlayer(
     this.url, {
     Key? key,
     this.autoPlay,
-    this.forceLoad = false,
+    this.aspectRatio,
   }) : super(key: key);
 
   @override
@@ -33,34 +33,43 @@ class _FeatureVideoPlayerState extends State<FeatureVideoPlayer> {
   @override
   void initState() {
     super.initState();
-    if (widget.forceLoad || widget.url.contains('.mp4')) {
-      _controller = VideoPlayerController.network(widget.url)
-        ..initialize()
-        ..setLooping(true).then((_) {
-          if (mounted) {
-            setState(() {
-              initialized = true;
-              aspectRatio = _controller?.value.aspectRatio;
-            });
-
-            if (widget.autoPlay == true) _controller?.play();
-          }
-        });
-    }
 
     /// Enable below to use the youtube video
     /// Compatible with: https://pub.dev/packages/youtube_player_iframe
     if (!isDesktop &&
         (widget.url.contains('youtu.be') || widget.url.contains('youtube'))) {
       isYoutube = true;
+      final videoId = YoutubePlayerController.convertUrlToId(widget.url)!;
       _youtubeController = YoutubePlayerController.fromVideoId(
-        videoId: YoutubePlayerController.convertUrlToId(widget.url)!,
+        videoId: videoId,
+        autoPlay: true,
         params: const YoutubePlayerParams(
           showControls: false,
           strictRelatedVideos: true,
+          loop: true,
+          showFullscreenButton: false,
+          showVideoAnnotations: false,
+          enableCaption: false,
         ),
       );
+      return;
     }
+
+    _controller = VideoPlayerController.network(widget.url)
+      ..initialize()
+      ..setLooping(true).then(
+        (_) {
+          if (mounted) {
+            setState(() {
+              initialized = true;
+              aspectRatio =
+                  widget.aspectRatio ?? _controller?.value.aspectRatio;
+            });
+
+            if (widget.autoPlay == true) _controller?.play();
+          }
+        },
+      );
   }
 
   @override
@@ -75,9 +84,11 @@ class _FeatureVideoPlayerState extends State<FeatureVideoPlayer> {
   Widget build(BuildContext context) {
     if (!isYoutube) {
       return initialized && _controller != null
-          ? AspectRatio(
-              aspectRatio: aspectRatio ?? _controller!.value.aspectRatio,
-              child: VideoPlayer(_controller!),
+          ? Center(
+              child: AspectRatio(
+                aspectRatio: aspectRatio ?? _controller!.value.aspectRatio,
+                child: VideoPlayer(_controller!),
+              ),
             )
           : Container(
               height: MediaQuery.of(context).size.width * 0.8,
diff --git a/lib/screens/dynamic/dynamic_menu_widget.dart b/lib/screens/dynamic/dynamic_menu_widget.dart
new file mode 100644
index 0000000..8f7c2ca
--- /dev/null
+++ b/lib/screens/dynamic/dynamic_menu_widget.dart
@@ -0,0 +1,43 @@
+import 'package:flutter/material.dart';
+import '../../modules/dynamic_layout/config/app_config.dart';
+
+class DynamicMenuWidget extends StatelessWidget {
+  final List<TabBarMenuConfig> data;
+
+  const DynamicMenuWidget({Key? key, required this.data}) : super(key: key);
+
+  @override
+  Widget build(BuildContext context) {
+    return SliverToBoxAdapter(
+      child: Container(
+        height: 50,
+        margin: const EdgeInsets.only(
+          left: 4,
+          right: 4,
+          bottom: 10,
+        ),
+        child: TabBar(
+          isScrollable: true,
+          indicatorSize: TabBarIndicatorSize.label,
+          splashBorderRadius: BorderRadius.circular(6),
+          indicatorColor: Theme.of(context).primaryColor,
+          labelPadding: const EdgeInsets.symmetric(
+            vertical: 2,
+            horizontal: 15,
+          ),
+          tabs: List.generate(
+            data.length,
+            (index) => Tab(
+              child: Text(
+                data[index].menuLabel == '' ? 'Shop' : data[index].menuLabel,
+                style: Theme.of(context).textTheme.subtitle1!.copyWith(
+                      fontWeight: FontWeight.w600,
+                    ),
+              ),
+            ),
+          ),
+        ),
+      ),
+    );
+  }
+}
diff --git a/lib/screens/dynamic/dynamic_screen.dart b/lib/screens/dynamic/dynamic_screen.dart
index 904c7f7..e6a90a0 100644
--- a/lib/screens/dynamic/dynamic_screen.dart
+++ b/lib/screens/dynamic/dynamic_screen.dart
@@ -84,7 +84,9 @@ class DynamicScreenState extends BaseScreen<DynamicScreen>
         if (appConfig == null) {
           return kLoadingWidget(context);
         }
+
         var configs = widget.configs;
+        var pageConfig = AppConfig.fromJson(configs);
 
         if (configs?.isEmpty ?? true) {
           return const SizedBox();
@@ -98,11 +100,9 @@ class DynamicScreenState extends BaseScreen<DynamicScreen>
               if (configs['Background'] != null)
                 isStickyHeader
                     ? SafeArea(
-                        child: HomeBackground(
-                          config: configs['Background'],
-                        ),
+                        child: HomeBackground(config: pageConfig.background),
                       )
-                    : HomeBackground(config: configs['Background']),
+                    : HomeBackground(config: pageConfig.background),
               if (!emptyHorizontal ||
                   (configs['VerticalLayout']?.isNotEmpty ?? false))
                 HomeLayout(
diff --git a/lib/screens/dynamic/dynamic_scrollable_screen.dart b/lib/screens/dynamic/dynamic_scrollable_screen.dart
new file mode 100644
index 0000000..42e4e99
--- /dev/null
+++ b/lib/screens/dynamic/dynamic_scrollable_screen.dart
@@ -0,0 +1,211 @@
+import 'dart:async';
+import 'dart:math';
+
+import 'package:flutter/material.dart';
+import 'package:provider/provider.dart';
+
+import '../../common/config.dart';
+import '../../common/constants.dart';
+import '../../models/app_model.dart';
+import '../../modules/dynamic_layout/background/background.dart';
+import '../../modules/dynamic_layout/config/app_config.dart';
+import '../../widgets/home/index.dart';
+import '../base_screen.dart';
+import '../common/app_bar_mixin.dart';
+
+class DynamicScrollableScreen extends StatefulWidget {
+  final String? previewKey;
+  final List<TabBarMenuConfig> data;
+
+  const DynamicScrollableScreen({required this.data, this.previewKey});
+
+  @override
+  State<StatefulWidget> createState() {
+    return DynamicScrollableScreenState();
+  }
+}
+
+class DynamicScrollableScreenState extends BaseScreen<DynamicScrollableScreen>
+    with AutomaticKeepAliveClientMixin<DynamicScrollableScreen>, AppBarMixin {
+  static BuildContext? homeContext;
+
+  static late BuildContext loadingContext;
+
+  final DraggableScrollableController _sheetController =
+      DraggableScrollableController();
+
+  final ScrollController _scrollController = ScrollController();
+
+  bool get emptyHorizontal =>
+      true; // widget.configs['HorizonLayout']?.isEmpty ?? true;
+
+  @override
+  bool get wantKeepAlive => true;
+
+  StreamSubscription? _sub;
+  int? itemId;
+  late final ValueNotifier<double> _offsetNotifier =
+      ValueNotifier(1 - _initialSize);
+
+  double get _initialSize => 0.6;
+
+  double get _minSize => 0.4;
+
+  @override
+  void dispose() {
+    printLog('[Home] dispose');
+    _sheetController.removeListener(_sheetSizeListener);
+    _sub?.cancel();
+    super.dispose();
+  }
+
+  @override
+  void initState() {
+    super.initState();
+    screenScrollController = _scrollController;
+  }
+
+  @override
+  Future<void> afterFirstLayout(BuildContext context) async {
+    homeContext = context;
+    _sheetController.addListener(_sheetSizeListener);
+  }
+
+  void _sheetSizeListener() {
+    _offsetNotifier.value = 1 - _sheetController.size;
+  }
+
+  static void showLoading(BuildContext context) {
+    showDialog(
+      context: context,
+      barrierDismissible: false,
+      builder: (BuildContext context) {
+        loadingContext = context;
+        return Center(
+          child: Container(
+            decoration: BoxDecoration(
+                color: Colors.white30,
+                borderRadius: BorderRadius.circular(5.0)),
+            padding: const EdgeInsets.all(50.0),
+            child: kLoadingWidget(context),
+          ),
+        );
+      },
+    );
+  }
+
+  static void hideLoading() {
+    Navigator.of(loadingContext).pop();
+  }
+
+  Widget renderLayout({
+    required int index,
+    required AppConfig appConfig,
+    ScrollController? scrollController,
+    bool showNewAppBar = false,
+  }) {
+    var configs = widget.data[index].jsonData['configs'];
+    var pageConfig = AppConfig.fromJson(configs);
+
+    var isStickyHeader = appConfig.settings.stickyHeader;
+
+    if (configs == null) {
+      return const SizedBox();
+    }
+
+    return Stack(
+      children: [
+        if (configs['Background'] != null)
+          HomeBackground(config: pageConfig.background),
+
+        /// the group menu is not support Vertical layout
+        HomeLayout(
+          isPinAppBar: isStickyHeader,
+          enableRefresh: false,
+          isShowAppbar: emptyHorizontal
+              ? false
+              : configs['HorizonLayout'][0]['layout'] == 'logo',
+          showNewAppBar: showNewAppBar,
+          configs: configs..['VerticalLayout'] = null,
+          scrollController: scrollController,
+        ),
+      ],
+    );
+  }
+
+  @override
+  Widget build(BuildContext context) {
+    super.build(context);
+    printLog('[Dynamic Screen] build');
+    return Selector<AppModel, AppConfig?>(
+      selector: (_, model) => model.appConfig,
+      builder: (context, appConfig, child) {
+        if (appConfig == null) {
+          return kLoadingWidget(context);
+        }
+
+        if (widget.data.isEmpty) {
+          return const SizedBox();
+        }
+
+        return Scaffold(
+          backgroundColor: Theme.of(context).backgroundColor,
+          body: Stack(
+            fit: StackFit.expand,
+            children: [
+              ValueListenableBuilder<double>(
+                valueListenable: _offsetNotifier,
+                builder: (context, value, child) {
+                  return FractionallySizedBox(
+                    alignment: Alignment.topCenter,
+                    heightFactor: max(value, 0.0),
+                    child: renderLayout(
+                      index: 0,
+                      appConfig: appConfig,
+                      showNewAppBar: appConfig.appBar
+                              ?.shouldShowOn(RouteList.scrollable) ??
+                          false,
+                      scrollController: _scrollController,
+                    ),
+                  );
+                },
+              ),
+              DraggableScrollableSheet(
+                initialChildSize: _initialSize,
+                minChildSize: _minSize,
+                controller: _sheetController,
+                builder:
+                    (BuildContext context, ScrollController scrollController) {
+                  return Container(
+                    decoration: BoxDecoration(
+                      borderRadius: const BorderRadius.only(
+                        topRight: Radius.circular(25.0),
+                        topLeft: Radius.circular(25.0),
+                      ),
+                      boxShadow: [
+                        BoxShadow(
+                          color: Colors.black.withOpacity(0.2),
+                          spreadRadius: 2,
+                          blurRadius: 20,
+                          offset: const Offset(0, -2),
+                        ),
+                      ],
+                      color: Theme.of(context).backgroundColor,
+                    ),
+                    child: widget.data.length == 2
+                        ? renderLayout(
+                            index: 1,
+                            appConfig: appConfig,
+                            scrollController: scrollController,
+                          )
+                        : const SizedBox(),
+                  );
+                },
+              ),
+            ],
+          ),
+        );
+      },
+    );
+  }
+}
diff --git a/lib/screens/dynamic/dynamic_tabmenu_screen.dart b/lib/screens/dynamic/dynamic_tabmenu_screen.dart
new file mode 100644
index 0000000..c83d116
--- /dev/null
+++ b/lib/screens/dynamic/dynamic_tabmenu_screen.dart
@@ -0,0 +1,142 @@
+import 'dart:async';
+
+import 'package:flutter/material.dart';
+import 'package:provider/provider.dart';
+
+import '../../common/config.dart';
+import '../../common/constants.dart';
+import '../../models/app_model.dart';
+import '../../modules/dynamic_layout/background/background.dart';
+import '../../modules/dynamic_layout/config/app_config.dart';
+import '../../widgets/home/index.dart';
+import '../base_screen.dart';
+import '../common/app_bar_mixin.dart';
+import 'dynamic_menu_widget.dart';
+
+class DynamicTabMenuScreen extends StatefulWidget {
+  final String? previewKey;
+  final List<TabBarMenuConfig> data;
+
+  const DynamicTabMenuScreen({required this.data, this.previewKey});
+
+  @override
+  State<StatefulWidget> createState() {
+    return DynamicScreenState();
+  }
+}
+
+class DynamicScreenState extends BaseScreen<DynamicTabMenuScreen>
+    with AutomaticKeepAliveClientMixin<DynamicTabMenuScreen>, AppBarMixin {
+  static BuildContext? homeContext;
+
+  static late BuildContext loadingContext;
+
+  bool get emptyHorizontal =>
+      true; // widget.configs['HorizonLayout']?.isEmpty ?? true;
+
+  @override
+  bool get wantKeepAlive => true;
+
+  StreamSubscription? _sub;
+  int? itemId;
+
+  @override
+  void dispose() {
+    printLog('[Home] dispose');
+    _sub?.cancel();
+    super.dispose();
+  }
+
+  @override
+  Future<void> afterFirstLayout(BuildContext context) async {
+    homeContext = context;
+  }
+
+  static void showLoading(BuildContext context) {
+    showDialog(
+      context: context,
+      barrierDismissible: false,
+      builder: (BuildContext context) {
+        loadingContext = context;
+        return Center(
+          child: Container(
+            decoration: BoxDecoration(
+                color: Colors.white30,
+                borderRadius: BorderRadius.circular(5.0)),
+            padding: const EdgeInsets.all(50.0),
+            child: kLoadingWidget(context),
+          ),
+        );
+      },
+    );
+  }
+
+  static void hideLoading() {
+    Navigator.of(loadingContext).pop();
+  }
+
+  @override
+  Widget build(BuildContext context) {
+    super.build(context);
+    printLog('[Dynamic Screen] build');
+    return Selector<AppModel, AppConfig?>(
+      selector: (_, model) => model.appConfig,
+      builder: (context, appConfig, child) {
+        if (appConfig == null) {
+          return kLoadingWidget(context);
+        }
+
+        if (widget.data.isEmpty) {
+          return const SizedBox();
+        }
+
+        var isStickyHeader = appConfig.settings.stickyHeader;
+        return DefaultTabController(
+          length: widget.data.length,
+          child: SafeArea(
+            bottom: false,
+            child: renderScaffold(
+              backgroundColor: Theme.of(context).backgroundColor,
+              routeName: RouteList.tabMenu,
+              child: NestedScrollView(
+                headerSliverBuilder: (context, value) {
+                  return [
+                    DynamicMenuWidget(data: widget.data),
+                  ];
+                },
+                body: TabBarView(
+                  physics: const NeverScrollableScrollPhysics(),
+                  children: List.generate(
+                    widget.data.length,
+                    (index) {
+                      var configs = widget.data[index].jsonData['configs'];
+                      var pageConfig = AppConfig.fromJson(configs);
+
+                      return Stack(
+                        children: [
+                          if (pageConfig.background != null)
+                            HomeBackground(config: pageConfig.background),
+
+                          /// the group menu is not support Vertical layout
+                          HomeLayout(
+                            isPinAppBar: isStickyHeader,
+                            isShowAppbar: emptyHorizontal
+                                ? false
+                                : configs['HorizonLayout'][0]['layout'] ==
+                                    'logo',
+                            showNewAppBar: false,
+                            configs: configs..['VerticalLayout'] = null,
+                          ),
+                        ],
+                      );
+                    },
+                  ),
+                ),
+              ),
+            ),
+          ),
+        );
+      },
+    );
+  }
+}
diff --git a/lib/screens/home/change_language_mixin.dart b/lib/screens/home/change_language_mixin.dart
index d66eb39..af341bb 100644
--- a/lib/screens/home/change_language_mixin.dart
+++ b/lib/screens/home/change_language_mixin.dart
@@ -5,6 +5,7 @@ import 'package:provider/provider.dart';
 
 import '../../common/config.dart';
 import '../../models/index.dart';
+import '../../widgets/common/flux_image.dart';
 
 mixin ChangeLanguage<T extends StatefulWidget> on State<T> {
   List<Map> get languages => getLanguages();
@@ -86,8 +87,8 @@ mixin ChangeLanguage<T extends StatefulWidget> on State<T> {
                           padding: const EdgeInsets.symmetric(vertical: 6),
                           child: Row(
                             children: [
-                              Image.asset(
-                                languages[i]['icon'],
+                              FluxImage(
+                                imageUrl: languages[i]['icon'],
                                 width: 30,
                                 height: 20,
                                 fit: BoxFit.cover,
diff --git a/lib/screens/home/home_screen.dart b/lib/screens/home/home_screen.dart
index b3b2927..30c2bc7 100644
--- a/lib/screens/home/home_screen.dart
+++ b/lib/screens/home/home_screen.dart
@@ -80,6 +80,7 @@ class _HomeScreenState extends BaseScreen<HomeScreen> {
             horizontalLayoutList.first['layout'] == 'logo';
 
         final bannerConfig = appConfig.settings.smartEngagementBannerConfig;
+
         final isShowPopupBanner =
             (popupBannerLastUpdatedTime != bannerConfig.popup.updatedTime) ||
                 bannerConfig.popup.alwaysShowUponOpen;
@@ -113,7 +114,7 @@ class _HomeScreenState extends BaseScreen<HomeScreen> {
                   return DynamicLayout(config: data);
                 },
               ),
-              if (ServerConfig().isBuilder) const WrapStatusBar(),
+              const WrapStatusBar(),
             ],
           ),
         );
diff --git a/lib/screens/home/notification_request_screen.dart b/lib/screens/home/notification_request_screen.dart
index 99e6afb..336e34d 100644
--- a/lib/screens/home/notification_request_screen.dart
+++ b/lib/screens/home/notification_request_screen.dart
@@ -2,11 +2,13 @@ import 'package:flutter/cupertino.dart';
 import 'package:flutter/material.dart';
 import 'package:lottie/lottie.dart';
 import 'package:provider/provider.dart';
+import 'package:shared_preferences/shared_preferences.dart';
 
 import '../../common/config.dart';
 import '../../common/constants.dart';
 import '../../generated/l10n.dart';
 import '../../models/notification_model.dart';
+import '../../services/dependency_injection.dart';
 import '../../services/services.dart';
 import '../common/permission_request_mixin.dart';
 
@@ -45,17 +47,24 @@ class _NotificationRequestScreenState extends State<NotificationRequestScreen>
   }
 
   void _gotoNextScreen() {
+    _setHasSeen();
     if (Services().widget.isRequiredLogin) {
       Navigator.of(context).pushReplacementNamed(RouteList.login);
       return;
     }
     if (kAdvanceConfig.gdprConfig.showPrivacyPolicyFirstTime) {
-      Navigator.of(context).pushReplacementNamed(RouteList.privacyTerms);
+      Navigator.of(context).pushReplacementNamed(
+        RouteList.privacyTerms,
+      );
     } else {
       Navigator.of(context).pushReplacementNamed(RouteList.dashboard);
     }
   }
 
+  void _setHasSeen() {
+    injector<SharedPreferences>().setBool(LocalStorageKey.seen, true);
+  }
+
   @override
   Widget build(BuildContext context) {
     return Scaffold(
diff --git a/lib/screens/home/onboard_screen.dart b/lib/screens/home/onboard_screen.dart
index 898cd5e..088c609 100644
--- a/lib/screens/home/onboard_screen.dart
+++ b/lib/screens/home/onboard_screen.dart
@@ -10,6 +10,7 @@ import '../../common/tools/navigate_tools.dart';
 import '../../generated/l10n.dart';
 import '../../models/index.dart' show AppModel;
 import '../../services/dependency_injection.dart';
+import '../../services/notification/notification_service.dart';
 import '../../services/services.dart';
 import '../../widgets/common/flux_image.dart';
 import 'change_language_mixin.dart';
@@ -49,11 +50,20 @@ class _OnBoardScreenState extends State<OnBoardScreen> with ChangeLanguage {
     if (kAdvanceConfig.showRequestNotification) {
       await Navigator.of(context)
           .pushReplacementNamed(RouteList.notificationRequest);
+      return;
+    }
+    await injector<NotificationService>().requestPermission();
+    if (kAdvanceConfig.gdprConfig.showPrivacyPolicyFirstTime) {
+      await Navigator.of(context).pushReplacementNamed(
+        RouteList.privacyTerms,
+      );
+    } else {
+      await Navigator.of(context).pushReplacementNamed(RouteList.dashboard);
     }
   }
 
-  List<Slide> getSlides(List<dynamic> data) {
-    final slides = <Slide>[];
+  List<ContentConfig> getSlides(List<dynamic> data) {
+    final slides = <ContentConfig>[];
 
     Widget renderLoginWidget(String imagePath) {
       return Column(
@@ -106,37 +116,34 @@ class _OnBoardScreenState extends State<OnBoardScreen> with ChangeLanguage {
     }
 
     for (var i = 0; i < data.length; i++) {
-      var slide = Slide(
-        title: data[i]['title'],
-        description: data[i]['desc'],
-        marginTitle: const EdgeInsets.only(
-          top: 125.0,
-          bottom: 50.0,
-        ),
-        maxLineTextDescription: 2,
-        styleTitle: const TextStyle(
-          fontWeight: FontWeight.bold,
-          fontSize: 25.0,
-          color: kGrey900,
-        ),
-        backgroundColor: Colors.white,
-        marginDescription: const EdgeInsets.fromLTRB(20.0, 75.0, 20.0, 0),
-        styleDescription: const TextStyle(
-          fontSize: 15.0,
-          color: kGrey600,
-        ),
-        foregroundImageFit: BoxFit.fitWidth,
-      );
-
       final isLastItem = i == data.length - 1;
-      if (isLastItem) {
-        slide.centerWidget = renderLoginWidget(data[i]['image']);
-      } else {
-        slide.centerWidget = FluxImage(
-          imageUrl: data[i]['image'],
-          fit: BoxFit.fitWidth,
-        );
-      }
+
+      var slide = ContentConfig(
+          title: data[i]['title'],
+          description: data[i]['desc'],
+          marginTitle: const EdgeInsets.only(
+            top: 125.0,
+            bottom: 50.0,
+          ),
+          maxLineTextDescription: 2,
+          styleTitle: const TextStyle(
+            fontWeight: FontWeight.bold,
+            fontSize: 25.0,
+            color: kGrey900,
+          ),
+          backgroundColor: Colors.white,
+          marginDescription: const EdgeInsets.fromLTRB(20.0, 75.0, 20.0, 0),
+          styleDescription: const TextStyle(
+            fontSize: 15.0,
+            color: kGrey600,
+          ),
+          foregroundImageFit: BoxFit.fitWidth,
+          centerWidget: isLastItem
+              ? renderLoginWidget(data[i]['image'])
+              : FluxImage(
+                  imageUrl: data[i]['image'],
+                  fit: BoxFit.fitWidth,
+                ));
       slides.add(slide);
     }
     return slides;
@@ -155,7 +162,8 @@ class _OnBoardScreenState extends State<OnBoardScreen> with ChangeLanguage {
             return Container(
               key: UniqueKey(),
               child: IntroSlider(
-                slides: getSlides(data),
+                key: UniqueKey(),
+                listContentConfig: getSlides(data),
                 renderSkipBtn: Text(
                   S.of(context).skip,
                   style: TextStyle(color: Theme.of(context).primaryColor),
@@ -172,7 +180,7 @@ class _OnBoardScreenState extends State<OnBoardScreen> with ChangeLanguage {
                   S.of(context).next,
                   style: TextStyle(color: Theme.of(context).primaryColor),
                 ),
-                showDoneBtn: !isRequiredLogin,
+                isShowDoneBtn: !isRequiredLogin,
                 onDonePress: onTapDone,
               ),
             );
diff --git a/lib/screens/home/privacy_term_screen.dart b/lib/screens/home/privacy_term_screen.dart
index e96da79..5af523e 100644
--- a/lib/screens/home/privacy_term_screen.dart
+++ b/lib/screens/home/privacy_term_screen.dart
@@ -64,22 +64,25 @@ class _PrivacyTermScreenState extends State<PrivacyTermScreen> {
               ),
             ),
       body: Builder(builder: (context) {
+        var canPop = ModalRoute.of(context)!.canPop;
+
         if (pageId != null) {
           return PostScreen(
-            pageId: kAdvanceConfig.privacyPoliciesPageId,
-            isLocatedInTabbar: false,
+            pageId: pageId,
+            isLocatedInTabbar: !canPop,
             pageTitle: S.of(context).agreeWithPrivacy,
           );
         }
 
         return WebView(
           url: pageUrl,
+          enableClose: canPop,
           enableBackward: false,
           enableForward: false,
           title: S.of(context).agreeWithPrivacy,
           appBar: AppBar(
             title: Text(S.of(context).agreeWithPrivacy),
-            automaticallyImplyLeading: false,
+            automaticallyImplyLeading: canPop,
           ),
         );
       }),
diff --git a/lib/screens/login_sms/login_sms_screen.dart b/lib/screens/login_sms/login_sms_screen.dart
index 8acac73..c65bc6e 100644
--- a/lib/screens/login_sms/login_sms_screen.dart
+++ b/lib/screens/login_sms/login_sms_screen.dart
@@ -54,7 +54,7 @@ class LoginSMSScreenState<T extends LoginSMSScreen> extends State<T>
 
       void verifyFailed(exception) {
         stopAnimation();
-        failMessage(exception._message, context);
+        failMessage(exception.toString(), context);
       }
 
       viewModel.verify(
@@ -82,15 +82,18 @@ class LoginSMSScreenState<T extends LoginSMSScreen> extends State<T>
       vsync: this,
     );
 
-    _controller.addListener(() {
-      if (_controller.text != '') {
-        viewModel.updatePhone(_controller.text);
-      }
-    });
+    _controller.addListener(_onChanged);
+  }
+
+  void _onChanged() {
+    if (_controller.text != '') {
+      viewModel.updatePhone(_controller.text);
+    }
   }
 
   @override
   void dispose() {
+    _controller.removeListener(_onChanged);
     _loginButtonController.dispose();
     super.dispose();
   }
@@ -131,24 +134,27 @@ class LoginSMSScreenState<T extends LoginSMSScreen> extends State<T>
                   Row(
                     crossAxisAlignment: CrossAxisAlignment.center,
                     children: <Widget>[
-                      CountryCodePicker(
-                        onChanged: (CountryCode? countryCode) =>
-                            viewModel.updateCountryCode(
-                          code: countryCode?.code,
-                          dialCode: countryCode?.dialCode,
-                          name: countryCode?.name,
-                        ),
-                        // Initial selection and favorite can be one of code ('IT') OR dial_code('+39')
-                        initialSelection: viewModel.countryCode,
-                        onInit: (countryCode) => viewModel.loadConfig(
-                          code: countryCode?.code,
-                          dialCode: countryCode?.dialCode,
-                          name: countryCode?.name,
+                      Padding(
+                        padding: const EdgeInsets.only(top: 17.0),
+                        child: CountryCodePicker(
+                          onChanged: (CountryCode? countryCode) =>
+                              viewModel.updateCountryCode(
+                            code: countryCode?.code,
+                            dialCode: countryCode?.dialCode,
+                            name: countryCode?.name,
+                          ),
+                          // Initial selection and favorite can be one of code ('IT') OR dial_code('+39')
+                          initialSelection: viewModel.countryCode,
+                          onInit: (countryCode) => viewModel.loadConfig(
+                            code: countryCode?.code,
+                            dialCode: countryCode?.dialCode,
+                            name: countryCode?.name,
+                          ),
+                          //Get the country information relevant to the initial selection
+                          backgroundColor: Theme.of(context).backgroundColor,
+                          dialogBackgroundColor:
+                              Theme.of(context).dialogBackgroundColor,
                         ),
-                        //Get the country information relevant to the initial selection
-                        backgroundColor: Theme.of(context).backgroundColor,
-                        dialogBackgroundColor:
-                            Theme.of(context).dialogBackgroundColor,
                       ),
                       const SizedBox(width: 8.0),
                       Expanded(
diff --git a/lib/screens/login_sms/verify.dart b/lib/screens/login_sms/verify.dart
index af7437f..ce40d1b 100644
--- a/lib/screens/login_sms/verify.dart
+++ b/lib/screens/login_sms/verify.dart
@@ -83,7 +83,7 @@ class _VerifyCodeState extends State<VerifyCode>
 
         void verifyFailed(exception) {
           _stopAnimation();
-          _failMessage(exception._message, context);
+          _failMessage(exception.toString(), context);
         }
 
         Services().firebase.verifyPhoneNumber(
@@ -222,33 +222,32 @@ class _VerifyCodeState extends State<VerifyCode>
             Padding(
               padding:
                   const EdgeInsets.symmetric(horizontal: 30.0, vertical: 8),
-              child: RichText(
-                text: TextSpan(
-                  text: S.of(context).enterSendedCode,
-                  children: [
-                    TextSpan(
-                      text: ' ',
-                      style: Theme.of(context).textTheme.bodyText1?.copyWith(
-                            fontSize: 15,
-                          ),
-                    ),
-                    TextSpan(
-                      text: widget.phoneNumber,
-                      style: Theme.of(context).textTheme.bodyText1?.copyWith(
-                            fontSize: 15,
-                          ),
-                    ),
-                  ],
-                  style: Theme.of(context).textTheme.bodyText2?.copyWith(
-                        color: Theme.of(context)
-                            .textTheme
-                            .bodyText2
-                            ?.color
-                            ?.withOpacity(0.54),
-                        fontSize: 15,
+              child: Directionality(
+                textDirection: TextDirection.rtl,
+                child: RichText(
+                  text: TextSpan(
+                    text: S.of(context).enterSendedCode,
+                    children: [
+                      TextSpan(
+                        text: Tools.isRTL(context)
+                            ? ' ${widget.phoneNumber?.replaceAll('+', '')}+'
+                            : ' +${widget.phoneNumber?.replaceAll('+', '')}',
+                        style: Theme.of(context).textTheme.bodyText1?.copyWith(
+                              fontSize: 15,
+                            ),
                       ),
+                    ],
+                    style: Theme.of(context).textTheme.bodyText2?.copyWith(
+                          color: Theme.of(context)
+                              .textTheme
+                              .bodyText2
+                              ?.color
+                              ?.withOpacity(0.54),
+                          fontSize: 15,
+                        ),
+                  ),
+                  textAlign: TextAlign.center,
                 ),
-                textAlign: TextAlign.center,
               ),
             ),
             const SizedBox(height: 20),
diff --git a/lib/screens/order_history/models/order_history_detail_model.dart b/lib/screens/order_history/models/order_history_detail_model.dart
index 37a69c5..f1a611a 100644
--- a/lib/screens/order_history/models/order_history_detail_model.dart
+++ b/lib/screens/order_history/models/order_history_detail_model.dart
@@ -6,12 +6,14 @@ import '../../../services/index.dart';
 class OrderHistoryDetailModel extends ChangeNotifier {
   Order _order;
   List<OrderNote>? _listOrderNote;
+  bool _orderNoteLoading = false;
   final User user;
   final _services = Services();
 
   Order get order => _order;
 
   List<OrderNote>? get listOrderNote => _listOrderNote;
+  bool get orderNoteLoading => _orderNoteLoading;
 
   OrderHistoryDetailModel({
     required Order order,
@@ -51,6 +53,8 @@ class OrderHistoryDetailModel extends ChangeNotifier {
     final newOrder =
         await _services.api.cancelOrder(order: order, userCookie: user.cookie);
     if (newOrder != null) {
+      newOrder.lineItems = order
+          .lineItems; // fix this issue https://github.com/fluxstore/fluxstore-core/issues/667
       _order = newOrder;
       await fetchImageOfOrder();
       notifyListeners();
@@ -68,8 +72,11 @@ class OrderHistoryDetailModel extends ChangeNotifier {
   }
 
   void getOrderNote() async {
+    _orderNoteLoading = true;
+    notifyListeners();
     _listOrderNote =
         await _services.api.getOrderNote(userId: user.id, orderId: order.id);
+    _orderNoteLoading = false;
     notifyListeners();
   }
 
diff --git a/lib/screens/order_history/views/list_order_history_screen.dart b/lib/screens/order_history/views/list_order_history_screen.dart
index 45785e1..79c9b06 100644
--- a/lib/screens/order_history/views/list_order_history_screen.dart
+++ b/lib/screens/order_history/views/list_order_history_screen.dart
@@ -28,43 +28,41 @@ class _ListOrderHistoryScreenState extends State<ListOrderHistoryScreen>
     final user = Provider.of<UserModel>(context, listen: false).user ?? User();
     return renderScaffold(
       routeName: RouteList.orders,
-      body: Scaffold(
-        backgroundColor: Theme.of(context).backgroundColor,
-        appBar: AppBar(
-          title: Text(
-            S.of(context).orderHistory,
-            style: TextStyle(
-              color: Theme.of(context).colorScheme.secondary,
-            ),
+      secondAppBar: AppBar(
+        title: Text(
+          S.of(context).orderHistory,
+          style: TextStyle(
+            color: Theme.of(context).colorScheme.secondary,
           ),
-          centerTitle: true,
-          backgroundColor: Theme.of(context).backgroundColor,
-          leading: IconButton(
-            icon: Icon(
-              Icons.arrow_back_ios_sharp,
-              color: Theme.of(context).colorScheme.secondary,
-            ),
-            onPressed: () => Navigator.of(context).pop(),
+        ),
+        centerTitle: true,
+        backgroundColor: Theme.of(context).backgroundColor,
+        leading: IconButton(
+          icon: Icon(
+            Icons.arrow_back_ios_sharp,
+            color: Theme.of(context).colorScheme.secondary,
           ),
+          onPressed: () => Navigator.of(context).pop(),
         ),
-        body: PagingList<ListOrderHistoryModel, Order>(
-          onRefresh: mapOrderHistoryDetailModel.clear,
-          itemBuilder: (_, order, index) {
-            if (mapOrderHistoryDetailModel[index] == null) {
-              final orderHistoryDetailModel = OrderHistoryDetailModel(
-                order: order,
-                user: user,
-              );
-              mapOrderHistoryDetailModel[index] = orderHistoryDetailModel;
-            }
-            return ChangeNotifierProvider<OrderHistoryDetailModel>.value(
-              value: mapOrderHistoryDetailModel[index]!,
-              child: OrderListItem(),
+      ),
+      backgroundColor: Theme.of(context).backgroundColor,
+      child: PagingList<ListOrderHistoryModel, Order>(
+        onRefresh: mapOrderHistoryDetailModel.clear,
+        itemBuilder: (_, order, index) {
+          if (mapOrderHistoryDetailModel[index] == null) {
+            final orderHistoryDetailModel = OrderHistoryDetailModel(
+              order: order,
+              user: user,
             );
-          },
-          lengthLoadingWidget: 3,
-          loadingWidget: const OrderListLoadingItem(),
-        ),
+            mapOrderHistoryDetailModel[index] = orderHistoryDetailModel;
+          }
+          return ChangeNotifierProvider<OrderHistoryDetailModel>.value(
+            value: mapOrderHistoryDetailModel[index]!,
+            child: OrderListItem(),
+          );
+        },
+        lengthLoadingWidget: 3,
+        loadingWidget: const OrderListLoadingItem(),
       ),
     );
   }
diff --git a/lib/screens/order_history/views/order_history_detail_screen.dart b/lib/screens/order_history/views/order_history_detail_screen.dart
index 4838cc6..167c3a5 100644
--- a/lib/screens/order_history/views/order_history_detail_screen.dart
+++ b/lib/screens/order_history/views/order_history_detail_screen.dart
@@ -21,18 +21,23 @@ import '../models/order_history_detail_model.dart';
 import 'widgets/order_price.dart';
 import 'widgets/product_order_item.dart';
 
-const bool enableOrderNoteHtml = true;
-
 class OrderDetailArguments {
   OrderHistoryDetailModel model;
   bool enableReorder;
+  bool disableReview;
 
-  OrderDetailArguments({required this.model, this.enableReorder = true});
+  OrderDetailArguments(
+      {required this.model,
+      this.enableReorder = true,
+      this.disableReview = false});
 }
 
 class OrderHistoryDetailScreen extends StatefulWidget {
   final bool enableReorder;
-  const OrderHistoryDetailScreen({this.enableReorder = true});
+  final bool disableReview;
+
+  const OrderHistoryDetailScreen(
+      {this.enableReorder = true, this.disableReview = false});
 
   @override
   BaseScreen<OrderHistoryDetailScreen> createState() =>
@@ -128,6 +133,7 @@ class _OrderHistoryDetailScreenState
                     index: index,
                     storeDeliveryDates: order.storeDeliveryDates,
                     currencyCode: order.currencyCode,
+                    disableReview: widget.disableReview,
                   );
                 },
               ),
@@ -426,6 +432,9 @@ class _OrderHistoryDetailScreenState
                   child: Builder(
                     builder: (context) {
                       final listOrderNote = model.listOrderNote;
+                      if (model.orderNoteLoading) {
+                        return kLoadingWidget(context);
+                      }
                       if (listOrderNote?.isEmpty ?? true) {
                         return const SizedBox();
                       }
@@ -464,18 +473,9 @@ class _OrderHistoryDetailScreenState
                                                   right: 10,
                                                   top: 15,
                                                   bottom: 25),
-                                              child: enableOrderNoteHtml
-                                                  ? HtmlWidget(
-                                                      listOrderNote[index]
-                                                          .note!,
-                                                      textStyle:
-                                                          const TextStyle(
-                                                              color:
-                                                                  Colors.white,
-                                                              fontSize: 13,
-                                                              height: 1.2),
-                                                    )
-                                                  : Linkify(
+                                              child: kAdvanceConfig
+                                                      .orderNotesLinkSupport
+                                                  ? Linkify(
                                                       text: listOrderNote[index]
                                                           .note!,
                                                       style: const TextStyle(
@@ -486,6 +486,16 @@ class _OrderHistoryDetailScreenState
                                                         await Tools.launchURL(
                                                             link.url);
                                                       },
+                                                    )
+                                                  : HtmlWidget(
+                                                      listOrderNote[index]
+                                                          .note!,
+                                                      textStyle:
+                                                          const TextStyle(
+                                                              color:
+                                                                  Colors.white,
+                                                              fontSize: 13,
+                                                              height: 1.2),
                                                     ),
                                             ),
                                           ),
@@ -527,25 +537,30 @@ class _OrderHistoryDetailScreenState
   }
 
   Future<void> refundOrder() async {
-    _showLoading();
+    var loadingContext = context;
+    _showLoading((BuildContext context) {
+      loadingContext = context;
+    });
     try {
       await orderHistoryModel.createRefund();
-      _hideLoading();
+      _hideLoading(loadingContext);
+      Navigator.pop(context);
       ScaffoldMessenger.of(context).showSnackBar(
           SnackBar(content: Text(S.of(context).refundOrderSuccess)));
     } catch (err) {
-      _hideLoading();
-
+      _hideLoading(loadingContext);
+      Navigator.pop(context);
       ScaffoldMessenger.of(context).showSnackBar(
           SnackBar(content: Text(S.of(context).refundOrderFailed)));
     }
   }
 
-  void _showLoading() {
+  void _showLoading(Function(BuildContext) onGetContext) {
     showDialog(
       context: context,
       barrierDismissible: false,
       builder: (BuildContext context) {
+        onGetContext(context);
         return Center(
           child: Container(
             decoration: BoxDecoration(
@@ -557,11 +572,6 @@ class _OrderHistoryDetailScreenState
               mainAxisAlignment: MainAxisAlignment.spaceAround,
               children: [
                 kLoadingWidget(context),
-                // const SizedBox(height: 48),
-                ElevatedButton(
-                  onPressed: Navigator.of(context).pop,
-                  child: Text(S.of(context).cancel),
-                ),
               ],
             ),
           ),
@@ -570,7 +580,7 @@ class _OrderHistoryDetailScreenState
     );
   }
 
-  void _hideLoading() {
+  void _hideLoading(BuildContext context) {
     Navigator.of(context).pop();
   }
 
diff --git a/lib/screens/order_history/views/widgets/order_list_item.dart b/lib/screens/order_history/views/widgets/order_list_item.dart
index acfb3a9..397602a 100644
--- a/lib/screens/order_history/views/widgets/order_list_item.dart
+++ b/lib/screens/order_history/views/widgets/order_list_item.dart
@@ -90,7 +90,7 @@ class OrderListItem extends StatelessWidget {
                                         child: ClipRRect(
                                           borderRadius:
                                               BorderRadius.circular(8.0),
-                                          child: ImageTools.image(
+                                          child: ImageResize(
                                             url: order.lineItems[1]
                                                     .featuredImage ??
                                                 kDefaultImage,
@@ -122,7 +122,7 @@ class OrderListItem extends StatelessWidget {
                                     ),
                                     child: ClipRRect(
                                       borderRadius: BorderRadius.circular(10.0),
-                                      child: ImageTools.image(
+                                      child: ImageResize(
                                         url: order.lineItems[0].featuredImage ??
                                             kDefaultImage,
                                         fit: BoxFit.cover,
@@ -253,7 +253,7 @@ class OrderListItem extends StatelessWidget {
                                 currency: currencyCode),
                           ),
                           OrderStatusWidget(
-                            title: S.of(context).Qty,
+                            title: S.of(context).qty,
                             detail: order.quantity.toString(),
                           ),
                           if (order.status != null)
diff --git a/lib/screens/order_history/views/widgets/product_order_item.dart b/lib/screens/order_history/views/widgets/product_order_item.dart
index 014fc47..35e27bb 100644
--- a/lib/screens/order_history/views/widgets/product_order_item.dart
+++ b/lib/screens/order_history/views/widgets/product_order_item.dart
@@ -20,18 +20,19 @@ class ProductOrderItem extends StatefulWidget {
   final ProductItem product;
   final List<StoreDeliveryDate>? storeDeliveryDates;
   final String? currencyCode;
+  final bool disableReview;
 
   /// For prestashop.
   final int index;
 
-  const ProductOrderItem({
-    required this.orderId,
-    required this.orderStatus,
-    required this.product,
-    this.storeDeliveryDates,
-    this.currencyCode,
-    this.index = 0,
-  });
+  const ProductOrderItem(
+      {required this.orderId,
+      required this.orderStatus,
+      required this.product,
+      this.storeDeliveryDates,
+      this.currencyCode,
+      this.index = 0,
+      this.disableReview = false});
 
   @override
   BaseScreen<ProductOrderItem> createState() => _StateProductOrderItem();
@@ -123,7 +124,8 @@ class _StateProductOrderItem extends BaseScreen<ProductOrderItem> {
 
   @override
   Widget build(BuildContext context) {
-    final currencyCode = widget.currencyCode ?? Provider.of<AppModel>(context).currencyCode;
+    final currencyCode =
+        widget.currencyCode ?? Provider.of<AppModel>(context).currencyCode;
     final addonsOptions = (widget.product.addonsOptions ?? '')
         .split(', ')
         .map(Tools.getFileNameFromUrl)
@@ -160,7 +162,7 @@ class _StateProductOrderItem extends BaseScreen<ProductOrderItem> {
                             width: 80,
                             height: 80,
                           )
-                        : ImageTools.image(
+                        : ImageResize(
                             url: imageFeatured,
                             fit: BoxFit.cover,
                           ),
@@ -225,7 +227,8 @@ class _StateProductOrderItem extends BaseScreen<ProductOrderItem> {
         ),
 
         /// Review for completed order only.
-        if (widget.orderStatus == OrderStatus.completed)
+        if (widget.orderStatus == OrderStatus.completed &&
+            !widget.disableReview)
           Padding(
             padding: const EdgeInsets.only(top: 5.0),
             child: Reviews(
diff --git a/lib/screens/page_tab_screen.dart b/lib/screens/page_tab_screen.dart
new file mode 100644
index 0000000..2c5c4dc
--- /dev/null
+++ b/lib/screens/page_tab_screen.dart
@@ -0,0 +1,53 @@
+import 'package:flutter/material.dart';
+import 'package:provider/provider.dart';
+
+import '../common/constants.dart';
+import '../models/index.dart';
+import '../modules/dynamic_layout/index.dart';
+import '../routes/route.dart';
+
+class PageTabScreen extends StatelessWidget {
+  final TabBarMenuConfig config;
+  const PageTabScreen(this.config);
+
+  @override
+  Widget build(BuildContext context) {
+    var appModel = Provider.of<AppModel>(context, listen: false);
+    var tabData = appModel.appConfig!.tabBar;
+    var groupTabData = tabData.where((e) => e.groupLayout == true).toList();
+    var initialRoute = config.layout;
+    var routeData = initialRoute == RouteList.tabMenu ||
+              initialRoute == RouteList.scrollable
+          ? groupTabData
+          : config;
+
+    return Scaffold(
+      appBar: AppBar(
+        leading: GestureDetector(
+          onTap: () {
+            Navigator.pop(context);
+          },
+          child: const Icon(Icons.arrow_back_ios),
+        ),
+        title: Text(
+          config.label ?? config.menuLabel,
+          style: Theme.of(context).primaryTextTheme.headline5,
+        ),
+        backgroundColor: Theme.of(context).backgroundColor,
+      ),
+      body: Navigator(
+        key: key,
+        initialRoute: initialRoute,
+        onGenerateRoute: (RouteSettings settings) {
+          if (settings.name == initialRoute) {
+            return Routes.getRouteGenerate(RouteSettings(
+              name: initialRoute,
+              arguments: routeData,
+            ));
+          }
+          return Routes.getRouteGenerate(settings);
+        },
+      ),
+    );
+  }
+}
diff --git a/lib/screens/pages/static_page.dart b/lib/screens/pages/static_page.dart
index f91815b..45196bf 100644
--- a/lib/screens/pages/static_page.dart
+++ b/lib/screens/pages/static_page.dart
@@ -14,6 +14,14 @@ class StaticPage extends StatefulWidget {
 }
 
 class _StateStaticPage extends State<StaticPage> with AppBarMixin {
+  final ScrollController _scrollController = ScrollController();
+
+  @override
+  void initState() {
+    super.initState();
+    screenScrollController = _scrollController;
+  }
+
   Widget buildContainer(Map<String, dynamic> json, width, height) {
     return SizedBox(
       height: (json['height'] ?? 1.0) * height,
@@ -81,9 +89,10 @@ class _StateStaticPage extends State<StaticPage> with AppBarMixin {
 
     return renderScaffold(
       routeName: RouteList.static,
-      body: LayoutBuilder(
+      child: LayoutBuilder(
         builder: (context, constraints) {
           return SingleChildScrollView(
+            controller: _scrollController,
             child: Stack(
               children: <Widget>[
                 if (design['background'] != null)
diff --git a/lib/screens/posts/post_screen.dart b/lib/screens/posts/post_screen.dart
index 543c50b..1c59bdb 100644
--- a/lib/screens/posts/post_screen.dart
+++ b/lib/screens/posts/post_screen.dart
@@ -28,9 +28,11 @@ class _PostScreenState extends State<PostScreen> with AppBarMixin {
   final Services _service = Services();
   Future<Blog?>? _getPage;
   final _memoizer = AsyncMemoizer<Blog?>();
+  final ScrollController _scrollController = ScrollController();
 
   @override
   void initState() {
+    screenScrollController = _scrollController;
     // only create the future once
     Future.delayed(Duration.zero, () {
       setState(() {
@@ -51,93 +53,87 @@ class _PostScreenState extends State<PostScreen> with AppBarMixin {
     return renderScaffold(
       routeName: RouteList.postScreen,
       backgroundColor: Theme.of(context).backgroundColor,
-      body: Column(
-        children: [
-          AppBar(
-            systemOverlayStyle: SystemUiOverlayStyle.light,
-            title: Text(
-              widget.pageTitle.toString(),
-              style: Theme.of(context)
-                  .textTheme
-                  .headline6
-                  ?.copyWith(fontWeight: FontWeight.w700),
-            ),
-            backgroundColor: Theme.of(context).backgroundColor,
-            leading: widget.isLocatedInTabbar
-                ? const SizedBox()
-                : Center(
-                    child: GestureDetector(
-                      onTap: () => Navigator.pop(context),
-                      child: Icon(
-                        Icons.arrow_back_ios,
-                        color: Theme.of(context).colorScheme.secondary,
-                      ),
-                    ),
+      secondAppBar: AppBar(
+        systemOverlayStyle: SystemUiOverlayStyle.light,
+        title: Text(
+          widget.pageTitle.toString(),
+          style: Theme.of(context)
+              .textTheme
+              .headline6
+              ?.copyWith(fontWeight: FontWeight.w700),
+        ),
+        backgroundColor: Theme.of(context).backgroundColor,
+        leading: widget.isLocatedInTabbar
+            ? const SizedBox()
+            : Center(
+                child: GestureDetector(
+                  onTap: () => Navigator.pop(context),
+                  child: Icon(
+                    Icons.arrow_back_ios,
+                    color: Theme.of(context).colorScheme.secondary,
+                  ),
+                ),
+              ),
+      ),
+      child: FutureBuilder<Blog?>(
+        future: _getPage,
+        builder: (BuildContext context, AsyncSnapshot<Blog?> snapshot) {
+          switch (snapshot.connectionState) {
+            case ConnectionState.none:
+            case ConnectionState.active:
+            case ConnectionState.waiting:
+              return Scaffold(
+                body: Container(
+                  color: Theme.of(context).backgroundColor,
+                  child: const Center(
+                    child: CircularProgressIndicator(),
                   ),
-          ),
-          Expanded(
-            child: FutureBuilder<Blog?>(
-              future: _getPage,
-              builder: (BuildContext context, AsyncSnapshot<Blog?> snapshot) {
-                switch (snapshot.connectionState) {
-                  case ConnectionState.none:
-                  case ConnectionState.active:
-                  case ConnectionState.waiting:
-                    return Scaffold(
-                      body: Container(
-                        color: Theme.of(context).backgroundColor,
-                        child: const Center(
-                          child: CircularProgressIndicator(),
+                ),
+              );
+            case ConnectionState.done:
+            default:
+              if (snapshot.hasError || snapshot.data == null) {
+                return Material(
+                  child: Container(
+                    color: Theme.of(context).backgroundColor,
+                    alignment: Alignment.center,
+                    child: Column(
+                      mainAxisAlignment: MainAxisAlignment.center,
+                      crossAxisAlignment: CrossAxisAlignment.center,
+                      children: <Widget>[
+                        Text(
+                          S.of(context).noPost,
                         ),
-                      ),
-                    );
-                  case ConnectionState.done:
-                  default:
-                    if (snapshot.hasError || snapshot.data!.id == null) {
-                      return Material(
-                        child: Container(
-                          color: Theme.of(context).backgroundColor,
-                          alignment: Alignment.center,
-                          child: Column(
-                            mainAxisAlignment: MainAxisAlignment.center,
-                            crossAxisAlignment: CrossAxisAlignment.center,
-                            children: <Widget>[
-                              Text(
-                                S.of(context).noPost,
+                        widget.isLocatedInTabbar
+                            ? const SizedBox()
+                            : TextButton(
+                                style: TextButton.styleFrom(
+                                  foregroundColor:
+                                      Theme.of(context).colorScheme.secondary,
+                                ),
+                                onPressed: () {
+                                  Navigator.of(context).pop();
+                                },
+                                child: Text(S.of(context).goBackHomePage),
                               ),
-                              widget.isLocatedInTabbar
-                                  ? const SizedBox()
-                                  : TextButton(
-                                      style: TextButton.styleFrom(
-                                        foregroundColor: Theme.of(context)
-                                            .colorScheme
-                                            .secondary,
-                                      ),
-                                      onPressed: () {
-                                        Navigator.of(context).pop();
-                                      },
-                                      child: Text(S.of(context).goBackHomePage),
-                                    ),
-                            ],
-                          ),
-                        ),
-                      );
-                    }
+                      ],
+                    ),
+                  ),
+                );
+              }
 
-                    return Padding(
-                      padding: const EdgeInsets.symmetric(
-                        horizontal: 15.0,
-                        vertical: 0.0,
-                      ),
-                      child: PostView(
-                        item: snapshot.data,
-                      ),
-                    );
-                }
-              },
-            ),
-          ),
-        ],
+              return Padding(
+                padding: const EdgeInsets.symmetric(
+                  horizontal: 15.0,
+                  vertical: 0.0,
+                ),
+                child: PostView(
+                  item: snapshot.data,
+                  scrollController: _scrollController,
+                ),
+              );
+          }
+        },
       ),
     );
   }
@@ -145,12 +141,17 @@ class _PostScreenState extends State<PostScreen> with AppBarMixin {
 
 class PostView extends StatelessWidget {
   final Blog? item;
+  final ScrollController? scrollController;
 
-  const PostView({this.item});
+  const PostView({
+    this.item,
+    this.scrollController,
+  });
 
   @override
   Widget build(BuildContext context) {
     return SingleChildScrollView(
+      controller: scrollController,
       padding: const EdgeInsets.only(bottom: 100),
       child: HtmlWidget(
         item!.content,
diff --git a/lib/screens/products/filter_mixin/widget_extension.dart b/lib/screens/products/filter_mixin/widget_extension.dart
index 1208f19..439c12a 100644
--- a/lib/screens/products/filter_mixin/widget_extension.dart
+++ b/lib/screens/products/filter_mixin/widget_extension.dart
@@ -4,10 +4,19 @@ extension ProductsFilterMixinWidgetExtension on ProductsFilterMixin {
   Widget renderFilters(BuildContext context) {
     return Row(
       children: [
-        _renderFilterTitle(context),
-        const Spacer(),
+        Expanded(
+          child: _renderFilterTitle(context),
+        ),
         const SizedBox(width: 5),
-        const VerticalDivider(width: 15, indent: 8, endIndent: 8),
+        const SizedBox(
+          height: 44,
+          child: VerticalDivider(
+            width: 15,
+            indent: 8,
+            endIndent: 8,
+            color: Colors.black,
+          ),
+        ),
         const SizedBox(width: 5),
         CupertinoButton(
           padding: EdgeInsets.zero,
@@ -27,9 +36,7 @@ extension ProductsFilterMixinWidgetExtension on ProductsFilterMixin {
             builder: (context) => Stack(
               children: [
                 GestureDetector(
-                  onTap: () {
-                    Navigator.of(context).pop();
-                  },
+                  onTap: Navigator.of(context).pop,
                   child: Container(color: Colors.transparent),
                 ),
                 DraggableScrollableSheet(
@@ -88,37 +95,41 @@ extension ProductsFilterMixinWidgetExtension on ProductsFilterMixin {
     var attributeTerms = getAttributeTerm(showName: true);
     var attributeList =
         attributeTerms.isNotEmpty ? attributeTerms.split(',') : [];
-    return Row(
-      children: [
-        _renderFilterSortByTag(context),
-        const SizedBox(width: 5),
-        if (attributeList.isNotEmpty)
-          for (int i = 0; i < attributeList.length; i++)
+    return SingleChildScrollView(
+      scrollDirection: Axis.horizontal,
+      child: Row(
+        mainAxisSize: MainAxisSize.min,
+        children: [
+          _renderFilterSortByTag(context),
+          const SizedBox(width: 5),
+          if (attributeList.isNotEmpty)
+            for (int i = 0; i < attributeList.length; i++)
+              FilterLabel(
+                label: attributeList[i].toString(),
+                onTap: () {
+                  resetFilter();
+                  onFilter();
+                },
+              ),
+          if (tagName.isNotEmpty)
             FilterLabel(
-              label: attributeList[i].toString(),
+              label: tagName.capitalize(),
               onTap: () {
-                resetFilter();
-                onFilter();
+                resetTag();
+                onFilter(tagId: '');
               },
             ),
-        if (tagName.isNotEmpty)
-          FilterLabel(
-            label: tagName.capitalize(),
-            onTap: () {
-              resetTag();
-              onFilter(tagId: '');
-            },
-          ),
-        if (minPrice != null && maxPrice != null && maxPrice != 0)
-          FilterLabel(
-            onTap: () {
-              resetPrice();
-              onFilter(minPrice: 0.0, maxPrice: 0.0);
-            },
-            label:
-                '${minPrice?.toStringAsFixed(0) ?? ''} - ${maxPrice?.toStringAsFixed(0) ?? ''}',
-          ),
-      ],
+          if (minPrice != null && maxPrice != null && maxPrice != 0)
+            FilterLabel(
+              onTap: () {
+                resetPrice();
+                onFilter(minPrice: 0.0, maxPrice: 0.0);
+              },
+              label:
+                  '${minPrice?.toStringAsFixed(0) ?? ''} - ${maxPrice?.toStringAsFixed(0) ?? ''}',
+            ),
+        ],
+      ),
     );
   }
 
@@ -145,27 +156,28 @@ extension ProductsFilterMixinWidgetExtension on ProductsFilterMixin {
                     color: Theme.of(context).primaryColor,
                   ),
           ),
-        if (filterSortBy.displayOrderBy != null &&
-            filterSortBy.orderType != null)
+        if (filterSortBy.displayOrderBy != null)
           FilterLabel(
             label: filterSortBy.displayOrderBy!,
-            icon: filterSortBy.orderType!.isAsc
-                ? Icon(
-                    CupertinoIcons.sort_up,
-                    size: 20,
-                    color: Theme.of(context)
-                        .colorScheme
-                        .secondary
-                        .withOpacity(0.6),
-                  )
-                : Icon(
-                    CupertinoIcons.sort_down,
-                    size: 20,
-                    color: Theme.of(context)
-                        .colorScheme
-                        .secondary
-                        .withOpacity(0.6),
-                  ),
+            icon: filterSortBy.orderType == null
+                ? null
+                : (filterSortBy.orderType!.isAsc
+                    ? Icon(
+                        CupertinoIcons.sort_up,
+                        size: 20,
+                        color: Theme.of(context)
+                            .colorScheme
+                            .secondary
+                            .withOpacity(0.6),
+                      )
+                    : Icon(
+                        CupertinoIcons.sort_down,
+                        size: 20,
+                        color: Theme.of(context)
+                            .colorScheme
+                            .secondary
+                            .withOpacity(0.6),
+                      )),
             onTap: () {
               filterSortBy = filterSortBy.applyOrder(null).applyOrderBy(null);
               onFilter();
diff --git a/lib/screens/products/products_backdrop.dart b/lib/screens/products/products_backdrop.dart
index 37e0e23..c7c5a38 100644
--- a/lib/screens/products/products_backdrop.dart
+++ b/lib/screens/products/products_backdrop.dart
@@ -1,5 +1,6 @@
 import 'package:flutter/material.dart';
 
+import '../../common/tools/tools.dart';
 import '../../widgets/backdrop/backdrop.dart';
 import '../../widgets/product/product_bottom_sheet.dart';
 
@@ -16,7 +17,9 @@ class ProductBackdrop extends StatelessWidget {
       children: <Widget>[
         backdrop!,
         Align(
-          alignment: Alignment.bottomRight,
+          alignment: Tools.isRTL(context)
+              ? Alignment.bottomLeft
+              : Alignment.bottomRight,
           child: expandingBottomSheet,
         )
       ],
diff --git a/lib/screens/products/products_flatview.dart b/lib/screens/products/products_flatview.dart
index 979aa5c..5297060 100644
--- a/lib/screens/products/products_flatview.dart
+++ b/lib/screens/products/products_flatview.dart
@@ -3,11 +3,11 @@ import 'dart:async';
 import 'package:easy_debounce/easy_debounce.dart';
 import 'package:flutter/cupertino.dart';
 import 'package:flutter/material.dart';
-import 'package:flutter/rendering.dart';
 import 'package:provider/provider.dart';
 
 import '../../common/config.dart';
 import '../../common/constants.dart';
+import '../../common/tools/tools.dart';
 import '../../generated/l10n.dart';
 import '../../models/user_model.dart';
 import '../../services/service_config.dart';
@@ -19,7 +19,7 @@ import 'products_searchview.dart';
 enum MenuType { cart, wishlist, share, login }
 
 class ProductFlatView extends StatefulWidget {
-  final Widget Function(ScrollController) builder;
+  final Widget builder;
   final Widget? bottomSheet;
   final Widget? titleFilter;
   final Function? onSort;
@@ -27,6 +27,7 @@ class ProductFlatView extends StatefulWidget {
   final Function onSearch;
   final bool enableSearchHistory;
   final bool autoFocusSearch;
+  final bool hasAppBar;
 
   const ProductFlatView({
     required this.builder,
@@ -37,6 +38,7 @@ class ProductFlatView extends StatefulWidget {
     required this.onFilter,
     this.enableSearchHistory = false,
     this.autoFocusSearch = true,
+    this.hasAppBar = false,
     Key? key,
   }) : super(key: key);
 
@@ -45,62 +47,11 @@ class ProductFlatView extends StatefulWidget {
 }
 
 class _ProductFlatViewState extends State<ProductFlatView> with ProductsMixin {
-  final ScrollController controller = ScrollController();
-
   Color get labelColor => Colors.black;
 
-  bool showSticky = true;
-
   bool get isLoggedIn =>
       Provider.of<UserModel>(context, listen: false).loggedIn;
 
-  Widget _getStickyWidget() {
-    return AnimatedCrossFade(
-      duration: const Duration(milliseconds: 200),
-      crossFadeState:
-          showSticky ? CrossFadeState.showFirst : CrossFadeState.showSecond,
-      secondChild: const SizedBox(width: double.maxFinite),
-      firstChild: Container(
-        alignment: Alignment.center,
-        height: 44,
-        margin: const EdgeInsets.only(bottom: 5),
-        decoration: BoxDecoration(
-          color: Theme.of(context).backgroundColor,
-          boxShadow: const [
-            BoxShadow(
-              color: Colors.black12,
-              offset: Offset(0, 1),
-              blurRadius: 2,
-            )
-          ],
-        ),
-        padding: const EdgeInsets.symmetric(horizontal: 10),
-        child: widget.titleFilter ?? const SizedBox(),
-      ),
-    );
-  }
-
-  bool _onChangeDirection(scrollNotification) {
-    if (!controller.hasClients) return false;
-
-    /// scroll down
-    if (controller.position.userScrollDirection == ScrollDirection.reverse &&
-        controller.offset > 80 &&
-        showSticky == true) {
-      setState(() {
-        showSticky = false;
-      });
-      return true;
-    }
-
-    /// scroll up
-    if (controller.position.userScrollDirection == ScrollDirection.forward &&
-        showSticky == false) {
-      setState(() => showSticky = true);
-    }
-    return true;
-  }
-
   PopupMenuItem<String> _buildMenuItem({
     required IconData icon,
     required String label,
@@ -209,11 +160,34 @@ class _ProductFlatViewState extends State<ProductFlatView> with ProductsMixin {
         () => widget.onSearch(value));
   }
 
+  Widget _getStickyWidget() {
+    if (widget.titleFilter == null) return const SizedBox();
+
+    return Container(
+      alignment: Alignment.center,
+      height: 44,
+      margin: const EdgeInsets.only(bottom: 5),
+      decoration: BoxDecoration(
+        color: Theme.of(context).backgroundColor,
+        boxShadow: const [
+          BoxShadow(
+            color: Colors.black12,
+            offset: Offset(0, 1),
+            blurRadius: 2,
+          )
+        ],
+      ),
+      padding: const EdgeInsets.symmetric(horizontal: 10),
+      child: widget.titleFilter,
+    );
+  }
+
   @override
   Widget build(BuildContext context) {
     /// using for the Search Screen UX
     if (widget.enableSearchHistory) {
       return ProductSearchView(
+        hasAppBar: widget.hasAppBar,
         builder: widget.builder,
         onSearch: widget.onSearch,
         bottomSheet: widget.bottomSheet,
@@ -224,50 +198,59 @@ class _ProductFlatViewState extends State<ProductFlatView> with ProductsMixin {
       );
     }
 
-    return Scaffold(
-      backgroundColor: Theme.of(context).backgroundColor,
-      appBar: AppBar(
-          titleSpacing: 0,
-          backgroundColor: Theme.of(context).backgroundColor,
-          leading: Navigator.of(context).canPop()
-              ? CupertinoButton(
-                  padding: EdgeInsets.zero,
-                  child: const Icon(CupertinoIcons.back),
-                  onPressed: () => Navigator.of(context).pop(),
-                )
-              : null,
-          title: Padding(
-            padding:
-                EdgeInsets.only(left: Navigator.of(context).canPop() ? 0 : 15),
-            child: CupertinoSearchTextField(
-              onChanged: onSearch,
-              onSubmitted: onSearch,
-              placeholder: S.of(context).searchForItems,
+    return Container(
+      color: Theme.of(context).backgroundColor,
+      child: Column(
+        children: [
+          AppBar(
+              primary: !widget.hasAppBar,
+              titleSpacing: 0,
+              backgroundColor: Theme.of(context).backgroundColor,
+              leading: Navigator.of(context).canPop()
+                  ? CupertinoButton(
+                      padding: EdgeInsets.zero,
+                      child: const Icon(CupertinoIcons.back),
+                      onPressed: () => Navigator.of(context).pop(),
+                    )
+                  : null,
+              title: Padding(
+                padding: EdgeInsets.only(
+                    left: Navigator.of(context).canPop() ? 0 : 15),
+                child: CupertinoSearchTextField(
+                  onChanged: onSearch,
+                  onSubmitted: onSearch,
+                  placeholder: S.of(context).searchForItems,
+                  style: Theme.of(context).textTheme.caption,
+                ),
+              ),
+              actions: [
+                Selector<UserModel, bool>(
+                  selector: (context, provider) => provider.loggedIn,
+                  builder: (context, loggedIn, child) {
+                    return _buildMoreWidget(loggedIn);
+                  },
+                ),
+                const SizedBox(width: 4),
+              ]),
+          Expanded(
+            child: Stack(
+              children: [
+                Column(
+                  children: [
+                    _getStickyWidget(),
+                    Expanded(child: widget.builder),
+                  ],
+                ),
+                Align(
+                  alignment: Tools.isRTL(context)
+                      ? Alignment.bottomLeft
+                      : Alignment.bottomRight,
+                  child: widget.bottomSheet,
+                ),
+              ],
             ),
           ),
-          actions: [
-            Selector<UserModel, bool>(
-              selector: (context, provider) => provider.loggedIn,
-              builder: (context, loggedIn, child) {
-                return _buildMoreWidget(loggedIn);
-              },
-            ),
-            const SizedBox(width: 4),
-          ]),
-      body: Material(
-        child: Stack(
-          children: [
-            NotificationListener<ScrollNotification>(
-              onNotification: _onChangeDirection,
-              child: widget.builder(controller),
-            ),
-            _getStickyWidget(),
-            Align(
-              alignment: Alignment.bottomRight,
-              child: widget.bottomSheet,
-            )
-          ],
-        ),
+        ],
       ),
     );
   }
diff --git a/lib/screens/products/products_mixin.dart b/lib/screens/products/products_mixin.dart
index 45c15f2..ec5adbe 100644
--- a/lib/screens/products/products_mixin.dart
+++ b/lib/screens/products/products_mixin.dart
@@ -5,7 +5,7 @@ import 'package:provider/provider.dart';
 import '../../common/tools/flash.dart';
 import '../../generated/l10n.dart';
 import '../../models/product_model.dart';
-import '../../modules/firebase/dynamic_link_service.dart';
+import '../../modules/firebase/firebase_service.dart';
 import '../../services/services.dart';
 
 mixin ProductsMixin {
@@ -22,20 +22,26 @@ mixin ProductsMixin {
     var currentTagId = productModel.tagId;
     var url;
     if (currentCategoryId.isValid) {
-      url = await DynamicLinkService()
-          .generateProductCategoryUrl(currentCategoryId);
+      url = await FirebaseServices()
+          .dynamicLinks
+          ?.generateProductCategoryUrl(currentCategoryId);
     } else if (currentTagId != null) {
-      url = await DynamicLinkService().generateProductTagUrl(currentTagId);
+      url = await FirebaseServices()
+          .dynamicLinks
+          ?.generateProductTagUrl(currentTagId);
+    }
+
+    if (url.isNotEmpty) {
+      Services().firebase.shareDynamicLinkProduct(itemUrl: url);
     } else {
-      await FlashHelper.errorMessage(
-        context,
-        message: S.of(context).failedToGenerateLink,
+      unawaited(
+        FlashHelper.errorMessage(
+          context,
+          message: S.of(context).failedToGenerateLink,
+          duration: const Duration(seconds: 2),
+        ),
       );
-      return;
     }
-    Services().firebase.shareDynamicLinkProduct(
-          itemUrl: url,
-        );
   }
 }
 
diff --git a/lib/screens/products/products_screen.dart b/lib/screens/products/products_screen.dart
index 87d592f..4c5a142 100644
--- a/lib/screens/products/products_screen.dart
+++ b/lib/screens/products/products_screen.dart
@@ -62,6 +62,8 @@ class ProductsScreenState extends State<ProductsScreen>
         ProductsFilterMixin {
   late AnimationController _controller;
 
+  bool get hasAppBar => showAppBar(widget.routeName ?? RouteList.backdrop);
+
   ProductConfig get productConfig => widget.config ?? ProductConfig.empty();
 
   @override
@@ -87,7 +89,7 @@ class ProductsScreenState extends State<ProductsScreen>
   /// Image ratio from Product Cart
   double get ratioProductImage => appModel.ratioProductImage;
 
-  num get productListItemHeight => kProductDetail.productListItemHeight;
+  double get productListItemHeight => kProductDetail.productListItemHeight;
 
   bool get enableProductBackdrop => kAdvanceConfig.enableProductBackdrop;
 
@@ -158,6 +160,7 @@ class ProductsScreenState extends State<ProductsScreen>
   }) {
     return ProductBackdrop(
       backdrop: Backdrop(
+        hasAppBar: hasAppBar,
         bgColor: productConfig.backgroundColor,
         frontLayer: layout.isListView
             ? ProductList(
@@ -250,11 +253,11 @@ class ProductsScreenState extends State<ProductsScreen>
                           categoryModel.categoryList[productModel.categoryId];
 
                       return ProductFlatView(
+                        hasAppBar: hasAppBar,
                         autoFocusSearch: widget.autoFocusSearch,
                         enableSearchHistory: widget.enableSearchHistory,
-                        builder: (controller) => layout.isListView
+                        builder: layout.isListView
                             ? ProductList(
-                                scrollController: controller,
                                 products: model.productsList,
                                 onRefresh: onRefresh,
                                 onLoadMore: onLoadMore,
@@ -265,8 +268,8 @@ class ProductsScreenState extends State<ProductsScreen>
                                 ratioProductImage: ratioProductImage,
                                 productListItemHeight: productListItemHeight,
                                 width: constraint.maxWidth,
+                                appbar: renderFilters(context),
                                 header: [
-                                  const SizedBox(height: 44),
                                   ProductCategoryMenu(
                                     imageLayout: true,
                                     enableSearchHistory:
@@ -354,7 +357,8 @@ class ProductsScreenState extends State<ProductsScreen>
                                 isEnd: model.isEnd,
                                 onLoadMore: onLoadMore,
                                 width: constraint.maxWidth),
-                        titleFilter: renderFilters(context),
+                        titleFilter:
+                            layout.isListView ? null : renderFilters(context),
                         onFilter: onFilter,
                         onSearch: (String searchText) => {
                           onFilter(
@@ -394,7 +398,7 @@ class ProductsScreenState extends State<ProductsScreen>
 
     buildMain = renderScaffold(
       routeName: widget.routeName ?? RouteList.backdrop,
-      body: buildMain,
+      child: buildMain,
     );
 
     return kIsWeb
diff --git a/lib/screens/products/products_searchview.dart b/lib/screens/products/products_searchview.dart
index e424ccc..3701676 100644
--- a/lib/screens/products/products_searchview.dart
+++ b/lib/screens/products/products_searchview.dart
@@ -1,6 +1,5 @@
 import 'package:easy_debounce/easy_debounce.dart';
 import 'package:flutter/material.dart';
-import 'package:flutter/rendering.dart';
 import 'package:inspireui/inspireui.dart' show AutoHideKeyboard;
 import 'package:provider/provider.dart';
 
@@ -15,7 +14,8 @@ import '../search/widgets/search_box.dart';
 import '../search/widgets/search_results_custom.dart';
 
 class ProductSearchView extends StatefulWidget {
-  final Widget Function(ScrollController) builder;
+  final bool hasAppBar;
+  final Widget builder;
   final Widget? bottomSheet;
   final Widget? titleFilter;
   final Function? onSort;
@@ -33,6 +33,7 @@ class ProductSearchView extends StatefulWidget {
     required this.onFilter,
     this.enableSearchHistory = false,
     this.autoFocusSearch = true,
+    this.hasAppBar = false,
     Key? key,
   }) : super(key: key);
 
@@ -45,8 +46,6 @@ class _ProductSearchViewState extends State<ProductSearchView>
   @override
   bool get wantKeepAlive => true;
 
-  final ScrollController controller = ScrollController();
-
   final _searchFieldNode = FocusNode();
   final _searchFieldController = TextEditingController();
 
@@ -63,11 +62,13 @@ class _ProductSearchViewState extends State<ProductSearchView>
       <String>[];
 
   void _onFocusChange() {
-    if (_searchKeyword.isEmpty && !_searchFieldNode.hasFocus) {
-      _showResult = false;
-    } else {
-      _showResult = !_searchFieldNode.hasFocus;
-    }
+    setState(() {
+      if (_searchKeyword.isEmpty && !_searchFieldNode.hasFocus) {
+        _showResult = false;
+      } else {
+        _showResult = !_searchFieldNode.hasFocus;
+      }
+    });
 
     // Delayed keyboard hide and show
     // Future.delayed(const Duration(milliseconds: 120), () {
@@ -115,56 +116,9 @@ class _ProductSearchViewState extends State<ProductSearchView>
 
   Color get labelColor => Colors.black;
 
-  bool showSticky = true;
-
   bool get isLoggedIn =>
       Provider.of<UserModel>(context, listen: false).loggedIn;
 
-  Widget _getStickyWidget() {
-    return AnimatedCrossFade(
-      duration: const Duration(milliseconds: 200),
-      crossFadeState:
-          showSticky ? CrossFadeState.showFirst : CrossFadeState.showSecond,
-      secondChild: const SizedBox(width: double.maxFinite),
-      firstChild: Container(
-        alignment: Alignment.center,
-        height: 44,
-        margin: const EdgeInsets.only(bottom: 5),
-        decoration: BoxDecoration(
-          color: Theme.of(context).backgroundColor,
-          boxShadow: const [
-            BoxShadow(
-              color: Colors.black12,
-              offset: Offset(0, 1),
-              blurRadius: 2,
-            )
-          ],
-        ),
-        padding: const EdgeInsets.symmetric(horizontal: 10),
-        child: widget.titleFilter ?? const SizedBox(),
-      ),
-    );
-  }
-
-  bool _onChangeDirection(scrollNotification) {
-    /// scroll down
-    if (controller.position.userScrollDirection == ScrollDirection.reverse &&
-        controller.offset > 80 &&
-        showSticky == true) {
-      setState(() {
-        showSticky = false;
-      });
-      return true;
-    }
-
-    /// scroll up
-    if (controller.position.userScrollDirection == ScrollDirection.forward &&
-        showSticky == false) {
-      setState(() => showSticky = true);
-    }
-    return true;
-  }
-
   void onSearch(String value) {
     EasyDebounce.debounce('searchCategory', const Duration(milliseconds: 200),
         () => widget.onSearch(value));
@@ -174,11 +128,7 @@ class _ProductSearchViewState extends State<ProductSearchView>
     return Material(
       child: Stack(
         children: [
-          NotificationListener<ScrollNotification>(
-            onNotification: _onChangeDirection,
-            child: widget.builder(controller),
-          ),
-          _getStickyWidget(),
+          widget.builder,
           Align(
             alignment: Alignment.bottomRight,
             child: widget.bottomSheet,
@@ -195,12 +145,13 @@ class _ProductSearchViewState extends State<ProductSearchView>
     _suggestSearch =
         Provider.of<AppModel>(context).appConfig!.searchSuggestion ?? [''];
 
-    return Scaffold(
-      backgroundColor: Theme.of(context).backgroundColor,
-      resizeToAvoidBottomInset: false,
-      // appBar: _renderAppbar(screenSize),
-      body: SafeArea(
+    return Container(
+      color: Theme.of(context).backgroundColor,
+      child: SafeArea(
+        top: !widget.hasAppBar,
         bottom: false,
+        left: false,
+        right: false,
         child: Column(
           crossAxisAlignment: CrossAxisAlignment.start,
           children: <Widget>[
@@ -261,37 +212,6 @@ class _ProductSearchViewState extends State<ProductSearchView>
     );
   }
 
-  // Widget _renderHeader() {
-  //   final screenSize = MediaQuery.of(context).size;
-  //   Widget headerContent = const SizedBox(height: 10.0);
-  //   headerContent = AnimatedContainer(
-  //     height: isVisibleSearch ? 0.1 : 58,
-  //     padding: const EdgeInsets.only(
-  //       left: 10,
-  //       top: 10,
-  //       bottom: 10,
-  //     ),
-  //     duration: const Duration(milliseconds: 150),
-  //     curve: Curves.easeInOut,
-  //     child: Row(
-  //       mainAxisSize: MainAxisSize.max,
-  //       children: <Widget>[
-  //         Text(
-  //           S.of(context).search,
-  //           style: Theme.of(context).textTheme.headline5!.copyWith(
-  //                 fontWeight: FontWeight.w700,
-  //               ),
-  //         ),
-  //       ],
-  //     ),
-  //   );
-  //
-  //   return SizedBox(
-  //     width: screenSize.width / (2 / (screenSize.height / screenSize.width)),
-  //     child: headerContent,
-  //   );
-  // }
-
   Widget _buildRecentSearch() {
     return RecentSearchesCustom(onTap: _onSubmit);
   }
diff --git a/lib/screens/products/widgets/category_menu.dart b/lib/screens/products/widgets/category_menu.dart
index 9836fa4..8400e3e 100644
--- a/lib/screens/products/widgets/category_menu.dart
+++ b/lib/screens/products/widgets/category_menu.dart
@@ -6,7 +6,7 @@ import '../../../generated/l10n.dart';
 import '../../../models/index.dart';
 import 'item_category.dart';
 
-class ProductCategoryMenu extends StatelessWidget {
+class ProductCategoryMenu extends StatefulWidget {
   final bool enableSearchHistory;
   final bool imageLayout;
   final String? newCategoryId;
@@ -20,103 +20,82 @@ class ProductCategoryMenu extends StatelessWidget {
     this.onTap,
   });
 
+  @override
+  StateProductCategoryMenu createState() => StateProductCategoryMenu();
+}
+
+class StateProductCategoryMenu extends State<ProductCategoryMenu> {
   bool get categoryImageMenu => kAdvanceConfig.categoryImageMenu;
 
+  Widget renderListCategories(List<Category> categories) {
+    var categoryMenu = categoryImageMenu;
+
+    return Container(
+      padding: const EdgeInsets.symmetric(vertical: 5),
+      color: Theme.of(context).backgroundColor,
+      constraints: const BoxConstraints(minHeight: 50),
+      child: Center(
+        child: SingleChildScrollView(
+          scrollDirection: Axis.horizontal,
+          child: Row(
+            crossAxisAlignment: CrossAxisAlignment.start,
+            children: List.generate(
+              categories.length,
+              (index) {
+                var category = categories[index];
+                return ItemCategory(
+                  categoryId: category.id,
+                  categoryName: category.name!,
+                  categoryImage: categoryMenu && widget.imageLayout
+                      ? category.image
+                      : null,
+                  newCategoryId: widget.newCategoryId,
+                  onTap: widget.onTap,
+                );
+              },
+            ),
+          ),
+        ),
+      ),
+    );
+  }
+
   @override
   Widget build(BuildContext context) {
-    if (enableSearchHistory) {
-      return const SizedBox();
+    if (widget.enableSearchHistory) {
+      return const SizedBox(width: double.infinity);
     }
 
-    final categoryModel = Provider.of<CategoryModel>(context);
+    return Consumer<CategoryModel>(builder: (context, categoryModel, child) {
+      var parentCategoryId = widget.newCategoryId;
 
-    var parentCategoryId = newCategoryId;
-    if (categoryModel.categories != null &&
-        categoryModel.categories!.isNotEmpty) {
       parentCategoryId =
           getParentCategories(categoryModel.categories, parentCategoryId) ??
               parentCategoryId;
-
-      var parentImage =
-          categoryModel.categoryList[parentCategoryId.toString()]?.image ?? '';
+      var parentCategory =
+          categoryModel.categoryList[parentCategoryId.toString()] ??
+              Category(subCategories: [], id: parentCategoryId);
+      parentCategory.name = S.of(context).seeAll;
       final listSubCategory =
           getSubCategories(categoryModel.categories, parentCategoryId)!;
-
+      if (categoryModel.isLoading) {
+        return Center(child: kLoadingWidget(context));
+      }
       if (listSubCategory.length < 2) {
-        return const SizedBox();
+        return const SizedBox(width: double.infinity);
       }
-
-      return ListenableProvider.value(
-        value: categoryModel,
-        child: Consumer<CategoryModel>(builder: (context, value, child) {
-          final listSubCategory =
-              getSubCategories(categoryModel.categories, parentCategoryId)!;
-
-          if (value.isLoading) {
-            return Center(child: kLoadingWidget(context));
-          }
-
-          if (value.categories != null) {
-            var renderListCategory = <Widget>[];
-            var categoryMenu = categoryImageMenu;
-
-            renderListCategory.add(
-              ItemCategory(
-                categoryId: parentCategoryId,
-                categoryName: S.of(context).seeAll,
-                categoryImage:
-                    categoryMenu && parentImage.isNotEmpty && imageLayout
-                        ? parentImage
-                        : null,
-                newCategoryId: newCategoryId,
-                onTap: onTap,
-              ),
-            );
-
-            renderListCategory.addAll(
-              [
-                for (var category in listSubCategory)
-                  ItemCategory(
-                    categoryId: category.id,
-                    categoryName: category.name!,
-                    categoryImage:
-                        categoryMenu && imageLayout ? category.image : null,
-                    newCategoryId: newCategoryId,
-                    onTap: onTap,
-                  ),
-              ],
-            );
-
-            return Container(
-              padding: const EdgeInsets.symmetric(vertical: 5),
-              color: Theme.of(context).backgroundColor,
-              constraints: const BoxConstraints(minHeight: 50),
-              child: Center(
-                child: SingleChildScrollView(
-                  scrollDirection: Axis.horizontal,
-                  child: Row(
-                    crossAxisAlignment: CrossAxisAlignment.start,
-                    children: renderListCategory,
-                  ),
-                ),
-              ),
-            );
-          }
-
-          return const SizedBox();
-        }),
-      );
-    }
-    return const SizedBox();
+      listSubCategory.insert(0, parentCategory);
+      return renderListCategories(listSubCategory);
+    });
   }
 
-  String? getParentCategories(categories, id) {
-    for (var item in categories) {
+  String? getParentCategories(List<Category>? categories, id) {
+    for (var item in (categories ?? <Category>[])) {
       if (item.id == id) {
-        return (item.parent == null || item.parent == '0') ? null : item.parent;
+        return (item.parent == null || item.isRoot) ? null : item.parent;
       }
     }
-    return '0';
+    return null;
   }
 
   List<Category>? getSubCategories(categories, id) {
diff --git a/lib/screens/search/widgets/search_box.dart b/lib/screens/search/widgets/search_box.dart
index 1a77f94..dd963b5 100644
--- a/lib/screens/search/widgets/search_box.dart
+++ b/lib/screens/search/widgets/search_box.dart
@@ -84,7 +84,7 @@ class _SearchBoxState extends State<SearchBox> {
 
   @override
   Widget build(BuildContext context) {
-    var canPop = Navigator.of(context).canPop();
+    var canPop = Navigator.of(context).canPop() && widget.showCancelButton;
 
     return SizedBox(
       width: widget.width,
diff --git a/lib/screens/search/widgets/search_widget.dart b/lib/screens/search/widgets/search_widget.dart
index f8586fe..6ab3e6d 100644
--- a/lib/screens/search/widgets/search_widget.dart
+++ b/lib/screens/search/widgets/search_widget.dart
@@ -111,12 +111,12 @@ class StateSearchScreen extends State<SearchWidget>
     return Scaffold(
       backgroundColor: Theme.of(context).backgroundColor,
       resizeToAvoidBottomInset: false,
-      appBar: _renderAppbar(screenSize),
       body: SafeArea(
         bottom: false,
         child: Column(
           crossAxisAlignment: CrossAxisAlignment.start,
           children: <Widget>[
+            _renderAppbar(screenSize),
             _renderHeader(),
             SearchBox(
               // width: widthSearchBox,
@@ -186,7 +186,7 @@ class StateSearchScreen extends State<SearchWidget>
     );
   }
 
-  PreferredSizeWidget? _renderAppbar(Size screenSize) {
+  Widget _renderAppbar(Size screenSize) {
     if (widget.isModal) {
       return AppBar(
         elevation: 0.1,
@@ -213,7 +213,7 @@ class StateSearchScreen extends State<SearchWidget>
     if (showAppBar(RouteList.search)) {
       return appBarWidget;
     }
-    return null;
+    return const SizedBox();
   }
 
   Widget _renderHeader() {
diff --git a/lib/screens/settings/currencies_screen.dart b/lib/screens/settings/currencies_screen.dart
index 2579656..2473d30 100644
--- a/lib/screens/settings/currencies_screen.dart
+++ b/lib/screens/settings/currencies_screen.dart
@@ -30,7 +30,7 @@ class _CurrenciesScreenState extends BaseScreen<CurrenciesScreen>
     final currencies = kAdvanceConfig.currencies;
     return renderScaffold(
       routeName: RouteList.currencies,
-      body: Scaffold(
+      child: Scaffold(
         appBar: AppBar(
           title: Text(
             S.of(context).currencies,
diff --git a/lib/screens/settings/language_screen.dart b/lib/screens/settings/language_screen.dart
index 3473a8f..05387a1 100644
--- a/lib/screens/settings/language_screen.dart
+++ b/lib/screens/settings/language_screen.dart
@@ -89,44 +89,42 @@ class _LanguageScreenState extends State<LanguageScreen> with AppBarMixin {
 
     return renderScaffold(
       routeName: RouteList.language,
-      body: Scaffold(
-        backgroundColor: Theme.of(context).backgroundColor,
-        appBar: AppBar(
-          title: Text(
-            S.of(context).language,
-            style: const TextStyle(color: Colors.white),
-          ),
-          backgroundColor: Theme.of(context).primaryColor,
-          leading: isUpdating
-              ? const Padding(
-                  padding: EdgeInsets.all(16.0),
-                  child: SizedBox.square(
-                    dimension: 24.0,
-                    child: CircularProgressIndicator(
-                      color: Colors.white,
-                      strokeWidth: 2.0,
-                    ),
-                  ),
-                )
-              : Center(
-                  child: GestureDetector(
-                    onTap: () => Navigator.pop(context),
-                    child: const Icon(
-                      Icons.arrow_back_ios,
-                      color: Colors.white,
-                    ),
-                  ),
-                ),
+      secondAppBar: AppBar(
+        title: Text(
+          S.of(context).language,
+          style: const TextStyle(color: Colors.white),
         ),
-        body: SingleChildScrollView(
-          child: Column(
-            children: [
-              ...list,
-              SizedBox(height: MediaQuery.of(context).padding.bottom + 32),
-            ],
+        backgroundColor: Theme.of(context).primaryColor,
+        leading: isUpdating
+            ? const Padding(
+          padding: EdgeInsets.all(16.0),
+          child: SizedBox.square(
+            dimension: 24.0,
+            child: CircularProgressIndicator(
+              color: Colors.white,
+              strokeWidth: 2.0,
+            ),
+          ),
+        )
+            : Center(
+          child: GestureDetector(
+            onTap: () => Navigator.pop(context),
+            child: const Icon(
+              Icons.arrow_back_ios,
+              color: Colors.white,
+            ),
           ),
         ),
       ),
+      backgroundColor: Theme.of(context).backgroundColor,
+      child: SingleChildScrollView(
+        child: Column(
+          children: [
+            ...list,
+            SizedBox(height: MediaQuery.of(context).padding.bottom + 32),
+          ],
+        ),
+      ),
     );
   }
 }
diff --git a/lib/screens/settings/notification_screen.dart b/lib/screens/settings/notification_screen.dart
index ea148b4..da00073 100644
--- a/lib/screens/settings/notification_screen.dart
+++ b/lib/screens/settings/notification_screen.dart
@@ -3,10 +3,12 @@ import 'dart:collection';
 import 'package:flutter/material.dart';
 import 'package:provider/provider.dart';
 
+import '../../common/constants.dart';
 import '../../generated/l10n.dart';
 import '../../models/index.dart' show FStoreNotificationItem;
 import '../../models/notification_model.dart';
 import '../../modules/firebase/firebase_service.dart';
+import '../../screens/common/app_bar_mixin.dart';
 import '../../widgets/common/flux_image.dart';
 
 class NotificationScreen extends StatefulWidget {
@@ -14,22 +16,23 @@ class NotificationScreen extends StatefulWidget {
   State<NotificationScreen> createState() => _NotificationScreenState();
 }
 
-class _NotificationScreenState extends State<NotificationScreen> {
+class _NotificationScreenState extends State<NotificationScreen>
+    with AppBarMixin {
   final scrollController = ScrollController();
 
   NotificationModel get notificationModel => context.read<NotificationModel>();
 
   @override
-  void dispose() {
-    scrollController.dispose();
-    super.dispose();
+  void initState() {
+    screenScrollController = scrollController;
+    super.initState();
   }
 
   @override
   Widget build(BuildContext context) {
-    return Scaffold(
-      backgroundColor: Theme.of(context).backgroundColor,
-      appBar: AppBar(
+    return renderScaffold(
+      routeName: RouteList.notify,
+      secondAppBar: AppBar(
         title: Text(
           S.of(context).listMessages,
           style: const TextStyle(color: Colors.white),
@@ -47,7 +50,8 @@ class _NotificationScreenState extends State<NotificationScreen> {
         backgroundColor: Theme.of(context).primaryColor,
         elevation: 0,
       ),
-      body: Selector<NotificationModel,
+      backgroundColor: Theme.of(context).backgroundColor,
+      child: Selector<NotificationModel,
           UnmodifiableListView<FStoreNotificationItem>>(
         selector: (context, notificationModel) =>
             UnmodifiableListView(notificationModel.listNotification.reversed),
diff --git a/lib/screens/settings/settings_screen.dart b/lib/screens/settings/settings_screen.dart
index 8e55c2d..d9c985d 100644
--- a/lib/screens/settings/settings_screen.dart
+++ b/lib/screens/settings/settings_screen.dart
@@ -13,10 +13,11 @@ import '../../app.dart';
 import '../../common/config.dart';
 import '../../common/config/configuration_utils.dart';
 import '../../common/constants.dart';
+import '../../common/events.dart';
 import '../../common/tools.dart';
 import '../../generated/l10n.dart';
 import '../../models/index.dart'
-    show AppModel, CartModel, ProductWishListModel, User, UserModel;
+    show AppModel, ProductWishListModel, User, UserModel;
 import '../../models/notification_model.dart';
 import '../../routes/flux_navigate.dart';
 import '../../services/index.dart';
@@ -58,6 +59,8 @@ class SettingScreenState extends State<SettingScreen>
         DeleteAccountMixin,
         RateMyAppMixin,
         AppBarMixin {
+  final ScrollController _scrollController = ScrollController();
+
   @override
   bool get wantKeepAlive => true;
 
@@ -79,6 +82,7 @@ class SettingScreenState extends State<SettingScreen>
   @override
   void initState() {
     super.initState();
+    screenScrollController = _scrollController;
   }
 
   /// Render the Delivery Menu.
@@ -166,7 +170,7 @@ class SettingScreenState extends State<SettingScreen>
 
     if ((ServerConfig().typeName.isMultiVendor && !isVendor) ||
         !ServerConfig().typeName.isWcfm ||
-        !kVendorConfig['DisableNativeStoreManagement']) {
+        !kVendorConfig.disableNativeStoreManagement) {
       return const SizedBox();
     }
 
@@ -854,6 +858,7 @@ class SettingScreenState extends State<SettingScreen>
     return Scaffold(
       backgroundColor: Theme.of(context).backgroundColor,
       body: CustomScrollView(
+        controller: _scrollController,
         slivers: <Widget>[
           appBar,
           SliverList(
@@ -947,7 +952,7 @@ class SettingScreenState extends State<SettingScreen>
                       },
                     ),
                   ),
-                const SizedBox(height: 100),
+                const SizedBox(height: 180),
               ],
             ),
           ),
@@ -972,18 +977,7 @@ class SettingScreenState extends State<SettingScreen>
   }
 
   void _onLogout() {
-    Provider.of<CartModel>(context, listen: false).clearAddress();
-    Provider.of<UserModel>(context, listen: false).logout();
-    if (Services().widget.isRequiredLogin) {
-      FluxNavigate.pushReplacementNamed(
-        RouteList.login,
-        forceRootNavigator: true,
-      );
-      NavigateTools.navigateToLogin(
-        context,
-        replacement: true,
-      );
-    }
+    eventBus.fire(const EventExpiredCookie());
   }
 
   void _deleteUserOnFirebase() {
diff --git a/lib/screens/subcategories/views/subcategories_screen.dart b/lib/screens/subcategories/views/subcategories_screen.dart
index bae4781..1d589c8 100644
--- a/lib/screens/subcategories/views/subcategories_screen.dart
+++ b/lib/screens/subcategories/views/subcategories_screen.dart
@@ -3,9 +3,13 @@ import 'package:flutter/material.dart';
 import 'package:inspireui/inspireui.dart';
 import 'package:provider/provider.dart';
 
-import '../../../generated/l10n.dart';
+import '../../../common/config.dart';
+import '../../../common/constants.dart';
 import '../../../models/category/list_category_model.dart';
+import '../../../models/entities/back_drop_arguments.dart';
+import '../../../routes/flux_navigate.dart';
 import '../../../widgets/common/refresh_scroll_physics.dart';
+import '../../../widgets/common/sliver_empty_data.dart';
 import '../../categories/widgets/category_column_item.dart';
 import '../models/subcategory_model.dart';
 
@@ -20,16 +24,21 @@ const _gridDelegate = SliverGridDelegateWithFixedCrossAxisCount(
 class SubcategoryArguments {
   final String parentId;
   final String? categoryName;
+  final int level;
 
   const SubcategoryArguments({
     required this.parentId,
     this.categoryName,
+    this.level = 2,
   });
 }
 
 class SubcategoryScreen extends StatefulWidget {
   final String? categoryName;
-  const SubcategoryScreen({Key? key, this.categoryName}) : super(key: key);
+  final int level;
+
+  const SubcategoryScreen({Key? key, this.categoryName, required this.level})
+      : super(key: key);
 
   @override
   State<SubcategoryScreen> createState() => _SubcategoryScreenState();
@@ -44,20 +53,23 @@ class _SubcategoryScreenState extends State<SubcategoryScreen> {
   @override
   void initState() {
     super.initState();
-    _scrollController.addListener(() {
-      if (_scrollController.position.extentBefore > 200 &&
-          _scrollController.position.extentAfter < 500) {
-        _listSubcategoryModel.getData();
-      }
-    });
+    _scrollController.addListener(_onScroll);
   }
 
   @override
   void dispose() {
+    _scrollController.removeListener(_onScroll);
     _scrollController.dispose();
     super.dispose();
   }
 
+  void _onScroll() {
+    if (_scrollController.position.extentBefore > 200 &&
+        _scrollController.position.extentAfter < 500) {
+      _listSubcategoryModel.getData();
+    }
+  }
+
   @override
   Widget build(BuildContext context) {
     return Consumer<ListCategoryModel>(
@@ -96,18 +108,43 @@ class _SubcategoryScreenState extends State<SubcategoryScreen> {
                 sliver: Consumer<ListCategoryModel>(
                   builder: (context, listSubcategoryModel, child) {
                     final listSubcategory = listSubcategoryModel.data;
-                    if (listSubcategory == null) {
+                    if (listSubcategoryModel.isFirstLoad) {
                       return _buildLoading();
                     }
 
                     if (listSubcategory.isEmpty) {
-                      return _buildEmptyData();
+                      return const SliverEmptyData();
                     }
 
                     return SliverGrid(
                       delegate: SliverChildBuilderDelegate(
                         (context, index) {
-                          return CategoryColumnItem(listSubcategory[index]);
+                          final category = listSubcategory[index];
+                          return GestureDetector(
+                            onTap: () {
+                              if ((category.hasChildren ?? false) &&
+                                  widget.level <
+                                      kAdvanceConfig.categoryConfig.deepLevel) {
+                                FluxNavigate.pushNamed(
+                                  RouteList.subCategories,
+                                  arguments: SubcategoryArguments(
+                                    parentId: category.id!.toString(),
+                                    categoryName: category.name,
+                                    level: widget.level + 1,
+                                  ),
+                                );
+                                return;
+                              }
+                              FluxNavigate.pushNamed(
+                                RouteList.backdrop,
+                                arguments: BackDropArguments(
+                                  cateId: category.id,
+                                  cateName: category.name,
+                                ),
+                              );
+                            },
+                            child: CategoryColumnItem(category),
+                          );
                         },
                         childCount: listSubcategory.length,
                       ),
@@ -155,12 +192,4 @@ class _SubcategoryScreenState extends State<SubcategoryScreen> {
       gridDelegate: _gridDelegate,
     );
   }
-
-  Widget _buildEmptyData() {
-    return SliverFillRemaining(
-      child: Center(
-        child: Text(S.of(context).noData),
-      ),
-    );
-  }
 }
diff --git a/lib/screens/users/registration_screen.dart b/lib/screens/users/registration_screen.dart
index 426f5f3..6cb44e2 100644
--- a/lib/screens/users/registration_screen.dart
+++ b/lib/screens/users/registration_screen.dart
@@ -52,7 +52,7 @@ class _RegistrationScreenState extends State<RegistrationScreen> {
     final model = Provider.of<UserModel>(context, listen: false);
 
     /// Show VendorOnBoarding.
-    if (kVendorConfig['VendorRegister'] == true &&
+    if (kVendorConfig.vendorRegister &&
         Provider.of<AppModel>(context, listen: false).isMultivendor &&
         user.isVender) {
       Navigator.of(context).pushReplacement(
@@ -128,9 +128,10 @@ class _RegistrationScreenState extends State<RegistrationScreen> {
     if (!mounted) {
       return;
     }
-    FlashHelper.errorMessage(
+    FlashHelper.message(
       context,
       message: text,
+      isError: isError,
     );
   }
 
@@ -289,7 +290,7 @@ class _RegistrationScreenState extends State<RegistrationScreen> {
                               ),
                             ),
                             const SizedBox(height: 20.0),
-                            if (kVendorConfig['VendorRegister'] == true &&
+                            if (kVendorConfig.vendorRegister &&
                                 (appModel.isMultivendor ||
                                     ServerConfig().isListeoType))
                               Row(
diff --git a/lib/screens/wishlist/empty_wishlist.dart b/lib/screens/wishlist/empty_wishlist.dart
index 48d915f..5a3a4be 100644
--- a/lib/screens/wishlist/empty_wishlist.dart
+++ b/lib/screens/wishlist/empty_wishlist.dart
@@ -126,7 +126,7 @@ class WishlistItem extends StatelessWidget {
                             SizedBox(
                               width: constraints.maxWidth * 0.25,
                               height: constraints.maxWidth * 0.3,
-                              child: ImageTools.image(
+                              child: ImageResize(
                                   url: product.imageFeature,
                                   size: kSize.medium),
                             ),
diff --git a/lib/screens/wishlist/product_wishlist_screen.dart b/lib/screens/wishlist/product_wishlist_screen.dart
index eb24f85..0348381 100644
--- a/lib/screens/wishlist/product_wishlist_screen.dart
+++ b/lib/screens/wishlist/product_wishlist_screen.dart
@@ -17,110 +17,104 @@ class ProductWishListScreen extends StatefulWidget {
 }
 
 class _WishListState extends State<ProductWishListScreen> with AppBarMixin {
+  final ScrollController _scrollController = ScrollController();
+
+  @override
+  void initState() {
+    super.initState();
+    screenScrollController = _scrollController;
+  }
+
   @override
   Widget build(BuildContext context) {
-    return Stack(
-      children: [
-        renderScaffold(
-          backgroundColor: Theme.of(context).backgroundColor,
-          routeName: RouteList.wishlist,
-          body: Column(
-            children: [
-              AppBar(
-                systemOverlayStyle: SystemUiOverlayStyle.light,
-                elevation: 0.5,
-                backgroundColor: Theme.of(context).backgroundColor,
-                title: Text(
-                  S.of(context).myWishList,
-                  style: Theme.of(context)
-                      .textTheme
-                      .headline5
-                      ?.copyWith(fontWeight: FontWeight.w700),
+    return renderScaffold(
+      backgroundColor: Theme.of(context).backgroundColor,
+      routeName: RouteList.wishlist,
+      secondAppBar: AppBar(
+        systemOverlayStyle: SystemUiOverlayStyle.light,
+        elevation: 0.5,
+        backgroundColor: Theme.of(context).backgroundColor,
+        title: Text(
+          S.of(context).myWishList,
+          style: Theme.of(context)
+              .textTheme
+              .headline5
+              ?.copyWith(fontWeight: FontWeight.w700),
+        ),
+      ),
+      child: ListenableProvider.value(
+        value: Provider.of<ProductWishListModel>(context, listen: false),
+        child: Consumer<ProductWishListModel>(
+          builder: (context, model, child) {
+            if (model.products.isEmpty) {
+              return EmptyWishlist(
+                onShowHome: () => NavigateTools.navigateHome(context),
+                onSearchForItem: () => NavigateTools.navigateToRootTab(
+                  context,
+                  RouteList.search,
                 ),
-              ),
-              Expanded(
-                child: ListenableProvider.value(
-                  value:
-                      Provider.of<ProductWishListModel>(context, listen: false),
-                  child: Consumer<ProductWishListModel>(
-                    builder: (context, model, child) {
-                      if (model.products.isEmpty) {
-                        return EmptyWishlist(
-                          onShowHome: () => NavigateTools.navigateHome(context),
-                          onSearchForItem: () =>
-                              NavigateTools.navigateToRootTab(
-                            context,
-                            RouteList.search,
-                          ),
-                        );
-                      } else {
-                        return Column(
-                          crossAxisAlignment: CrossAxisAlignment.start,
-                          children: [
-                            Padding(
-                              padding: const EdgeInsets.symmetric(
-                                vertical: 15,
-                                horizontal: 15,
-                              ),
-                              child: Text(
-                                '${model.products.length} ${S.of(context).items}',
-                                style: const TextStyle(
-                                  fontSize: 14,
-                                  color: kGrey400,
-                                ),
-                              ),
-                            ),
-                            const Divider(height: 1, color: kGrey200),
-                            const SizedBox(height: 15),
-                            Expanded(
-                              child: ListView.builder(
-                                itemCount: model.products.length,
-                                itemBuilder: (context, index) {
-                                  return WishlistItem(
-                                    product: model.products[index],
-                                    onRemove: () {
-                                      Provider.of<ProductWishListModel>(context,
-                                              listen: false)
-                                          .removeToWishlist(
-                                              model.products[index]);
-                                    },
-                                    onAddToCart: () {
-                                      if (model.products[index].isPurchased &&
-                                          model.products[index]
-                                              .isDownloadable!) {
-                                        Tools.launchURL(
-                                            model.products[index].files![0]!);
-                                        return;
-                                      }
-                                      var msg = Provider.of<CartModel>(context,
-                                              listen: false)
-                                          .addProductToCart(
-                                        context: context,
-                                        product: model.products[index],
-                                        quantity: 1,
-                                      );
-                                      if (msg.isEmpty) {
-                                        msg =
-                                            '${model.products[index].name} ${S.of(context).addToCartSucessfully}';
-                                      }
-                                      Tools.showSnackBar(
-                                          ScaffoldMessenger.of(context), msg);
-                                    },
-                                  );
-                                },
-                              ),
-                            )
-                          ],
-                        );
-                      }
-                    },
+              );
+            } else {
+              return Column(
+                crossAxisAlignment: CrossAxisAlignment.start,
+                children: [
+                  Padding(
+                    padding: const EdgeInsets.symmetric(
+                      vertical: 15,
+                      horizontal: 15,
+                    ),
+                    child: Text(
+                      '${model.products.length} ${S.of(context).items}',
+                      style: const TextStyle(
+                        fontSize: 14,
+                        color: kGrey400,
+                      ),
+                    ),
                   ),
-                ),
-              ),
-            ],
-          ),
+                  const Divider(height: 1, color: kGrey200),
+                  const SizedBox(height: 15),
+                  Expanded(
+                    child: ListView.builder(
+                      controller: _scrollController,
+                      itemCount: model.products.length,
+                      itemBuilder: (context, index) {
+                        return WishlistItem(
+                          product: model.products[index],
+                          onRemove: () {
+                            Provider.of<ProductWishListModel>(context,
+                                    listen: false)
+                                .removeToWishlist(model.products[index]);
+                          },
+                          onAddToCart: () {
+                            if (model.products[index].isPurchased &&
+                                model.products[index].isDownloadable!) {
+                              Tools.launchURL(model.products[index].files![0]!);
+                              return;
+                            }
+                            var msg =
+                                Provider.of<CartModel>(context, listen: false)
+                                    .addProductToCart(
+                              context: context,
+                              product: model.products[index],
+                              quantity: 1,
+                            );
+                            if (msg.isEmpty) {
+                              msg =
+                                  '${model.products[index].name} ${S.of(context).addToCartSucessfully}';
+                            }
+                            Tools.showSnackBar(
+                                ScaffoldMessenger.of(context), msg);
+                          },
+                        );
+                      },
+                    ),
+                  )
+                ],
+              );
+            }
+          },
         ),
-      ],
+      ),
     );
   }
 }
diff --git a/lib/services/base_firebase_services.dart b/lib/services/base_firebase_services.dart
index e083340..584b2d0 100644
--- a/lib/services/base_firebase_services.dart
+++ b/lib/services/base_firebase_services.dart
@@ -32,12 +32,15 @@ class BaseFirebaseServices {
   /// verify SMS login
   dynamic getFirebaseStream() {}
 
-  Future<void> verifyPhoneNumber(
-      {phoneNumber,
-      codeAutoRetrievalTimeout,
-      codeSent,
-      required void Function(String?) verificationCompleted,
-      void Function(FirebaseErrorException error)? verificationFailed}) async {}
+  Future<void> verifyPhoneNumber({
+    phoneNumber,
+    codeAutoRetrievalTimeout,
+    codeSent,
+    required void Function(String?) verificationCompleted,
+    void Function(FirebaseErrorException error)? verificationFailed,
+    forceResendingToken,
+    Duration? timeout,
+  }) async {}
 
   /// render Chat Screen
   Widget renderListChatScreen() => const SizedBox();
diff --git a/lib/services/base_services.dart b/lib/services/base_services.dart
index b11b94f..33999ba 100644
--- a/lib/services/base_services.dart
+++ b/lib/services/base_services.dart
@@ -1,6 +1,7 @@
 import 'dart:async';
 import 'dart:convert';
 
+import 'package:http/http.dart' as http;
 import 'package:http_auth/http_auth.dart';
 
 import '../common/config.dart';
@@ -26,7 +27,21 @@ abstract class BaseServices {
   BaseServices({
     required this.domain,
     String? blogDomain,
-  }) : blogApi = BlogNewsApi(blogDomain ?? domain);
+  }) : blogApi = BlogNewsApi(
+          blogDomain ?? domain,
+          isRoot: blogDomain == null,
+        );
+
+  String get currencyCode =>
+      LocalStorageKey.currencyCode.fromLocalStorage ?? 'USD';
+
+  String get languageCode =>
+      LocalStorageKey.languageCode.fromLocalStorage ?? 'en';
+
+  // get sort key to filter products
+  String? getOrderByKey(orderBy) => null;
+
+  dynamic getOrderDirection(order) => null;
 
   Future<List<Category>?>? getCategories({lang}) async => const <Category>[];
 
@@ -202,8 +217,9 @@ abstract class BaseServices {
     }
   }
 
-  Future<Blog> getPageById(int? pageId) async {
+  Future<Blog?> getPageById(int? pageId) async {
     var response = await blogApi.getAsync('pages/$pageId?_embed');
+    if (response['code'] != null) return null;
     return Blog.fromJson(response);
   }
 
@@ -388,9 +404,10 @@ abstract class BaseServices {
 
   Future<PagingResponse<Blog>>? getBlogs(dynamic cursor) async {
     try {
-      final param = '_embed&page=${cursor ?? 1}';
+      final param =
+          '_embed&page=${cursor ?? 1}${kAdvanceConfig.alwaysRefreshBlog ? '&dummy=${DateTime.now().millisecondsSinceEpoch}' : ''}';
       final response =
-          await httpGet('${blogApi.url}/wp-json/wp/v2/posts?$param'.toUri()!);
+          await http.get('${blogApi.url}/wp-json/wp/v2/posts?$param'.toUri()!);
       if (response.statusCode != 200) {
         return const PagingResponse();
       }
@@ -439,7 +456,7 @@ abstract class BaseServices {
         };
       }
 
-      await httpPatch(
+      await http.patch(
           'https://api.razorpay.com/v1/payments/$paymentId'.toUri()!,
           headers: {
             'Authorization': 'Basic ${token.trim()}',
@@ -490,14 +507,15 @@ abstract class BaseServices {
       }
       return list;
     } catch (e, trace) {
-      printLog(trace);
+      printError(e, trace);
       return [];
     }
   }
 
   Future<Blog> getBlogById(dynamic id) async {
-    final response =
-        await httpGet('${blogApi.url}/wp-json/wp/v2/posts/$id?_embed'.toUri()!);
+    final response = await http.get(
+        '${blogApi.url}/wp-json/wp/v2/posts/$id?_embed${kAdvanceConfig.alwaysRefreshBlog ? '&dummy=${DateTime.now().millisecondsSinceEpoch}' : ''}'
+            .toUri()!);
     var body = jsonDecode(response.body);
 
     if (response.statusCode == 200) {
@@ -518,7 +536,7 @@ abstract class BaseServices {
 
   Future<PagingResponse<Category>> getSubCategories({
     String? langCode,
-    int page = 1,
+    dynamic page = 1,
     int limit = 25,
     required String? parentId,
   }) async =>
@@ -573,7 +591,7 @@ abstract class BaseServices {
         'post_id': blogId.toString(),
         'token': token,
       };
-      final dataResponse = await httpPost(
+      final dataResponse = await http.post(
           '${blogApi.url}/wp-json/api/flutter_blog/blog/comment'.toUri()!,
           body: data);
       final body = jsonDecode(dataResponse.body);
@@ -678,7 +696,7 @@ abstract class BaseServices {
       required String paymentMethodId}) async {
     try {
       final urlReq = '${kStripeConfig["serverEndpoint"]}/payment-intent';
-      final result = await httpPost(
+      final result = await http.post(
         urlReq.toUri()!,
         body: jsonEncode(
           {
@@ -719,7 +737,7 @@ abstract class BaseServices {
   }) async {
     try {
       final urlReq = '${kStripeConfig["serverEndpoint"]}/payment-intent-v2';
-      final result = await httpPost(
+      final result = await http.post(
         urlReq.toUri()!,
         body: jsonEncode(
           {
@@ -750,8 +768,7 @@ abstract class BaseServices {
 
       throw Exception('Unknown error. Please try again.');
     } catch (e, trace) {
-      printLog(e);
-      printLog(trace);
+      printError(e, trace);
       rethrow;
     }
   }
@@ -765,7 +782,7 @@ abstract class BaseServices {
   }) async {
     try {
       final urlReq = '${kStripeConfig["serverEndpoint"]}/payment-intent-v3';
-      final result = await httpPost(
+      final result = await http.post(
         urlReq.toUri()!,
         body: jsonEncode(
           {
@@ -798,8 +815,7 @@ abstract class BaseServices {
 
       throw Exception('Unknown error. Please try again.');
     } catch (e, trace) {
-      printLog(e);
-      printLog(trace);
+      printError(e, trace);
       rethrow;
     }
   }
@@ -835,7 +851,7 @@ abstract class BaseServices {
   Future<PagingResponse<Product>> getProductsByCategoryId(
     String categoryId, {
     String? langCode,
-    int page = 1,
+    dynamic page = 1,
     int limit = 25,
   }) async =>
       const PagingResponse<Product>();
diff --git a/lib/services/http_cache_manager.dart b/lib/services/http_cache_manager.dart
new file mode 100644
index 0000000..57be6b5
--- /dev/null
+++ b/lib/services/http_cache_manager.dart
@@ -0,0 +1,103 @@
+import 'dart:io';
+
+import 'package:flutter_cache_manager/flutter_cache_manager.dart'
+    hide HttpGetResponse;
+// ignore: implementation_imports
+import 'package:flutter_cache_manager/src/web/mime_converter.dart';
+import 'package:http/http.dart' as http;
+import 'package:inspireui/utils/http_client.dart';
+
+// Time keep the file without a cache-control header
+const Duration keepDuration = Duration(hours: 1);
+
+class HttpFileService extends FileService {
+  final http.Client _httpClient;
+
+  HttpFileService({http.Client? httpClient})
+      : _httpClient = httpClient ?? http.Client();
+
+  @override
+  Future<FileServiceResponse> get(String url,
+      {Map<String, String>? headers}) async {
+    final req = http.Request('GET', Uri.parse(url));
+    if (headers != null) {
+      req.headers.addAll(headers);
+    }
+    final httpResponse = await _httpClient.send(req);
+
+    return HttpGetResponse(httpResponse);
+  }
+}
+
+class HttpGetResponse implements FileServiceResponse {
+  HttpGetResponse(this._response);
+
+  final DateTime _receivedTime = DateTime.now();
+
+  final http.StreamedResponse _response;
+
+  @override
+  int get statusCode => _response.statusCode;
+
+  String? _header(String name) {
+    return _response.headers[name];
+  }
+
+  @override
+  Stream<List<int>> get content => _response.stream;
+
+  @override
+  int? get contentLength => _response.contentLength;
+
+  @override
+  DateTime get validTill {
+    var ageDuration = Duration(milliseconds: keepDuration.inMilliseconds);
+    final controlHeader = _header(HttpHeaders.cacheControlHeader);
+    if (controlHeader != null) {
+      final controlSettings = controlHeader.split(',');
+      for (final setting in controlSettings) {
+        final sanitizedSetting = setting.trim().toLowerCase();
+        if (sanitizedSetting == 'no-cache') {
+          ageDuration = const Duration();
+        }
+        if (sanitizedSetting.startsWith('max-age=')) {
+          var validSeconds = int.tryParse(sanitizedSetting.split('=')[1]) ?? 0;
+          if (validSeconds > 0) {
+            ageDuration = Duration(seconds: validSeconds);
+          }
+        }
+      }
+    }
+
+    return _receivedTime.add(ageDuration);
+  }
+
+  @override
+  String? get eTag => _header(HttpHeaders.etagHeader);
+
+  @override
+  String get fileExtension {
+    var fileExtension = '';
+    final contentTypeHeader = _header(HttpHeaders.contentTypeHeader);
+    if (contentTypeHeader != null) {
+      final contentType = ContentType.parse(contentTypeHeader);
+      fileExtension = contentType.fileExtension;
+    }
+    return fileExtension;
+  }
+}
+
+class HttpCacheManager extends CacheManager with ImageCacheManager {
+  static const key = 'libCachedImageData';
+
+  static final HttpCacheManager _instance = HttpCacheManager._();
+  factory HttpCacheManager() {
+    return _instance;
+  }
+
+  HttpCacheManager._()
+      : super(Config(
+          key,
+          fileService: HttpFileService(httpClient: HttpBase()),
+        ));
+}
diff --git a/lib/services/https.dart b/lib/services/https.dart
index 46eb82c..ded2d0d 100644
--- a/lib/services/https.dart
+++ b/lib/services/https.dart
@@ -1,9 +1,10 @@
 import 'package:flutter/foundation.dart' as foundation;
-import 'package:flutter_cache_manager/flutter_cache_manager.dart';
 import 'package:http/http.dart' as http;
-import 'package:inspireui/utils/logs.dart';
-
+import 'package:inspireui/inspireui.dart';
+// ignore: depend_on_referenced_packages
+import 'package:logger/logger.dart';
 import '../common/config.dart';
+import 'http_cache_manager.dart';
 
 const kWebProxy = '';
 const isBuilder = false;
@@ -23,14 +24,14 @@ Future<http.Response> httpCache(
   }
 
   if (refreshCache) {
-    await DefaultCacheManager().removeFile(uri.toString());
+    await HttpCacheManager().removeFile(uri.toString());
     printLog('🔴 REMOVE CACHE:$url', startTime);
   }
 
   // Enable default on FluxBuilder
   if (kAdvanceConfig.httpCache || isBuilder) {
     try {
-      var file = await DefaultCacheManager().getSingleFile(
+      var file = await HttpCacheManager().getSingleFile(
         uri.toString(),
         headers: (headers ?? {})..addAll({'Content-Encoding': 'gzip'}),
       );
@@ -45,10 +46,8 @@ Future<http.Response> httpCache(
       return http.Response('', 404);
     } catch (e) {
       // printLog(trace);
-      printLog('CACHE ISSUE: ${e.toString()}', startTime);
+      printLog('CACHE ISSUE: ${e.toString()}', startTime, Level.debug);
     }
   }
-
-  printLog('♻️ GET:$url', startTime);
-  return await http.get(uri, headers: headers);
+  return httpGet(uri, headers: headers);
 }
diff --git a/lib/services/location_service.dart b/lib/services/location_service.dart
index 1d1f5cf..a70669c 100644
--- a/lib/services/location_service.dart
+++ b/lib/services/location_service.dart
@@ -47,8 +47,8 @@ class LocationService {
               permissionGranted == PermissionStatus.grantedLimited)) {
         _canUseLocation = true;
       }
-    } catch (e) {
-      printLog(e);
+    } catch (err, trace) {
+      printError(err, trace);
     }
   }
 }
diff --git a/lib/services/paging/base_page_repository.dart b/lib/services/paging/base_page_repository.dart
index 57f47bb..11a4012 100644
--- a/lib/services/paging/base_page_repository.dart
+++ b/lib/services/paging/base_page_repository.dart
@@ -42,4 +42,6 @@ abstract class BasePageRepository<T> {
   }
 
 // T parseJson(Map<String, dynamic> json);
+
+  Future<void> cancelCompleter() async{}
 }
diff --git a/lib/services/paging/paging_repository.dart b/lib/services/paging/paging_repository.dart
index e37ec2f..c7f50cb 100644
--- a/lib/services/paging/paging_repository.dart
+++ b/lib/services/paging/paging_repository.dart
@@ -1,18 +1,24 @@
 import 'dart:async';
 
+import 'package:async/async.dart';
+
 import '../base_services.dart';
 import 'base_page_repository.dart';
 
 /// * [T] is type of the data
 abstract class PagingRepository<T> extends BasePageRepository<T?> {
   Future<PagingResponse<T>>? Function(dynamic) get requestApi;
+  CancelableCompleter<PagingResponse<T>>? _completer;
 
   @override
   Future<List<T?>?> getData() async {
     if (!hasNext) return <T>[];
-
-    final response = await requestApi(cursor)!;
-
+    _completer = CancelableCompleter();
+    _completer?.complete(requestApi(cursor)!);
+    final response = await _completer?.operation.valueOrCancellation();
+    if (_completer?.isCanceled ?? false) {
+      return [];
+    }
     // ignore: unnecessary_null_comparison
     if (response == null) return <T>[];
 
@@ -27,4 +33,9 @@ abstract class PagingRepository<T> extends BasePageRepository<T?> {
 
     return data;
   }
+
+  @override
+  Future<void> cancelCompleter() async {
+    await _completer?.operation.cancel();
+  }
 }
diff --git a/lib/services/service_config.dart b/lib/services/service_config.dart
index b04bc3d..c2c0076 100644
--- a/lib/services/service_config.dart
+++ b/lib/services/service_config.dart
@@ -1,5 +1,5 @@
 import 'package:flutter/cupertino.dart';
-import 'package:inspireui/utils/logs.dart';
+import 'package:inspireui/inspireui.dart';
 
 import '../frameworks/frameworks.dart';
 import '../models/booking/booking_model.dart';
@@ -251,8 +251,11 @@ mixin ConfigMixin {
   }
 
   /// Empty Widget feature
-  Widget getBookingLayout(
-          {required Product product, Function(BookingModel)? onCallBack}) =>
+  Widget getBookingLayout({
+    required Product product,
+    Function(BookingModel)? onCallBack,
+    bool wrapSliver = true,
+  }) =>
       const SliverToBoxAdapter(
         child: SizedBox(),
       );
diff --git a/lib/services/wallet/index.dart b/lib/services/wallet/index.dart
index 5f78769..5a570fe 100644
--- a/lib/services/wallet/index.dart
+++ b/lib/services/wallet/index.dart
@@ -1,6 +1,6 @@
 import 'dart:convert' as convert;
 
-import 'package:inspireui/utils/logs.dart';
+import 'package:inspireui/inspireui.dart';
 import 'package:quiver/strings.dart';
 
 import '../../models/entities/paging_response.dart';
diff --git a/lib/services/wordpress/blog_service.dart b/lib/services/wordpress/blog_service.dart
index 87c9a5f..fd750c1 100644
--- a/lib/services/wordpress/blog_service.dart
+++ b/lib/services/wordpress/blog_service.dart
@@ -1,6 +1,8 @@
 import 'dart:async';
 import 'dart:convert';
 
+import 'package:http/http.dart' as http;
+
 import '../../common/config.dart';
 import '../../common/constants.dart';
 import '../../models/entities/paging_response.dart';
@@ -43,16 +45,20 @@ class BlogServices {
     }
   }
 
-  Future<Blog> getPageById(int? pageId) async {
+  Future<Blog?> getPageById(int? pageId) async {
     var response = await blogApi.getAsync('pages/$pageId?_embed');
+    if (response['code'] != null) {
+      return null; 
+    }
     return Blog.fromJson(response);
   }
 
   Future<PagingResponse<Blog>>? getBlogs(dynamic cursor) async {
     try {
-      final param = '_embed&page=$cursor';
+      final param =
+          '_embed&page=$cursor${kAdvanceConfig.alwaysRefreshBlog ? '&dummy=${DateTime.now().millisecondsSinceEpoch}' : ''}';
       final response =
-          await httpGet('${blogApi.url}/wp-json/wp/v2/posts?$param'.toUri()!);
+          await http.get('${blogApi.url}/wp-json/wp/v2/posts?$param'.toUri()!);
       if (response.statusCode != 200) {
         return const PagingResponse();
       }
diff --git a/lib/services/wordpress/blognews_api.dart b/lib/services/wordpress/blognews_api.dart
index dd68aec..c0c84fc 100644
--- a/lib/services/wordpress/blognews_api.dart
+++ b/lib/services/wordpress/blognews_api.dart
@@ -4,10 +4,11 @@ import 'dart:io' show File, HttpHeaders;
 
 import 'package:async/async.dart';
 import 'package:http/http.dart' as http;
-import 'package:inspireui/extensions.dart';
+import 'package:http/http.dart';
 import 'package:path/path.dart';
 
-import '../https.dart';
+import '../../common/constants.dart';
+
 
 // class QueryString {
 //   static Map parse(String query) {
@@ -26,8 +27,9 @@ import '../https.dart';
 
 class BlogNewsApi {
   final String url;
+  final bool isRoot; 
 
-  BlogNewsApi(this.url);
+  BlogNewsApi(this.url, {this.isRoot = true});
 
   Uri? _getOAuthURL(String requestMethod, String endpoint) {
     return '$url/wp-json/wp/v2/$endpoint'.toUri();
@@ -41,9 +43,12 @@ class BlogNewsApi {
 
   Future<dynamic> getAsync(String endPoint) async {
     final url = _getOAuthURL('GET', endPoint)!;
-
-    final response = await httpCache(url);
-
+    Response? response;
+    if (isRoot) {
+      response = await httpGet(url);
+    } else {
+      response = await http.get(url);
+    }
     if (response.statusCode == 200) {
       return json.decode(response.body);
     }
diff --git a/lib/widgets/asymmetric/asymmetric_columns.dart b/lib/widgets/asymmetric/asymmetric_columns.dart
index 9bfd65e..83efc48 100644
--- a/lib/widgets/asymmetric/asymmetric_columns.dart
+++ b/lib/widgets/asymmetric/asymmetric_columns.dart
@@ -31,7 +31,7 @@ class ProductCard extends StatelessWidget {
     final addProductToCart = Provider.of<CartModel>(context).addProductToCart;
     final currency = Provider.of<CartModel>(context).currencyCode;
     final currencyRates = Provider.of<CartModel>(context).currencyRates;
-    final imageWidget = ImageTools.image(
+    final imageWidget = ImageResize(
         url: product!.imageFeature, isResize: true, fit: BoxFit.cover);
 
     return GestureDetector(
diff --git a/lib/widgets/asymmetric/asymmetric_view.dart b/lib/widgets/asymmetric/asymmetric_view.dart
index 7095150..79db520 100644
--- a/lib/widgets/asymmetric/asymmetric_view.dart
+++ b/lib/widgets/asymmetric/asymmetric_view.dart
@@ -29,16 +29,11 @@ class AsymmetricView extends StatefulWidget {
 class _AsymmetricViewState extends State<AsymmetricView> {
   void _onLoading() async {
     if (!widget.isFetching! && !widget.isEnd!) {
-      widget.onLoadMore!();
+      widget.onLoadMore?.call();
     }
   }
 
-  List<Widget> _buildColumns(BuildContext context) {
-    final hasNoProduct = widget.products == null || widget.products!.isEmpty;
-    final products = hasNoProduct && (widget.isFetching ?? false)
-        ? [Product.empty('1'), Product.empty('2'), Product.empty('3')]
-        : widget.products;
-
+  List<Widget> _buildColumns(BuildContext context, List<Product>? products) {
     /// This will return a list of columns. It will oscillate between the two
     /// kinds of columns. Even cases of the index (0, 2, 4, etc) will be
     /// TwoProductCardColumn and the odd cases will be OneProductCardColumn.
@@ -79,7 +74,11 @@ class _AsymmetricViewState extends State<AsymmetricView> {
 
     var loadingMore = VisibilityDetector(
       key: const Key('loading_visible'),
-      onVisibilityChanged: (VisibilityInfo info) => _onLoading(),
+      onVisibilityChanged: (VisibilityInfo info) {
+        if (info.visibleFraction > 0.5) {
+          _onLoading();
+        }
+      },
       child: Center(
         child: Text(S.of(context).loading),
       ),
@@ -114,11 +113,25 @@ class _AsymmetricViewState extends State<AsymmetricView> {
 
   @override
   Widget build(BuildContext context) {
+    final hasNoProduct = widget.products == null || widget.products!.isEmpty;
+    final products = hasNoProduct && (widget.isFetching ?? false)
+        ? [Product.empty('1'), Product.empty('2'), Product.empty('3')]
+        : widget.products;
+
+    if (widget.isEnd! && (products == null || products.isEmpty)) {
+      return Center(
+        child: Text(
+          S.of(context).noProduct,
+          style: Theme.of(context).textTheme.bodyText1,
+        ),
+      );
+    }
+
     return ListView(
       scrollDirection: Axis.horizontal,
-      padding: const EdgeInsets.fromLTRB(0.0, 34.0, 16.0, 44.0),
+      padding: const EdgeInsets.fromLTRB(0.0, 4.0, 16.0, 44.0),
       physics: const AlwaysScrollableScrollPhysics(),
-      children: _buildColumns(context),
+      children: _buildColumns(context, products),
     );
   }
 }
diff --git a/lib/widgets/backdrop/backdrop.dart b/lib/widgets/backdrop/backdrop.dart
index 5bd8ddb..ebb5a8e 100644
--- a/lib/widgets/backdrop/backdrop.dart
+++ b/lib/widgets/backdrop/backdrop.dart
@@ -147,6 +147,7 @@ class Backdrop extends StatefulWidget {
   final bool showFilter;
   final bool isBlog;
   final VoidCallback? onTapShareButton;
+  final bool hasAppBar;
 
   /// This color is pick from the Horizontal Config on Home Screen
   /// use to override the Backdrop color
@@ -163,6 +164,7 @@ class Backdrop extends StatefulWidget {
     this.isBlog = false,
     this.bgColor,
     this.onTapShareButton,
+    this.hasAppBar = false,
   });
 
   @override
@@ -233,8 +235,6 @@ class _BackdropState extends State<Backdrop>
         status == AnimationStatus.forward;
   }
 
-  bool shouldShowCategory = true;
-
   void _toggleBackdropLayerVisibility() {
     // Call setState here to update layerAnimation if that's necessary
     setState(() {
@@ -354,102 +354,87 @@ class _BackdropState extends State<Backdrop>
 
   @override
   Widget build(BuildContext context) {
-    const appBarCategoryHeight = 50.0;
-
-    var appBar = AppBar(
-      backgroundColor: backgroundColor,
-      elevation: 0.0,
-      titleSpacing: 0.0,
-      bottom: ServerConfig().isListingType
-          ? null
-          : widget.appbarCategory != null
-              ? PreferredSize(
-                  preferredSize: Size(
-                    MediaQuery.of(context).size.width,
-                    shouldShowCategory ? appBarCategoryHeight : 0,
+    return Column(
+      children: [
+        if (!Layout.isDisplayDesktop(context))
+          AppBar(
+            primary: !widget.hasAppBar,
+            backgroundColor: backgroundColor,
+            elevation: 0.0,
+            titleSpacing: 0.0,
+            title: _BackdropTitle(
+                listenable: _controller.view,
+                titleColor: labelColor,
+                onPress: _toggleBackdropLayerVisibility,
+                frontTitle: widget.frontTitle,
+                backTitle: widget.backTitle,
+                visible: _frontLayerVisible),
+            leading: IconButton(
+              icon: Icon(Icons.arrow_back_ios, size: 20, color: labelColor),
+              onPressed: () {
+                if (kIsWeb) {
+                  eventBus.fire(const EventOpenCustomDrawer());
+                  // LayoutWebCustom.changeStateMenu(true);
+                }
+                Navigator.pop(context);
+              },
+            ),
+            actions: <Widget>[
+              /// Share product category by dynamic link
+              if (firebaseDynamicLinkConfig['isEnabled'] &&
+                  ServerConfig().isWooType &&
+                  !ServerConfig().isListingType &&
+                  !widget.isBlog)
+                IconButton(
+                  icon: Icon(
+                    Icons.share,
+                    size: 18.0,
+                    color: labelColor,
                   ),
-                  child: SizedBox(
-                    height: shouldShowCategory ? appBarCategoryHeight : 0,
-                    child: AnimatedOpacity(
-                      opacity: _frontLayerVisible ? 1 : 0,
-                      duration: const Duration(milliseconds: 200),
-                      child: BottomAppBar(
-                        elevation: 0.0,
-                        child: Theme(
-                          data: Theme.of(context).copyWith(
-                            backgroundColor: backgroundColor,
-                            colorScheme: Theme.of(context).colorScheme.copyWith(
-                                  secondary: labelColor,
-                                ),
-                          ),
-                          child: widget.appbarCategory!,
-                        ),
-                      ),
+                  onPressed: () => widget.onTapShareButton?.call(),
+                ),
+              if (widget.showFilter)
+                IconButton(
+                    icon: AnimatedIcon(
+                      icon: AnimatedIcons.close_menu,
+                      progress: _controller,
                     ),
+                    color: labelColor,
+                    onPressed: _toggleBackdropLayerVisibility),
+            ],
+          ),
+        if (!ServerConfig().isListingType && widget.appbarCategory != null)
+          Theme(
+            data: Theme.of(context).copyWith(
+              backgroundColor: backgroundColor,
+              colorScheme: Theme.of(context).colorScheme.copyWith(
+                    secondary: labelColor,
+                    background: backgroundColor,
                   ),
-                )
-              : null,
-      title: _BackdropTitle(
-          listenable: _controller.view,
-          titleColor: labelColor,
-          onPress: _toggleBackdropLayerVisibility,
-          frontTitle: widget.frontTitle,
-          backTitle: widget.backTitle,
-          visible: _frontLayerVisible),
-      leading: IconButton(
-        icon: Icon(Icons.arrow_back_ios, size: 20, color: labelColor),
-        onPressed: () {
-          if (kIsWeb) {
-            eventBus.fire(const EventOpenCustomDrawer());
-            // LayoutWebCustom.changeStateMenu(true);
-          }
-          Navigator.pop(context);
-        },
-      ),
-      actions: <Widget>[
-        /// Share product category by dynamic link
-        if (firebaseDynamicLinkConfig['isEnabled'] &&
-            ServerConfig().isWooType &&
-            !ServerConfig().isListingType &&
-            !widget.isBlog)
-          IconButton(
-            icon: Icon(
-              Icons.share,
-              size: 18.0,
-              color: labelColor,
             ),
-            onPressed: () => widget.onTapShareButton?.call(),
+            child: widget.appbarCategory!,
           ),
-        if (widget.showFilter)
-          IconButton(
-              icon: AnimatedIcon(
-                icon: AnimatedIcons.close_menu,
-                progress: _controller,
+        Expanded(
+          child: Row(
+            children: <Widget>[
+              Layout.isDisplayDesktop(context)
+                  ? Container(
+                      width: BackdropConstants.drawerWidth,
+                      alignment: Alignment.topCenter,
+                      padding: const EdgeInsets.only(bottom: 32),
+                      color: backgroundColor,
+                      child: widget.backLayer,
+                    )
+                  : const SizedBox(),
+              Expanded(
+                child: LayoutBuilder(
+                  builder: _buildStack,
+                ),
               ),
-              color: labelColor,
-              onPressed: _toggleBackdropLayerVisibility),
-      ],
-    );
-    return Scaffold(
-      appBar: !Layout.isDisplayDesktop(context) ? appBar : null,
-      body: Row(
-        children: <Widget>[
-          Layout.isDisplayDesktop(context)
-              ? Container(
-                  width: BackdropConstants.drawerWidth,
-                  alignment: Alignment.topCenter,
-                  padding: const EdgeInsets.only(bottom: 32),
-                  color: backgroundColor,
-                  child: widget.backLayer,
-                )
-              : const SizedBox(),
-          Expanded(
-            child: LayoutBuilder(
-              builder: _buildStack,
-            ),
+            ],
           ),
-        ],
-      ),
+        ),
+      ],
     );
   }
 }
diff --git a/lib/widgets/backdrop/backdrop_menu.dart b/lib/widgets/backdrop/backdrop_menu.dart
index 51cd328..ca4f4a1 100644
--- a/lib/widgets/backdrop/backdrop_menu.dart
+++ b/lib/widgets/backdrop/backdrop_menu.dart
@@ -336,65 +336,64 @@ class _BackdropMenuState extends State<BackdropMenu> {
                                   value.lstCurrentAttr.isEmpty
                               ? const SizedBox()
                               : Wrap(
-                                  children: List.generate(
-                                    value.lstCurrentAttr.length + 1,
-                                    (index) {
-                                      if (index ==
-                                          value.lstCurrentAttr.length) {
-                                        if (value.isLoadingMore) {
-                                          return SizedBox(
-                                            width: 70,
-                                            height: 50,
-                                            child: Center(
-                                              child: JumpingDots(
-                                                innerPadding: 2,
-                                                radius: 6,
-                                                color: Theme.of(context)
-                                                    .colorScheme
-                                                    .primary,
-                                              ),
-                                            ),
-                                          );
-                                        }
-                                        return FilterChip(
-                                          selectedColor:
-                                              Theme.of(context).primaryColor,
-                                          backgroundColor: Theme.of(context)
-                                              .primaryColorLight
-                                              .withOpacity(0.3),
-                                          label: Text(S.of(context).more),
-                                          selected: false,
-                                          onSelected: (val) {
-                                            value.getAttr(
-                                                id: value
-                                                    .lstProductAttribute![
-                                                        value.indexSelectedAttr]
-                                                    .id);
-                                          },
+                                  children: [
+                                    ...List.generate(
+                                      value.lstCurrentAttr.length,
+                                      (index) {
+                                        return Container(
+                                          margin: const EdgeInsets.symmetric(
+                                              horizontal: 5),
+                                          child: FilterChip(
+                                            selectedColor:
+                                                Theme.of(context).primaryColor,
+                                            backgroundColor: Theme.of(context)
+                                                .primaryColorLight
+                                                .withOpacity(0.3),
+                                            label: Text(value
+                                                .lstCurrentAttr[index].name!),
+                                            selected: value
+                                                .lstCurrentSelectedTerms[index],
+                                            onSelected: (val) {
+                                              value.updateAttributeSelectedItem(
+                                                  index, val);
+                                              _onFilter();
+                                            },
+                                          ),
                                         );
-                                      }
-                                      return Container(
-                                        margin: const EdgeInsets.symmetric(
-                                            horizontal: 5),
-                                        child: FilterChip(
-                                          selectedColor:
-                                              Theme.of(context).primaryColor,
-                                          backgroundColor: Theme.of(context)
-                                              .primaryColorLight
-                                              .withOpacity(0.3),
-                                          label: Text(value
-                                              .lstCurrentAttr[index].name!),
-                                          selected: value
-                                              .lstCurrentSelectedTerms[index],
-                                          onSelected: (val) {
-                                            value.updateAttributeSelectedItem(
-                                                index, val);
-                                            _onFilter();
-                                          },
+                                      },
+                                    ),
+                                    if (value.isLoadingMore)
+                                      SizedBox(
+                                        width: 70,
+                                        height: 50,
+                                        child: Center(
+                                          child: JumpingDots(
+                                            innerPadding: 2,
+                                            radius: 6,
+                                            color: Theme.of(context)
+                                                .colorScheme
+                                                .primary,
+                                          ),
                                         ),
-                                      );
-                                    },
-                                  ),
+                                      ),
+                                    if (!value.isLoadingMore && !value.isEnd)
+                                      FilterChip(
+                                        selectedColor:
+                                            Theme.of(context).primaryColor,
+                                        backgroundColor: Theme.of(context)
+                                            .primaryColorLight
+                                            .withOpacity(0.3),
+                                        label: Text(S.of(context).more),
+                                        selected: false,
+                                        onSelected: (val) {
+                                          value.getAttr(
+                                              id: value
+                                                  .lstProductAttribute![
+                                                      value.indexSelectedAttr]
+                                                  .id);
+                                        },
+                                      )
+                                  ],
                                 ),
                         ),
                 ],
diff --git a/lib/widgets/backdrop/filters/category_item.dart b/lib/widgets/backdrop/filters/category_item.dart
index f981f15..94f5ff5 100644
--- a/lib/widgets/backdrop/filters/category_item.dart
+++ b/lib/widgets/backdrop/filters/category_item.dart
@@ -23,6 +23,9 @@ class CategoryItem extends StatelessWidget {
 
   @override
   Widget build(BuildContext context) {
+    var primaryText = Theme.of(context).primaryColor;
+    var secondColor = Theme.of(context).colorScheme.secondary;
+
     return GestureDetector(
       onTap: hasChild!
           ? null
@@ -38,7 +41,9 @@ class CategoryItem extends StatelessWidget {
             Icon(
               Icons.check,
               color: isSelected && !isParent
-                  ? Theme.of(context).colorScheme.secondary
+                  ? isSelected
+                      ? primaryText
+                      : secondColor.withOpacity(0.8)
                   : Colors.transparent,
               size: 20,
             ),
@@ -47,7 +52,12 @@ class CategoryItem extends StatelessWidget {
               child: Text(
                 '${isParent ? S.of(context).seeAll : category.name}  '
                 '${category.totalProduct != null && !isParent ? '(${category.totalProduct})' : ''}',
-                style: Theme.of(context).textTheme.subtitle1,
+                style: Theme.of(context).textTheme.bodyText1!.copyWith(
+                      color: isSelected
+                          ? primaryText
+                          : secondColor.withOpacity(0.8),
+                      letterSpacing: 1.2,
+                    ),
               ),
             ),
             if (hasChild!)
diff --git a/lib/widgets/backdrop/filters/category_menu.dart b/lib/widgets/backdrop/filters/category_menu.dart
index aeb73f5..df3b2b7 100644
--- a/lib/widgets/backdrop/filters/category_menu.dart
+++ b/lib/widgets/backdrop/filters/category_menu.dart
@@ -2,6 +2,7 @@ import 'package:flutter/material.dart';
 import 'package:inspireui/widgets/expandable/expansion_widget.dart';
 import 'package:provider/provider.dart';
 
+import '../../../common/constants.dart';
 import '../../../generated/l10n.dart';
 import '../../../models/index.dart'
     show BlogModel, Category, CategoryModel, ProductModel;
@@ -24,6 +25,7 @@ class CategoryMenu extends StatefulWidget {
 
 class _CategoryTreeState extends State<CategoryMenu> {
   CategoryModel get category => Provider.of<CategoryModel>(context);
+
   String? get categoryId => Provider.of<ProductModel>(context).categoryId;
 
   String _categoryId = '0';
@@ -43,6 +45,17 @@ class _CategoryTreeState extends State<CategoryMenu> {
     return categories.where((o) => o.parent == id).toList();
   }
 
+  void onTap(Category category) {
+    final id = category.id.toString();
+    if (id == _categoryId) {
+      widget.onFilter(Category(id: kEmptyCategoryID, subCategories: []));
+      setState(() => _categoryId = kEmptyCategoryID);
+      return;
+    }
+    widget.onFilter(category);
+    setState(() => _categoryId = id);
+  }
+
   List<Widget> _getCategoryItems(
     List<Category> categories, {
     String? id,
@@ -56,10 +69,7 @@ class _CategoryTreeState extends State<CategoryMenu> {
             category,
             hasChild: hasChildren(categories, category.id),
             isSelected: category.id == _categoryId,
-            onTap: () {
-              onFilter(category);
-              setState(() => _categoryId = category.id!);
-            },
+            onTap: () => onTap(category),
             level: level,
           ),
           childList: ChildList(
@@ -69,10 +79,7 @@ class _CategoryTreeState extends State<CategoryMenu> {
                   category,
                   isParent: true,
                   isSelected: category.id == _categoryId,
-                  onTap: () {
-                    onFilter(category);
-                    setState(() => _categoryId = category.id!);
-                  },
+                  onTap: () => onTap(category),
                   level: level + 1,
                 ),
               ..._getCategoryItems(
@@ -99,10 +106,7 @@ class _CategoryTreeState extends State<CategoryMenu> {
               item,
               hasChild: hasChildren(categories, item.id),
               isSelected: item.id == categoryId,
-              onTap: () {
-                widget.onFilter(item);
-                setState(() => _categoryId = item.id!);
-              },
+              onTap: () => onTap(item),
             ),
             childList: ChildList(
               children: [
@@ -111,10 +115,7 @@ class _CategoryTreeState extends State<CategoryMenu> {
                     item,
                     isParent: true,
                     isSelected: item.id == categoryId,
-                    onTap: () {
-                      widget.onFilter(item);
-                      setState(() => _categoryId = item.id!);
-                    },
+                    onTap: () => onTap(item),
                     level: 2,
                   ),
                 ..._getCategoryItems(
diff --git a/lib/widgets/blog/blog_card_view.dart b/lib/widgets/blog/blog_card_view.dart
index 39b4373..922689d 100644
--- a/lib/widgets/blog/blog_card_view.dart
+++ b/lib/widgets/blog/blog_card_view.dart
@@ -29,7 +29,7 @@ class BlogCard extends StatelessWidget {
       onTap: onTap,
       child: ClipRRect(
         borderRadius: const BorderRadius.all(Radius.circular(10.0)),
-        child: ImageTools.image(
+        child: ImageResize(
           url: item!.imageFeature,
           width: imageWidth,
           height: height ?? imageHeight ?? width * 0.60,
diff --git a/lib/widgets/blog/blog_grid_item.dart b/lib/widgets/blog/blog_grid_item.dart
index 7f9483b..ffd3d75 100644
--- a/lib/widgets/blog/blog_grid_item.dart
+++ b/lib/widgets/blog/blog_grid_item.dart
@@ -2,7 +2,7 @@ import 'package:flutter/cupertino.dart';
 import 'package:flutter/material.dart';
 import 'package:responsive_builder/responsive_builder.dart';
 
-import '../../common/tools/adaptive_tools.dart';
+import '../../common/tools.dart';
 import '../../models/entities/blog.dart';
 import '../../modules/dynamic_layout/config/blog_config.dart';
 import '../common/flux_image.dart';
diff --git a/lib/widgets/blog/blog_list_item.dart b/lib/widgets/blog/blog_list_item.dart
index eca5e28..d6d9eb7 100644
--- a/lib/widgets/blog/blog_list_item.dart
+++ b/lib/widgets/blog/blog_list_item.dart
@@ -28,7 +28,7 @@ class BlogListItem extends StatelessWidget {
             const SizedBox(height: 20.0),
             ClipRRect(
               borderRadius: BorderRadius.circular(3.0),
-              child: ImageTools.image(
+              child: ImageResize(
                 url: blog.imageFeature,
                 width: screenWidth,
                 height: screenWidth * 0.5,
diff --git a/lib/widgets/blog/blog_share_button.dart b/lib/widgets/blog/blog_share_button.dart
index fd34c4d..fb22fc3 100644
--- a/lib/widgets/blog/blog_share_button.dart
+++ b/lib/widgets/blog/blog_share_button.dart
@@ -16,14 +16,25 @@ class ShareButton extends StatelessWidget {
   Widget build(BuildContext context) {
     return GestureDetector(
       onTap: () {
-        unawaited(
-          FlashHelper.message(
-            context,
-            message: S.of(context).generatingLink,
-            duration: const Duration(seconds: 1),
-          ),
-        );
-        Services().firebase.shareDynamicLinkProduct(itemUrl: blog.link);
+        var url = blog.link;
+        if (url.isNotEmpty) {
+          unawaited(
+            FlashHelper.message(
+              context,
+              message: S.of(context).generatingLink,
+              duration: const Duration(seconds: 1),
+            ),
+          );
+          Services().firebase.shareDynamicLinkProduct(itemUrl: url);
+        } else {
+          unawaited(
+            FlashHelper.errorMessage(
+              context,
+              message: S.of(context).failedToGenerateLink,
+              duration: const Duration(seconds: 1),
+            ),
+          );
+        }
       },
       child: Container(
         margin: const EdgeInsets.all(8.0),
diff --git a/lib/widgets/blog/detailed_blog_fullsize_image.dart b/lib/widgets/blog/detailed_blog_fullsize_image.dart
index 2cf133e..f81675f 100644
--- a/lib/widgets/blog/detailed_blog_fullsize_image.dart
+++ b/lib/widgets/blog/detailed_blog_fullsize_image.dart
@@ -50,7 +50,7 @@ class _FullImageTypeState extends State<FullImageType> with DetailedBlogMixin {
         SizedBox(
           height: MediaQuery.of(context).size.height,
           width: MediaQuery.of(context).size.width,
-          child: ImageTools.image(
+          child: ImageResize(
             url: blogData.imageFeature,
             fit: BoxFit.fitHeight,
             size: kSize.medium,
diff --git a/lib/widgets/blog/detailed_blog_half_image.dart b/lib/widgets/blog/detailed_blog_half_image.dart
index bb98930..acd9d54 100644
--- a/lib/widgets/blog/detailed_blog_half_image.dart
+++ b/lib/widgets/blog/detailed_blog_half_image.dart
@@ -21,7 +21,7 @@ class HalfImageType extends StatelessWidget with DetailedBlogMixin {
         SizedBox(
           height: MediaQuery.of(context).size.height * 0.6,
           width: MediaQuery.of(context).size.width,
-          child: ImageTools.image(
+          child: ImageResize(
             url: blogData.imageFeature,
             fit: BoxFit.cover,
             size: kSize.medium,
diff --git a/lib/widgets/blog/detailed_blog_quarter_image.dart b/lib/widgets/blog/detailed_blog_quarter_image.dart
index be92a1c..2676802 100644
--- a/lib/widgets/blog/detailed_blog_quarter_image.dart
+++ b/lib/widgets/blog/detailed_blog_quarter_image.dart
@@ -93,7 +93,7 @@ class _OneQuarterImageTypeState extends BaseScreen<OneQuarterImageType>
                                         MediaQuery.of(context).size.width - 30,
                                     child: Stack(
                                       children: <Widget>[
-                                        ImageTools.image(
+                                        ImageResize(
                                           url: blogData.imageFeature,
                                           fit: BoxFit.cover,
                                           height: MediaQuery.of(context)
diff --git a/lib/widgets/blog/detailed_blog_view.dart b/lib/widgets/blog/detailed_blog_view.dart
index 1cffccf..b252fda 100644
--- a/lib/widgets/blog/detailed_blog_view.dart
+++ b/lib/widgets/blog/detailed_blog_view.dart
@@ -36,7 +36,6 @@ class _BlogCardState extends State<BlogDetail> with DetailedBlogMixin {
     return Scaffold(
       backgroundColor: Theme.of(context).backgroundColor,
       body: CustomScrollView(
-        physics: const BouncingScrollPhysics(),
         slivers: <Widget>[
           SliverAppBar(
             backgroundColor: Theme.of(context).backgroundColor,
@@ -64,7 +63,7 @@ class _BlogCardState extends State<BlogDetail> with DetailedBlogMixin {
             expandedHeight: bannerHigh,
             stretch: true,
             flexibleSpace: FlexibleSpaceBar(
-              background: ImageTools.image(
+              background: ImageResize(
                 url: blogData.imageFeature,
                 fit: BoxFit.cover,
                 width: MediaQuery.of(context).size.width,
diff --git a/lib/widgets/cardlist/index.dart b/lib/widgets/cardlist/index.dart
index e13d0ac..8b69492 100644
--- a/lib/widgets/cardlist/index.dart
+++ b/lib/widgets/cardlist/index.dart
@@ -1,15 +1,20 @@
 import 'package:flutter/material.dart';
+import 'package:provider/provider.dart';
 
-import '../../models/index.dart' show Category;
+import '../../models/index.dart' show Category, CategoryModel;
+import '../../screens/categories/categories_screen.dart';
 import '../../services/index.dart';
+import '../common/index.dart';
 import 'menu_card.dart';
 
 class HorizonMenu extends StatefulWidget {
   static const String type = 'animation';
 
-  final List<Category>? categories;
+  final ScrollController? scrollController;
 
-  const HorizonMenu(this.categories);
+  const HorizonMenu({
+    this.scrollController,
+  });
 
   @override
   State<HorizonMenu> createState() => _StateHorizonMenu();
@@ -22,30 +27,28 @@ class _StateHorizonMenu extends State<HorizonMenu> {
     super.initState();
   }
 
-  List<Category> getCategory() {
-    final categories = widget.categories!;
-    return categories.where((item) => item.parent == '0').toList();
-  }
+  CategoryModel get categoryModel =>
+      Provider.of<CategoryModel>(context, listen: false);
 
-  List getChildrenOfCategory(Category category) {
-    final categories = widget.categories!;
-    var children = categories.where((o) => o.parent == category.id).toList();
+  List<Category> getChildrenOfCategory(Category category) {
+    final children =
+        categoryModel.getCategory(parentId: category.id!) ?? <Category>[];
     return children;
   }
 
   @override
   Widget build(BuildContext context) {
-    final categories = getCategory();
-
-    return Column(
-      children: List.generate(
-        categories.length,
-        (index) {
-          return MenuCard(
-              getChildrenOfCategory(categories[index]) as List<Category>,
-              categories[index]);
-        },
+    return PagingList<CategoryModel, Category>(
+      scrollController: widget.scrollController,
+      header: const HeaderCategory(
+        showSearch: true,
       ),
+      itemBuilder: (p0, category, index) {
+        return MenuCard(
+          getChildrenOfCategory(category),
+          category,
+        );
+      },
     );
   }
 }
diff --git a/lib/widgets/cardlist/menu_card.dart b/lib/widgets/cardlist/menu_card.dart
index d143327..42237fc 100644
--- a/lib/widgets/cardlist/menu_card.dart
+++ b/lib/widgets/cardlist/menu_card.dart
@@ -150,8 +150,8 @@ class _StateMenuCard extends State<MenuCard> {
                     ),
               FutureBuilder<List<List<Product>?>>(
                 future: getAllListProducts(),
-                builder: (context, snaphost) {
-                  if (!snaphost.hasData) {
+                builder: (context, snapshot) {
+                  if (!snapshot.hasData) {
                     return SizedBox(
                       height: productHeight,
                       child: ListView(
@@ -168,7 +168,7 @@ class _StateMenuCard extends State<MenuCard> {
                       ),
                     );
                   }
-                  if (snaphost.data!.isEmpty) {
+                  if (snapshot.data!.isEmpty) {
                     return FutureBuilder<List<Product>?>(
                       future: getProductFromCategory(
                           categoryId: widget.category.id, page: 1),
@@ -221,7 +221,7 @@ class _StateMenuCard extends State<MenuCard> {
                           ),
                           Expanded(
                             child: ListCard(
-                              data: snaphost.data![position],
+                              data: snapshot.data![position],
                               width: constraints.maxWidth,
                               id: widget.categories[position].id,
                             ),
diff --git a/lib/widgets/common/common_safe_area.dart b/lib/widgets/common/common_safe_area.dart
index 2674ce7..c5d4345 100644
--- a/lib/widgets/common/common_safe_area.dart
+++ b/lib/widgets/common/common_safe_area.dart
@@ -11,6 +11,7 @@ class CommonSafeArea extends StatelessWidget {
   @override
   Widget build(BuildContext context) {
     return SafeArea(
+      top: false,
       minimum: const EdgeInsets.symmetric(
         horizontal: 16,
         vertical: 8,
diff --git a/lib/widgets/common/flux_image.dart b/lib/widgets/common/flux_image.dart
index 8096e54..60c82dd 100644
--- a/lib/widgets/common/flux_image.dart
+++ b/lib/widgets/common/flux_image.dart
@@ -1,6 +1,7 @@
 import 'package:extended_image/extended_image.dart';
 import 'package:flutter/material.dart';
 import 'package:flutter_svg/flutter_svg.dart';
+// import 'package:image_fade/image_fade.dart';
 import 'package:lottie/lottie.dart';
 
 import '../../common/constants.dart';
@@ -12,6 +13,8 @@ class FluxImage extends StatelessWidget {
   final BoxFit? fit;
   final Color? color;
   final String? package;
+  final Widget? errorWidget;
+  final Alignment alignment;
 
   const FluxImage({
     required this.imageUrl,
@@ -21,6 +24,8 @@ class FluxImage extends StatelessWidget {
     this.fit,
     this.color,
     this.package,
+    this.errorWidget,
+    this.alignment = Alignment.center,
   }) : super(key: key);
 
   @override
@@ -33,6 +38,10 @@ class FluxImage extends StatelessWidget {
       return const SizedBox();
     }
 
+    final cacheWidth = width != null && (width ?? 0) > 0
+        ? (width! * 2.5).toInt()
+        : kCacheImageWidth;
+
     if (!imageUrl.contains('http')) {
       if (isSvgImage) {
         return SvgPicture.asset(
@@ -41,6 +50,7 @@ class FluxImage extends StatelessWidget {
           height: height,
           fit: fit ?? BoxFit.contain,
           color: color,
+          alignment: alignment,
           package: package,
         );
       }
@@ -53,17 +63,20 @@ class FluxImage extends StatelessWidget {
           animate: true,
           width: width,
           height: height,
+          alignment: alignment,
           fit: fit ?? BoxFit.contain,
         );
       }
 
-      return Image.asset(
+      return ExtendedImage.asset(
         imageUrl,
         width: width,
         height: height,
         fit: fit,
         color: color,
         package: package,
+        alignment: alignment,
+        cacheWidth: kIsWeb ? null : cacheWidth,
       );
     }
 
@@ -82,6 +95,7 @@ class FluxImage extends StatelessWidget {
         height: height,
         fit: fit ?? BoxFit.contain,
         color: color,
+        alignment: alignment,
       );
     }
 
@@ -93,6 +107,7 @@ class FluxImage extends StatelessWidget {
         animate: true,
         width: width,
         height: height,
+        alignment: alignment,
         fit: fit ?? BoxFit.contain,
       );
     }
@@ -103,12 +118,24 @@ class FluxImage extends StatelessWidget {
       height: height,
       fit: fit,
       color: color,
+      cache: true,
+      alignment: alignment,
+      cacheWidth: cacheWidth,
       loadStateChanged: (state) {
         switch (state.extendedImageLoadState) {
           case LoadState.completed:
             return state.completedWidget;
-          case LoadState.loading:
+          // return ImageFade(
+          //   image: state.imageProvider,
+          //   width: width,
+          //   height: height,
+          //   fit: fit ?? BoxFit.scaleDown,
+          //   alignment: alignment,
+          //   duration: const Duration(milliseconds: 250),
+          // );
           case LoadState.failed:
+            return errorWidget ?? const SizedBox();
+          case LoadState.loading:
           default:
             return const SizedBox();
         }
diff --git a/lib/widgets/common/paging_list.dart b/lib/widgets/common/paging_list.dart
index a3ed177..7b22288 100644
--- a/lib/widgets/common/paging_list.dart
+++ b/lib/widgets/common/paging_list.dart
@@ -1,43 +1,80 @@
 import 'package:flutter/cupertino.dart';
-import 'package:flutter/material.dart';
 import 'package:provider/provider.dart';
 
 import '../../generated/l10n.dart' show S;
 import '../../models/paging_data_provider.dart';
 import 'loading_widget.dart';
+import 'paging_mixin.dart';
 import 'refresh_scroll_physics.dart';
+import 'sliver_empty_data.dart';
 
 typedef PagingWidgetBuilder<T> = Widget Function(
     BuildContext, T entity, int index);
 
-class PagingList<M extends PagingDataProvider, T> extends StatefulWidget {
-  final PagingWidgetBuilder<T> itemBuilder;
+typedef SelectorData<M, T> = List<T> Function(M model);
+
+class PagingList<M extends PagingDataProvider<T>, T> extends StatefulWidget {
+  final PagingWidgetBuilder<T>? itemBuilder;
+
+  /// The widget will show when the list is empty or when the list is loading
+  /// if [null] it will show a [LoadingWidget]
   final Widget? loadingWidget;
-  final int? lengthLoadingWidget;
+
+  /// The number of widgets loading to build when the list is first built.
+  final int lengthLoadingWidget;
+
+  /// The callback when the list is pull to refresh
   final Function? onRefresh;
+
+  /// The widget of the head of the list
   final Widget? header;
+
+  /// If it is true (the default) the model will auto load data when the widget
+  /// is created
   final bool autoInitData;
+  final ScrollController? scrollController;
+
+  /// If true the model will get more data when extent scroll
+  /// less than [kExtentInfinite], that means the loading widget does not show
+  /// If false the model will get more data when extent scroll
+  /// less than [kExtentDefault]
+  final bool infiniteMode;
+
+  final bool showScrollToTopButton;
+
+  final SelectorData<M, T>? selectorData;
 
   const PagingList({
-    required this.itemBuilder,
+    this.itemBuilder,
     this.loadingWidget,
-    this.lengthLoadingWidget,
+    this.lengthLoadingWidget = 1,
     this.onRefresh,
     this.header,
     this.autoInitData = true,
-  });
+    this.scrollController,
+    this.infiniteMode = false,
+    this.showScrollToTopButton = true,
+    this.selectorData,
+  }) : assert(lengthLoadingWidget > 0);
 
   @override
   State<PagingList<M, T>> createState() => _PagingListState();
 }
 
-class _PagingListState<M extends PagingDataProvider, T>
-    extends State<PagingList<M, T>> {
+class _PagingListState<M extends PagingDataProvider<T>, T>
+    extends State<PagingList<M, T>> with PagingMixin {
   Widget get loadingWidget => widget.loadingWidget ?? const LoadingWidget();
 
   M get model => Provider.of<M>(context, listen: false);
 
-  final scrollController = ScrollController();
+  List<T> get data => widget.selectorData?.call(model) ?? model.data;
+
+  @override
+  late final ScrollController scrollController =
+      widget.scrollController ?? ScrollController();
+
+  @override
+  Future<void> getData() => model.getData();
 
   @override
   void initState() {
@@ -45,114 +82,120 @@ class _PagingListState<M extends PagingDataProvider, T>
     WidgetsBinding.instance.endOfFrame.then((_) {
       if (mounted) {
         if (widget.autoInitData) {
-          Provider.of<M>(context, listen: false).getData();
+          model.getData();
         }
-        scrollController.addListener(() {
-          if (scrollController.position.extentBefore > 200 &&
-              scrollController.position.extentAfter < 500) {
-            model.getData();
-          }
-        });
       }
     });
   }
 
-  @override
-  void dispose() {
-    scrollController.dispose();
-    super.dispose();
-  }
-
   @override
   Widget build(BuildContext context) {
     return Consumer<M>(
       builder: (context, model, _) {
-        return Scrollbar(
-          controller: scrollController,
-          child: CustomScrollView(
-            controller: scrollController,
-            physics: const RefreshScrollPhysics(),
-            slivers: [
-              CupertinoSliverRefreshControl(
-                onRefresh: () async {
-                  await model.refresh();
-                  widget.onRefresh?.call();
-                },
-              ),
-              if (widget.header != null)
+        return Stack(
+          children: [
+            CustomScrollView(
+              controller: scrollController,
+              physics: const RefreshScrollPhysics(),
+              slivers: [
+                CupertinoSliverRefreshControl(
+                  onRefresh: () async {
+                    await model.refresh();
+                    widget.onRefresh?.call();
+                  },
+                ),
+                if (widget.header != null)
+                  SliverToBoxAdapter(child: widget.header),
+                model.isFirstLoad
+                    ? _buildInitBody()
+                    : data.isEmpty
+                        ? const SliverEmptyData()
+                        : _body,
                 SliverToBoxAdapter(
-                  child: widget.header,
+                  child: Builder(
+                    builder: (context) {
+                      var showLoadingWidget = false;
+                      final noMoreData = !model.hasNext;
+
+                      if (scrollController.hasClients) {
+                        showLoadingWidget = model.isLoadMore &&
+                            scrollController.position.extentBefore > 200;
+                      }
+
+                      return AnimatedSwitcher(
+                        transitionBuilder: (child, animation) {
+                          final offsetAnimation = Tween<Offset>(
+                            begin: const Offset(0.0, 1.0),
+                            end: const Offset(0.0, 0.0),
+                          ).animate(animation);
+                          final sizeAnimation = Tween<double>(
+                            begin: 0.0,
+                            end: 1.2,
+                          ).animate(animation);
+                          return SlideTransition(
+                            position: offsetAnimation,
+                            child: SizeTransition(
+                              sizeFactor: sizeAnimation,
+                              axisAlignment: -1.75,
+                              axis: Axis.vertical,
+                              child: child,
+                            ),
+                          );
+                        },
+                        duration: const Duration(milliseconds: 250),
+                        reverseDuration: const Duration(milliseconds: 350),
+                        child: model.isLoadMore && noMoreData
+                            ? Padding(
+                                padding: const EdgeInsets.all(16.0),
+                                child: Center(
+                                  child: Text(S.of(context).noData),
+                                ),
+                              )
+                            : model.isLoadMore && showLoadingWidget
+                                ? Padding(
+                                    padding: const EdgeInsets.only(
+                                      bottom: 8.0,
+                                      top: 10.0,
+                                    ),
+                                    child: loadingWidget,
+                                  )
+                                : const SizedBox(),
+                      );
+                    },
+                  ),
                 ),
-              model.data == null
-                  ? _buildInitBody()
-                  : (model.data?.isEmpty ?? false)
-                      ? _buildEmptyData(context)
-                      : SliverList(
-                          delegate: SliverChildBuilderDelegate(
-                            (context, index) {
-                              if (index != model.data!.length) {
-                                return widget.itemBuilder(
-                                  context,
-                                  model.data![index],
-                                  index,
-                                );
-                              }
-                              var showLoadingWidget = false;
-                              if (scrollController.hasClients) {
-                                showLoadingWidget = model.isLoading &&
-                                    scrollController.position.extentBefore >
-                                        200;
-                              }
-
-                              return AnimatedSwitcher(
-                                transitionBuilder: (child, animation) {
-                                  final offsetAnimation = Tween<Offset>(
-                                    begin: const Offset(0.0, 0.5),
-                                    end: const Offset(0.0, 0.0),
-                                  ).animate(animation);
-                                  return SlideTransition(
-                                    position: offsetAnimation,
-                                    child: child,
-                                  );
-                                },
-                                duration: const Duration(milliseconds: 300),
-                                child: showLoadingWidget
-                                    ? Padding(
-                                        padding:
-                                            const EdgeInsets.only(bottom: 8.0),
-                                        child: loadingWidget,
-                                      )
-                                    : const SizedBox(),
-                              );
-                            },
-                            childCount: model.data!.length + 1,
-                          ),
-                        ),
-            ],
-          ),
+              ],
+            ),
+            if (widget.showScrollToTopButton) scrollToTopButton,
+          ],
         );
       },
     );
   }
 
+  Widget get _body => SliverList(
+        delegate: SliverChildBuilderDelegate(
+          (context, index) {
+            return widget.itemBuilder!(
+              context,
+              data[index],
+              index,
+            );
+          },
+          childCount: data.length,
+        ),
+      );
+
   Widget _buildInitBody() {
     return widget.loadingWidget != null
         ? SliverList(
             delegate: SliverChildBuilderDelegate(
               (context, index) => loadingWidget,
-              childCount: widget.lengthLoadingWidget ?? 1,
+              childCount: widget.lengthLoadingWidget,
             ),
           )
-        : const SliverFillRemaining(
-            child: LoadingWidget(),
+        : SliverFillRemaining(
+            child: widget.loadingWidget,
           );
   }
-
-  Widget _buildEmptyData(BuildContext context) {
-    return SliverFillRemaining(
-      child: Center(
-        child: Text(S.of(context).noData),
-      ),
-    );
-  }
 }
diff --git a/lib/widgets/common/paging_mixin.dart b/lib/widgets/common/paging_mixin.dart
new file mode 100644
index 0000000..a6fe49c
--- /dev/null
+++ b/lib/widgets/common/paging_mixin.dart
@@ -0,0 +1,118 @@
+import 'package:flutter/cupertino.dart';
+import 'package:flutter/material.dart';
+import 'package:flutter/rendering.dart';
+
+const kExtentInfinite = 2000;
+const kExtentDefault = 500;
+
+mixin PagingMixin<T extends StatefulWidget> on State<T> {
+  ScrollController get scrollController;
+
+  final ValueNotifier<bool> _showButtonNotifier = ValueNotifier(false);
+
+  bool get infiniteMode => false;
+
+  Future<void> getData();
+
+  void hideButton() => _showButtonNotifier.value = false;
+
+  void showButton() => _showButtonNotifier.value = true;
+
+  void _handleShowButton() {
+    if (!scrollController.hasClients) return;
+    if (scrollController.position.extentBefore > 500) {
+      scrollController.position.userScrollDirection == ScrollDirection.forward
+          ? showButton()
+          : hideButton();
+    } else {
+      hideButton();
+    }
+  }
+
+  void _handleLoadMoreData() {
+    if (scrollController.position.extentBefore < 300) {
+      return;
+    }
+    if (scrollController.position.userScrollDirection ==
+        ScrollDirection.forward) {
+      return;
+    }
+    if (infiniteMode) {
+      if (scrollController.position.extentAfter < kExtentInfinite) {
+        getData();
+        return;
+      }
+    }
+    if (scrollController.position.extentAfter < kExtentDefault) {
+      getData();
+      return;
+    }
+  }
+
+  void _scrollToTop() {
+    scrollController.animateTo(
+      -50,
+      duration: const Duration(milliseconds: 250),
+      curve: Curves.ease,
+    );
+  }
+
+  @override
+  void initState() {
+    super.initState();
+    WidgetsBinding.instance.addPostFrameCallback((_) {
+      if (mounted) {
+        scrollController
+          ..addListener(_handleShowButton)
+          ..addListener(_handleLoadMoreData);
+      }
+    });
+  }
+
+  @override
+  void dispose() {
+    _showButtonNotifier.dispose();
+    scrollController
+      ..removeListener(_handleShowButton)
+      ..removeListener(_handleLoadMoreData);
+    super.dispose();
+  }
+
+  Widget get scrollToTopButton => ValueListenableBuilder<bool>(
+        valueListenable: _showButtonNotifier,
+        builder: (context, enable, child) {
+          return Align(
+            alignment: Alignment.bottomCenter,
+            child: Padding(
+              padding: const EdgeInsets.all(16.0),
+              child: AnimatedSlide(
+                duration: const Duration(milliseconds: 250),
+                offset: enable ? Offset.zero : const Offset(0, 2),
+                child: AnimatedOpacity(
+                  duration: const Duration(milliseconds: 150),
+                  opacity: enable ? 1 : 0,
+                  child: SizedBox(
+                    width: 50,
+                    height: 60,
+                    child: ElevatedButton(
+                      style: ElevatedButton.styleFrom(
+                        shape: const CircleBorder(),
+                        padding: const EdgeInsets.all(8.0),
+                        backgroundColor:
+                            Theme.of(context).colorScheme.secondary,
+                      ),
+                      onPressed: _scrollToTop,
+                      child: const Icon(
+                        CupertinoIcons.arrow_up,
+                        size: 24,
+                        color: Colors.white,
+                      ),
+                    ),
+                  ),
+                ),
+              ),
+            ),
+          );
+        },
+      );
+}
diff --git a/lib/widgets/common/rive_splashscreen.dart b/lib/widgets/common/rive_splashscreen.dart
index fbba5d5..9c9519d 100644
--- a/lib/widgets/common/rive_splashscreen.dart
+++ b/lib/widgets/common/rive_splashscreen.dart
@@ -59,12 +59,10 @@ class _RiveSplashScreenState extends State<RiveSplashScreen> {
         setState(() {
           _riveArtboard = artboard;
         });
-        _controller?.isActiveChanged.addListener(() {
-          if (!(_controller?.isActive ?? true)) {
-            Future.delayed(Duration(milliseconds: widget.duration))
-                .then((value) => widget.onSuccess());
-          }
-        });
+
+        // Fix hang issue from splash screen, need to call onSuccess without require _controller
+        await Future.delayed(Duration(milliseconds: widget.duration))
+            .then((value) => widget.onSuccess());
       }
     });
   }
diff --git a/lib/widgets/common/sliver_empty_data.dart b/lib/widgets/common/sliver_empty_data.dart
new file mode 100644
index 0000000..117b1f7
--- /dev/null
+++ b/lib/widgets/common/sliver_empty_data.dart
@@ -0,0 +1,15 @@
+import 'package:flutter/cupertino.dart';
+
+import '../../generated/l10n.dart';
+
+class SliverEmptyData extends StatelessWidget {
+  const SliverEmptyData({Key? key}) : super(key: key);
+  @override
+  Widget build(BuildContext context) {
+    return SliverFillRemaining(
+      child: Center(
+        child: Text(S.of(context).noData),
+      ),
+    );
+  }
+}
diff --git a/lib/widgets/common/splash_screen.dart b/lib/widgets/common/splash_screen.dart
index 3834ebd..0042606 100644
--- a/lib/widgets/common/splash_screen.dart
+++ b/lib/widgets/common/splash_screen.dart
@@ -1,3 +1,5 @@
+import 'dart:async';
+
 import 'package:flutter/material.dart';
 
 import '../../common/config.dart';
@@ -32,8 +34,8 @@ class SplashScreenIndex extends StatelessWidget {
         kSplashScreen['boxFit'],
         defaultValue: BoxFit.contain,
       );
-      final backgroundColor = HexColor(
-          kSplashScreen['backgroundColor'] ?? '#ffffff');
+      final backgroundColor =
+          HexColor(kSplashScreen['backgroundColor'] ?? '#ffffff');
       final paddingTop =
           Helper.formatDouble(kSplashScreen['paddingTop']) ?? 0.0;
       final paddingBottom =
@@ -130,9 +132,24 @@ class _EmptySplashScreen extends StatefulWidget {
 }
 
 class _EmptySplashScreenState extends BaseScreen<_EmptySplashScreen> {
+  StreamSubscription? _subscription;
+
+  @override
+  void initState() {
+    _subscription = eventBus.on<EventLoadedAppConfig>().listen(listener);
+    super.initState();
+  }
+
+  void listener(_) {
+    if (mounted) {
+      widget.onNextScreen?.call();
+    }
+  }
+
   @override
-  void afterFirstLayout(BuildContext context) {
-    widget.onNextScreen!();
+  void dispose() {
+    _subscription?.cancel();
+    super.dispose();
   }
 
   @override
diff --git a/lib/widgets/common/static_splashscreen.dart b/lib/widgets/common/static_splashscreen.dart
index 0ae8cd0..d8de908 100644
--- a/lib/widgets/common/static_splashscreen.dart
+++ b/lib/widgets/common/static_splashscreen.dart
@@ -55,20 +55,12 @@ class _StaticSplashScreenState extends BaseScreen<StaticSplashScreen> {
         ),
         child: LayoutBuilder(
           builder: (context, constraints) {
-            return widget.imagePath!.startsWith('http')
-                ? FluxImage(
-                    imageUrl: widget.imagePath!,
-                    fit: widget.boxFit,
-                    height: constraints.maxHeight,
-                    width: constraints.maxWidth,
-                  )
-                : Image.asset(
-                    widget.imagePath!,
-                    gaplessPlayback: true,
-                    fit: widget.boxFit,
-                    height: constraints.maxHeight,
-                    width: constraints.maxWidth,
-                  );
+            return FluxImage(
+              imageUrl: widget.imagePath!,
+              fit: widget.boxFit,
+              height: constraints.maxHeight,
+              width: constraints.maxWidth,
+            );
           },
         ),
       ),
diff --git a/lib/widgets/common/webview.dart b/lib/widgets/common/webview.dart
index 025e956..a03e1d1 100644
--- a/lib/widgets/common/webview.dart
+++ b/lib/widgets/common/webview.dart
@@ -150,197 +150,195 @@ class _WebViewState extends State<WebView> with WebviewMixin, AppBarMixin {
     if (url.isEmpty || (widget.auth && url == widget.url!)) {
       return Center(child: kLoadingWidget(context));
     }
-    return renderScaffold(
+
+    if (isMacOS || isWindow) {
+      return renderScaffold(
         routeName: widget.routeName ?? RouteList.webview,
-        body: Builder(builder: (context) {
-          if (isMacOS || isWindow) {
-            return Scaffold(
-              appBar: widget.appBar ??
-                  AppBar(
-                    backgroundColor: Theme.of(context).backgroundColor,
-                    elevation: 0.0,
-                    centerTitle: true,
-                    title: Text(
-                      widget.title ?? '',
-                      style: Theme.of(context)
-                          .textTheme
-                          .headline6!
-                          .copyWith(fontWeight: FontWeight.w600),
-                    ),
-                    actions: [
-                      if (widget.enableClose)
+        secondAppBar: widget.appBar ??
+            AppBar(
+              backgroundColor: Theme.of(context).backgroundColor,
+              elevation: 0.0,
+              centerTitle: true,
+              title: Text(
+                widget.title ?? '',
+                style: Theme.of(context)
+                    .textTheme
+                    .headline6!
+                    .copyWith(fontWeight: FontWeight.w600),
+              ),
+              actions: [
+                if (widget.enableClose)
+                  IconButton(
+                    onPressed: () async {
+                      widget.onClosed?.call();
+                      Navigator.of(context).pop();
+                    },
+                    icon: const Icon(Icons.close, size: 20),
+                  ),
+                const SizedBox(width: 10),
+              ],
+              leading: Builder(
+                builder: (buildContext) {
+                  return Row(
+                    children: [
+                      if (widget.enableBackward)
                         IconButton(
-                          onPressed: () async {
-                            widget.onClosed?.call();
-                            Navigator.of(context).pop();
+                          icon: const Icon(Icons.arrow_back_ios, size: 20),
+                          onPressed: () {
+                            if (Navigator.canPop(context)) {
+                              Navigator.of(context).pop();
+                            }
                           },
-                          icon: const Icon(Icons.close, size: 20),
                         ),
-                      const SizedBox(width: 10),
+                      if (widget.enableForward)
+                        IconButton(
+                          onPressed: () {},
+                          icon: const Icon(Icons.arrow_forward_ios, size: 20),
+                        ),
                     ],
-                    leading: Builder(
-                      builder: (buildContext) {
-                        return Row(
-                          children: [
-                            if (widget.enableBackward)
-                              IconButton(
-                                icon:
-                                    const Icon(Icons.arrow_back_ios, size: 20),
-                                onPressed: () {
-                                  if (Navigator.canPop(context)) {
-                                    Navigator.of(context).pop();
-                                  }
-                                },
-                              ),
-                            if (widget.enableForward)
-                              IconButton(
-                                onPressed: () {},
-                                icon: const Icon(Icons.arrow_forward_ios,
-                                    size: 20),
-                              ),
-                          ],
-                        );
-                      },
-                    ),
-                  ),
-              body: SingleChildScrollView(
-                child: HtmlWidget(html),
+                  );
+                },
               ),
-            );
-          }
+            ),
+        child: SingleChildScrollView(
+          child: HtmlWidget(html),
+        ),
+      );
+    }
 
-          /// is Mobile or Web
-          if (!kIsWeb && kAdvanceConfig.inAppWebView) {
-            return WebViewInApp(
-              url: url,
-              title: widget.title,
-              script: widget.script.isEmptyOrNull
-                  ? kAdvanceConfig.webViewScript
-                  : widget.script,
-              headers: widget.headers,
-              enableForward: widget.enableForward,
-              enableBackward: widget.enableBackward,
-              onClosed: widget.onClosed,
-              onUrlChanged: (String? url) {
-                if (widget.onPageFinished != null) {
-                  widget.onPageFinished!(url ?? '');
-                }
-              },
-            );
-          }
+    /// is Mobile or Web
+    if (!kIsWeb && kAdvanceConfig.inAppWebView) {
+      return renderScaffold(
+        routeName: widget.routeName ?? RouteList.webview,
+        child: WebViewInApp(
+          url: url,
+          title: widget.title,
+          script: widget.script.isEmptyOrNull
+              ? kAdvanceConfig.webViewScript
+              : widget.script,
+          headers: widget.headers,
+          enableForward: widget.enableForward,
+          enableBackward: widget.enableBackward,
+          enableClose: widget.enableClose,
+          onClosed: widget.onClosed,
+          onUrlChanged: (String? url) {
+            if (widget.onPageFinished != null) {
+              widget.onPageFinished!(url ?? '');
+            }
+          },
+        ),
+      );
+    }
 
-          return Scaffold(
-            appBar: widget.appBar ??
-                AppBar(
-                  backgroundColor: Theme.of(context).backgroundColor,
-                  elevation: 0.0,
-                  centerTitle: true,
-                  title: Text(
-                    widget.title ?? '',
-                    style: Theme.of(context)
-                        .textTheme
-                        .headline6!
-                        .copyWith(fontWeight: FontWeight.w600),
-                  ),
-                  leadingWidth: 150,
-                  actions: [
-                    if (widget.enableClose)
+    return renderScaffold(
+      routeName: widget.routeName ?? RouteList.webview,
+      secondAppBar: widget.appBar ??
+          AppBar(
+            backgroundColor: Theme.of(context).backgroundColor,
+            elevation: 0.0,
+            centerTitle: true,
+            title: Text(
+              widget.title ?? '',
+              style: Theme.of(context)
+                  .textTheme
+                  .headline6!
+                  .copyWith(fontWeight: FontWeight.w600),
+            ),
+            leadingWidth: 150,
+            actions: [
+              if (widget.enableClose)
+                IconButton(
+                  onPressed: () async {
+                    widget.onClosed?.call();
+                    Navigator.of(context).pop();
+                  },
+                  icon: const Icon(Icons.close, size: 20),
+                ),
+              const SizedBox(width: 10),
+            ],
+            leading: Builder(
+              builder: (buildContext) {
+                return Row(
+                  children: [
+                    if (widget.enableBackward)
                       IconButton(
+                        icon: const Icon(Icons.arrow_back_ios, size: 20),
                         onPressed: () async {
-                          widget.onClosed?.call();
-                          Navigator.of(context).pop();
+                          var value = await _controller?.canGoBack() ?? false;
+                          if (value) {
+                            await _controller?.goBack();
+                          } else if (!widget.enableClose &&
+                              Navigator.canPop(context)) {
+                            widget.onClosed?.call();
+                            Navigator.of(context).pop();
+                          } else {
+                            Tools.showSnackBar(
+                                ScaffoldMessenger.of(buildContext),
+                                S.of(context).noBackHistoryItem);
+                          }
                         },
-                        icon: const Icon(Icons.close, size: 20),
                       ),
-                    const SizedBox(width: 10),
+                    if (widget.enableForward)
+                      IconButton(
+                        onPressed: () async {
+                          if (await _controller?.canGoForward() ?? false) {
+                            await _controller?.goForward();
+                          } else {
+                            Tools.showSnackBar(
+                                ScaffoldMessenger.of(buildContext),
+                                S.of(context).noForwardHistoryItem);
+                          }
+                        },
+                        icon: const Icon(Icons.arrow_forward_ios, size: 20),
+                      ),
                   ],
-                  leading: Builder(
-                    builder: (buildContext) {
-                      return Row(
-                        children: [
-                          if (widget.enableBackward)
-                            IconButton(
-                              icon: const Icon(Icons.arrow_back_ios, size: 20),
-                              onPressed: () async {
-                                var value =
-                                    await _controller?.canGoBack() ?? false;
-                                if (value) {
-                                  await _controller?.goBack();
-                                } else if (!widget.enableClose &&
-                                    Navigator.canPop(context)) {
-                                  widget.onClosed?.call();
-                                  Navigator.of(context).pop();
-                                } else {
-                                  Tools.showSnackBar(
-                                      ScaffoldMessenger.of(buildContext),
-                                      S.of(context).noBackHistoryItem);
-                                }
-                              },
-                            ),
-                          if (widget.enableForward)
-                            IconButton(
-                              onPressed: () async {
-                                if (await _controller?.canGoForward() ??
-                                    false) {
-                                  await _controller?.goForward();
-                                } else {
-                                  Tools.showSnackBar(
-                                      ScaffoldMessenger.of(buildContext),
-                                      S.of(context).noForwardHistoryItem);
-                                }
-                              },
-                              icon:
-                                  const Icon(Icons.arrow_forward_ios, size: 20),
-                            ),
-                        ],
-                      );
-                    },
-                  ),
-                ),
-            body: IndexedStack(
-              index: selectedIndex,
-              children: [
-                Builder(builder: (BuildContext context) {
-                  return flutter.WebView(
-                    initialUrl: url,
-                    javascriptMode: flutter.JavascriptMode.unrestricted,
-                    onProgress: (progress) {
-                      if (progress == 100) {
-                        setState(() {
-                          selectedIndex = 0;
-                        });
-                      }
-                    },
-                    onPageFinished: (_) {
-                      /// Demo the Javascript Style override
-                      // var script = "document.querySelector('div.wd-toolbar').style.display = 'none'";
+                );
+              },
+            ),
+          ),
+      child: IndexedStack(
+        index: selectedIndex,
+        children: [
+          Builder(builder: (BuildContext context) {
+            return flutter.WebView(
+              initialUrl: url,
+              javascriptMode: flutter.JavascriptMode.unrestricted,
+              onProgress: (progress) {
+                if (progress == 100) {
+                  setState(() {
+                    selectedIndex = 0;
+                  });
+                }
+              },
+              onPageFinished: (_) {
+                /// Demo the Javascript Style override
+                // var script = "document.querySelector('div.wd-toolbar').style.display = 'none'";
 
-                      var script = widget.script.isEmptyOrNull
-                          ? kAdvanceConfig.webViewScript
-                          : widget.script;
-                      if (script.isNotEmpty) {
-                        _controller?.runJavascript(script);
-                      }
+                var script = widget.script.isEmptyOrNull
+                    ? kAdvanceConfig.webViewScript
+                    : widget.script;
+                if (script.isNotEmpty) {
+                  _controller?.runJavascript(script);
+                }
 
-                      /// Call back when finish loading
-                      if (widget.onPageFinished != null) {
-                        widget.onPageFinished!(_);
-                      }
-                    },
-                    navigationDelegate: getNavigationDelegate,
-                    onWebViewCreated: (webViewController) {
-                      _controller = webViewController;
-                    },
-                    gestureRecognizers: gestureRecognizers,
-                    gestureNavigationEnabled: true,
-                  );
-                }),
-                Center(
-                  child: kLoadingWidget(context),
-                )
-              ],
-            ),
-          );
-        }));
+                /// Call back when finish loading
+                if (widget.onPageFinished != null) {
+                  widget.onPageFinished!(_);
+                }
+              },
+              navigationDelegate: getNavigationDelegate,
+              onWebViewCreated: (webViewController) {
+                _controller = webViewController;
+              },
+              gestureRecognizers: gestureRecognizers,
+              gestureNavigationEnabled: true,
+            );
+          }),
+          Center(
+            child: kLoadingWidget(context),
+          )
+        ],
+      ),
+    );
   }
 }
diff --git a/lib/widgets/general/general_button_widget.dart b/lib/widgets/general/general_button_widget.dart
index 627ef2c..c4e26bf 100644
--- a/lib/widgets/general/general_button_widget.dart
+++ b/lib/widgets/general/general_button_widget.dart
@@ -8,6 +8,32 @@ class GeneralButtonWidget extends StatelessWidget {
   final GeneralSettingItem? item;
   const GeneralButtonWidget({required this.item});
 
+  Widget renderButtonItem(BuildContext context, GeneralButton item) {
+    if (item.image != null) {
+      return ClipRRect(
+        borderRadius: BorderRadius.circular(item.radius.toDouble()),
+        child: FluxImage(
+          imageUrl: item.image!,
+          width: item.width.toDouble(),
+          height: item.height.toDouble(),
+        ),
+      );
+    } else {
+      return Container(
+        width: item.width.toDouble(),
+        height: item.height.toDouble(),
+        alignment: Alignment.centerLeft,
+        child: Text(
+          item.text ?? '',
+          style: TextStyle(
+            color: item.textColor != null ? HexColor(item.textColor) : null,
+            fontSize: item.textFontSize.toDouble(),
+          ),
+        ),
+      );
+    }
+  }
+
   @override
   Widget build(BuildContext context) {
     var itemVal = item ?? GeneralSettingItem();
@@ -22,29 +48,14 @@ class GeneralButtonWidget extends StatelessWidget {
           children: List.generate(
             buttons.length,
             (index) => InkWell(
-              onTap: buttons[index].webUrl != null
-                  ? () => Tools.launchURL(buttons[index].webUrl)
-                  : null,
+              onTap: () => NavigateTools.onTapNavigateOptions(
+                  context: context, config: buttons[index].navigator),
               child: Container(
-                margin: EdgeInsets.only(
-                  left: buttons[index].marginLeft.toDouble(),
-                  right: buttons[index].marginRight.toDouble(),
-                ),
-                child: buttons[index].image != null
-                    ? ClipRRect(
-                        borderRadius: BorderRadius.circular(
-                            buttons[index].radius.toDouble()),
-                        child: FluxImage(
-                          imageUrl: buttons[index].image!,
-                          width: buttons[index].width.toDouble(),
-                          height: buttons[index].height.toDouble(),
-                        ),
-                      )
-                    : SizedBox(
-                        width: buttons[index].width.toDouble(),
-                        height: buttons[index].height.toDouble(),
-                      ),
-              ),
+                  margin: EdgeInsets.only(
+                    left: buttons[index].marginLeft.toDouble(),
+                    right: buttons[index].marginRight.toDouble(),
+                  ),
+                  child: renderButtonItem(context, buttons[index])),
             ),
           ),
         ),
diff --git a/lib/widgets/general/general_web_widget.dart b/lib/widgets/general/general_web_widget.dart
index 145dc20..c5fdcd5 100644
--- a/lib/widgets/general/general_web_widget.dart
+++ b/lib/widgets/general/general_web_widget.dart
@@ -1,6 +1,7 @@
 import 'package:flutter/material.dart';
 import 'package:inspireui/icons/icon_picker.dart';
 import 'package:provider/provider.dart';
+import 'package:url_launcher/url_launcher.dart';
 
 import '../../common/config.dart';
 import '../../common/config/models/general_setting_item.dart';
@@ -17,91 +18,102 @@ class GeneralWebWidget extends StatelessWidget {
   final TextStyle? textStyle;
   final GeneralSettingItem? item;
 
-  const GeneralWebWidget(
-      {required this.item,
-      this.iconColor,
-      this.textStyle,
-      this.useTile = false});
+  const GeneralWebWidget({
+    required this.item,
+    this.iconColor,
+    this.textStyle,
+    this.useTile = false,
+  });
 
   @override
   Widget build(BuildContext context) {
-    var user = Provider.of<UserModel>(context, listen: false).user;
-    var icon = Icons.error;
-    String title;
-    Widget trailing;
-    Function() onTap = () {};
-    title = item?.title ?? S.of(context).dataEmpty;
-    trailing = const Icon(Icons.arrow_forward_ios, size: 18, color: kGrey600);
-    var webUrl = item?.webUrl;
-    if (item?.requiredLogin ?? false) {
-      if (user == null) return const SizedBox();
-      var base64Str = EncodeUtils.encodeCookie(user.cookie!);
-      webUrl = '$webUrl?cookie=$base64Str';
-    }
-
-    if (item != null) {
-      icon = iconPicker(item!.icon, item!.iconFontFamily) ?? Icons.error;
-      onTap = () {
-        if (item?.webViewMode ?? false) {
-          FluxNavigate.push(
-            MaterialPageRoute(
-              builder: (context) => WebView(
-                url: webUrl,
-                title: title,
-                enableBackward: item?.enableBackward ?? false,
-                enableForward: item?.enableForward ?? false,
-                enableClose: item?.enableClose ?? false,
-                script: (item?.script?.isEmptyOrNull ?? true)
-                    ? kAdvanceConfig.webViewScript
-                    : item?.script ?? '',
-              ),
-            ),
-          );
-        } else {
-          Tools.launchURL(webUrl);
+    return Selector<UserModel, bool>(
+      selector: (context, model) => model.loggedIn,
+      shouldRebuild: (previous, next) => previous != next,
+      builder: (context, value, child) {
+        var user = Provider.of<UserModel>(context, listen: false).user;
+        var icon = Icons.error;
+        String title;
+        Widget trailing;
+        Function() onTap = () {};
+        title = item?.title ?? S.of(context).dataEmpty;
+        trailing =
+            const Icon(Icons.arrow_forward_ios, size: 18, color: kGrey600);
+        var webUrl = item?.webUrl;
+        if (item?.requiredLogin ?? false) {
+          if (!value) return const SizedBox();
+          var base64Str = EncodeUtils.encodeCookie(user!.cookie!);
+          webUrl = '$webUrl?cookie=$base64Str';
         }
-      };
-    }
-    if (useTile) {
-      return ListTile(
-        leading: Icon(
-          icon,
-          color: iconColor,
-        ),
-        title: Text(
-          title,
-          style: textStyle,
-        ),
-        onTap: onTap,
-      );
-    }
 
-    return Column(
-      children: [
-        Card(
-          margin: const EdgeInsets.only(bottom: 2.0),
-          elevation: 0,
-          child: ListTile(
+        if (item != null) {
+          icon = iconPicker(item!.icon, item!.iconFontFamily) ?? Icons.error;
+          onTap = () {
+            if (item?.webViewMode ?? false) {
+              FluxNavigate.push(
+                MaterialPageRoute(
+                  builder: (context) => WebView(
+                    url: webUrl,
+                    title: title,
+                    enableBackward: item?.enableBackward ?? false,
+                    enableForward: item?.enableForward ?? false,
+                    enableClose: item?.enableClose ?? false,
+                    script: (item?.script?.isEmptyOrNull ?? true)
+                        ? kAdvanceConfig.webViewScript
+                        : item?.script ?? '',
+                  ),
+                ),
+              );
+            } else {
+              Tools.launchURL(
+                webUrl,
+                mode: LaunchMode.externalApplication,
+              );
+            }
+          };
+        }
+        if (useTile) {
+          return ListTile(
             leading: Icon(
               icon,
-              color: Theme.of(context).colorScheme.secondary,
-              size: 24,
+              color: iconColor,
             ),
             title: Text(
               title,
-              style: const TextStyle(fontSize: 16),
+              style: textStyle,
             ),
-            trailing: trailing,
             onTap: onTap,
-          ),
-        ),
-        const Divider(
-          color: Colors.black12,
-          height: 1.0,
-          indent: 75,
-          //endIndent: 20,
-        ),
-      ],
+          );
+        }
+
+        return Column(
+          children: [
+            Card(
+              margin: const EdgeInsets.only(bottom: 2.0),
+              elevation: 0,
+              child: ListTile(
+                leading: Icon(
+                  icon,
+                  color: Theme.of(context).colorScheme.secondary,
+                  size: 24,
+                ),
+                title: Text(
+                  title,
+                  style: const TextStyle(fontSize: 16),
+                ),
+                trailing: trailing,
+                onTap: onTap,
+              ),
+            ),
+            const Divider(
+              color: Colors.black12,
+              height: 1.0,
+              indent: 75,
+              //endIndent: 20,
+            ),
+          ],
+        );
+      },
     );
   }
 }
diff --git a/lib/widgets/home/appbar.dart b/lib/widgets/home/appbar.dart
new file mode 100644
index 0000000..1d7c39f
--- /dev/null
+++ b/lib/widgets/home/appbar.dart
@@ -0,0 +1,96 @@
+import 'package:flutter/material.dart';
+import 'package:provider/provider.dart';
+
+import '../../common/constants.dart';
+import '../../common/tools.dart';
+import '../../models/app_model.dart';
+import '../../models/cart/cart_base.dart';
+import '../../models/notification_model.dart';
+import '../../modules/dynamic_layout/config/logo_config.dart';
+import '../../modules/dynamic_layout/helper/helper.dart';
+import '../../modules/dynamic_layout/logo/logo.dart';
+import '../../routes/flux_navigate.dart';
+import 'preview_overlay.dart';
+
+class HomeAppBar extends StatefulWidget {
+  final configs;
+  final bool isPinAppBar;
+
+  const HomeAppBar({
+    Key? key,
+    this.configs,
+    this.isPinAppBar = false,
+  }) : super(key: key);
+
+  @override
+  State<HomeAppBar> createState() => _HomeAppBarState();
+}
+
+class _HomeAppBarState extends State<HomeAppBar> {
+  @override
+  Widget build(BuildContext context) {
+    if (Layout.isDisplayDesktop(context)) {
+      return const SliverToBoxAdapter();
+    }
+
+    List<dynamic> horizonLayout = widget.configs['HorizonLayout'] ?? [];
+    Map logoConfig = horizonLayout.firstWhere(
+        (element) => element['layout'] == 'logo',
+        orElse: () => Map<String, dynamic>.from({}));
+    var config = LogoConfig.fromJson(logoConfig);
+
+    /// customize theme
+    // config
+    //   ..opacity = 0.9
+    //   ..iconBackground = HexColor('DDDDDD')
+    //   ..iconColor = HexColor('330000')
+    //   ..iconOpacity = 0.8
+    //   ..iconRadius = 40
+    //   ..iconSize = 24
+    //   ..cartIcon = MenuIcon(name: 'cart')
+    //   ..showSearch = false
+    //   ..showLogo = true
+    //   ..showCart = true
+    //   ..showMenu = true;
+
+    return SliverAppBar(
+      pinned: widget.isPinAppBar,
+      snap: true,
+      floating: true,
+      titleSpacing: 0,
+      elevation: 0,
+      forceElevated: true,
+      backgroundColor: config.color ??
+          Theme.of(context).backgroundColor.withOpacity(config.opacity),
+      title: PreviewOverlay(
+          index: 0,
+          config: logoConfig as Map<String, dynamic>?,
+          builder: (value) {
+            final appModel = Provider.of<AppModel>(context, listen: true);
+            return Selector<CartModel, int>(
+              selector: (_, cartModel) => cartModel.totalCartQuantity,
+              builder: (context, totalCart, child) {
+                return Logo(
+                  config: config,
+                  logo: appModel.themeConfig.logo,
+                  notificationCount:
+                      Provider.of<NotificationModel>(context).unreadCount,
+                  totalCart: totalCart,
+                  onSearch: () {
+                    FluxNavigate.pushNamed(RouteList.homeSearch);
+                  },
+                  onCheckout: () {
+                    FluxNavigate.pushNamed(RouteList.cart);
+                  },
+                  onTapNotifications: () {
+                    FluxNavigate.pushNamed(RouteList.notify);
+                  },
+                  onTapDrawerMenu: () =>
+                      NavigateTools.onTapOpenDrawerMenu(context),
+                );
+              },
+            );
+          }),
+    );
+  }
+}
diff --git a/lib/widgets/home/index.dart b/lib/widgets/home/index.dart
index f6b125c..8370f6a 100644
--- a/lib/widgets/home/index.dart
+++ b/lib/widgets/home/index.dart
@@ -1,8 +1,10 @@
 import 'package:flutter/cupertino.dart';
 import 'package:flutter/foundation.dart' as foundation;
 import 'package:flutter/material.dart';
+import 'package:inspireui/icons/constants.dart';
 import 'package:provider/provider.dart';
 
+import '../../common/config.dart';
 import '../../common/constants.dart';
 import '../../common/tools.dart';
 import '../../models/app_model.dart';
@@ -23,12 +25,16 @@ class HomeLayout extends StatefulWidget {
   final bool isPinAppBar;
   final bool isShowAppbar;
   final bool showNewAppBar;
+  final bool enableRefresh;
+  final ScrollController? scrollController;
 
   const HomeLayout({
     this.configs,
     this.isPinAppBar = false,
     this.isShowAppbar = true,
     this.showNewAppBar = false,
+    this.enableRefresh = true,
+    this.scrollController,
     Key? key,
   }) : super(key: key);
 
@@ -38,6 +44,7 @@ class HomeLayout extends StatefulWidget {
 
 class _HomeLayoutState extends State<HomeLayout> with AppBarMixin {
   late List widgetData;
+  dynamic verticalWidgetData;
 
   bool isPreviewingAppBar = false;
 
@@ -58,17 +65,7 @@ class _HomeLayoutState extends State<HomeLayout> with AppBarMixin {
       Map verticalData =
           Map<String, dynamic>.from(widget.configs['VerticalLayout']);
       verticalData['type'] = 'vertical';
-      widgetData.add(verticalData);
-    }
-
-    /// init multi vertical layout
-    if (widget.configs['VerticalLayouts'] != null) {
-      List verticalLayouts = widget.configs['VerticalLayouts'];
-      for (var i = 0; i < verticalLayouts.length; i++) {
-        Map verticalData = verticalLayouts[i];
-        verticalData['type'] = 'vertical';
-        widgetData.add(verticalData);
-      }
+      verticalWidgetData = verticalData;
     }
 
     super.initState();
@@ -83,17 +80,16 @@ class _HomeLayoutState extends State<HomeLayout> with AppBarMixin {
       if (data.isNotEmpty && widget.isShowAppbar && !widget.showNewAppBar) {
         data.removeAt(0);
       }
+      widgetData = data;
 
       /// init vertical layout
       if (widget.configs['VerticalLayout'] != null) {
         Map verticalData =
             Map<String, dynamic>.from(widget.configs['VerticalLayout']);
         verticalData['type'] = 'vertical';
-        data.add(verticalData);
+        verticalData = verticalData;
       }
-      setState(() {
-        widgetData = data;
-      });
+      setState(() {});
     }
     super.didUpdateWidget(oldWidget);
   }
@@ -107,7 +103,8 @@ class _HomeLayoutState extends State<HomeLayout> with AppBarMixin {
     setState(() => cleanCache = false);
 
     /// reload app config
-    await Provider.of<AppModel>(context, listen: false).loadAppConfig();
+    await Provider.of<AppModel>(context, listen: false)
+        .loadAppConfig(config: kLayoutConfig);
   }
 
   Widget renderAppBar() {
@@ -200,88 +197,74 @@ class _HomeLayoutState extends State<HomeLayout> with AppBarMixin {
         ),
       );
     };
-    final isShowAppBar = widget.isShowAppbar && !widget.showNewAppBar;
-
-    return Stack(
-      children: [
-        CustomScrollView(
-          cacheExtent: 2000.0,
-          physics: const BouncingScrollPhysics(),
-          slivers: [
-            if (widget.showNewAppBar) sliverAppBarWidget,
-            if (isShowAppBar) renderAppBar(),
-            CupertinoSliverRefreshControl(onRefresh: onRefresh),
-            SliverList(
-              delegate: SliverChildBuilderDelegate(
-                (context, index) {
-                  var config = widgetData[index];
 
-                  /// if show app bar, the preview should plus +1
-                  var previewIndex = widget.isShowAppbar ? index + 1 : index;
-                  Widget body;
-                  if (config['type'] != null && config['type'] == 'vertical') {
-                    body = PreviewOverlay(
-                        index: previewIndex,
-                        config: config,
-                        builder: (value) {
-                          return Services().widget.renderVerticalLayout(value);
-                        });
-                  } else {
-                    body = PreviewOverlay(
-                      index: previewIndex,
-                      config: config,
-                      builder: (value) {
-                        return DynamicLayout(
-                            config: value, cleanCache: cleanCache);
-                      },
-                    );
-                  }
-
-                  /// Use row to limit the drawing area.
-                  /// If you delete the row, setting the size for the body will not work.
-                  return LayoutBuilder(
-                    builder: (_, constraints) => Row(
-                      mainAxisAlignment: MainAxisAlignment.center,
-                      children: [
-                        ConstrainedBox(
-                          constraints: BoxConstraints(
-                            maxWidth: constraints.maxWidth < kLimitWidthScreen
-                                ? constraints.maxWidth
-                                : kLimitWidthScreen,
-                          ),
-                          child: body,
-                        ),
-                      ],
-                    ),
-                  );
-                },
-                childCount: widgetData.length,
-              ),
+    return SafeArea(
+      bottom: false,
+      child: verticalWidgetData == null
+          ? CustomScrollView(
+              cacheExtent: 2000,
+              slivers: horizontalLayouts,
+              controller: widget.scrollController,
+              physics: const BouncingScrollPhysics(),
+            )
+          : NestedScrollView(
+              controller: widget.scrollController,
+              headerSliverBuilder: (context, _) {
+                return horizontalLayouts;
+              },
+              body: verticalLayout,
             ),
-          ],
-        ),
-        const _FakeStatusBar(),
-      ],
     );
   }
-}
 
-class _FakeStatusBar extends StatelessWidget {
-  const _FakeStatusBar();
+  List<Widget> get horizontalLayouts => <Widget>[
+        if (widget.showNewAppBar) sliverAppBarWidget,
+        if (widget.isShowAppbar && !widget.showNewAppBar) renderAppBar(),
+        if (widget.enableRefresh)
+          CupertinoSliverRefreshControl(onRefresh: onRefresh),
+        SliverList(
+          delegate: SliverChildBuilderDelegate(
+            (context, index) {
+              var config = widgetData[index];
 
-  @override
-  Widget build(BuildContext context) {
-    return Positioned(
-      top: 0,
-      left: 0,
-      right: 0,
-      child: Container(
-        color: Theme.of(context).backgroundColor,
-        child: const SafeArea(
-          bottom: false,
-          child: SizedBox(),
+              /// if show app bar, the preview should plus +1
+              var previewIndex = widget.isShowAppbar ? index + 1 : index;
+              Widget body = PreviewOverlay(
+                index: previewIndex,
+                config: config,
+                builder: (value) {
+                  return DynamicLayout(config: value, cleanCache: cleanCache);
+                },
+              );
+
+              /// Use row to limit the drawing area.
+              /// If you delete the row, setting the size for the body will not work.
+              return LayoutBuilder(
+                builder: (_, constraints) => Row(
+                  mainAxisAlignment: MainAxisAlignment.center,
+                  children: [
+                    ConstrainedBox(
+                      constraints: BoxConstraints(
+                        maxWidth: constraints.maxWidth < kLimitWidthScreen
+                            ? constraints.maxWidth
+                            : kLimitWidthScreen,
+                      ),
+                      child: body,
+                    ),
+                  ],
+                ),
+              );
+            },
+            childCount: widgetData.length,
+          ),
         ),
-      ),
-    );
-  }
+      ];
+
+  Widget get verticalLayout => PreviewOverlay(
+        index: widgetData.length,
+        config: verticalWidgetData,
+        builder: (value) {
+          return Services().widget.renderVerticalLayout(value);
+        },
+      );
 }
diff --git a/lib/widgets/home/preview_reload.dart b/lib/widgets/home/preview_reload.dart
index 274de41..fa336d7 100644
--- a/lib/widgets/home/preview_reload.dart
+++ b/lib/widgets/home/preview_reload.dart
@@ -1,3 +1,5 @@
+import 'dart:async';
+
 import 'package:flutter/cupertino.dart';
 import 'package:flutter/material.dart';
 
@@ -24,6 +26,8 @@ class PreviewReload extends StatefulWidget {
 class _PreviewReloadState extends State<PreviewReload> {
   late Map<String, dynamic> configs;
 
+  StreamSubscription? _subReloadConfigs;
+
   @override
   void initState() {
     if (!ServerConfig().isBuilder) {
@@ -31,7 +35,7 @@ class _PreviewReloadState extends State<PreviewReload> {
     }
 
     /// init listener preview configs
-    eventBus.on<EventReloadConfigs>().listen((event) {
+    _subReloadConfigs = eventBus.on<EventReloadConfigs>().listen((event) {
       if (event.key != null) {
         if (event.key == widget.previewKey && widget.isDynamic) {
           setState(() {
@@ -48,6 +52,12 @@ class _PreviewReloadState extends State<PreviewReload> {
     super.initState();
   }
 
+  @override
+  void dispose() {
+    _subReloadConfigs?.cancel();
+    super.dispose();
+  }
+
   @override
   Widget build(BuildContext context) {
     return widget.builder(
diff --git a/lib/widgets/product/action_button_mixin.dart b/lib/widgets/product/action_button_mixin.dart
index 423dfe0..d4c96be 100644
--- a/lib/widgets/product/action_button_mixin.dart
+++ b/lib/widgets/product/action_button_mixin.dart
@@ -64,9 +64,9 @@ mixin ActionButtonMixin {
   }) {
     final cartModel = Provider.of<CartModel>(context, listen: false);
     if (quantity == 0) {
-      cartModel.removeItemFromCart(product.id!);
+      cartModel.removeItemFromCart(product.id);
       return;
     }
-    cartModel.updateQuantity(product, product.id!, quantity);
+    cartModel.updateQuantity(product, product.id, quantity);
   }
 }
diff --git a/lib/widgets/product/cart_item.dart b/lib/widgets/product/cart_item.dart
index 06ce2f2..75a47f2 100644
--- a/lib/widgets/product/cart_item.dart
+++ b/lib/widgets/product/cart_item.dart
@@ -68,7 +68,7 @@ class ShoppingCartRow extends StatelessWidget {
                       SizedBox(
                         width: constraints.maxWidth * 0.25,
                         height: constraints.maxWidth * 0.3,
-                        child: ImageTools.image(url: imageFeature),
+                        child: ImageResize(url: imageFeature),
                       ),
                       const SizedBox(width: 16.0),
                       Expanded(
diff --git a/lib/widgets/product/dialog_add_to_cart.dart b/lib/widgets/product/dialog_add_to_cart.dart
index d25df9b..950e3d1 100644
--- a/lib/widgets/product/dialog_add_to_cart.dart
+++ b/lib/widgets/product/dialog_add_to_cart.dart
@@ -16,7 +16,7 @@ class DialogAddToCart {
       backgroundColor: Colors.transparent,
       builder: (context) => Container(
         width: MediaQuery.of(context).size.width,
-        height: MediaQuery.of(context).size.height * 0.75,
+        height: MediaQuery.of(context).size.height * 0.85,
         padding: const EdgeInsets.symmetric(horizontal: 25, vertical: 20),
         decoration: BoxDecoration(
           color: Theme.of(context).backgroundColor,
@@ -111,13 +111,16 @@ class _StateRubberAddToCart extends State<RubberAddToCart> {
   Widget build(BuildContext context) {
     return ChangeNotifierProvider(
       create: (_) => ProductModel(),
-      child: CustomScrollView(
-        slivers: [
-          const SliverToBoxAdapter(child: SizedBox(height: 40)),
-          SliverToBoxAdapter(child: ProductTitle(product)),
-          const SliverToBoxAdapter(child: SizedBox(height: 20)),
-          renderProductInfo(),
-        ],
+      child: Scaffold(
+        backgroundColor: Theme.of(context).backgroundColor,
+        body: CustomScrollView(
+          slivers: [
+            const SliverToBoxAdapter(child: SizedBox(height: 40)),
+            SliverToBoxAdapter(child: ProductTitle(product)),
+            const SliverToBoxAdapter(child: SizedBox(height: 20)),
+            renderProductInfo(),
+          ],
+        ),
       ),
     );
   }
diff --git a/lib/widgets/product/product_bottom_sheet.dart b/lib/widgets/product/product_bottom_sheet.dart
index 5f5f38d..efb8934 100644
--- a/lib/widgets/product/product_bottom_sheet.dart
+++ b/lib/widgets/product/product_bottom_sheet.dart
@@ -303,47 +303,53 @@ class ExpandingBottomSheetState extends State<ExpandingBottomSheet>
       child: Opacity(
         opacity: _thumbnailOpacityAnimation.value,
         child: Column(children: <Widget>[
-          Row(children: <Widget>[
-            AnimatedPadding(
-              padding: _cartPaddingFor(numProducts), //
-              duration: const Duration(milliseconds: 225),
-              child: const Icon(Icons.add_shopping_cart, size: 20),
-            ),
-            if (totalCart > 0)
-              Container(
-                decoration: BoxDecoration(
-                    color: Theme.of(context).primaryColor,
-                    borderRadius: BorderRadius.circular(2)),
-                padding: const EdgeInsets.only(
-                  left: 4,
-                  right: 4,
-                  bottom: 3,
-                  top: 5,
-                ),
-                child: Text(
-                  totalCart.toString(),
-                  style: const TextStyle(
-                      color: Colors.white,
-                      fontSize: 16,
-                      fontWeight: FontWeight.bold),
-                  textAlign: TextAlign.center,
-                ),
-              ),
-            Container(
-              // Accounts for the overflow number
-              width: numProducts < 1
-                  ? _width - 50.0
-                  : numProducts > 3
-                      ? _width - 110.0
-                      : _width - 75.0,
-              height: _kCartHeight,
-              padding: const EdgeInsets.symmetric(vertical: 8.0),
-              child: ProductThumbnailRow(),
-            ),
-
-            // more extra product
-//            ExtraProductsNumber()
-          ]),
+          Directionality(
+            textDirection:
+                Tools.isRTL(context) ? TextDirection.rtl : TextDirection.ltr,
+            child: Row(
+                mainAxisAlignment: MainAxisAlignment.center,
+                children: <Widget>[
+                  AnimatedPadding(
+                    padding: _cartPaddingFor(numProducts),
+                    duration: const Duration(milliseconds: 225),
+                    child: const Icon(Icons.add_shopping_cart, size: 20),
+                  ),
+                  if (totalCart > 0)
+                    Container(
+                      decoration: BoxDecoration(
+                          color: Theme.of(context).primaryColor,
+                          borderRadius: BorderRadius.circular(2)),
+                      padding: const EdgeInsets.only(
+                        left: 4,
+                        right: 4,
+                        bottom: 3,
+                        top: 5,
+                      ),
+                      child: Text(
+                        totalCart.toString(),
+                        style: const TextStyle(
+                            color: Colors.white,
+                            fontSize: 16,
+                            fontWeight: FontWeight.bold),
+                        textAlign: TextAlign.center,
+                      ),
+                    ),
+                  Container(
+                    // Accounts for the overflow number
+                    width: numProducts < 1
+                        ? _width - 50.0
+                        : numProducts > 3
+                            ? _width - 70.0
+                            : _width - 80.0,
+                    height: _kCartHeight,
+                    padding: const EdgeInsets.symmetric(vertical: 8.0),
+                    child: ProductThumbnailRow(),
+                  ),
+
+                  // more extra product
+                  //            ExtraProductsNumber()
+                ]),
+          )
         ]),
       ),
     );
@@ -383,16 +389,24 @@ class ExpandingBottomSheetState extends State<ExpandingBottomSheet>
         height: _heightAnimation.value,
         decoration: BoxDecoration(
           color: Theme.of(context).backgroundColor,
-          borderRadius: const BorderRadius.only(
-            topLeft: Radius.circular(25.0),
-          ),
+          borderRadius: Tools.isRTL(context)
+              ? const BorderRadius.only(
+                  topRight: Radius.circular(25.0),
+                )
+              : const BorderRadius.only(
+                  topLeft: Radius.circular(25.0),
+                ),
         ),
         child: Material(
           animationDuration: const Duration(milliseconds: 0),
           shape: RoundedRectangleBorder(
-            borderRadius: BorderRadius.only(
-              topLeft: Radius.circular(_shapeAnimation.value),
-            ),
+            borderRadius: Tools.isRTL(context)
+                ? BorderRadius.only(
+                    topRight: Radius.circular(_shapeAnimation.value),
+                  )
+                : BorderRadius.only(
+                    topLeft: Radius.circular(_shapeAnimation.value),
+                  ),
           ),
           elevation: 0.0,
           color: Theme.of(context).primaryColor.withOpacity(0.2),
@@ -579,7 +593,7 @@ class _ProductThumbnailRowState extends State<ProductThumbnailRow> {
       itemBuilder: _buildThumbnail,
       initialItemCount: _list.length,
       scrollDirection: Axis.horizontal,
-      physics: const NeverScrollableScrollPhysics(), // Cart shouldn't scroll
+      // physics: const NeverScrollableScrollPhysics(), // Cart shouldn't scroll
     );
   }
 
@@ -658,8 +672,10 @@ class ProductThumbnail extends StatelessWidget {
         child: Container(
           width: 40.0,
           height: 40.0,
-          margin: const EdgeInsets.only(left: 16.0),
-          child: ImageTools.image(url: imageFeature, size: kSize.medium),
+          margin: Tools.isRTL(context)
+              ? const EdgeInsets.only(right: 14.0)
+              : const EdgeInsets.only(left: 14.0),
+          child: ImageResize(url: imageFeature, size: kSize.medium),
         ),
       ),
     );
diff --git a/lib/widgets/product/product_card_view.dart b/lib/widgets/product/product_card_view.dart
index b616852..f9429c9 100644
--- a/lib/widgets/product/product_card_view.dart
+++ b/lib/widgets/product/product_card_view.dart
@@ -1,9 +1,10 @@
 import 'package:flutter/material.dart';
 import 'package:provider/provider.dart';
 
-import '../../common/tools/adaptive_tools.dart';
+import '../../common/tools.dart';
 import '../../models/index.dart' show CartModel, Product;
 import '../../modules/dynamic_layout/config/product_config.dart';
+import '../../modules/dynamic_layout/helper/helper.dart';
 import '../../services/services.dart';
 import 'action_button_mixin.dart';
 import 'index.dart'
@@ -50,10 +51,18 @@ class _ProductCardState extends State<ProductCard> with ActionButtonMixin {
 
   @override
   Widget build(BuildContext context) {
+    final width = (widget.maxWidth != null &&
+            widget.width != null &&
+            widget.width! > widget.maxWidth!)
+        ? widget.maxWidth!
+        : (widget.width ??
+            Layout.buildProductMaxWidth(
+                context: context, layout: widget.config.layout));
+
     /// use for Staged layout
     if (widget.hideDetail) {
       return ProductImage(
-        width: widget.width!,
+        width: width,
         product: widget.item,
         config: widget.config,
         ratioProductImage: widget.config.imageRatio,
@@ -145,18 +154,17 @@ class _ProductCardState extends State<ProductCard> with ActionButtonMixin {
     return GestureDetector(
       onTap: () => onTapProduct(context, product: widget.item),
       behavior: HitTestBehavior.opaque,
-      child: Stack(
-        children: <Widget>[
-          AnimatedContainer(
-            duration: const Duration(milliseconds: 300),
-            constraints:
-                BoxConstraints(maxWidth: widget.maxWidth ?? widget.width!),
-            width: widget.width!,
-            margin: EdgeInsets.symmetric(
-              horizontal: widget.config.hMargin,
-              vertical: widget.config.vMargin,
-            ),
-            child: Container(
+      child: AnimatedContainer(
+        duration: const Duration(milliseconds: 300),
+        constraints: BoxConstraints(maxWidth: widget.maxWidth ?? width),
+        width: widget.width!,
+        margin: EdgeInsets.symmetric(
+          horizontal: widget.config.hMargin,
+          vertical: widget.config.vMargin,
+        ),
+        child: Stack(
+          children: [
+            Container(
               decoration: BoxDecoration(
                 borderRadius:
                     BorderRadius.circular(widget.config.borderRadius ?? 3),
@@ -184,7 +192,7 @@ class _ProductCardState extends State<ProductCard> with ActionButtonMixin {
                     Stack(
                       children: [
                         ProductImage(
-                          width: widget.width ?? 0,
+                          width: width,
                           product: widget.item,
                           config: widget.config,
                           ratioProductImage: widget.config.imageRatio,
@@ -203,7 +211,7 @@ class _ProductCardState extends State<ProductCard> with ActionButtonMixin {
                               alignment: Alignment.bottomRight,
                               child: Selector<CartModel, int>(
                                 selector: (context, cartModel) =>
-                                    cartModel.productsInCart[widget.item.id!] ??
+                                    cartModel.productsInCart[widget.item.id] ??
                                     0,
                                 builder: (context, quantity, child) {
                                   return CartButtonWithQuantity(
@@ -250,31 +258,34 @@ class _ProductCardState extends State<ProductCard> with ActionButtonMixin {
                 ),
               ),
             ),
-          ),
-          ProductOnSale(product: widget.item, config: widget.config),
-          if (widget.config.showHeart && !widget.item.isEmptyProduct())
-            Positioned(
-              top: widget.config.vMargin,
-              right: context.isRtl ? null : widget.config.hMargin,
-              left: context.isRtl ? widget.config.hMargin : null,
-              child: HeartButton(
-                product: widget.item,
-                size: 18,
-              ),
+            ProductOnSale(
+              product: widget.item,
+              config: widget.config,
+              margin: const EdgeInsets.all(0),
             ),
-          if (widget.onTapDelete != null)
-            Positioned(
-              top: 0,
-              right: 0,
-              child: IconButton(
-                icon: Icon(
-                  Icons.delete,
-                  color: Theme.of(context).primaryColor,
+            if (widget.config.showHeart && !widget.item.isEmptyProduct())
+              Positioned(
+                right: context.isRtl ? null : widget.config.hMargin,
+                left: context.isRtl ? widget.config.hMargin : null,
+                child: HeartButton(
+                  product: widget.item,
+                  size: 18,
                 ),
-                onPressed: widget.onTapDelete,
               ),
-            )
-        ],
+            if (widget.onTapDelete != null)
+              Positioned(
+                top: 0,
+                right: 0,
+                child: IconButton(
+                  icon: Icon(
+                    Icons.delete,
+                    color: Theme.of(context).primaryColor,
+                  ),
+                  onPressed: widget.onTapDelete,
+                ),
+              )
+          ],
+        ),
       ),
     );
   }
diff --git a/lib/widgets/product/product_glass_view.dart b/lib/widgets/product/product_glass_view.dart
index 0f055db..a49a9d0 100644
--- a/lib/widgets/product/product_glass_view.dart
+++ b/lib/widgets/product/product_glass_view.dart
@@ -68,7 +68,7 @@ class ProductGlass extends StatelessWidget with ActionButtonMixin {
                     alignment: Alignment.bottomRight,
                     child: Selector<CartModel, int>(
                       selector: (context, cartModel) =>
-                          cartModel.productsInCart[item.id!] ?? 0,
+                          cartModel.productsInCart[item.id] ?? 0,
                       builder: (context, quantity, child) {
                         return CartButtonWithQuantity(
                           quantity: quantity,
diff --git a/lib/widgets/product/product_item_tile.dart b/lib/widgets/product/product_item_tile.dart
index 03fb67a..59ce566 100644
--- a/lib/widgets/product/product_item_tile.dart
+++ b/lib/widgets/product/product_item_tile.dart
@@ -98,7 +98,7 @@ class ProductItemTileView extends StatelessWidget {
   Widget getImageFeature(onTapProduct) {
     return GestureDetector(
       onTap: onTapProduct,
-      child: ImageTools.image(
+      child: ImageResize(
         url: item.imageFeature,
         size: kSize.medium,
         isResize: true,
diff --git a/lib/widgets/product/product_list.dart b/lib/widgets/product/product_list.dart
index 4d91837..21d4448 100644
--- a/lib/widgets/product/product_list.dart
+++ b/lib/widgets/product/product_list.dart
@@ -2,7 +2,8 @@ import 'package:flutter/material.dart';
 import 'package:flutter_staggered_grid_view/flutter_staggered_grid_view.dart';
 import 'package:pull_to_refresh/pull_to_refresh.dart';
 
-import '../../common/config.dart' show kProductCard, kProductDetail, kSaleOffProduct;
+import '../../common/config.dart'
+    show kProductCard, kProductDetail, kSaleOffProduct;
 import '../../common/constants.dart';
 import '../../common/tools.dart';
 import '../../generated/l10n.dart';
@@ -26,9 +27,10 @@ class ProductList extends StatefulWidget {
   final Function onRefresh;
   final Function onLoadMore;
   final double? ratioProductImage;
-  final num? productListItemHeight;
-  final ScrollController? scrollController;
+  final double productListItemHeight;
   final List<Widget>? header;
+  final Widget? appbar;
+  final ScrollController? scrollController;
 
   const ProductList({
     this.isFetching = false,
@@ -41,9 +43,10 @@ class ProductList extends StatefulWidget {
     required this.onLoadMore,
     this.layout = 'list',
     this.ratioProductImage,
-    this.productListItemHeight,
-    this.scrollController,
+    this.productListItemHeight = 125.0,
     this.header,
+    this.appbar,
+    this.scrollController,
   });
 
   @override
@@ -130,7 +133,7 @@ class _ProductListState extends State<ProductList> {
       widthContent =
           isTablet ? widthScreen / 3 : (widthScreen / 2); //two columns
     }
-    var itemHeight = widget.productListItemHeight ?? 125.0;
+    var itemHeight = widget.productListItemHeight;
     if (kProductDetail.showQuantityInList) {
       itemHeight += 30;
     }
@@ -138,8 +141,7 @@ class _ProductListState extends State<ProductList> {
       itemHeight += 30;
     }
 
-    childAspectRatio = (isTablet ? 0.94 : 1) *
-        widthContent /
+    childAspectRatio = widthContent /
         (widthContent * (widget.ratioProductImage ?? 1.2) + itemHeight);
 
     final hasNoProduct = widget.products == null || widget.products!.isEmpty;
@@ -153,34 +155,39 @@ class _ProductListState extends State<ProductList> {
       return NoInternetConnection(onRefresh: _onRefresh);
     }
 
+    Widget typeList = const SizedBox();
+
     if (productsList == null || productsList.isEmpty) {
-      return Center(
-        child: Text(
-          S.of(context).noProduct,
-          style: Theme.of(context).textTheme.bodyText1,
+      typeList = SliverFillRemaining(
+        child: Column(
+          mainAxisAlignment: MainAxisAlignment.center,
+          children: [
+            Text(
+              S.of(context).noProduct,
+              style: Theme.of(context).textTheme.bodyText1,
+            ),
+          ],
         ),
       );
-    }
-
-    Widget typeList = const SizedBox();
-
-    if (widget.layout != Layout.pinterest) {
-      if (widget.layout == Layout.listTile ||
-          widget.layout == Layout.simpleList) {
-        typeList = buildListView(products: productsList);
+    } else {
+      if (widget.layout != Layout.pinterest) {
+        if (widget.layout == Layout.listTile ||
+            widget.layout == Layout.simpleList) {
+          typeList = buildListView(products: productsList);
+        } else {
+          typeList = buildGridViewProduct(
+            childAspectRatio: childAspectRatio,
+            crossAxisCount: crossAxisCount,
+            products: productsList,
+            widthContent: widthContent,
+          );
+        }
       } else {
-        typeList = buildGridViewProduct(
-          childAspectRatio: childAspectRatio,
-          crossAxisCount: crossAxisCount,
+        typeList = buildStaggeredGridView(
           products: productsList,
-          widthContent: widthContent,
+          widthContent: widthScreen,
         );
       }
-    } else {
-      typeList = buildStaggeredGridView(
-        products: productsList,
-        widthContent: widthScreen,
-      );
     }
 
     return SmartRefresher(
@@ -193,10 +200,27 @@ class _ProductListState extends State<ProductList> {
       onRefresh: _onRefresh,
       onLoading: _onLoading,
       footer: kCustomFooter(context),
-      child: ListView(
+      child: CustomScrollView(
         controller: widget.scrollController,
-        children: [
-          ...?widget.header,
+        slivers: <Widget>[
+          if (widget.appbar != null)
+            SliverAppBar(
+              primary: false,
+              titleSpacing: 10,
+              backgroundColor: Theme.of(context).backgroundColor,
+              toolbarHeight: 44,
+              elevation: 1.0,
+              pinned: true,
+              floating: false,
+              leadingWidth: 0,
+              leading: const SizedBox(),
+              title: widget.appbar,
+              actions: null,
+            ),
+          SliverToBoxAdapter(
+              child: Column(
+            children: widget.header ?? [],
+          )),
           typeList,
         ],
       ),
@@ -209,30 +233,30 @@ class _ProductListState extends State<ProductList> {
     double? widthContent,
     required List<Product> products,
   }) {
-    return GridView.builder(
-      physics: const NeverScrollableScrollPhysics(),
-      shrinkWrap: true,
+    return SliverGrid(
       gridDelegate: SliverGridDelegateWithFixedCrossAxisCount(
         crossAxisCount: crossAxisCount,
         childAspectRatio: childAspectRatio,
       ),
-      cacheExtent: 500.0,
-      itemCount: products.length,
-      itemBuilder: (context, i) {
-        return Services().widget.renderProductCardView(
-              item: products[i],
-              width: widthContent,
-              ratioProductImage: widget.ratioProductImage ?? 1.2,
-              config: ProductConfig.empty()
-                ..showHeart = true
-                ..imageRatio = widget.ratioProductImage ?? 1.2
-                ..showCountDown = kSaleOffProduct['ShowCountDown'] &&
-                    widget.layout == Layout.saleOff
-                ..showCartIcon = ProductConfig.empty().showCartIcon &&
-                    (widget.layout != Layout.columns &&
-                        products[i].canBeAddedToCartFromList()),
-            );
-      },
+      delegate: SliverChildBuilderDelegate(
+        addAutomaticKeepAlives: false,
+        childCount: products.length,
+        (BuildContext context, int i) {
+          return Services().widget.renderProductCardView(
+                item: products[i],
+                width: widthContent,
+                ratioProductImage: widget.ratioProductImage ?? 1.2,
+                config: ProductConfig.empty()
+                  ..showHeart = true
+                  ..imageRatio = widget.ratioProductImage ?? 1.2
+                  ..showCountDown = kSaleOffProduct['ShowCountDown'] &&
+                      widget.layout == Layout.saleOff
+                  ..showCartIcon = ProductConfig.empty().showCartIcon &&
+                      (widget.layout != Layout.columns &&
+                          products[i].canBeAddedToCartFromList()),
+              );
+        },
+      ),
     );
   }
 
@@ -268,22 +292,24 @@ class _ProductListState extends State<ProductList> {
   Widget buildListView({
     required List<Product>? products,
   }) {
-    return ListView.builder(
-        shrinkWrap: true,
-        physics: const NeverScrollableScrollPhysics(),
-        itemCount: products!.length,
-        itemBuilder: (_, index) {
+    return SliverList(
+      delegate: SliverChildBuilderDelegate(
+        addAutomaticKeepAlives: false,
+        (context, index) {
           if (widget.layout == Layout.simpleList) {
             return ProductSimpleView(
-              item: products[index],
+              item: products![index],
               isFromSearchScreen: true,
             );
           }
           return Services().widget.renderProductItemTileView(
-                item: products[index],
+                item: products![index],
                 padding: const EdgeInsets.only(bottom: 10),
                 config: ProductConfig.empty(),
               );
-        });
+        },
+        childCount: products?.length,
+      ),
+    );
   }
 }
diff --git a/lib/widgets/product/product_simple_view.dart b/lib/widgets/product/product_simple_view.dart
index 9e51e07..7ebe209 100644
--- a/lib/widgets/product/product_simple_view.dart
+++ b/lib/widgets/product/product_simple_view.dart
@@ -138,7 +138,7 @@ class ProductSimpleView extends StatelessWidget {
                     ClipRRect(
                       borderRadius:
                           const BorderRadius.all(Radius.circular(10.0)),
-                      child: ImageTools.image(
+                      child: ImageResize(
                         url: item!.imageFeature,
                         width: imageWidth,
                         size: kSize.medium,
diff --git a/lib/widgets/product/product_variant.dart b/lib/widgets/product/product_variant.dart
index 2d2445f..27de480 100644
--- a/lib/widgets/product/product_variant.dart
+++ b/lib/widgets/product/product_variant.dart
@@ -185,39 +185,50 @@ class OptionSelection extends StatelessWidget {
       // https://github.com/inspireui/support/issues/4814#issuecomment-684179116
       isScrollControlled: true,
       builder: (BuildContext context) {
-        return FractionallySizedBox(
-          heightFactor: 0.85,
-          child: SingleChildScrollView(
-            child: Column(
-              mainAxisSize: MainAxisSize.min,
-              children: <Widget>[
-                ListTile(
-                  title: Text(
-                    S.of(context).selectTheSize,
-                    textAlign: TextAlign.center,
-                    style: Theme.of(context).textTheme.caption!.copyWith(
-                          color: Theme.of(context)
-                              .colorScheme
-                              .secondary
-                              .withOpacity(0.8),
-                        ),
-                  ),
-                ),
-                const Divider(height: 1, indent: 20, endIndent: 20),
-                for (final option in options)
+        return DraggableScrollableSheet(
+          expand: false,
+          maxChildSize: 0.85,
+          initialChildSize: 0.5,
+          snap: true,
+          snapSizes: const [
+            0.5,
+            0.85,
+          ],
+          minChildSize: 0.25,
+          builder: (BuildContext context, ScrollController scrollController) {
+            return SingleChildScrollView(
+              controller: scrollController,
+              child: Column(
+                mainAxisSize: MainAxisSize.min,
+                children: <Widget>[
                   ListTile(
-                    onTap: () {
-                      onChanged!(option);
-                      Navigator.pop(context);
-                    },
                     title: Text(
-                      option!.replaceAll('&amp;', '&'),
+                      S.of(context).selectTheSize,
                       textAlign: TextAlign.center,
+                      style: Theme.of(context).textTheme.caption!.copyWith(
+                            color: Theme.of(context)
+                                .colorScheme
+                                .secondary
+                                .withOpacity(0.8),
+                          ),
                     ),
                   ),
-              ],
-            ),
-          ),
+                  const Divider(height: 1, indent: 20, endIndent: 20),
+                  for (final option in options)
+                    ListTile(
+                      onTap: () {
+                        onChanged!(option);
+                        Navigator.pop(context);
+                      },
+                      title: Text(
+                        option!.replaceAll('&amp;', '&'),
+                        textAlign: TextAlign.center,
+                      ),
+                    ),
+                ],
+              ),
+            );
+          },
         );
       },
     );
@@ -482,7 +493,7 @@ class ImageSelection extends StatelessWidget {
                         children: [
                           if (imageUrls![item]?.isNotEmpty ?? false)
                             Positioned.fill(
-                              child: ImageTools.image(
+                              child: ImageResize(
                                 url: imageUrls![item],
                                 height: size,
                                 width: size,
diff --git a/lib/widgets/product/widgets/heart_button.dart b/lib/widgets/product/widgets/heart_button.dart
index 7d7014d..18d572d 100644
--- a/lib/widgets/product/widgets/heart_button.dart
+++ b/lib/widgets/product/widgets/heart_button.dart
@@ -27,10 +27,10 @@ class HeartButton extends StatelessWidget {
                     .addToWishlist(product);
               },
               icon: CircleAvatar(
-                backgroundColor: Colors.white.withOpacity(0.7),
+                backgroundColor: Colors.grey.withOpacity(0.5),
                 child: Icon(
                   CupertinoIcons.heart,
-                  color: Colors.grey.shade400,
+                  color: Colors.white,
                   size: size ?? 16.0,
                 ),
               ),
diff --git a/lib/widgets/product/widgets/image.dart b/lib/widgets/product/widgets/image.dart
index 6e513f7..a09a77e 100644
--- a/lib/widgets/product/widgets/image.dart
+++ b/lib/widgets/product/widgets/image.dart
@@ -62,7 +62,7 @@ class ProductImage extends StatelessWidget {
                 )
               : GestureDetector(
                   onTap: onTapProduct,
-                  child: ImageTools.image(
+                  child: ImageResize(
                     url: product.imageFeature,
                     width: width,
                     size: kSize.medium,
diff --git a/lib/widgets/product/widgets/on_sale.dart b/lib/widgets/product/widgets/on_sale.dart
index f4bf3e8..ed10fc9 100644
--- a/lib/widgets/product/widgets/on_sale.dart
+++ b/lib/widgets/product/widgets/on_sale.dart
@@ -1,8 +1,7 @@
 import 'package:flutter/material.dart';
 import 'package:provider/provider.dart';
 
-import '../../../common/tools/adaptive_tools.dart';
-import '../../../common/tools/price_tools.dart';
+import '../../../common/tools.dart';
 import '../../../generated/l10n.dart';
 import '../../../models/index.dart' show AppModel, Product;
 import '../../../modules/dynamic_layout/config/product_config.dart';
diff --git a/lib/widgets/product/widgets/title.dart b/lib/widgets/product/widgets/title.dart
index 6b88af8..5e52e4a 100644
--- a/lib/widgets/product/widgets/title.dart
+++ b/lib/widgets/product/widgets/title.dart
@@ -77,6 +77,9 @@ class ProductTitle extends StatelessWidget {
           Theme.of(context).textTheme.subtitle1!.apply(
                 fontSizeFactor: 0.9,
               ),
+      strutStyle: const StrutStyle(
+        forceStrutHeight: true,
+      ),
     );
   }
 }
diff --git a/lib/widgets/vendor/store_item.dart b/lib/widgets/vendor/store_item.dart
index 76aca77..977b359 100644
--- a/lib/widgets/vendor/store_item.dart
+++ b/lib/widgets/vendor/store_item.dart
@@ -1,6 +1,7 @@
 import 'package:flutter/material.dart';
 import 'package:quiver/strings.dart';
 
+import '../../common/config.dart';
 import '../../common/constants.dart';
 import '../../common/tools.dart';
 import '../../generated/l10n.dart';
@@ -41,11 +42,14 @@ class StoreItem extends StatelessWidget {
                   topLeft: Radius.circular(6.0),
                   topRight: Radius.circular(6.0),
                 ),
-                child: ImageTools.image(
+                child: ImageResize(
                   url: store!.banner,
                   size: kSize.medium,
                   isResize: false,
-                  fit: BoxFit.cover,
+                  fit: ImageTools.boxFit(
+                    kVendorConfig.bannerFit,
+                    defaultValue: BoxFit.cover,
+                  ),
                   height: 120,
                   width: MediaQuery.of(context).size.width,
                 ),
@@ -69,8 +73,7 @@ class StoreItem extends StatelessWidget {
                               fontWeight: FontWeight.w600,
                               color: Theme.of(context).colorScheme.secondary),
                         ),
-                        if (isNotBlank(store!.address))
-                          const SizedBox(height: 3),
+                        if (isNotBlank(store!.address)) const SizedBox(height: 3),
                         if (isNotBlank(store!.address))
                           Text(
                             store!.address!,
@@ -80,99 +83,7 @@ class StoreItem extends StatelessWidget {
                               fontWeight: FontWeight.w500,
                             ),
                           ),
-
-                        /// WCFM store condition
-                        if (store!.storeHour != null &&
-                            store!.vacationSettings != null)
-                          if (store!.vacationSettings!.vacationMode &&
-                              store!.vacationSettings!.isOpen()) ...[
-                            const SizedBox(height: 5.0),
-                            Row(
-                              children: [
-                                Icon(
-                                  Icons.schedule,
-                                  color: store!.storeHour!.isOpen()
-                                      ? Colors.green
-                                      : Colors.red,
-                                  size: 12.0,
-                                ),
-                                const SizedBox(
-                                  width: 2.0,
-                                ),
-                                Text(
-                                  store!.storeHour!.isOpen()
-                                      ? S.of(context).openNow
-                                      : S.of(context).closeNow,
-                                  style: Theme.of(context)
-                                      .textTheme
-                                      .caption!
-                                      .copyWith(
-                                          color: store!.storeHour!.isOpen()
-                                              ? Colors.green
-                                              : Colors.red,
-                                          fontSize: 12.0),
-                                ),
-                              ],
-                            ),
-                          ],
-
-                        /// Dokan store condition
-                        if (store!.storeHour != null &&
-                            store!.vacationSettings == null) ...[
-                          const SizedBox(height: 5.0),
-                          Row(
-                            children: [
-                              Icon(
-                                Icons.schedule,
-                                color: store!.storeHour!.isOpen()
-                                    ? Colors.green
-                                    : Colors.red,
-                                size: 12.0,
-                              ),
-                              const SizedBox(
-                                width: 2.0,
-                              ),
-                              Text(
-                                store!.storeHour!.isOpen()
-                                    ? S.of(context).openNow
-                                    : S.of(context).closeNow,
-                                style: Theme.of(context)
-                                    .textTheme
-                                    .caption!
-                                    .copyWith(
-                                        color: store!.storeHour!.isOpen()
-                                            ? Colors.green
-                                            : Colors.red,
-                                        fontSize: 12.0),
-                              ),
-                            ],
-                          ),
-                        ],
-                        if (store!.vacationSettings != null &&
-                            (store!.vacationSettings!.vacationMode &&
-                                !store!.vacationSettings!.isOpen())) ...[
-                          const SizedBox(height: 5.0),
-                          Row(
-                            children: [
-                              const Icon(
-                                Icons.schedule,
-                                color: Colors.red,
-                                size: 12.0,
-                              ),
-                              const SizedBox(
-                                width: 2.0,
-                              ),
-                              Text(
-                                S.of(context).onVacation,
-                                style: Theme.of(context)
-                                    .textTheme
-                                    .caption!
-                                    .copyWith(
-                                        color: Colors.red, fontSize: 12.0),
-                              ),
-                            ],
-                          ),
-                        ],
+                        StoreStatusWidget(store: store!)
                       ],
                     ),
                   ),
@@ -192,10 +103,7 @@ class StoreItem extends StatelessWidget {
                       const SizedBox(height: 10),
                       Text(
                         S.of(context).visitStore,
-                        style: Theme.of(context)
-                            .primaryTextTheme
-                            .subtitle1!
-                            .copyWith(
+                        style: Theme.of(context).primaryTextTheme.subtitle1!.copyWith(
                               color: Colors.blue,
                               fontWeight: FontWeight.w700,
                             ),
@@ -211,3 +119,83 @@ class StoreItem extends StatelessWidget {
     );
   }
 }
+
+class StoreStatusWidget extends StatelessWidget {
+  const StoreStatusWidget({Key? key, required this.store}) : super(key: key);
+  final Store store;
+
+  @override
+  Widget build(BuildContext context) {
+    return Column(
+      children: [
+        /// WCFM store condition
+        if (store.storeHour != null && store.vacationSettings != null)
+          if (store.vacationSettings!.vacationMode && store.vacationSettings!.isOpen()) ...[
+            const SizedBox(height: 5.0),
+            Row(
+              children: [
+                Icon(
+                  Icons.schedule,
+                  color: store.storeHour!.isOpen() ? Colors.green : Colors.red,
+                  size: 12.0,
+                ),
+                const SizedBox(
+                  width: 2.0,
+                ),
+                Text(
+                  store.storeHour!.isOpen() ? S.of(context).openNow : S.of(context).closeNow,
+                  style: Theme.of(context).textTheme.caption!.copyWith(
+                      color: store.storeHour!.isOpen() ? Colors.green : Colors.red, fontSize: 12.0),
+                ),
+              ],
+            ),
+          ],
+
+        /// Dokan store condition
+        if (store.storeHour != null && store.vacationSettings == null) ...[
+          const SizedBox(height: 5.0),
+          Row(
+            children: [
+              Icon(
+                Icons.schedule,
+                color: store.storeHour!.isOpen() ? Colors.green : Colors.red,
+                size: 12.0,
+              ),
+              const SizedBox(
+                width: 2.0,
+              ),
+              Text(
+                store.storeHour!.isOpen() ? S.of(context).openNow : S.of(context).closeNow,
+                style: Theme.of(context).textTheme.caption!.copyWith(
+                    color: store.storeHour!.isOpen() ? Colors.green : Colors.red, fontSize: 12.0),
+              ),
+            ],
+          ),
+        ],
+        if (store.vacationSettings != null &&
+            (store.vacationSettings!.vacationMode && !store.vacationSettings!.isOpen())) ...[
+          const SizedBox(height: 5.0),
+          Row(
+            children: [
+              const Icon(
+                Icons.schedule,
+                color: Colors.red,
+                size: 12.0,
+              ),
+              const SizedBox(
+                width: 2.0,
+              ),
+              Text(
+                S.of(context).onVacation,
+                style: Theme.of(context)
+                    .textTheme
+                    .caption!
+                    .copyWith(color: Colors.red, fontSize: 12.0),
+              ),
+            ],
+          ),
+        ],
+      ],
+    );
+  }
+}
diff --git a/lib/widgets/web_layout/appbar_web.dart b/lib/widgets/web_layout/appbar_web.dart
index b3c304b..184c077 100644
--- a/lib/widgets/web_layout/appbar_web.dart
+++ b/lib/widgets/web_layout/appbar_web.dart
@@ -1,10 +1,10 @@
 import 'package:flutter/cupertino.dart';
 import 'package:flutter/material.dart';
+import 'package:inspireui/icons/constants.dart';
 import 'package:provider/provider.dart';
 
 import '../../common/config.dart';
 import '../../common/constants.dart';
-import '../../common/tools/adaptive_tools.dart';
 import '../../common/tools/navigate_tools.dart';
 import '../../generated/l10n.dart';
 import '../../models/user_model.dart';
@@ -221,7 +221,8 @@ class _AppBarWebState extends State<AppBarWeb> with WebLayoutMixin {
         forceElevated: true,
         toolbarHeight: kHeightAppBarWeb,
         backgroundColor: colorAppBar,
-        leading: const SizedBox(), // TODO: update use ipad
+        // TODO: update use ipad
+        leading: const SizedBox(),
         title: bodyAppBar,
       );
     }
diff --git a/lib/widgets/web_layout/footer_web.dart b/lib/widgets/web_layout/footer_web.dart
index 592e8f9..9482c3b 100644
--- a/lib/widgets/web_layout/footer_web.dart
+++ b/lib/widgets/web_layout/footer_web.dart
@@ -1,7 +1,7 @@
 import 'package:flutter/material.dart';
+import 'package:inspireui/icons/constants.dart';
 
 import '../../common/constants.dart';
-import '../../common/tools/adaptive_tools.dart';
 import '../common/flux_image.dart';
 import 'web_layout_mixin.dart';
 import 'widgets/download_app_widget.dart';
diff --git a/macos/Flutter/GeneratedPluginRegistrant.swift b/macos/Flutter/GeneratedPluginRegistrant.swift
index a10da59..67e8e73 100644
--- a/macos/Flutter/GeneratedPluginRegistrant.swift
+++ b/macos/Flutter/GeneratedPluginRegistrant.swift
@@ -7,12 +7,14 @@ import Foundation
 
 import cloud_firestore
 import devicelocale
+import facebook_auth_desktop
 import firebase_analytics
 import firebase_auth
 import firebase_core
 import firebase_messaging
 import firebase_remote_config
 import flutter_local_notifications
+import flutter_secure_storage_macos
 import location
 import maps_launcher
 import package_info_plus_macos
@@ -26,12 +28,14 @@ import wakelock_macos
 func RegisterGeneratedPlugins(registry: FlutterPluginRegistry) {
   FLTFirebaseFirestorePlugin.register(with: registry.registrar(forPlugin: "FLTFirebaseFirestorePlugin"))
   DevicelocalePlugin.register(with: registry.registrar(forPlugin: "DevicelocalePlugin"))
+  FacebookAuthDesktopPlugin.register(with: registry.registrar(forPlugin: "FacebookAuthDesktopPlugin"))
   FLTFirebaseAnalyticsPlugin.register(with: registry.registrar(forPlugin: "FLTFirebaseAnalyticsPlugin"))
   FLTFirebaseAuthPlugin.register(with: registry.registrar(forPlugin: "FLTFirebaseAuthPlugin"))
   FLTFirebaseCorePlugin.register(with: registry.registrar(forPlugin: "FLTFirebaseCorePlugin"))
   FLTFirebaseMessagingPlugin.register(with: registry.registrar(forPlugin: "FLTFirebaseMessagingPlugin"))
   FLTFirebaseRemoteConfigPlugin.register(with: registry.registrar(forPlugin: "FLTFirebaseRemoteConfigPlugin"))
   FlutterLocalNotificationsPlugin.register(with: registry.registrar(forPlugin: "FlutterLocalNotificationsPlugin"))
+  FlutterSecureStorageMacosPlugin.register(with: registry.registrar(forPlugin: "FlutterSecureStorageMacosPlugin"))
   LocationPlugin.register(with: registry.registrar(forPlugin: "LocationPlugin"))
   MapsLauncherPlugin.register(with: registry.registrar(forPlugin: "MapsLauncherPlugin"))
   FLTPackageInfoPlusPlugin.register(with: registry.registrar(forPlugin: "FLTPackageInfoPlusPlugin"))
diff --git a/pubspec.yaml b/pubspec.yaml
index 81537e3..1adb890 100644
--- a/pubspec.yaml
+++ b/pubspec.yaml
@@ -2,17 +2,11 @@ name: fstore
 publish_to: "none"
 description: Mobile commerce app by Flutter
 
-# The following defines the version and build number for your application.
-# A version number is three numbers separated by dots, like 1.2.43
-# followed by an optional build number separated by a +.
-# Both the version and the builder number may be overridden in flutter
-# build by specifying --build-name and --build-number, respectively.
-# In Android, build-name is used as versionName while build-number used as versionCode.
-# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
-# In iOS, build-name is used as CFBundleShortVersionString while build-number used as CFBundleVersion.
-# Read more about iOS versioning at
-# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
-version: 3.0.6+3022
+# Release version: v3.3.0 (Do not change this line)
+# A version number is three numbers separated by dots, like 1.2.43 - followed by an optional build number separated by a +.
+# In Android, build-name is used as versionName while build-number used as versionCode.Read more about Android versioning at https://developer.android.com/studio/publish/versioning
+# In iOS, build-name is used as CFBundleShortVersionString while build-number used as CFBundleVersion. Read more about iOS versioning at https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
+version: 1.0.0+3000
 
 environment:
   sdk: ">=2.17.6 <3.0.0"
@@ -23,55 +17,56 @@ dependencies:
   flutter_localizations:
     sdk: flutter
 
-  inspireui: 1.1.8
+  inspireui: 1.2.1
 
   # Base
   intl: 0.17.0
   crypto: 3.0.2
   path_provider: 2.0.11
-  url_launcher: 6.1.5
+  url_launcher: 6.1.6
   localstorage: 4.0.0+1
   http: 0.13.5
   http_auth: 1.0.1
   share: 2.0.4
-  tuple: 2.0.0
+  tuple: 2.0.1
   shared_preferences: 2.0.15
   collection: 1.16.0
   quiver: 3.1.0
   async: 2.9.0
-  html: 0.15.0
+  html: 0.15.1
   vector_math: 2.1.2
   path: 1.8.2
-  flutter_svg: 1.1.4
+  flutter_svg: 1.1.6
 
   # FIREBASE PACKAGES
-  firebase_core: 1.21.1
-  firebase_analytics: 9.3.3
-  firebase_auth: 3.7.0
-  firebase_remote_config: 2.0.16
-  firebase_dynamic_links: 4.3.6
-  cloud_firestore: 3.4.6
+  firebase_core: 2.1.1
+  firebase_analytics: 10.0.4
+  firebase_auth: 4.1.1
+  firebase_remote_config: 3.0.4
+  firebase_dynamic_links: 5.0.4
+  cloud_firestore: 4.0.4
 
   # Additional Firebase packages. To prevent unexpected upgrade.
-  firebase_core_platform_interface: 4.5.1
-  firebase_analytics_platform_interface: 3.3.3
-  firebase_auth_platform_interface: 6.6.0
-  firebase_dynamic_links_platform_interface: 0.2.3+11
-  firebase_messaging_platform_interface: 4.1.3
-  firebase_remote_config_platform_interface: 1.1.15
+  firebase_core_platform_interface: 4.5.2
+  firebase_analytics_platform_interface: 3.3.12
+  firebase_auth_platform_interface: 6.11.1
+  firebase_remote_config_platform_interface: 1.1.24
+  firebase_dynamic_links_platform_interface: 0.2.3+20
+  cloud_firestore_platform_interface: 5.8.4
+  firebase_messaging_platform_interface: 4.2.5
 
   # PUSH NOTIFICATION
-  firebase_messaging: 13.0.0
+  firebase_messaging: 14.0.4
   notification_permissions: 0.6.1
-  flutter_local_notifications: 9.9.1
-  onesignal_flutter: 3.4.1
+  flutter_local_notifications: 12.0.3
+  onesignal_flutter: 3.4.2
 
   # STATE MANAGEMENT
-  provider: 6.0.3
+  provider: 6.0.4
   get_it: 7.2.0
 
   # SPLASH SCREEN, ONBOARD
-  lottie: 1.4.2
+  lottie: 1.4.3
   rive: 0.9.1
 
   # WEB TOOLS
@@ -79,49 +74,53 @@ dependencies:
   webview_flutter: 3.0.4
   webview_flutter_web: 0.1.0+4
   responsive_builder: 0.4.3
-  flutter_inappwebview: 5.4.3+7
+  flutter_inappwebview: 5.7.1
 
   # HTML render
-  flutter_widget_from_html_core: 0.8.5+3
-  fwfh_svg: 0.7.2
-  fwfh_cached_network_image: 0.7.0+2
-  fwfh_url_launcher: 0.6.1+3
-  fwfh_chewie: 0.7.0+1
-  fwfh_webview: 0.6.2+3
+  flutter_widget_from_html_core: 0.9.0
+  fwfh_svg: 0.7.2+1
+  fwfh_cached_network_image: 0.7.0+3
+  fwfh_url_launcher: 0.9.0
+  fwfh_chewie: 0.7.0+2
+  fwfh_webview: 0.6.2+4
+  fwfh_text_style: 2.22.8+1
 
   # VIDEO
-  youtube_player_iframe: ^3.0.4
+  youtube_player_iframe:
+    git:
+      url: https://github.com/inspireui/youtube_player_flutter.git
+      path: packages/youtube_player_iframe
+      ref: 14b2055ab38cb7b66297611908ceee1f4f53386f
 
   # MAP
-  google_maps_flutter: 2.2.0
+  google_maps_flutter: 2.2.1
   geocode: 1.0.2
   location: 4.4.0
 
   # AUTHENTICATION
   the_apple_sign_in: 1.1.1
-  flutter_facebook_auth: 4.4.1
-  google_sign_in: 5.4.1
+  flutter_facebook_auth: 5.0.6
+  google_sign_in: 5.4.2
   sms_autofill: 2.2.0
 
   # PERMISSION
-  # Don't upgrade permission_handler to 10+ version. file_picker is not ready for Android 13.
-  permission_handler: 9.2.0
+  permission_handler: 10.2.0
 
   # FILES, IMAGES
-  file_picker: 5.0.1
+  file_picker: 5.2.2
   cached_network_image: 3.2.2
-  image: 3.2.0
+  image: 3.2.2
   transparent_image: 2.0.0
-  image_picker: 0.8.5+3
+  image_picker: 0.8.6
   flutter_native_image: 0.0.6+1
   flutter_cache_manager: 3.3.0
-  wechat_assets_picker: 8.0.2
-  photo_manager: 2.2.1
+  wechat_assets_picker: 8.1.4
+  photo_manager: 2.5.0
 
   # TOOLS
   google_fonts: 3.0.1
   random_string: 2.3.1
-  json_annotation: 4.6.0
+  json_annotation: 4.7.0
   timeago: 3.3.0
   universal_platform: 1.0.0+1
   uuid: 3.0.6
@@ -130,25 +129,25 @@ dependencies:
   visibility_detector: 0.3.3
   rate_my_app: 1.1.3
   flutter_linkify: 5.0.2
-  gms_check: 1.0.0
-  new_version: 0.3.1
+  gms_check: 1.0.1
+  new_version_plus: 0.0.3
   video_player: 2.4.7
   in_app_update: 3.0.0
-  google_mobile_ads: 2.0.1
+  google_mobile_ads: 2.2.0
 
   # UI
   flutter_spinkit: 5.1.0
   smooth_page_indicator: 1.0.0+2
   animated_text_kit: 4.2.2
-  flash: 2.0.3+3
+  flash: 2.0.5
   flutter_staggered_grid_view: 0.6.2
   pin_code_fields: 7.4.0
-  country_code_picker: 2.0.2
+  country_code_picker: 2.0.2 # DISCONTINUED
   country_pickers: 2.0.0
-  dropdown_search: 5.0.2
-  intro_slider: 3.0.10
+  dropdown_search: 5.0.3
+  intro_slider: 4.2.0
   flutter_zoom_drawer: 3.0.3
-  extended_image: 6.3.0
+  extended_image: 6.3.1
   dotted_decoration: 2.0.0
   awesome_card: 1.1.7
   maps_launcher: 2.0.1
@@ -156,26 +155,21 @@ dependencies:
   flutter_calendar_carousel: 2.4.0
   sticky_headers: 0.3.0+2
   jumping_dot: ^0.0.4
+  infinite_carousel: ^1.0.2
+  charts_flutter_new: 0.12.0
 
 
   ### Native Payment
-  razorpay_flutter: 1.3.2
+  razorpay_flutter: 1.3.4
   paytm_allinonesdk: 1.1.8
+  flutterwave_standard: ^1.0.6
   flutter_paystack:
     git: https://github.com/inspireui/flutter_paystack
-  flutterwave_standard: 1.0.4
-
-  #### For Listing App
-  carousel_slider: 4.1.1
 
   #### For Shopify GraphQL
   graphql: 5.1.1
 
   ### Flutter 3 fix warning
-  charts_flutter:
-    git:
-      url: https://github.com/inspireui/charts.git
-      path: charts_flutter
   flutter_swiper_null_safety:
     git: https://github.com/inspireui/flutter_swiper_null_safety
   flare_flutter:
@@ -185,16 +179,18 @@ dependencies:
       path: flare_flutter
   pull_to_refresh:
     git: https://github.com/inspireui/flutter_pulltorefresh
-
+  intl_phone_number_input:
+    git: https://github.com/inspireui/intl_phone_number_input
 
   ###---- Some extra featureen is disable by default -----###
   ### 💳 Facebook Ads
   ### Search "Enable Facebook Ads" & uncomment to use  - https://tppr.me/9Pkf9
   # facebook_audience_network: 1.0.0-nullsafety.0
 
+
 dev_dependencies:
   flutter_lints: 2.0.1
-  flutter_native_splash: 2.2.8
+  flutter_native_splash: 2.2.14
 
 ### Enable to use Flutter Test Driver
 #  flutter_driver:
@@ -203,7 +199,7 @@ dev_dependencies:
 #  dependency_validator: ^3.1.2  # pub run dependency_validator
 
 ### Enable Generate Icon library
-#  flutter_launcher_icons: ^0.9.2
+#  flutter_launcher_icons: ^0.10.0
 #  Run this script to generate the app icon: flutter pub run flutter_launcher_icons:main
 
 flutter_icons:
diff --git a/windows/flutter/generated_plugin_registrant.cc b/windows/flutter/generated_plugin_registrant.cc
index 740d7ec..540805b 100644
--- a/windows/flutter/generated_plugin_registrant.cc
+++ b/windows/flutter/generated_plugin_registrant.cc
@@ -6,11 +6,14 @@
 
 #include "generated_plugin_registrant.h"
 
+#include <flutter_secure_storage_windows/flutter_secure_storage_windows_plugin.h>
 #include <maps_launcher/maps_launcher_plugin.h>
 #include <permission_handler_windows/permission_handler_windows_plugin.h>
 #include <url_launcher_windows/url_launcher_windows.h>
 
 void RegisterPlugins(flutter::PluginRegistry* registry) {
+  FlutterSecureStorageWindowsPluginRegisterWithRegistrar(
+      registry->GetRegistrarForPlugin("FlutterSecureStorageWindowsPlugin"));
   MapsLauncherPluginRegisterWithRegistrar(
       registry->GetRegistrarForPlugin("MapsLauncherPlugin"));
   PermissionHandlerWindowsPluginRegisterWithRegistrar(
diff --git a/windows/flutter/generated_plugins.cmake b/windows/flutter/generated_plugins.cmake
index cd4769e..571419b 100644
--- a/windows/flutter/generated_plugins.cmake
+++ b/windows/flutter/generated_plugins.cmake
@@ -3,6 +3,7 @@
 #
 
 list(APPEND FLUTTER_PLUGIN_LIST
+  flutter_secure_storage_windows
   maps_launcher
   permission_handler_windows
   url_launcher_windows
-- 
2.37.0

